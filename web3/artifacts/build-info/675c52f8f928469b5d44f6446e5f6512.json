{"id":"675c52f8f928469b5d44f6446e5f6512","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/Collection.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"erc721a/contracts/ERC721A.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\n\r\n/**\r\n * @title Collection\r\n * @dev 배치 민팅 기능을 구현한 NFT 컬렉션 컨트랙트\r\n */\r\ncontract Collection is ERC721A, Ownable, Pausable, ReentrancyGuard, AccessControl, ERC2981 {\r\n    using Strings for uint256;\r\n\r\n    // 역할 정의\r\n    bytes32 public constant ESCROW_ROLE = keccak256(\"ESCROW_ROLE\");\r\n    \r\n    // EIP-712 타입 해시\r\n    bytes32 private constant _TYPE_HASH = keccak256(\"Transfer(address from,address to,uint256 tokenId,address verifyingContract,uint256 nonce,uint256 chainId)\");\r\n    \r\n    // EIP-712 도메인 분리자\r\n    bytes32 private _DOMAIN_SEPARATOR;\r\n    \r\n    // 평균 블록 시간 (초 단위)\r\n    uint256 public averageBlockTime;\r\n    \r\n    // 상태 변수\r\n    string private _baseTokenURI;\r\n    string private _contractURI;\r\n    bool public mintingEnabled;\r\n    uint256 public maxSupply;\r\n    uint256 public mintPrice;\r\n    mapping(address => uint256) private _nonces;\r\n\r\n    // 이벤트 정의\r\n    event BatchMinted(address indexed to, uint256 startTokenId, uint256 quantity, uint256 gasPrice);\r\n    event TokenBurned(address indexed owner, uint256 tokenId);\r\n    event RoyaltyInfoUpdated(address indexed receiver, uint96 basisPoints);\r\n    event BaseURIUpdated(string baseURI);\r\n    event ContractURIUpdated(string contractURI);\r\n    event MintingStatusUpdated(bool enabled);\r\n    event MintPriceUpdated(uint256 oldPrice, uint256 newPrice);\r\n    event GlobalLockupPeriodUpdated(uint256 period);\r\n    event TokenLocked(uint256 indexed tokenId, uint256 lockedAt, uint256 unlockScheduledAt);\r\n    event TokenUnlocked(uint256 indexed tokenId, uint256 unlockedAt);\r\n    event EscrowRoleGranted(address indexed account);\r\n    event EscrowRoleRevoked(address indexed account);\r\n    event EscrowTransferred(address indexed from, address indexed to, uint256 tokenId, uint256 gasPrice);\r\n\r\n    // 락업 관련 변수\r\n    uint256 public globalLockupPeriod; // 전체 컬렉션 락업 기간 (초 단위)\r\n    mapping(uint256 => uint256) public lockedAt; // 토큰이 락업된 시간\r\n    mapping(uint256 => uint256) public unlockScheduledAt; // 토큰이 해제될 시간 (0이면 수동 언락 필요)\r\n    mapping(uint256 => uint256) public unlockedAt; // 토큰이 해제된 시간 (0이면 아직 락업 중)\r\n    \r\n    // 배치 민팅 이벤트\r\n    event BatchMintGasInfo(address indexed to, uint256 quantity, uint256 gasPrice, uint256 estimatedTime);\r\n    event AverageBlockTimeUpdated(uint256 oldBlockTime, uint256 newBlockTime);\r\n    event EscrowBatchMinted(address indexed escrow, address indexed to, uint256 fromTokenId, uint256 quantity, uint256 gasPrice);\r\n\r\n    // 생성자 - 컬렉션 생성\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        address initialOwner,\r\n        uint256 _maxSupply,\r\n        uint256 initialMintPrice,\r\n        string memory baseURI,\r\n        string memory contractURI_\r\n    ) ERC721A(name, symbol) Ownable(initialOwner) {\r\n        maxSupply = _maxSupply;\r\n        mintPrice = initialMintPrice;\r\n        _baseTokenURI = baseURI;\r\n        _contractURI = contractURI_;\r\n        mintingEnabled = false;\r\n        globalLockupPeriod = 0;\r\n\r\n        // 초기 소유자에게 ESCROW 역할 부여 (모든 관리 권한)\r\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\r\n        _grantRole(ESCROW_ROLE, initialOwner);\r\n        \r\n        // EIP-712 도메인 분리자 생성\r\n        _DOMAIN_SEPARATOR = keccak256(\r\n            abi.encode(\r\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\r\n                keccak256(bytes(name)),\r\n                keccak256(bytes(\"1\")),\r\n                block.chainid,\r\n                address(this)\r\n            )\r\n        );\r\n        \r\n        // 기본 로열티 설정 (0%)\r\n        _setDefaultRoyalty(initialOwner, 0);\r\n    }\r\n    \r\n    /**\r\n     * @dev ESCROW 역할 부여\r\n     * @param account: ESCROW 역할을 부여할 계정\r\n     */\r\n    function grantEscrowRole(address account) external onlyRole(ESCROW_ROLE) {\r\n        grantRole(ESCROW_ROLE, account);\r\n        emit EscrowRoleGranted(account);\r\n    }\r\n    \r\n    /**\r\n     * @dev ESCROW 역할 박탈\r\n     * @param account: ESCROW 역할을 박탈할 계정\r\n     */\r\n    function revokeEscrowRole(address account) external onlyRole(ESCROW_ROLE) {\r\n        revokeRole(ESCROW_ROLE, account);\r\n        emit EscrowRoleRevoked(account);\r\n    }\r\n    \r\n    /**\r\n     * @dev 사용자의 현재 Nonce 조회\r\n     * @param owner: 사용자 주소\r\n     * @return 사용자의 현재 Nonce\r\n     */\r\n    function nonce(address owner) public view returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n    \r\n    /**\r\n     * @dev 도메인 분리자 조회\r\n     * @return 도메인 분리자\r\n     */\r\n    function domainSeparator() public view returns (bytes32) {\r\n        return _DOMAIN_SEPARATOR;\r\n    }\r\n    \r\n    /**\r\n     * @dev 서명 검증\r\n     * @param signer: 서명자 주소\r\n     * @param messageHash: 메시지 해시\r\n     * @param signature: 서명 데이터\r\n     * @return 유효한 서명 여부\r\n     */\r\n    function verifySignature(\r\n        address signer,\r\n        bytes32 messageHash,\r\n        bytes memory signature\r\n    ) internal pure returns (bool) {\r\n        bytes32 ethSignedMessageHash = keccak256(\r\n            abi.encodePacked(\r\n                \"\\x19Ethereum Signed Message:\\n32\",\r\n                messageHash\r\n            )\r\n        );\r\n        \r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(signature);\r\n        \r\n        // s 값 검사 (EIP-2 규정)\r\n        require(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0, \"Invalid signature 's' value\");\r\n    \r\n        address recoveredSigner = ecrecover(ethSignedMessageHash, v, r, s);\r\n        require(recoveredSigner != address(0), \"Invalid signature\");\r\n\r\n        return recoveredSigner == signer;\r\n    }\r\n    \r\n    /**\r\n     * @dev 서명 분리\r\n     * @param signature: 서명 데이터\r\n     */\r\n    function splitSignature(bytes memory signature)\r\n        internal pure returns (bytes32 r, bytes32 s, uint8 v) \r\n    {\r\n        require(signature.length == 65, \"Invalid signature length\");\r\n\r\n        assembly {\r\n            r := mload(add(signature, 32))\r\n            s := mload(add(signature, 64))\r\n            v := byte(0, mload(add(signature, 96)))\r\n        }\r\n\r\n        if (v < 27) {\r\n            v += 27;\r\n        }\r\n\r\n        require(v == 27 || v == 28, \"Invalid signature 'v' value\");\r\n\r\n        return (r, s, v);\r\n    }\r\n    \r\n    /**\r\n     * @dev 메시지 해시 생성 (프론트엔드 서명에 활용)\r\n     * @param from: 보내는 주소\r\n     * @param to: 받는 주소\r\n     * @param tokenId: 토큰 ID\r\n     * @return 메시지 해시\r\n     */\r\n    function getMessageHash(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external view returns (bytes32) {\r\n        uint256 currentNonce = _nonces[from];\r\n\r\n        // EIP-712 메시지 해시 생성\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                _TYPE_HASH,\r\n                from,\r\n                to,\r\n                tokenId,\r\n                address(this),\r\n                currentNonce,\r\n                block.chainid\r\n            )\r\n        );\r\n\r\n        // EIP-712 도메인 분리자와 함께 해시 결합\r\n        return keccak256(\r\n            abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                _DOMAIN_SEPARATOR,\r\n                structHash\r\n            )\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev 배치 민팅 NFTs\r\n     * @param to: 민팅할 주소\r\n     * @param quantity: 민팅할 토큰 수\r\n     * @param gasFee: 트랜잭션 가스비 (gwei 단위)\r\n     */\r\n    function batchMint(address to, uint256 quantity, uint256 gasFee)\r\n        external\r\n        nonReentrant\r\n        whenNotPaused\r\n    {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) || hasRole(ESCROW_ROLE, _msgSender()), \r\n                \"Caller is not an ADMIN or ESCROW\");\r\n        require(mintingEnabled, \"Minting is not enabled\");\r\n        require(_totalMinted() + quantity <= maxSupply, \"Max supply reached\");\r\n        require(to != address(0), \"Invalid address\");\r\n        require(quantity > 0, \"Invalid quantity\");\r\n        require(gasFee > 0, \"Gas fee must be greater than 0\");\r\n\r\n        // gasFee는 gwei 단위로 입력 받음 (1 gwei = 10^9 wei)\r\n        uint256 gasPrice = gasFee * 1e9;\r\n        \r\n        uint256 startTokenId = _nextTokenId();\r\n        _mint(to, quantity);\r\n        \r\n        emit BatchMinted(to, startTokenId, quantity, gasPrice);\r\n    }\r\n\r\n    /**\r\n     * @dev 토큰 URI 조회 (컴퓨팅)\r\n     * @return 토큰 URI\r\n     */\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    /**\r\n     * @dev 토큰 URI 조회 (사용자)\r\n     * @param tokenId: 토큰 ID\r\n     * @return 토큰 URI\r\n     */\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev 현재 총 공급량 조회\r\n     * @return 총 토큰 수\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalMinted();\r\n    }\r\n    \r\n    /**\r\n     * @dev 토큰 전송 전 실행되는 훅\r\n     * @param from: 보내는 주소\r\n     * @param to: 받는 주소\r\n     * @param startTokenId: 시작 토큰 ID\r\n     * @param quantity: 토큰 수\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal override whenNotPaused {\r\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\r\n        \r\n        // 민팅과 소각은 락업 체크에서 제외\r\n        if (from != address(0) && to != address(0)) {\r\n            // 배치 전송에서는 모든 토큰을 체크\r\n            for (uint256 i = 0; i < quantity; i++) {\r\n                uint256 tokenId = startTokenId + i;\r\n                // ESCROW_ROLE이 있거나 락업되지 않은 경우에만 전송 허용\r\n                if (!hasRole(ESCROW_ROLE, _msgSender())) {\r\n                    require(!isTokenLocked(tokenId), \"Token is locked\");\r\n                    require(_isApprovedOrOwner(tokenId, _msgSender()), \"Transfer caller is not owner nor approved\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev 인터페이스 지원 여부 확인 (ERC165)\r\n     */\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721A, AccessControl, ERC2981)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function burn(uint256 tokenId) external {\r\n        require(_isApprovedOrOwner(tokenId, _msgSender()), \"Caller is not owner nor approved\");\r\n        _burn(tokenId);\r\n        emit TokenBurned(_msgSender(), tokenId);\r\n    }\r\n\r\n    function setDefaultRoyalty(address receiver, uint96 basisPoints) external onlyRole(ESCROW_ROLE) {\r\n        require(basisPoints <= 1000, \"Royalty cannot exceed 10%\");\r\n        _setDefaultRoyalty(receiver, basisPoints);\r\n        emit RoyaltyInfoUpdated(receiver, basisPoints);\r\n    }\r\n\r\n    function setTokenRoyalty(uint256 tokenId, address receiver, uint96 basisPoints) \r\n        external \r\n        onlyRole(ESCROW_ROLE) \r\n    {\r\n        require(basisPoints <= 1000, \"Royalty cannot exceed 10%\");\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        _setTokenRoyalty(tokenId, receiver, basisPoints);\r\n        emit RoyaltyInfoUpdated(receiver, basisPoints);\r\n    }\r\n\r\n    function setBaseURI(string memory baseURI_) external onlyRole(ESCROW_ROLE) {\r\n        _baseTokenURI = baseURI_;\r\n        emit BaseURIUpdated(baseURI_);\r\n    }\r\n\r\n    function setContractURI(string memory contractURI_) external onlyRole(ESCROW_ROLE) {\r\n        _contractURI = contractURI_;\r\n        emit ContractURIUpdated(contractURI_);\r\n    }\r\n\r\n    function setMintingEnabled(bool enabled) external onlyRole(ESCROW_ROLE) {\r\n        mintingEnabled = enabled;\r\n        emit MintingStatusUpdated(enabled);\r\n    }\r\n\r\n    function pause() external onlyRole(ESCROW_ROLE) {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyRole(ESCROW_ROLE) {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev 평균 블록 시간 설정\r\n     * @param blockTime: 블록 시간 (초 단위)\r\n     */\r\n    function setAverageBlockTime(uint256 blockTime) external onlyRole(ESCROW_ROLE) {\r\n        require(blockTime > 0, \"Block time must be greater than 0\");\r\n        uint256 oldBlockTime = averageBlockTime;\r\n        averageBlockTime = blockTime;\r\n        emit AverageBlockTimeUpdated(oldBlockTime, blockTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 에스크로 전송 (서명 기반)\r\n     * @notice 가스비를 ESCROW_ROLE이 대신 지불하는 전송 방식\r\n     * @param from: 토큰 소유자 주소\r\n     * @param to: 받는 주소\r\n     * @param tokenId: 전송할 토큰 ID\r\n     * @param signature: 소유자의 서명\r\n     * @param gasFee: 트랜잭션 가스비 (gwei 단위)\r\n     */\r\n    function escrowTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory signature,\r\n        uint256 gasFee\r\n    ) external whenNotPaused onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(ownerOf(tokenId) == from, \"From address is not the owner\");\r\n        require(to != address(0), \"Cannot transfer to zero address\");\r\n        require(!isTokenLocked(tokenId), \"Token is locked\");\r\n        require(gasFee > 0, \"Gas fee must be greater than 0\");\r\n\r\n        // gasFee는 gwei 단위로 입력 받음 (1 gwei = 10^9 wei)\r\n        uint256 gasPrice = gasFee * 1e9;\r\n\r\n        // 메시지 해시 생성\r\n        uint256 currentNonce = _nonces[from];\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                _TYPE_HASH,\r\n                from,\r\n                to,\r\n                tokenId,\r\n                address(this),\r\n                currentNonce,\r\n                block.chainid\r\n            )\r\n        );\r\n\r\n        bytes32 messageHash = keccak256(\r\n            abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                _DOMAIN_SEPARATOR,\r\n                structHash\r\n            )\r\n        );\r\n\r\n        // 서명 검증\r\n        require(verifySignature(from, messageHash, signature), \"Invalid signature\");\r\n\r\n        // Nonce 증가\r\n        _nonces[from]++;\r\n\r\n        // ESCROW_ROLE을 가진 계정에게 특정 토큰 전송 권한 부여\r\n        _approve(_msgSender(), tokenId, false);\r\n        \r\n        // 토큰 전송 (가스비는 함수 호출자인 ESCROW_ROLE이 지불)\r\n        transferFrom(from, to, tokenId);\r\n        \r\n        // 가스비 관련 이벤트 발생\r\n        emit EscrowTransferred(from, to, tokenId, gasPrice);\r\n    }\r\n\r\n    /**\r\n     * @dev EIP-712 도메인 분리자 조회\r\n     * @return 도메인 분리자\r\n     */\r\n    function getDomainSeparator() public view returns (bytes32) {\r\n        return _DOMAIN_SEPARATOR;\r\n    }\r\n\r\n    /**\r\n     * @dev 토큰 소유자 또는 승인된 주소인지 확인\r\n     * @param tokenId: 토큰 ID\r\n     * @param spender: 확인할 주소\r\n     * @return 승인 여부\r\n     */\r\n    function _isApprovedOrOwner(uint256 tokenId, address spender) internal view returns (bool) {\r\n        address owner = ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /****************************************************/\r\n    /***************** 락업 관련 함수 **********************/\r\n    /****************************************************/\r\n\r\n    /**\r\n     * @dev 토큰 락업 상태 확인\r\n     * @param tokenId: 토큰 ID\r\n     * @return 락업 상태 (true: 락업, false: 락업 해제)\r\n     */\r\n    function isTokenLocked(uint256 tokenId) public view returns (bool) {\r\n        if (!_exists(tokenId)) {\r\n            return false;\r\n        }\r\n\r\n        // 이미 언락되었다면 false 반환\r\n        if (unlockedAt[tokenId] > 0) {\r\n            return false;\r\n        }\r\n\r\n        // 락업된 적이 없다면 false 반환\r\n        if (lockedAt[tokenId] == 0) {\r\n            return false;\r\n        }\r\n\r\n        // 예약된 언락 시간이 있고, 그 시간이 지났다면 false 반환\r\n        if (unlockScheduledAt[tokenId] != 0 && block.timestamp >= unlockScheduledAt[tokenId]) {\r\n            return false;\r\n        }\r\n\r\n        // 그 외의 경우는 모두 락업 상태\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev 특정 토큰 락업 설정\r\n     * @param tokenId: 토큰 ID\r\n     * @param unlockScheduledTime: 락업 해제 예정 시간 (0이면 수동 언락 필요)\r\n     */\r\n    function setLockToken(uint256 tokenId, uint256 unlockScheduledTime) public onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(!isTokenLocked(tokenId), \"Token is already locked\");\r\n\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        if(unlockScheduledTime != 0) {\r\n            require(unlockScheduledTime > currentTime, \"Unlock time must be in the future\");\r\n        }\r\n\r\n        lockedAt[tokenId] = currentTime;\r\n        unlockScheduledAt[tokenId] = unlockScheduledTime;\r\n        unlockedAt[tokenId] = 0;\r\n\r\n        emit TokenLocked(tokenId, currentTime, unlockScheduledTime);\r\n    }\r\n    \r\n    /**\r\n     * @dev 여러 토큰 락업 설정\r\n     * @param tokenIds: 토큰 ID 배열\r\n     * @param unlockScheduledTime: 락업 해제 예정 시간 (0이면 수동 언락 필요)\r\n     */\r\n    function setLockTokenBatch(uint256[] calldata tokenIds, uint256 unlockScheduledTime) external onlyRole(ESCROW_ROLE) {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            require(unlockedAt[tokenIds[i]] == 0, \"Token is already unlocked\");\r\n            setLockToken(tokenIds[i], unlockScheduledTime);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev 특정 토큰 락업 해제\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function setUnlockToken(uint256 tokenId) public onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(isTokenLocked(tokenId), \"Token is not locked\");\r\n\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        if(unlockScheduledAt[tokenId] != 0) {\r\n            require(currentTime >= unlockScheduledAt[tokenId], \"Unlock time has not passed\");\r\n        }\r\n\r\n        unlockedAt[tokenId] = currentTime;\r\n        emit TokenUnlocked(tokenId, currentTime);\r\n    }\r\n    \r\n    /**\r\n     * @dev 여러 토큰 락업 해제\r\n     * @param tokenIds: 토큰 ID 배열\r\n     */\r\n    function setUnlockTokenBatch(uint256[] calldata tokenIds) external onlyRole(ESCROW_ROLE) {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            require(isTokenLocked(tokenIds[i]), \"Token is not locked\");\r\n            setUnlockToken(tokenIds[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev 특정 토큰 락업 해제 (강제)\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function forceUnlockToken(uint256 tokenId) public onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(isTokenLocked(tokenId), \"Token is not locked\");\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        unlockedAt[tokenId] = currentTime;\r\n        emit TokenUnlocked(tokenId, currentTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 여러 토큰 락업 해제 (강제)\r\n     * @param tokenIds: 토큰 ID 배열\r\n     */\r\n    function forceUnlockTokenBatch(uint256[] calldata tokenIds) external onlyRole(ESCROW_ROLE) {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            require(isTokenLocked(tokenIds[i]), \"Token is not locked\");\r\n            forceUnlockToken(tokenIds[i]);\r\n        }\r\n    } \r\n    \r\n    /****************************************************/\r\n    /***************** 스테이킹 관련 함수 *******************/\r\n    /****************************************************/\r\n    struct StakedToken {\r\n        uint256 tokenId;\r\n        address staker;\r\n        uint256 stakedAt;\r\n        uint256 unstakeScheduledAt;\r\n        uint256 unstakedAt;\r\n        bool isStaked;\r\n    }\r\n\r\n    // 스테이킹 맵핑\r\n    mapping(uint256 => StakedToken) public stakedTokens;\r\n\r\n    // 스테이킹 이벤트\r\n    event TokenStaked(uint256 indexed tokenId, address indexed staker, uint256 stakedAt, uint256 unstakeScheduledAt);\r\n    event TokenUnstaked(uint256 indexed tokenId, address indexed staker, uint256 unstakedAt);\r\n\r\n    /**\r\n     * @dev 토큰 스테이킹\r\n     * @param tokenId: 토큰 ID\r\n     * @param unstakeScheduledTime: 언스테이킹 예정 시간 (0이면 수동 언스테이킹 필요)\r\n     */\r\n    function stakeToken(uint256 tokenId, uint256 unstakeScheduledTime) public whenNotPaused {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(!stakedTokens[tokenId].isStaked, \"Token is already staked\");\r\n        require(!isTokenLocked(tokenId), \"Token is locked\");\r\n\r\n        if (!hasRole(ESCROW_ROLE, _msgSender())) {\r\n            require(ownerOf(tokenId) == _msgSender(), \"Only the staker can stake the token\");\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        address staker = ownerOf(tokenId);\r\n\r\n        if (unstakeScheduledTime != 0) {\r\n            require(unstakeScheduledTime > currentTime, \"Unstake time must be in the future\");\r\n        }\r\n\r\n        stakedTokens[tokenId] = StakedToken({\r\n            tokenId: tokenId,\r\n            staker: staker,\r\n            stakedAt: currentTime,\r\n            unstakeScheduledAt: unstakeScheduledTime,\r\n            unstakedAt: 0,\r\n            isStaked: true\r\n        });\r\n\r\n        setLockToken(tokenId, 0);\r\n\r\n        emit TokenStaked(tokenId, staker, currentTime, unstakeScheduledTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 여러 토큰 스테이킹\r\n     * @param tokenIds: 토큰 ID 배열\r\n     * @param unstakeScheduledTime: 언스테이킹 예정 시간 (0이면 수동 언스테이킹 필요)\r\n     */\r\n    function stakeTokenBatch(uint256[] calldata tokenIds, uint256 unstakeScheduledTime) external whenNotPaused {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            stakeToken(tokenIds[i], unstakeScheduledTime);\r\n        }\r\n    }\r\n        \r\n\r\n    /**\r\n     * @dev 특정 토큰 언스테이킹\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function unstakeToken(uint256 tokenId) public whenNotPaused {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(stakedTokens[tokenId].isStaked, \"Token is not staked\");\r\n\r\n        StakedToken memory staking = stakedTokens[tokenId];\r\n\r\n        if (!hasRole(ESCROW_ROLE, _msgSender())) {\r\n            require(staking.staker == _msgSender(), \"Only the staker can unstake the token\");\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        if (staking.unstakeScheduledAt != 0) {\r\n            require(currentTime >= staking.unstakeScheduledAt, \"Unstake time has not passed\");\r\n        }\r\n\r\n        stakedTokens[tokenId].unstakedAt = currentTime;\r\n        stakedTokens[tokenId].isStaked = false;\r\n\r\n        forceUnlockToken(tokenId);\r\n\r\n        emit TokenUnstaked(tokenId, staking.staker, currentTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 여러 토큰 언스테이킹\r\n     * @param tokenIds: 토큰 ID 배열\r\n     */\r\n    function unstakeTokenBatch(uint256[] calldata tokenIds) external whenNotPaused {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            unstakeToken(tokenIds[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev 특정 토큰 언스테이킹 (강제)\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function forceUnstakeToken(uint256 tokenId) public onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(stakedTokens[tokenId].isStaked, \"Token is not staked\");\r\n\r\n        StakedToken memory staking = stakedTokens[tokenId];\r\n\r\n        if (!hasRole(ESCROW_ROLE, _msgSender())) {\r\n            require(staking.staker == _msgSender(), \"Only the staker can force unstake the token\");\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        stakedTokens[tokenId].unstakedAt = currentTime;\r\n        stakedTokens[tokenId].isStaked = false;\r\n\r\n        forceUnlockToken(tokenId);\r\n\r\n        emit TokenUnstaked(tokenId, staking.staker, currentTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 여러 토큰 언스테이킹 (강제)\r\n     * @param tokenIds: 토큰 ID 배열\r\n     */\r\n    function forceUnstakeTokenBatch(uint256[] calldata tokenIds) external onlyRole(ESCROW_ROLE) {\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            forceUnstakeToken(tokenIds[i]);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev 특정 토큰 스테이킹 정보 조회\r\n     * @param tokenId: 토큰 ID\r\n     * @return 스테이킹 정보 \r\n     */\r\n    function getStakingStatus(uint256 tokenId) public view returns (StakedToken memory) {\r\n        return stakedTokens[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev 여러 토큰 스테이킹 정보 조회\r\n     * @param tokenIds: 토큰 ID 배열\r\n     * @return 스테이킹 정보 배열\r\n     */\r\n    function getStakingStatusBatch(uint256[] calldata tokenIds) external view returns (StakedToken[] memory) {\r\n        StakedToken[] memory statuses = new StakedToken[](tokenIds.length);\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(tokenIds[i] < _nextTokenId(), \"Token ID out of bounds\");\r\n            statuses[i] = getStakingStatus(tokenIds[i]);\r\n        }\r\n        return statuses;\r\n    }\r\n\r\n    struct Reward {\r\n        uint256 rewardId;\r\n        string rewardType;\r\n        uint256 amount;\r\n        string description;\r\n        bool isActive;\r\n        uint256 activeAt;\r\n        uint256 deactiveAt;\r\n        uint256 claimableStakedTime;\r\n        string metadata;\r\n        string functionAbi;\r\n        uint256 createdAt;\r\n    }\r\n\r\n    struct ClaimedReward {\r\n        uint256 rewardId;\r\n        uint256 tokenId;\r\n        address staker;\r\n        uint256 stakedAt;\r\n        uint256 claimedAt;\r\n        bool isClaimed;\r\n        bool isRevoked;\r\n        uint256 revokedAt;\r\n        string revokedReason;\r\n        uint256 createdAt;\r\n    }\r\n\r\n    mapping(uint256 => Reward) public rewards;\r\n    mapping(uint256 => mapping(uint256 => ClaimedReward)) public claimedRewards;\r\n    uint256 public nextRewardId;\r\n\r\n    event RewardAdded(uint256 indexed rewardId, string indexed rewardType, uint256 amount, string description, string metadata, string functionAbi, uint256 activeAt, uint256 deactiveAt, uint256 claimableStakedTime);\r\n    event RewardClaimed(uint256 indexed rewardId, uint256 indexed tokenId, address indexed staker, uint256 amount, uint256 claimedAt);\r\n    event RewardRevoked(uint256 indexed rewardId, uint256 indexed tokenId, address indexed staker, string reason, uint256 revokedAt);\r\n    event RewardActivated(uint256 indexed rewardId);\r\n    event RewardDeactivated(uint256 indexed rewardId);\r\n\r\n    /**\r\n     * @dev 보상 추가\r\n     * @param rewardType: 보상 타입\r\n     * @param amount: 보상 금액\r\n     * @param description: 보상 설명\r\n     * @param metadata: 보상 메타데이터\r\n     * @param functionAbi: 보상 함수 ABI\r\n     * @param activeAt: 보상 활성화 시간 (0이면 즉시 활성화)\r\n     * @param deactiveAt: 보상 비활성화 시간 (0이면 무제한)\r\n     * @param claimableStakedTime: 보상을 받기 위한 최소 스테이킹 시간 (초 단위)\r\n     */\r\n    function addReward(\r\n        string memory rewardType,\r\n        uint256 amount,\r\n        string memory description,\r\n        string memory metadata,\r\n        string memory functionAbi,\r\n        uint256 activeAt,\r\n        uint256 deactiveAt,\r\n        uint256 claimableStakedTime\r\n    ) external onlyRole(ESCROW_ROLE) {\r\n        require(bytes(rewardType).length > 0, \"Reward type cannot be empty\");\r\n        require(bytes(description).length > 0, \"Description cannot be empty\");\r\n        require(claimableStakedTime > 0, \"Claimable staked time must be greater than 0\");\r\n\r\n        uint256 currentTime =  block.timestamp;\r\n\r\n        if (activeAt != 0) {\r\n            require(activeAt > currentTime, \"Active time must be in the future\");\r\n        }\r\n\r\n        if (deactiveAt != 0) {\r\n            require(deactiveAt > currentTime, \"Deactive time must be in the future\");\r\n            if (activeAt != 0) {\r\n                require(deactiveAt > activeAt, \"Deactive time must be after active time\");\r\n            }\r\n        }\r\n\r\n        uint256 rewardId = nextRewardId++;\r\n        rewards[rewardId] = Reward({\r\n            rewardId: rewardId,\r\n            rewardType: rewardType,\r\n            amount: amount,\r\n            description: description,\r\n            isActive: true, // 등록 시 활성화\r\n            activeAt: activeAt,\r\n            deactiveAt: deactiveAt,\r\n            claimableStakedTime: claimableStakedTime,\r\n            metadata: metadata,\r\n            functionAbi: functionAbi,\r\n            createdAt: currentTime\r\n        });\r\n\r\n        emit RewardAdded(rewardId, rewardType, amount, description, metadata, functionAbi, activeAt, deactiveAt, claimableStakedTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 활성화\r\n     * @param rewardId: 보상 ID\r\n     */\r\n    function activateReward(uint256 rewardId) external onlyRole(ESCROW_ROLE) {\r\n        require(!rewards[rewardId].isActive, \"Reward is already active\");\r\n\r\n        rewards[rewardId].isActive = true;\r\n        emit RewardActivated(rewardId);\r\n    }\r\n    \r\n    /**\r\n     * @dev 보상 비활성화\r\n     * @param rewardId: 보상 ID\r\n     */\r\n    function deactivateReward(uint256 rewardId) external onlyRole(ESCROW_ROLE) {\r\n        require(rewards[rewardId].isActive, \"Reward is not active\");\r\n\r\n        rewards[rewardId].isActive = false;\r\n        emit RewardDeactivated(rewardId);\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 정보 조회\r\n     * @param rewardId: 보상 ID\r\n     * @return 보상 정보\r\n     */\r\n    function getReward(uint256 rewardId) external view returns (Reward memory) {\r\n        return rewards[rewardId];\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 청구\r\n     * @param rewardId: 보상 ID\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function claimReward(uint256 rewardId, uint256 tokenId) external nonReentrant whenNotPaused {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(rewards[rewardId].rewardId != 0, \"Reward does not exist\");\r\n\r\n        Reward memory reward = rewards[rewardId];\r\n        StakedToken memory stakedToken = stakedTokens[tokenId];\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        require(reward.isActive, \"Reward is not active\");\r\n        require(reward.activeAt <= currentTime, \"Reward is not active yet\");\r\n        require(reward.deactiveAt >= currentTime, \"Reward is not active anymore\");\r\n        require(reward.claimableStakedTime <= currentTime - stakedToken.stakedAt, \"Token is not staked long enough\");\r\n\r\n        require(!claimedRewards[tokenId][rewardId].isClaimed, \"Reward is already claimed\");\r\n        require(stakedToken.staker == _msgSender() || hasRole(ESCROW_ROLE, _msgSender()), \"Only the staker can claim the reward\");\r\n\r\n        claimedRewards[tokenId][rewardId] = ClaimedReward({\r\n            rewardId: rewardId,\r\n            tokenId: tokenId,\r\n            staker: ownerOf(tokenId),\r\n            stakedAt: stakedToken.stakedAt,\r\n            claimedAt: currentTime,\r\n            isClaimed: true,\r\n            isRevoked: false,\r\n            revokedAt: 0,\r\n            revokedReason: \"\",\r\n            createdAt: currentTime\r\n        });\r\n\r\n        emit RewardClaimed(rewardId, tokenId, ownerOf(tokenId), reward.amount, currentTime);\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 청구 취소\r\n     * @param rewardId: 보상 ID\r\n     * @param reason: 취소 이유\r\n     * @param tokenId: 토큰 ID\r\n     */\r\n    function revokeClaimedReward(uint256 rewardId, uint256 tokenId, string memory reason) external onlyRole(ESCROW_ROLE) {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        require(claimedRewards[tokenId][rewardId].isClaimed, \"Reward is not claimed\");\r\n\r\n        ClaimedReward memory claimedReward = claimedRewards[tokenId][rewardId];\r\n\r\n        claimedReward.isRevoked = true;\r\n        claimedReward.revokedAt = block.timestamp;\r\n        claimedReward.revokedReason = reason;\r\n\r\n        emit RewardRevoked(rewardId, tokenId, claimedReward.staker, reason, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 청구 정보 조회\r\n     * @param tokenId: 토큰 ID\r\n     * @param rewardId: 보상 ID\r\n     * @return 청구 정보\r\n     */\r\n    function getClaimedReward(uint256 tokenId, uint256 rewardId) public view returns (ClaimedReward memory) {\r\n        return claimedRewards[tokenId][rewardId];\r\n    }\r\n\r\n    /**\r\n     * @dev 보상 청구 정보 조회\r\n     * @param tokenId: 토큰 ID\r\n     * @return 청구 정보\r\n     */\r\n    function getClaimedRewards(uint256 tokenId) external view returns (ClaimedReward[] memory) {\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < nextRewardId; i++) {\r\n            if (claimedRewards[tokenId][i].isClaimed) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        ClaimedReward[] memory claimed = new ClaimedReward[](count);\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < nextRewardId; i++) {\r\n            if (claimedRewards[tokenId][i].isClaimed) {\r\n                claimed[index++] = claimedRewards[tokenId][i];\r\n            }\r\n        }\r\n        return claimed;\r\n    }\r\n        \r\n    \r\n\r\n    /****************************************************/\r\n}\r\n"},"contracts/Factory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./Collection.sol\";\r\n\r\ncontract CollectionFactory is Ownable {\r\n    address[] public collections;\r\n    mapping(string => bool) private _usedNames;\r\n    mapping(address => uint256) private _collectionIndex;\r\n\r\n    event CollectionCreated(address indexed collectionAddress);\r\n    event CollectionDeleted(address indexed collectionAddress);\r\n\r\n    constructor(address initialOwner) Ownable(initialOwner) {}\r\n\r\n    function createCollection(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 maxSupply,\r\n        uint256 mintPrice,\r\n        string memory baseURI,\r\n        string memory contractURI_\r\n    ) external onlyOwner returns (address) {\r\n        require(!_usedNames[name], \"NAME_TAKEN\");\r\n\r\n        Collection newCollection = new Collection(\r\n            name,\r\n            symbol,\r\n            msg.sender,\r\n            maxSupply,\r\n            mintPrice,\r\n            baseURI,\r\n            contractURI_\r\n        );\r\n\r\n        address collectionAddress = address(newCollection);\r\n        collections.push(collectionAddress);\r\n        _usedNames[name] = true;\r\n        _collectionIndex[collectionAddress] = collections.length - 1;\r\n\r\n        emit CollectionCreated(collectionAddress);\r\n        return collectionAddress;\r\n    }\r\n\r\n    function deleteCollection(address collectionAddress) external onlyOwner {\r\n        uint256 index = _collectionIndex[collectionAddress];\r\n        require(collections[index] == collectionAddress, \"NOT_FOUND\");\r\n\r\n        uint256 lastIndex = collections.length - 1;\r\n        if (index != lastIndex) {\r\n            address lastCollection = collections[lastIndex];\r\n            collections[index] = lastCollection;\r\n            _collectionIndex[lastCollection] = index;\r\n        }\r\n\r\n        collections.pop();\r\n        delete _collectionIndex[collectionAddress];\r\n        delete _usedNames[Collection(collectionAddress).name()];\r\n\r\n        emit CollectionDeleted(collectionAddress);\r\n    }\r\n\r\n    function getCollections() external view returns (address[] memory) {\r\n        return collections;\r\n    }\r\n}"},"erc721a/contracts/ERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"},"erc721a/contracts/IERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200,"details":{"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf"}}},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 26113 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> contracts/Collection.sol:16:1:\n   |\n16 | contract Collection is ERC721A, Ownable, Pausable, ReentrancyGuard, AccessControl, ERC2981 {\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 26113 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":34862,"file":"contracts/Collection.sol","start":548},"type":"Warning"},{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 32121 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n --> contracts/Factory.sol:7:1:\n  |\n7 | contract CollectionFactory is Ownable {\n  | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 32121 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":2185,"file":"contracts/Factory.sol","start":145},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[843],"ERC165":[2498],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":844,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2499,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2498,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,2498,2510,378,843],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2497],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2497,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[843],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":844,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,843],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[2510],"IERC2981":[546]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":2511,"src":"133:59:3","symbolAliases":[{"foreign":{"id":529,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":532,"name":"IERC165","nameLocations":["476:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2510,"src":"476:7:3"},"id":533,"nodeType":"InheritanceSpecifier","src":"476:7:3"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"194:259:3","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":546,"linearizedBaseContracts":[546,2510],"name":"IERC2981","nameLocation":"464:8:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"490:473:3","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:3","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:3","nodeType":"VariableDeclaration","scope":545,"src":"998:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:3","nodeType":"VariableDeclaration","scope":545,"src":"1023:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:3","nodeType":"VariableDeclaration","scope":545,"src":"1070:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:3","nodeType":"VariableDeclaration","scope":545,"src":"1088:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:3"},"scope":546,"src":"968:143:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":547,"src":"454:659:3","usedErrors":[],"usedEvents":[]}],"src":"107:1007:3"},"id":3},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[2498],"ERC2981":[813],"IERC165":[2510],"IERC2981":[546]},"id":814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":547,"src":"134:55:4","symbolAliases":[{"foreign":{"id":549,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"142:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":2499,"src":"190:69:4","symbolAliases":[{"foreign":{"id":551,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"198:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":552,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"207:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":555,"name":"IERC2981","nameLocations":["1135:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":546,"src":"1135:8:4"},"id":556,"nodeType":"InheritanceSpecifier","src":"1135:8:4"},{"baseName":{"id":557,"name":"ERC165","nameLocations":["1145:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2498,"src":"1145:6:4"},"id":558,"nodeType":"InheritanceSpecifier","src":"1145:6:4"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"261:844:4","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":813,"linearizedBaseContracts":[813,2498,546,2510],"name":"ERC2981","nameLocation":"1124:7:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":563,"members":[{"constant":false,"id":560,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:4","nodeType":"VariableDeclaration","scope":563,"src":"1187:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:4","nodeType":"VariableDeclaration","scope":563,"src":"1213:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":561,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:4","nodeType":"StructDefinition","scope":813,"src":"1158:84:4","visibility":"public"},{"constant":false,"id":566,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:4","nodeType":"VariableDeclaration","scope":813,"src":"1248:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":565,"nodeType":"UserDefinedTypeName","pathNode":{"id":564,"name":"RoyaltyInfo","nameLocations":["1248:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":563,"src":"1248:11:4"},"referencedDeclaration":563,"src":"1248:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":571,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:4","nodeType":"VariableDeclaration","scope":813,"src":"1293:65:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$563_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":570,"keyName":"tokenId","keyNameLocation":"1309:7:4","keyType":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$563_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":569,"nodeType":"UserDefinedTypeName","pathNode":{"id":568,"name":"RoyaltyInfo","nameLocations":["1320:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":563,"src":"1320:11:4"},"referencedDeclaration":563,"src":"1320:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"1365:96:4","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":578,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:4","nodeType":"ErrorDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:4","nodeType":"VariableDeclaration","scope":578,"src":"1501:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:4","nodeType":"VariableDeclaration","scope":578,"src":"1520:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:4"},"src":"1466:75:4"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"1547:64:4","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":583,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:4","nodeType":"ErrorDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:4","nodeType":"VariableDeclaration","scope":583,"src":"1659:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:4"},"src":"1616:61:4"},{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1683:113:4","text":" @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":592,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1807:26:4","nodeType":"ErrorDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"tokenId","nameLocation":"1842:7:4","nodeType":"VariableDeclaration","scope":592,"src":"1834:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"numerator","nameLocation":"1859:9:4","nodeType":"VariableDeclaration","scope":592,"src":"1851:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"denominator","nameLocation":"1878:11:4","nodeType":"VariableDeclaration","scope":592,"src":"1870:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:57:4"},"src":"1801:90:4"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1897:70:4","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":599,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1978:34:4","nodeType":"ErrorDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"tokenId","nameLocation":"2021:7:4","nodeType":"VariableDeclaration","scope":599,"src":"2013:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"receiver","nameLocation":"2038:8:4","nodeType":"VariableDeclaration","scope":599,"src":"2030:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2012:35:4"},"src":"1972:76:4"},{"baseFunctions":[2497,2509],"body":{"id":622,"nodeType":"Block","src":"2223:105:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2240:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":612,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2260:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$546_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$546_$","typeString":"type(contract IERC2981)"}],"id":611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2255:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$546","typeString":"type(contract IERC2981)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2270:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"2255:26:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2240:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":618,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2309:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":616,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2285:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$813_$","typeString":"type(contract super ERC2981)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2291:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2497,"src":"2285:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2240:81:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":609,"id":621,"nodeType":"Return","src":"2233:88:4"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2054:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":623,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2124:17:4","nodeType":"FunctionDefinition","overrides":{"id":606,"nodeType":"OverrideSpecifier","overrides":[{"id":604,"name":"IERC165","nameLocations":["2191:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2510,"src":"2191:7:4"},{"id":605,"name":"ERC165","nameLocations":["2200:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2498,"src":"2200:6:4"}],"src":"2182:25:4"},"parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"interfaceId","nameLocation":"2149:11:4","nodeType":"VariableDeclaration","scope":623,"src":"2142:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":601,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2142:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2141:20:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"2217:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":607,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2216:6:4"},"scope":813,"src":"2115:213:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":684,"nodeType":"Block","src":"2520:515:4","statements":[{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2550:12:4","nodeType":"VariableDeclaration","scope":684,"src":"2530:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":636,"nodeType":"UserDefinedTypeName","pathNode":{"id":635,"name":"RoyaltyInfo","nameLocations":["2530:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":563,"src":"2530:11:4"},"referencedDeclaration":563,"src":"2530:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":641,"initialValue":{"baseExpression":{"id":638,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2565:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$563_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":640,"indexExpression":{"id":639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2583:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2565:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2530:61:4"},{"assignments":[643],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2609:15:4","nodeType":"VariableDeclaration","scope":684,"src":"2601:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"2601:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":646,"initialValue":{"expression":{"id":644,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2627:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2640:8:4","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":560,"src":"2627:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2601:47:4"},{"assignments":[648],"declarations":[{"constant":false,"id":648,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2665:15:4","nodeType":"VariableDeclaration","scope":684,"src":"2658:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":647,"name":"uint96","nodeType":"ElementaryTypeName","src":"2658:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":651,"initialValue":{"expression":{"id":649,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2683:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2696:15:4","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":562,"src":"2683:28:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2658:53:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":652,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2726:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2745:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:4","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2745:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2726:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":669,"nodeType":"IfStatement","src":"2722:173:4","trueBody":{"id":668,"nodeType":"Block","src":"2757:138:4","statements":[{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":658,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2771:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":659,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2789:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2809:8:4","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":560,"src":"2789:28:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2771:46:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":662,"nodeType":"ExpressionStatement","src":"2771:46:4"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"2831:15:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":664,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2849:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2869:15:4","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":562,"src":"2849:35:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2831:53:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":667,"nodeType":"ExpressionStatement","src":"2831:53:4"}]}},{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2913:13:4","nodeType":"VariableDeclaration","scope":684,"src":"2905:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":679,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2930:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":673,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"2942:15:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2930:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2929:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":676,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"2961:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2929:49:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2905:73:4"},{"expression":{"components":[{"id":680,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2997:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3014:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2996:32:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":634,"id":683,"nodeType":"Return","src":"2989:39:4"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2334:39:4","text":" @inheritdoc IERC2981"},"functionSelector":"2a55205a","id":685,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2387:11:4","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"2416:7:4","nodeType":"VariableDeclaration","scope":685,"src":"2408:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"salePrice","nameLocation":"2441:9:4","nodeType":"VariableDeclaration","scope":685,"src":"2433:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2433:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:58:4"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"receiver","nameLocation":"2494:8:4","nodeType":"VariableDeclaration","scope":685,"src":"2486:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"amount","nameLocation":"2512:6:4","nodeType":"VariableDeclaration","scope":685,"src":"2504:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2504:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:34:4"},"scope":813,"src":"2378:657:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":693,"nodeType":"Block","src":"3376:29:4","statements":[{"expression":{"hexValue":"3130303030","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3393:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":690,"id":692,"nodeType":"Return","src":"3386:12:4"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"3041:264:4","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3319:15:4","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3334:2:4"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"3368:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":688,"name":"uint96","nodeType":"ElementaryTypeName","src":"3368:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3367:8:4"},"scope":813,"src":"3310:95:4","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"3750:423:4","statements":[{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"denominator","nameLocation":"3768:11:4","nodeType":"VariableDeclaration","scope":739,"src":"3760:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3760:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":704,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"3782:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3782:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3760:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3813:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":708,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3828:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"3809:173:4","trueBody":{"id":715,"nodeType":"Block","src":"3841:141:4","statements":[{"errorCall":{"arguments":[{"id":711,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3945:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3959:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3916:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3916:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"3909:62:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3995:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:4","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3995:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"3991:108:4","trueBody":{"id":730,"nodeType":"Block","src":"4019:80:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4085:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4077:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:4","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4040:36:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4040:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":729,"nodeType":"RevertStatement","src":"4033:55:4"}]}},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4109:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":734,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4143:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4153:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":733,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4131:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$563_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4131:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4109:57:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":738,"nodeType":"ExpressionStatement","src":"4109:57:4"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"3411:250:4","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3675:18:4","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"receiver","nameLocation":"3702:8:4","nodeType":"VariableDeclaration","scope":740,"src":"3694:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3694:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"feeNumerator","nameLocation":"3719:12:4","nodeType":"VariableDeclaration","scope":740,"src":"3712:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":698,"name":"uint96","nodeType":"ElementaryTypeName","src":"3712:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3693:39:4"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"3750:0:4"},"scope":813,"src":"3666:507:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"4294:43:4","statements":[{"expression":{"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4304:26:4","subExpression":{"id":744,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4311:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"4304:26:4"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"4179:60:4","text":" @dev Removes default royalty information."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4253:21:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"4274:2:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"4294:0:4"},"scope":813,"src":"4244:93:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"4706:444:4","statements":[{"assignments":[759],"declarations":[{"constant":false,"id":759,"mutability":"mutable","name":"denominator","nameLocation":"4724:11:4","nodeType":"VariableDeclaration","scope":799,"src":"4716:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":762,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":760,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4738:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4738:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4716:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"4769:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4784:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4769:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"4765:180:4","trueBody":{"id":772,"nodeType":"Block","src":"4797:148:4","statements":[{"errorCall":{"arguments":[{"id":767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4899:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":768,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"4908:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":769,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4922:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4872:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":771,"nodeType":"RevertStatement","src":"4865:69:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4958:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4978:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4970:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"4970:7:4","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4970:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4958:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":789,"nodeType":"IfStatement","src":"4954:115:4","trueBody":{"id":788,"nodeType":"Block","src":"4982:87:4","statements":[{"errorCall":{"arguments":[{"id":781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"5038:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5047:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"5047:7:4","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5047:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":780,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"5003:34:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (uint256,address) pure returns (error)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5003:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":787,"nodeType":"RevertStatement","src":"4996:62:4"}]}},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":790,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5079:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$563_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":792,"indexExpression":{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"5097:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5079:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":794,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5120:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5130:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":793,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5108:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$563_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5108:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5079:64:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":798,"nodeType":"ExpressionStatement","src":"5079:64:4"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"4343:259:4","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4616:16:4","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"tokenId","nameLocation":"4641:7:4","nodeType":"VariableDeclaration","scope":800,"src":"4633:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4633:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"receiver","nameLocation":"4658:8:4","nodeType":"VariableDeclaration","scope":800,"src":"4650:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"feeNumerator","nameLocation":"4675:12:4","nodeType":"VariableDeclaration","scope":800,"src":"4668:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":754,"name":"uint96","nodeType":"ElementaryTypeName","src":"4668:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4632:56:4"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"4706:0:4"},"scope":813,"src":"4607:543:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"5318:50:4","statements":[{"expression":{"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5328:33:4","subExpression":{"baseExpression":{"id":806,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5335:17:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$563_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":808,"indexExpression":{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5353:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5335:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$563_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"5328:33:4"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"5156:95:4","text":" @dev Resets royalty information for the token id back to the global default."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5265:18:4","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"tokenId","nameLocation":"5292:7:4","nodeType":"VariableDeclaration","scope":812,"src":"5284:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5284:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5283:17:4"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"5318:0:4"},"scope":813,"src":"5256:112:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":814,"src":"1106:4264:4","usedErrors":[578,583,592,599],"usedEvents":[]}],"src":"108:5263:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[843]},"id":844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":815,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":843,"linearizedBaseContracts":[843],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":824,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":820,"id":823,"nodeType":"Return","src":"728:17:5"}]},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":843,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":829,"id":832,"nodeType":"Return","src":"835:15:5"}]},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":843,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":838,"id":840,"nodeType":"Return","src":"945:8:5"}]},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":843,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":844,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[895]},"id":896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":845,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"125:489:6","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":895,"linearizedBaseContracts":[895],"name":"Panic","nameLocation":"665:5:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"677:36:6","text":"@dev generic / unspecified error"},"id":850,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:6","nodeType":"VariableDeclaration","scope":895,"src":"718:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"764:37:6","text":"@dev used by the assert() builtin"},"id":854,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:6","nodeType":"VariableDeclaration","scope":895,"src":"806:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"851:41:6","text":"@dev arithmetic underflow or overflow"},"id":858,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:6","nodeType":"VariableDeclaration","scope":895,"src":"897:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:6","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"950:35:6","text":"@dev division or modulo by zero"},"id":862,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:6","nodeType":"VariableDeclaration","scope":895,"src":"990:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"1045:30:6","text":"@dev enum conversion error"},"id":866,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:6","nodeType":"VariableDeclaration","scope":895,"src":"1080:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:6","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1140:36:6","text":"@dev invalid encoding in storage"},"id":870,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:6","nodeType":"VariableDeclaration","scope":895,"src":"1181:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"1242:24:6","text":"@dev empty array pop"},"id":874,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:6","nodeType":"VariableDeclaration","scope":895,"src":"1271:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"1325:35:6","text":"@dev array out of bounds access"},"id":878,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:6","nodeType":"VariableDeclaration","scope":895,"src":"1365:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"1423:65:6","text":"@dev resource error (too large allocation or too large array)"},"id":882,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:6","nodeType":"VariableDeclaration","scope":895,"src":"1493:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"1546:42:6","text":"@dev calling invalid internal function"},"id":886,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:6","nodeType":"VariableDeclaration","scope":895,"src":"1593:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:6","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"1819:151:6","statements":[{"AST":{"nativeSrc":"1854:110:6","nodeType":"YulBlock","src":"1854:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:6","nodeType":"YulLiteral","src":"1875:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:6","nodeType":"YulLiteral","src":"1881:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:6","nodeType":"YulIdentifier","src":"1868:6:6"},"nativeSrc":"1868:24:6","nodeType":"YulFunctionCall","src":"1868:24:6"},"nativeSrc":"1868:24:6","nodeType":"YulExpressionStatement","src":"1868:24:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:6","nodeType":"YulLiteral","src":"1912:4:6","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:6","nodeType":"YulIdentifier","src":"1918:4:6"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:6","nodeType":"YulIdentifier","src":"1905:6:6"},"nativeSrc":"1905:18:6","nodeType":"YulFunctionCall","src":"1905:18:6"},"nativeSrc":"1905:18:6","nodeType":"YulExpressionStatement","src":"1905:18:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:6","nodeType":"YulLiteral","src":"1943:4:6","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:6","nodeType":"YulLiteral","src":"1949:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:6","nodeType":"YulIdentifier","src":"1936:6:6"},"nativeSrc":"1936:18:6","nodeType":"YulFunctionCall","src":"1936:18:6"},"nativeSrc":"1936:18:6","nodeType":"YulExpressionStatement","src":"1936:18:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":889,"isOffset":false,"isSlot":false,"src":"1918:4:6","valueSize":1}],"flags":["memory-safe"],"id":892,"nodeType":"InlineAssembly","src":"1829:135:6"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1658:113:6","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:6","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"code","nameLocation":"1799:4:6","nodeType":"VariableDeclaration","scope":894,"src":"1791:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:6"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"1819:0:6"},"scope":895,"src":"1776:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":896,"src":"657:1315:6","usedErrors":[],"usedEvents":[]}],"src":"99:1874:6"},"id":6},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[843],"Pausable":[1003]},"id":1004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":897,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1004,"sourceUnit":844,"src":"128:45:7","symbolAliases":[{"foreign":{"id":898,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"136:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":901,"name":"Context","nameLocations":["645:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"645:7:7"},"id":902,"nodeType":"InheritanceSpecifier","src":"645:7:7"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"175:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1003,"linearizedBaseContracts":[1003,843],"name":"Pausable","nameLocation":"633:8:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":904,"mutability":"mutable","name":"_paused","nameLocation":"672:7:7","nodeType":"VariableDeclaration","scope":1003,"src":"659:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":903,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"686:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":909,"name":"Paused","nameLocation":"770:6:7","nodeType":"EventDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:7","nodeType":"VariableDeclaration","scope":909,"src":"777:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:7"},"src":"764:30:7"},{"anonymous":false,"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"800:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":914,"name":"Unpaused","nameLocation":"881:8:7","nodeType":"EventDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:7","nodeType":"VariableDeclaration","scope":914,"src":"890:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:7"},"src":"875:32:7"},{"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"913:76:7","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":917,"name":"EnforcedPause","nameLocation":"1000:13:7","nodeType":"ErrorDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"1013:2:7"},"src":"994:22:7"},{"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"1022:80:7","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":920,"name":"ExpectedPause","nameLocation":"1113:13:7","nodeType":"ErrorDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"1126:2:7"},"src":"1107:22:7"},{"body":{"id":927,"nodeType":"Block","src":"1340:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":923,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"1350:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":925,"nodeType":"ExpressionStatement","src":"1350:19:7"},{"id":926,"nodeType":"PlaceholderStatement","src":"1379:1:7"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"1135:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":928,"name":"whenNotPaused","nameLocation":"1324:13:7","nodeType":"ModifierDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"1337:2:7"},"src":"1315:72:7","virtual":false,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"1587:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":931,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1597:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"1597:16:7"},{"id":934,"nodeType":"PlaceholderStatement","src":"1623:1:7"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1393:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":936,"name":"whenPaused","nameLocation":"1574:10:7","nodeType":"ModifierDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"1584:2:7"},"src":"1565:66:7","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"1779:31:7","statements":[{"expression":{"id":942,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1796:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":941,"id":943,"nodeType":"Return","src":"1789:14:7"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"1637:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":945,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:7","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"1741:2:7"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"1773:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:7"},"scope":1003,"src":"1726:84:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":956,"nodeType":"Block","src":"1929:77:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":949,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1943:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":955,"nodeType":"IfStatement","src":"1939:61:7","trueBody":{"id":954,"nodeType":"Block","src":"1953:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":951,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"1974:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":953,"nodeType":"RevertStatement","src":"1967:22:7"}]}}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"1816:57:7","text":" @dev Throws if the contract is paused."},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:7","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[],"src":"1904:2:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"1929:0:7"},"scope":1003,"src":"1878:128:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":969,"nodeType":"Block","src":"2126:78:7","statements":[{"condition":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":961,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2141:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"2136:62:7","trueBody":{"id":967,"nodeType":"Block","src":"2151:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2172:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":966,"nodeType":"RevertStatement","src":"2165:22:7"}]}}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"2012:61:7","text":" @dev Throws if the contract is not paused."},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:7","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"2101:2:7"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2126:0:7"},"scope":1003,"src":"2078:126:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":985,"nodeType":"Block","src":"2388:66:7","statements":[{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":976,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2398:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"ExpressionStatement","src":"2398:14:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":981,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2434:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2427:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"EmitStatement","src":"2422:25:7"}]},"documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"2210:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":986,"implemented":true,"kind":"function","modifiers":[{"id":974,"kind":"modifierInvocation","modifierName":{"id":973,"name":"whenNotPaused","nameLocations":["2374:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"2374:13:7"},"nodeType":"ModifierInvocation","src":"2374:13:7"}],"name":"_pause","nameLocation":"2348:6:7","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"2354:2:7"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"2388:0:7"},"scope":1003,"src":"2339:115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"2634:69:7","statements":[{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":992,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2644:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"ExpressionStatement","src":"2644:15:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":997,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2683:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":996,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2674:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"EmitStatement","src":"2669:27:7"}]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"2460:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1002,"implemented":true,"kind":"function","modifiers":[{"id":990,"kind":"modifierInvocation","modifierName":{"id":989,"name":"whenPaused","nameLocations":["2623:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"2623:10:7"},"nodeType":"ModifierInvocation","src":"2623:10:7"}],"name":"_unpause","nameLocation":"2595:8:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"2634:0:7"},"scope":1003,"src":"2586:117:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1004,"src":"615:2090:7","usedErrors":[917,920],"usedEvents":[909,914]}],"src":"102:2604:7"},"id":7},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1072]},"id":1073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1005,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"135:894:8","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1072,"linearizedBaseContracts":[1072],"name":"ReentrancyGuard","nameLocation":"1048:15:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1009,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:8","nodeType":"VariableDeclaration","scope":1072,"src":"1818:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1012,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:8","nodeType":"VariableDeclaration","scope":1072,"src":"1864:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1014,"mutability":"mutable","name":"_status","nameLocation":"1923:7:8","nodeType":"VariableDeclaration","scope":1072,"src":"1907:23:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1937:52:8","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1017,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:8","nodeType":"ErrorDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"2028:2:8"},"src":"1994:37:8"},{"body":{"id":1024,"nodeType":"Block","src":"2051:38:8","statements":[{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1020,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1021,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"2071:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"2061:21:8"}]},"id":1025,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"2048:2:8"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2051:0:8"},"scope":1072,"src":"2037:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1035,"nodeType":"Block","src":"2490:79:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1028,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2500:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"2500:21:8"},{"id":1031,"nodeType":"PlaceholderStatement","src":"2531:1:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1032,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2542:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"2542:20:8"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"2095:366:8","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1036,"name":"nonReentrant","nameLocation":"2475:12:8","nodeType":"ModifierDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"2487:2:8"},"src":"2466:103:8","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"2614:268:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1040,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"2698:86:8","trueBody":{"id":1045,"nodeType":"Block","src":"2722:62:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1042,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2743:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1044,"nodeType":"RevertStatement","src":"2736:37:8"}]}},{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1048,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ExpressionStatement","src":"2858:17:8"}]},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:8","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"2603:2:8"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"2614:0:8"},"scope":1072,"src":"2575:307:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1059,"nodeType":"Block","src":"2926:170:8","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"3068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3078:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ExpressionStatement","src":"3068:21:8"}]},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:8","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"2915:2:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"2926:0:8"},"scope":1072,"src":"2888:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1070,"nodeType":"Block","src":"3339:42:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"3356:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1067,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1065,"id":1069,"nodeType":"Return","src":"3349:25:8"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"3102:168:8","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:8","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"3307:2:8"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"3333:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1063,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:8"},"scope":1072,"src":"3275:106:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1073,"src":"1030:2353:8","usedErrors":[1017],"usedEvents":[]}],"src":"109:3275:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4131],"SafeCast":[5896],"SignedMath":[6040],"Strings":[2474]},"id":2475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1074,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2475,"sourceUnit":4132,"src":"127:37:9","symbolAliases":[{"foreign":{"id":1075,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2475,"sourceUnit":5897,"src":"165:45:9","symbolAliases":[{"foreign":{"id":1077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"173:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2475,"sourceUnit":6041,"src":"211:49:9","symbolAliases":[{"foreign":{"id":1079,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"219:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"262:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2474,"linearizedBaseContracts":[2474],"name":"Strings","nameLocation":"305:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1083,"libraryName":{"id":1082,"name":"SafeCast","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5896,"src":"325:8:9"},"nodeType":"UsingForDirective","src":"319:21:9"},{"constant":true,"id":1086,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":2474,"src":"346:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1084,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1089,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:9","nodeType":"VariableDeclaration","scope":2474,"src":"408:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1087,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1125,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:9","nodeType":"VariableDeclaration","scope":2474,"src":"456:302:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:9","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:9","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:9","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:9","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:9","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"778:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1132,"name":"StringsInsufficientHexLength","nameLocation":"870:28:9","nodeType":"ErrorDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"907:5:9","nodeType":"VariableDeclaration","scope":1132,"src":"899:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"length","nameLocation":"922:6:9","nodeType":"VariableDeclaration","scope":1132,"src":"914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:9"},"src":"864:66:9"},{"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"936:108:9","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1135,"name":"StringsInvalidChar","nameLocation":"1055:18:9","nodeType":"ErrorDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"1073:2:9"},"src":"1049:27:9"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"1082:84:9","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1138,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:9","nodeType":"ErrorDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"1204:2:9"},"src":"1171:36:9"},{"body":{"id":1185,"nodeType":"Block","src":"1379:561:9","statements":[{"id":1184,"nodeType":"UncheckedBlock","src":"1389:545:9","statements":[{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"length","nameLocation":"1421:6:9","nodeType":"VariableDeclaration","scope":1184,"src":"1413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1154,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1441:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1148,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"1430:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4131_$","typeString":"type(library Math)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3963,"src":"1430:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:9"},{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:9","nodeType":"VariableDeclaration","scope":1184,"src":"1465:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1155,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[{"id":1159,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1499:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1157,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:9"},{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:9","nodeType":"VariableDeclaration","scope":1184,"src":"1520:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1164,"nodeType":"VariableDeclarationStatement","src":"1520:11:9"},{"AST":{"nativeSrc":"1570:67:9","nodeType":"YulBlock","src":"1570:67:9","statements":[{"nativeSrc":"1588:35:9","nodeType":"YulAssignment","src":"1588:35:9","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:9","nodeType":"YulIdentifier","src":"1599:6:9"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:9","nodeType":"YulLiteral","src":"1611:2:9","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:9","nodeType":"YulIdentifier","src":"1615:6:9"}],"functionName":{"name":"add","nativeSrc":"1607:3:9","nodeType":"YulIdentifier","src":"1607:3:9"},"nativeSrc":"1607:15:9","nodeType":"YulFunctionCall","src":"1607:15:9"}],"functionName":{"name":"add","nativeSrc":"1595:3:9","nodeType":"YulIdentifier","src":"1595:3:9"},"nativeSrc":"1595:28:9","nodeType":"YulFunctionCall","src":"1595:28:9"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:9","nodeType":"YulIdentifier","src":"1588:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1156,"isOffset":false,"isSlot":false,"src":"1599:6:9","valueSize":1},{"declaration":1147,"isOffset":false,"isSlot":false,"src":"1615:6:9","valueSize":1},{"declaration":1163,"isOffset":false,"isSlot":false,"src":"1588:3:9","valueSize":1}],"flags":["memory-safe"],"id":1165,"nodeType":"InlineAssembly","src":"1545:92:9"},{"body":{"id":1180,"nodeType":"Block","src":"1663:234:9","statements":[{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:9","subExpression":{"id":1167,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1681:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1169,"nodeType":"ExpressionStatement","src":"1681:5:9"},{"AST":{"nativeSrc":"1729:86:9","nodeType":"YulBlock","src":"1729:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:9","nodeType":"YulIdentifier","src":"1759:3:9"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:9","nodeType":"YulIdentifier","src":"1773:5:9"},{"kind":"number","nativeSrc":"1780:2:9","nodeType":"YulLiteral","src":"1780:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:9","nodeType":"YulIdentifier","src":"1769:3:9"},"nativeSrc":"1769:14:9","nodeType":"YulFunctionCall","src":"1769:14:9"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:9","nodeType":"YulIdentifier","src":"1785:10:9"}],"functionName":{"name":"byte","nativeSrc":"1764:4:9","nodeType":"YulIdentifier","src":"1764:4:9"},"nativeSrc":"1764:32:9","nodeType":"YulFunctionCall","src":"1764:32:9"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:9","nodeType":"YulIdentifier","src":"1751:7:9"},"nativeSrc":"1751:46:9","nodeType":"YulFunctionCall","src":"1751:46:9"},"nativeSrc":"1751:46:9","nodeType":"YulExpressionStatement","src":"1751:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1086,"isOffset":false,"isSlot":false,"src":"1785:10:9","valueSize":1},{"declaration":1163,"isOffset":false,"isSlot":false,"src":"1759:3:9","valueSize":1},{"declaration":1141,"isOffset":false,"isSlot":false,"src":"1773:5:9","valueSize":1}],"flags":["memory-safe"],"id":1170,"nodeType":"InlineAssembly","src":"1704:111:9"},{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1832:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"1832:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"1861:21:9","trueBody":{"id":1178,"nodeType":"Break","src":"1877:5:9"}}]},"condition":{"hexValue":"74727565","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1181,"nodeType":"WhileStatement","src":"1650:247:9"},{"expression":{"id":1182,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1917:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1145,"id":1183,"nodeType":"Return","src":"1910:13:9"}]}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"1213:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:9","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"value","nameLocation":"1334:5:9","nodeType":"VariableDeclaration","scope":1186,"src":"1326:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:9"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"1364:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1143,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:9"},"scope":2474,"src":"1308:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"2116:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2147:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:9","trueExpression":{"hexValue":"2d","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2193:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1204,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"2178:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6040_$","typeString":"type(library SignedMath)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"2178:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"2169:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1194,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:9","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:9","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1193,"id":1210,"nodeType":"Return","src":"2126:75:9"}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"1946:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:9","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"value","nameLocation":"2071:5:9","nodeType":"VariableDeclaration","scope":1212,"src":"2064:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1188,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:9"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"2101:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:9"},"scope":2474,"src":"2040:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"2387:100:9","statements":[{"id":1230,"nodeType":"UncheckedBlock","src":"2397:84:9","statements":[{"expression":{"arguments":[{"id":1221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2440:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2459:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1222,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"2447:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4131_$","typeString":"type(library Math)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4074,"src":"2447:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1220,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1232,1315,1335],"referencedDeclaration":1315,"src":"2428:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1219,"id":1229,"nodeType":"Return","src":"2421:49:9"}]}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"2214:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:9","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"value","nameLocation":"2342:5:9","nodeType":"VariableDeclaration","scope":1232,"src":"2334:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:9"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"2372:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1217,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:9"},"scope":2474,"src":"2313:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"2700:435:9","statements":[{"assignments":[1243],"declarations":[{"constant":false,"id":1243,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:9","nodeType":"VariableDeclaration","scope":1314,"src":"2710:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1245,"initialValue":{"id":1244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2731:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:9"},{"assignments":[1247],"declarations":[{"constant":false,"id":1247,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:9","nodeType":"VariableDeclaration","scope":1314,"src":"2746:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1256,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1251,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:9"},{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1257,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2803:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1259,"indexExpression":{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1262,"nodeType":"ExpressionStatement","src":"2803:15:9"},{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2828:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1265,"indexExpression":{"hexValue":"31","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1268,"nodeType":"ExpressionStatement","src":"2828:15:9"},{"body":{"id":1297,"nodeType":"Block","src":"2898:95:9","statements":[{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1283,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2912:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1285,"indexExpression":{"id":1284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1286,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2924:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1290,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"2935:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1292,"nodeType":"ExpressionStatement","src":"2912:40:9"},{"expression":{"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1293,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"2966:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1296,"nodeType":"ExpressionStatement","src":"2966:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2886:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"initializationExpression":{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"i","nameLocation":"2866:1:9","nodeType":"VariableDeclaration","scope":1298,"src":"2858:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1276,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1272,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2874:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:9","subExpression":{"id":1280,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2895:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ExpressionStatement","src":"2893:3:9"},"nodeType":"ForStatement","src":"2853:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3006:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1308,"nodeType":"IfStatement","src":"3002:96:9","trueBody":{"id":1307,"nodeType":"Block","src":"3023:75:9","statements":[{"errorCall":{"arguments":[{"id":1303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"3073:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1304,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3080:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3044:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1306,"nodeType":"RevertStatement","src":"3037:50:9"}]}},{"expression":{"arguments":[{"id":1311,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"3121:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:9","typeDescriptions":{}}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1241,"id":1313,"nodeType":"Return","src":"3107:21:9"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"2493:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:9","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"2639:5:9","nodeType":"VariableDeclaration","scope":1315,"src":"2631:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"length","nameLocation":"2654:6:9","nodeType":"VariableDeclaration","scope":1315,"src":"2646:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:9"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"2685:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1239,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:9"},"scope":2474,"src":"2610:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"3367:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1328,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3412:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1326,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:9","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:9","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1331,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3420:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1323,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1232,1315,1335],"referencedDeclaration":1315,"src":"3384:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1322,"id":1333,"nodeType":"Return","src":"3377:58:9"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"3141:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:9","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"addr","nameLocation":"3323:4:9","nodeType":"VariableDeclaration","scope":1335,"src":"3315:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:9"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"3352:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1320,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:9"},"scope":2474,"src":"3294:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"3699:642:9","statements":[{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:9","nodeType":"VariableDeclaration","scope":1399,"src":"3709:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1351,"initialValue":{"arguments":[{"arguments":[{"id":1348,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3749:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1232,1315,1335],"referencedDeclaration":1335,"src":"3737:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:9","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:9"},{"assignments":[1353],"declarations":[{"constant":false,"id":1353,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:9","nodeType":"VariableDeclaration","scope":1399,"src":"3840:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1354,"nodeType":"VariableDeclarationStatement","src":"3840:17:9"},{"AST":{"nativeSrc":"3892:78:9","nodeType":"YulBlock","src":"3892:78:9","statements":[{"nativeSrc":"3906:54:9","nodeType":"YulAssignment","src":"3906:54:9","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:9","nodeType":"YulLiteral","src":"3923:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:9","nodeType":"YulIdentifier","src":"3941:6:9"},{"kind":"number","nativeSrc":"3949:4:9","nodeType":"YulLiteral","src":"3949:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:9","nodeType":"YulIdentifier","src":"3937:3:9"},"nativeSrc":"3937:17:9","nodeType":"YulFunctionCall","src":"3937:17:9"},{"kind":"number","nativeSrc":"3956:2:9","nodeType":"YulLiteral","src":"3956:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:9","nodeType":"YulIdentifier","src":"3927:9:9"},"nativeSrc":"3927:32:9","nodeType":"YulFunctionCall","src":"3927:32:9"}],"functionName":{"name":"shr","nativeSrc":"3919:3:9","nodeType":"YulIdentifier","src":"3919:3:9"},"nativeSrc":"3919:41:9","nodeType":"YulFunctionCall","src":"3919:41:9"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:9","nodeType":"YulIdentifier","src":"3906:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1344,"isOffset":false,"isSlot":false,"src":"3941:6:9","valueSize":1},{"declaration":1353,"isOffset":false,"isSlot":false,"src":"3906:9:9","valueSize":1}],"flags":["memory-safe"],"id":1355,"nodeType":"InlineAssembly","src":"3867:103:9"},{"body":{"id":1392,"nodeType":"Block","src":"4013:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"4119:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1373,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"4148:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1375,"indexExpression":{"id":1374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4155:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1371,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:9","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1387,"nodeType":"IfStatement","src":"4115:150:9","trueBody":{"id":1386,"nodeType":"Block","src":"4165:100:9","statements":[{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1380,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"4233:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1382,"indexExpression":{"id":1381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4240:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1385,"nodeType":"ExpressionStatement","src":"4233:17:9"}]}},{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1388,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"4278:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1391,"nodeType":"ExpressionStatement","src":"4278:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4001:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"initializationExpression":{"assignments":[1357],"declarations":[{"constant":false,"id":1357,"mutability":"mutable","name":"i","nameLocation":"3993:1:9","nodeType":"VariableDeclaration","scope":1393,"src":"3985:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1359,"initialValue":{"hexValue":"3431","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:9","subExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4010:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"4008:3:9"},"nodeType":"ForStatement","src":"3980:324:9"},{"expression":{"arguments":[{"id":1396,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"4327:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1394,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:9","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1342,"id":1398,"nodeType":"Return","src":"4313:21:9"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"3448:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:9","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"addr","nameLocation":"3655:4:9","nodeType":"VariableDeclaration","scope":1400,"src":"3647:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:9"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"3684:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1340,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:9"},"scope":2474,"src":"3618:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"4496:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4519:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1410,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:9","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:9","memberName":"length","nodeType":"MemberAccess","src":"4513:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4538:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1415,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:9","typeDescriptions":{}}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:9","memberName":"length","nodeType":"MemberAccess","src":"4532:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4567:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1422,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:9","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4590:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1428,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:9","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1427,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1409,"id":1435,"nodeType":"Return","src":"4506:87:9"}]},"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"4347:66:9","text":" @dev Returns true if the two strings are equal."},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:9","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"a","nameLocation":"4447:1:9","nodeType":"VariableDeclaration","scope":1437,"src":"4433:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1402,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"b","nameLocation":"4464:1:9","nodeType":"VariableDeclaration","scope":1437,"src":"4450:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1404,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:9"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"4490:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1407,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:9"},"scope":2474,"src":"4418:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"4897:64:9","statements":[{"expression":{"arguments":[{"id":1446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"4924:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1450,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"4940:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1448,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:9","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:9","memberName":"length","nodeType":"MemberAccess","src":"4934:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1445,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1456,1487],"referencedDeclaration":1487,"src":"4914:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1444,"id":1454,"nodeType":"Return","src":"4907:47:9"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"4606:214:9","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:9","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"input","nameLocation":"4858:5:9","nodeType":"VariableDeclaration","scope":1456,"src":"4844:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1439,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:9"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"4888:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:9"},"scope":2474,"src":"4825:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"5366:153:9","statements":[{"assignments":[1469,1471],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"success","nameLocation":"5382:7:9","nodeType":"VariableDeclaration","scope":1486,"src":"5377:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1468,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"value","nameLocation":"5399:5:9","nodeType":"VariableDeclaration","scope":1486,"src":"5391:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"arguments":[{"id":1473,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"5421:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1474,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1475,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"5435:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1472,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1508,1545],"referencedDeclaration":1545,"src":"5408:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:9"},{"condition":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:9","subExpression":{"id":1478,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"5454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1483,"nodeType":"IfStatement","src":"5449:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1480,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5470:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1482,"nodeType":"RevertStatement","src":"5463:27:9"}},{"expression":{"id":1484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5507:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1467,"id":1485,"nodeType":"Return","src":"5500:12:9"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"4967:294:9","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:9","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"input","nameLocation":"5299:5:9","nodeType":"VariableDeclaration","scope":1487,"src":"5285:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"begin","nameLocation":"5314:5:9","nodeType":"VariableDeclaration","scope":1487,"src":"5306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"end","nameLocation":"5329:3:9","nodeType":"VariableDeclaration","scope":1487,"src":"5321:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:9"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"5357:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:9"},"scope":2474,"src":"5266:253:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"5840:83:9","statements":[{"expression":{"arguments":[{"id":1498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5886:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1502,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5902:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:9","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:9","memberName":"length","nodeType":"MemberAccess","src":"5896:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1497,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"5857:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1496,"id":1506,"nodeType":"Return","src":"5850:66:9"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"5525:215:9","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:9","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"input","nameLocation":"5781:5:9","nodeType":"VariableDeclaration","scope":1508,"src":"5767:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1489,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:9"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"success","nameLocation":"5816:7:9","nodeType":"VariableDeclaration","scope":1508,"src":"5811:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"value","nameLocation":"5833:5:9","nodeType":"VariableDeclaration","scope":1508,"src":"5825:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:9"},"scope":2474,"src":"5745:178:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1544,"nodeType":"Block","src":"6325:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6339:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1525,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6351:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1523,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:9","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:9","memberName":"length","nodeType":"MemberAccess","src":"6345:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"6368:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1530,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6376:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"6335:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1521,"id":1536,"nodeType":"Return","src":"6381:17:9"}},{"expression":{"arguments":[{"id":1539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6444:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1540,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"6451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1541,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6458:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1538,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6415:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1521,"id":1543,"nodeType":"Return","src":"6408:54:9"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"5929:238:9","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:9","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"input","nameLocation":"6217:5:9","nodeType":"VariableDeclaration","scope":1545,"src":"6203:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1510,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"begin","nameLocation":"6240:5:9","nodeType":"VariableDeclaration","scope":1545,"src":"6232:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"end","nameLocation":"6263:3:9","nodeType":"VariableDeclaration","scope":1545,"src":"6255:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:9"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"success","nameLocation":"6301:7:9","nodeType":"VariableDeclaration","scope":1545,"src":"6296:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1517,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"value","nameLocation":"6318:5:9","nodeType":"VariableDeclaration","scope":1545,"src":"6310:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:9"},"scope":2474,"src":"6172:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"6872:347:9","statements":[{"assignments":[1560],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:9","nodeType":"VariableDeclaration","scope":1614,"src":"6882:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1559,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1565,"initialValue":{"arguments":[{"id":1563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6910:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:9","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:9"},{"assignments":[1567],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"result","nameLocation":"6935:6:9","nodeType":"VariableDeclaration","scope":1614,"src":"6927:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1569,"initialValue":{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:9"},{"body":{"id":1608,"nodeType":"Block","src":"6993:189:9","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"chr","nameLocation":"7013:3:9","nodeType":"VariableDeclaration","scope":1608,"src":"7007:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1580,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1591,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1586,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7062:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"7070:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1585,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"7039:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1583,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:9","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1582,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"7019:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7092:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"IfStatement","src":"7088:30:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1558,"id":1598,"nodeType":"Return","src":"7101:17:9"}},{"expression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"7132:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1603,"nodeType":"ExpressionStatement","src":"7132:12:9"},{"expression":{"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"7158:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1605,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7168:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1607,"nodeType":"ExpressionStatement","src":"7158:13:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6979:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1575,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"6983:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"initializationExpression":{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"i","nameLocation":"6968:1:9","nodeType":"VariableDeclaration","scope":1609,"src":"6960:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1573,"initialValue":{"id":1572,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"6972:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:9","subExpression":{"id":1577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"6990:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"6988:3:9"},"nodeType":"ForStatement","src":"6955:227:9"},{"expression":{"components":[{"hexValue":"74727565","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"7205:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1558,"id":1613,"nodeType":"Return","src":"7191:21:9"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"6475:224:9","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:9","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"input","nameLocation":"6765:5:9","nodeType":"VariableDeclaration","scope":1615,"src":"6751:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1547,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"begin","nameLocation":"6788:5:9","nodeType":"VariableDeclaration","scope":1615,"src":"6780:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"end","nameLocation":"6811:3:9","nodeType":"VariableDeclaration","scope":1615,"src":"6803:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:9"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"success","nameLocation":"6848:7:9","nodeType":"VariableDeclaration","scope":1615,"src":"6843:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1554,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"value","nameLocation":"6865:5:9","nodeType":"VariableDeclaration","scope":1615,"src":"6857:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:9"},"scope":2474,"src":"6704:515:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1633,"nodeType":"Block","src":"7516:63:9","statements":[{"expression":{"arguments":[{"id":1624,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7542:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1628,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7558:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:9","typeDescriptions":{}}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:9","memberName":"length","nodeType":"MemberAccess","src":"7552:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1623,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1634,1665],"referencedDeclaration":1665,"src":"7533:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1622,"id":1632,"nodeType":"Return","src":"7526:46:9"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"7225:216:9","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:9","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"input","nameLocation":"7478:5:9","nodeType":"VariableDeclaration","scope":1634,"src":"7464:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1617,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:9"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"7508:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1620,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:9"},"scope":2474,"src":"7446:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"7984:151:9","statements":[{"assignments":[1647,1649],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"success","nameLocation":"8000:7:9","nodeType":"VariableDeclaration","scope":1664,"src":"7995:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1646,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"value","nameLocation":"8016:5:9","nodeType":"VariableDeclaration","scope":1664,"src":"8009:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1648,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1655,"initialValue":{"arguments":[{"id":1651,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"8037:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"8044:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1653,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8051:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1650,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1686,1728],"referencedDeclaration":1728,"src":"8025:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:9"},{"condition":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:9","subExpression":{"id":1656,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8070:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"8065:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1658,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8086:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1660,"nodeType":"RevertStatement","src":"8079:27:9"}},{"expression":{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"8123:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1645,"id":1663,"nodeType":"Return","src":"8116:12:9"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"7585:296:9","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:9","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"input","nameLocation":"7918:5:9","nodeType":"VariableDeclaration","scope":1665,"src":"7904:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1636,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"begin","nameLocation":"7933:5:9","nodeType":"VariableDeclaration","scope":1665,"src":"7925:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"end","nameLocation":"7948:3:9","nodeType":"VariableDeclaration","scope":1665,"src":"7940:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:9"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"7976:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1643,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:9"},"scope":2474,"src":"7886:249:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"8526:82:9","statements":[{"expression":{"arguments":[{"id":1676,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"8571:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1680,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"8587:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:9","typeDescriptions":{}}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:9","memberName":"length","nodeType":"MemberAccess","src":"8581:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1675,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"8543:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1674,"id":1684,"nodeType":"Return","src":"8536:65:9"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"8141:287:9","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:9","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"input","nameLocation":"8468:5:9","nodeType":"VariableDeclaration","scope":1686,"src":"8454:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1667,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:9"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"success","nameLocation":"8503:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"8498:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1670,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"value","nameLocation":"8519:5:9","nodeType":"VariableDeclaration","scope":1686,"src":"8512:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1672,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:9"},"scope":2474,"src":"8433:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1691,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:9","nodeType":"VariableDeclaration","scope":2474,"src":"8614:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1727,"nodeType":"Block","src":"9130:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9144:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1708,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"9156:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1706,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:9","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:9","memberName":"length","nodeType":"MemberAccess","src":"9150:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9173:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1713,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9181:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"IfStatement","src":"9140:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1704,"id":1719,"nodeType":"Return","src":"9186:17:9"}},{"expression":{"arguments":[{"id":1722,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"9248:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9255:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9262:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9220:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1704,"id":1726,"nodeType":"Return","src":"9213:53:9"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"8671:303:9","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:9","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"input","nameLocation":"9023:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"9009:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1693,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"begin","nameLocation":"9046:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"9038:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"end","nameLocation":"9069:3:9","nodeType":"VariableDeclaration","scope":1728,"src":"9061:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:9"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"success","nameLocation":"9107:7:9","nodeType":"VariableDeclaration","scope":1728,"src":"9102:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1700,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"value","nameLocation":"9123:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"9116:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1702,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:9"},"scope":2474,"src":"8979:294:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"9673:812:9","statements":[{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:9","nodeType":"VariableDeclaration","scope":1848,"src":"9683:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1742,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1748,"initialValue":{"arguments":[{"id":1746,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"9711:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1744,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:9","typeDescriptions":{}}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:9"},{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"sign","nameLocation":"9781:4:9","nodeType":"VariableDeclaration","scope":1848,"src":"9774:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1749,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1766,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"9788:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1752,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"9797:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1761,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"9845:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1762,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"9822:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1758,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:9","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:9","trueExpression":{"arguments":[{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1754,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:9","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:9"},{"assignments":[1768],"declarations":[{"constant":false,"id":1768,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:9","nodeType":"VariableDeclaration","scope":1848,"src":"9941:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1775,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"9961:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1770,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:9","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:9"},{"assignments":[1777],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:9","nodeType":"VariableDeclaration","scope":1848,"src":"9990:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1776,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1784,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"10010:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1779,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:9","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:9"},{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"offset","nameLocation":"10047:6:9","nodeType":"VariableDeclaration","scope":1848,"src":"10039:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1793,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"10057:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1788,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"10073:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"10056:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:9"},{"assignments":[1795,1797],"declarations":[{"constant":false,"id":1795,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:9","nodeType":"VariableDeclaration","scope":1848,"src":"10107:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1794,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:9","nodeType":"VariableDeclaration","scope":1848,"src":"10124:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"arguments":[{"id":1799,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"10157:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"10164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1801,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10172:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1803,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"10180:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1798,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1508,1545],"referencedDeclaration":1545,"src":"10144:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"10199:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"10213:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1808,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10224:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"10341:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1827,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"10355:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"10371:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1830,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10383:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1741,"id":1845,"nodeType":"Return","src":"10461:17:9"},"id":1846,"nodeType":"IfStatement","src":"10337:141:9","trueBody":{"id":1841,"nodeType":"Block","src":"10399:56:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1835,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:9","memberName":"min","nodeType":"MemberAccess","src":"10427:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1741,"id":1840,"nodeType":"Return","src":"10413:31:9"}]}},"id":1847,"nodeType":"IfStatement","src":"10195:283:9","trueBody":{"id":1825,"nodeType":"Block","src":"10240:91:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1812,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"10268:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1820,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"10310:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1818,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:9","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:9","trueExpression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:9","subExpression":{"arguments":[{"id":1815,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"10291:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1813,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:9","typeDescriptions":{}}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1741,"id":1824,"nodeType":"Return","src":"10254:66:9"}]}}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"9279:223:9","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:9","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"input","nameLocation":"9567:5:9","nodeType":"VariableDeclaration","scope":1849,"src":"9553:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1730,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"begin","nameLocation":"9590:5:9","nodeType":"VariableDeclaration","scope":1849,"src":"9582:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"end","nameLocation":"9613:3:9","nodeType":"VariableDeclaration","scope":1849,"src":"9605:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:9"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"success","nameLocation":"9650:7:9","nodeType":"VariableDeclaration","scope":1849,"src":"9645:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1737,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"value","nameLocation":"9666:5:9","nodeType":"VariableDeclaration","scope":1849,"src":"9659:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1739,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:9"},"scope":2474,"src":"9507:978:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1867,"nodeType":"Block","src":"10830:67:9","statements":[{"expression":{"arguments":[{"id":1858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"10860:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"10876:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1860,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:9","typeDescriptions":{}}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:9","memberName":"length","nodeType":"MemberAccess","src":"10870:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1857,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1868,1899],"referencedDeclaration":1899,"src":"10847:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1856,"id":1866,"nodeType":"Return","src":"10840:50:9"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"10491:259:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:9","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"input","nameLocation":"10791:5:9","nodeType":"VariableDeclaration","scope":1868,"src":"10777:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1851,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:9"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1868,"src":"10821:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:9"},"scope":2474,"src":"10755:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"11318:156:9","statements":[{"assignments":[1881,1883],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"success","nameLocation":"11334:7:9","nodeType":"VariableDeclaration","scope":1898,"src":"11329:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"value","nameLocation":"11351:5:9","nodeType":"VariableDeclaration","scope":1898,"src":"11343:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1889,"initialValue":{"arguments":[{"id":1885,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"11376:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1886,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"11383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1887,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"11390:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1884,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1920,1957],"referencedDeclaration":1957,"src":"11360:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:9"},{"condition":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:9","subExpression":{"id":1890,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11409:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"11404:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11425:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1894,"nodeType":"RevertStatement","src":"11418:27:9"}},{"expression":{"id":1896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"11462:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1897,"nodeType":"Return","src":"11455:12:9"}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"10903:307:9","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:9","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"input","nameLocation":"11251:5:9","nodeType":"VariableDeclaration","scope":1899,"src":"11237:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1870,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"begin","nameLocation":"11266:5:9","nodeType":"VariableDeclaration","scope":1899,"src":"11258:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"end","nameLocation":"11281:3:9","nodeType":"VariableDeclaration","scope":1899,"src":"11273:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:9"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"11309:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:9"},"scope":2474,"src":"11215:259:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"11801:86:9","statements":[{"expression":{"arguments":[{"id":1910,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"11850:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1914,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"11866:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:9","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:9","memberName":"length","nodeType":"MemberAccess","src":"11860:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1909,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"11818:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1908,"id":1918,"nodeType":"Return","src":"11811:69:9"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"11480:218:9","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:9","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"input","nameLocation":"11742:5:9","nodeType":"VariableDeclaration","scope":1920,"src":"11728:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:9"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"success","nameLocation":"11777:7:9","nodeType":"VariableDeclaration","scope":1920,"src":"11772:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1904,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"value","nameLocation":"11794:5:9","nodeType":"VariableDeclaration","scope":1920,"src":"11786:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:9"},"scope":2474,"src":"11703:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"12295:147:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"12309:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"12321:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:9","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:9","memberName":"length","nodeType":"MemberAccess","src":"12315:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1942,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"12346:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1949,"nodeType":"IfStatement","src":"12305:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1933,"id":1948,"nodeType":"Return","src":"12351:17:9"}},{"expression":{"arguments":[{"id":1951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"12417:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1952,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12424:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1953,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"12431:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1950,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"12385:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1933,"id":1955,"nodeType":"Return","src":"12378:57:9"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"11893:241:9","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:9","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"input","nameLocation":"12187:5:9","nodeType":"VariableDeclaration","scope":1957,"src":"12173:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1922,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"begin","nameLocation":"12210:5:9","nodeType":"VariableDeclaration","scope":1957,"src":"12202:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"end","nameLocation":"12233:3:9","nodeType":"VariableDeclaration","scope":1957,"src":"12225:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:9"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"success","nameLocation":"12271:7:9","nodeType":"VariableDeclaration","scope":1957,"src":"12266:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"value","nameLocation":"12288:5:9","nodeType":"VariableDeclaration","scope":1957,"src":"12280:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:9"},"scope":2474,"src":"12139:303:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"12851:881:9","statements":[{"assignments":[1972],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:9","nodeType":"VariableDeclaration","scope":2059,"src":"12861:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1975,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"12889:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:9","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:9"},{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:9","nodeType":"VariableDeclaration","scope":2059,"src":"12943:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1978,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1999,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"12961:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"12967:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1989,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"13011:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1990,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"13019:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12988:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1986,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:9","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1993,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:9","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:9"},{"assignments":[2001],"declarations":[{"constant":false,"id":2001,"mutability":"mutable","name":"offset","nameLocation":"13131:6:9","nodeType":"VariableDeclaration","scope":2059,"src":"13123:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2002,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"13140:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"13140:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:9"},{"assignments":[2009],"declarations":[{"constant":false,"id":2009,"mutability":"mutable","name":"result","nameLocation":"13181:6:9","nodeType":"VariableDeclaration","scope":2059,"src":"13173:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2011,"initialValue":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:9"},{"body":{"id":2053,"nodeType":"Block","src":"13248:447:9","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"chr","nameLocation":"13268:3:9","nodeType":"VariableDeclaration","scope":2053,"src":"13262:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2024,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2035,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2030,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"13317:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"13325:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"13294:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2027,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:9","typeDescriptions":{}}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2026,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"13274:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"13347:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"IfStatement","src":"13343:31:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1970,"id":2042,"nodeType":"Return","src":"13357:17:9"}},{"expression":{"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"13388:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2047,"nodeType":"ExpressionStatement","src":"13388:12:9"},{"id":2052,"nodeType":"UncheckedBlock","src":"13414:271:9","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"13657:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2049,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"13667:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2051,"nodeType":"ExpressionStatement","src":"13657:13:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"13234:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2019,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"13238:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"initializationExpression":{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"i","nameLocation":"13214:1:9","nodeType":"VariableDeclaration","scope":2054,"src":"13206:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2017,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"13218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2015,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"13226:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:9","subExpression":{"id":2021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"13245:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"13243:3:9"},"nodeType":"ForStatement","src":"13201:494:9"},{"expression":{"components":[{"hexValue":"74727565","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"13718:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1970,"id":2058,"nodeType":"Return","src":"13704:21:9"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"12448:227:9","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:9","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"input","nameLocation":"12744:5:9","nodeType":"VariableDeclaration","scope":2060,"src":"12730:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"begin","nameLocation":"12767:5:9","nodeType":"VariableDeclaration","scope":2060,"src":"12759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"end","nameLocation":"12790:3:9","nodeType":"VariableDeclaration","scope":2060,"src":"12782:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:9"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"success","nameLocation":"12827:7:9","nodeType":"VariableDeclaration","scope":2060,"src":"12822:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1966,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"value","nameLocation":"12844:5:9","nodeType":"VariableDeclaration","scope":2060,"src":"12836:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:9"},"scope":2474,"src":"12680:1052:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2078,"nodeType":"Block","src":"14030:67:9","statements":[{"expression":{"arguments":[{"id":2069,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"14060:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2073,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"14076:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2071,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:9","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:9","memberName":"length","nodeType":"MemberAccess","src":"14070:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2068,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2079,2110],"referencedDeclaration":2110,"src":"14047:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2067,"id":2077,"nodeType":"Return","src":"14040:50:9"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"13738:212:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:9","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"input","nameLocation":"13991:5:9","nodeType":"VariableDeclaration","scope":2079,"src":"13977:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2062,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:9"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"14021:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:9"},"scope":2474,"src":"13955:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"14470:165:9","statements":[{"assignments":[2092,2094],"declarations":[{"constant":false,"id":2092,"mutability":"mutable","name":"success","nameLocation":"14486:7:9","nodeType":"VariableDeclaration","scope":2109,"src":"14481:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2091,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"value","nameLocation":"14503:5:9","nodeType":"VariableDeclaration","scope":2109,"src":"14495:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2100,"initialValue":{"arguments":[{"id":2096,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"14528:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2097,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"14535:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2098,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"14542:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2131,2235],"referencedDeclaration":2235,"src":"14512:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:9"},{"condition":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:9","subExpression":{"id":2101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"14561:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2106,"nodeType":"IfStatement","src":"14556:50:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2103,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"14577:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2105,"nodeType":"RevertStatement","src":"14570:36:9"}},{"expression":{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"14623:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2090,"id":2108,"nodeType":"Return","src":"14616:12:9"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"14103:259:9","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:9","nodeType":"FunctionDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"input","nameLocation":"14403:5:9","nodeType":"VariableDeclaration","scope":2110,"src":"14389:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2081,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"begin","nameLocation":"14418:5:9","nodeType":"VariableDeclaration","scope":2110,"src":"14410:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"end","nameLocation":"14433:3:9","nodeType":"VariableDeclaration","scope":2110,"src":"14425:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:9"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"14461:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:9"},"scope":2474,"src":"14367:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2130,"nodeType":"Block","src":"14942:70:9","statements":[{"expression":{"arguments":[{"id":2121,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"14975:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"14991:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:9","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:9","memberName":"length","nodeType":"MemberAccess","src":"14985:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2131,2235],"referencedDeclaration":2235,"src":"14959:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2119,"id":2129,"nodeType":"Return","src":"14952:53:9"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"14641:198:9","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2131,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:9","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"input","nameLocation":"14883:5:9","nodeType":"VariableDeclaration","scope":2131,"src":"14869:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2112,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:9"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"success","nameLocation":"14918:7:9","nodeType":"VariableDeclaration","scope":2131,"src":"14913:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2115,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"14935:5:9","nodeType":"VariableDeclaration","scope":2131,"src":"14927:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:9"},"scope":2474,"src":"14844:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"15405:733:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"15419:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2148,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15431:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:9","typeDescriptions":{}}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:9","memberName":"length","nodeType":"MemberAccess","src":"15425:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"15448:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2153,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"15456:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"IfStatement","src":"15415:72:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:9","typeDescriptions":{}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2144,"id":2162,"nodeType":"Return","src":"15461:26:9"}},{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:9","nodeType":"VariableDeclaration","scope":2234,"src":"15498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2164,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2188,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"15516:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"15522:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15572:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2175,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:9","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2179,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"15580:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2174,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"15543:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2172,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:9","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2182,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:9","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:9"},{"assignments":[2190],"declarations":[{"constant":false,"id":2190,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:9","nodeType":"VariableDeclaration","scope":2234,"src":"15684:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2192,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"15714:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"15714:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"15801:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2200,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"15807:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2202,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"15816:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2232,"nodeType":"Block","src":"16081:51:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:9","typeDescriptions":{}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2144,"id":2231,"nodeType":"Return","src":"16095:26:9"}]},"id":2233,"nodeType":"IfStatement","src":"15797:335:9","trueBody":{"id":2224,"nodeType":"Block","src":"15832:243:9","statements":[{"assignments":[2205,2207],"declarations":[{"constant":false,"id":2205,"mutability":"mutable","name":"s","nameLocation":"15953:1:9","nodeType":"VariableDeclaration","scope":2224,"src":"15948:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2204,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"v","nameLocation":"15964:1:9","nodeType":"VariableDeclaration","scope":2224,"src":"15956:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"id":2209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"16001:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2210,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"16008:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2211,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"16015:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2208,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"15969:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:9"},{"expression":{"components":[{"id":2214,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"16041:1:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2219,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"16060:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2217,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:9","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:9","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2144,"id":2223,"nodeType":"Return","src":"16033:31:9"}]}}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"15018:226:9","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:9","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"input","nameLocation":"15297:5:9","nodeType":"VariableDeclaration","scope":2235,"src":"15283:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2133,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"begin","nameLocation":"15320:5:9","nodeType":"VariableDeclaration","scope":2235,"src":"15312:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"end","nameLocation":"15343:3:9","nodeType":"VariableDeclaration","scope":2235,"src":"15335:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:9"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"success","nameLocation":"15381:7:9","nodeType":"VariableDeclaration","scope":2235,"src":"15376:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2140,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"value","nameLocation":"15398:5:9","nodeType":"VariableDeclaration","scope":2235,"src":"15390:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:9"},"scope":2474,"src":"15249:889:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"16207:461:9","statements":[{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"16223:5:9","nodeType":"VariableDeclaration","scope":2294,"src":"16217:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2242,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2248,"initialValue":{"arguments":[{"id":2246,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"16237:3:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2244,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:9","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:9"},{"id":2291,"nodeType":"UncheckedBlock","src":"16401:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16429:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:9","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16443:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:9","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16489:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16503:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:9","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16550:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16564:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2283,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:9","memberName":"max","nodeType":"MemberAccess","src":"16613:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2241,"id":2287,"nodeType":"Return","src":"16606:22:9"},"id":2288,"nodeType":"IfStatement","src":"16546:82:9","trueBody":{"expression":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16576:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:9","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2281,"nodeType":"ExpressionStatement","src":"16576:11:9"}},"id":2289,"nodeType":"IfStatement","src":"16485:143:9","trueBody":{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16516:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:9","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2270,"nodeType":"ExpressionStatement","src":"16516:11:9"}},"id":2290,"nodeType":"IfStatement","src":"16425:203:9","trueBody":{"expression":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16455:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2259,"nodeType":"ExpressionStatement","src":"16455:11:9"}}]},{"expression":{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"16656:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2241,"id":2293,"nodeType":"Return","src":"16649:12:9"}]},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:9","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"chr","nameLocation":"16173:3:9","nodeType":"VariableDeclaration","scope":2295,"src":"16166:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2236,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:9"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"16200:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2239,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:9"},"scope":2474,"src":"16144:524:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2460,"nodeType":"Block","src":"17334:1331:9","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:9","nodeType":"VariableDeclaration","scope":2460,"src":"17344:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2309,"initialValue":{"arguments":[{"id":2307,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"17372:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2305,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:9","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:9"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"output","nameLocation":"17401:6:9","nodeType":"VariableDeclaration","scope":2460,"src":"17388:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2310,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2315,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"17424:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:9","memberName":"length","nodeType":"MemberAccess","src":"17424:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:9"},{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:9","nodeType":"VariableDeclaration","scope":2460,"src":"17471:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"hexValue":"30","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:9"},{"body":{"id":2452,"nodeType":"Block","src":"17546:854:9","statements":[{"assignments":[2335],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"char","nameLocation":"17567:4:9","nodeType":"VariableDeclaration","scope":2452,"src":"17560:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2334,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"arguments":[{"id":2339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"17604:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"17612:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2338,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"17581:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2336,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:9","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:9"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"17635:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2348,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"17670:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2346,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:9","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2450,"nodeType":"Block","src":"18328:62:9","statements":[{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2443,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"18346:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2446,"indexExpression":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:9","subExpression":{"id":2444,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"18353:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2447,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"18371:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2449,"nodeType":"ExpressionStatement","src":"18346:29:9"}]},"id":2451,"nodeType":"IfStatement","src":"17629:761:9","trueBody":{"id":2442,"nodeType":"Block","src":"17685:637:9","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2357,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"17703:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2360,"indexExpression":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:9","subExpression":{"id":2358,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"17710:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2363,"nodeType":"ExpressionStatement","src":"17703:29:9"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2364,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"17754:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"17823:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"17892:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"17961:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"18030:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"18099:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"18169:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"18165:143:9","trueBody":{"id":2434,"nodeType":"Block","src":"18183:125:9","statements":[{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2427,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"18261:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2430,"indexExpression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:9","subExpression":{"id":2428,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"18268:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2433,"nodeType":"ExpressionStatement","src":"18261:28:9"}]}},"id":2436,"nodeType":"IfStatement","src":"18095:213:9","trueBody":{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2417,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"18113:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2420,"indexExpression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:9","subExpression":{"id":2418,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"18120:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2423,"nodeType":"ExpressionStatement","src":"18113:29:9"}},"id":2437,"nodeType":"IfStatement","src":"18026:282:9","trueBody":{"expression":{"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2407,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"18044:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2410,"indexExpression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:9","subExpression":{"id":2408,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"18051:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2413,"nodeType":"ExpressionStatement","src":"18044:28:9"}},"id":2438,"nodeType":"IfStatement","src":"17957:351:9","trueBody":{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2397,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"17975:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2400,"indexExpression":{"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:9","subExpression":{"id":2398,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"17982:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2403,"nodeType":"ExpressionStatement","src":"17975:28:9"}},"id":2439,"nodeType":"IfStatement","src":"17888:420:9","trueBody":{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2387,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"17906:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2390,"indexExpression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:9","subExpression":{"id":2388,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"17913:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2393,"nodeType":"ExpressionStatement","src":"17906:28:9"}},"id":2440,"nodeType":"IfStatement","src":"17819:489:9","trueBody":{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2377,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"17837:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2380,"indexExpression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:9","subExpression":{"id":2378,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"17844:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2383,"nodeType":"ExpressionStatement","src":"17837:28:9"}},"id":2441,"nodeType":"IfStatement","src":"17750:558:9","trueBody":{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2367,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"17768:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2370,"indexExpression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:9","subExpression":{"id":2368,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"17775:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2373,"nodeType":"ExpressionStatement","src":"17768:28:9"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"17522:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2328,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"17526:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:9","memberName":"length","nodeType":"MemberAccess","src":"17526:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"initializationExpression":{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"i","nameLocation":"17519:1:9","nodeType":"VariableDeclaration","scope":2453,"src":"17511:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2326,"nodeType":"VariableDeclarationStatement","src":"17511:9:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:9","subExpression":{"id":2331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"17543:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"17541:3:9"},"nodeType":"ForStatement","src":"17506:894:9"},{"AST":{"nativeSrc":"18498:129:9","nodeType":"YulBlock","src":"18498:129:9","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:9","nodeType":"YulIdentifier","src":"18519:6:9"},{"name":"outputLength","nativeSrc":"18527:12:9","nodeType":"YulIdentifier","src":"18527:12:9"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:9","nodeType":"YulIdentifier","src":"18512:6:9"},"nativeSrc":"18512:28:9","nodeType":"YulFunctionCall","src":"18512:28:9"},"nativeSrc":"18512:28:9","nodeType":"YulExpressionStatement","src":"18512:28:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:9","nodeType":"YulLiteral","src":"18560:4:9","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:9","nodeType":"YulIdentifier","src":"18570:6:9"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:9","nodeType":"YulLiteral","src":"18582:1:9","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:9","nodeType":"YulLiteral","src":"18589:1:9","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:9","nodeType":"YulIdentifier","src":"18596:12:9"},{"kind":"number","nativeSrc":"18610:2:9","nodeType":"YulLiteral","src":"18610:2:9","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:9","nodeType":"YulIdentifier","src":"18592:3:9"},"nativeSrc":"18592:21:9","nodeType":"YulFunctionCall","src":"18592:21:9"}],"functionName":{"name":"shr","nativeSrc":"18585:3:9","nodeType":"YulIdentifier","src":"18585:3:9"},"nativeSrc":"18585:29:9","nodeType":"YulFunctionCall","src":"18585:29:9"}],"functionName":{"name":"shl","nativeSrc":"18578:3:9","nodeType":"YulIdentifier","src":"18578:3:9"},"nativeSrc":"18578:37:9","nodeType":"YulFunctionCall","src":"18578:37:9"}],"functionName":{"name":"add","nativeSrc":"18566:3:9","nodeType":"YulIdentifier","src":"18566:3:9"},"nativeSrc":"18566:50:9","nodeType":"YulFunctionCall","src":"18566:50:9"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:9","nodeType":"YulIdentifier","src":"18553:6:9"},"nativeSrc":"18553:64:9","nodeType":"YulFunctionCall","src":"18553:64:9"},"nativeSrc":"18553:64:9","nodeType":"YulExpressionStatement","src":"18553:64:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2311,"isOffset":false,"isSlot":false,"src":"18519:6:9","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"18570:6:9","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"18527:12:9","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"18596:12:9","valueSize":1}],"flags":["memory-safe"],"id":2454,"nodeType":"InlineAssembly","src":"18473:154:9"},{"expression":{"arguments":[{"id":2457,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"18651:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2455,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:9","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2302,"id":2459,"nodeType":"Return","src":"18637:21:9"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"16674:576:9","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:9","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"input","nameLocation":"17289:5:9","nodeType":"VariableDeclaration","scope":2461,"src":"17275:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2297,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:9"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2461,"src":"17319:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:9"},"scope":2474,"src":"17255:1410:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"19050:225:9","statements":[{"AST":{"nativeSrc":"19199:70:9","nodeType":"YulBlock","src":"19199:70:9","statements":[{"nativeSrc":"19213:46:9","nodeType":"YulAssignment","src":"19213:46:9","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:9","nodeType":"YulIdentifier","src":"19232:6:9"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:9","nodeType":"YulLiteral","src":"19244:4:9","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:9","nodeType":"YulIdentifier","src":"19250:6:9"}],"functionName":{"name":"add","nativeSrc":"19240:3:9","nodeType":"YulIdentifier","src":"19240:3:9"},"nativeSrc":"19240:17:9","nodeType":"YulFunctionCall","src":"19240:17:9"}],"functionName":{"name":"add","nativeSrc":"19228:3:9","nodeType":"YulIdentifier","src":"19228:3:9"},"nativeSrc":"19228:30:9","nodeType":"YulFunctionCall","src":"19228:30:9"}],"functionName":{"name":"mload","nativeSrc":"19222:5:9","nodeType":"YulIdentifier","src":"19222:5:9"},"nativeSrc":"19222:37:9","nodeType":"YulFunctionCall","src":"19222:37:9"},"variableNames":[{"name":"value","nativeSrc":"19213:5:9","nodeType":"YulIdentifier","src":"19213:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2464,"isOffset":false,"isSlot":false,"src":"19232:6:9","valueSize":1},{"declaration":2466,"isOffset":false,"isSlot":false,"src":"19250:6:9","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"19213:5:9","valueSize":1}],"flags":["memory-safe"],"id":2471,"nodeType":"InlineAssembly","src":"19174:95:9"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"18671:268:9","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:9","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:9","nodeType":"VariableDeclaration","scope":2473,"src":"18976:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2463,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"offset","nameLocation":"19005:6:9","nodeType":"VariableDeclaration","scope":2473,"src":"18997:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:9"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"19043:5:9","nodeType":"VariableDeclaration","scope":2473,"src":"19035:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:9"},"scope":2474,"src":"18944:331:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2475,"src":"297:18980:9","usedErrors":[1132,1135,1138],"usedEvents":[]}],"src":"101:19177:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2498],"IERC165":[2510]},"id":2499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2476,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2499,"sourceUnit":2511,"src":"140:38:10","symbolAliases":[{"foreign":{"id":2477,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2480,"name":"IERC165","nameLocations":["688:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2510,"src":"688:7:10"},"id":2481,"nodeType":"InheritanceSpecifier","src":"688:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"180:479:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2498,"linearizedBaseContracts":[2498,2510],"name":"ERC165","nameLocation":"678:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2509],"body":{"id":2496,"nodeType":"Block","src":"845:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"862:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2491,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"882:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2510_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2510_$","typeString":"type(contract IERC165)"}],"id":2490,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2510","typeString":"type(contract IERC165)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2488,"id":2495,"nodeType":"Return","src":"855:47:10"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"702:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:10","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:10","nodeType":"VariableDeclaration","scope":2497,"src":"790:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2483,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:10"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"839:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2486,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:10"},"scope":2498,"src":"763:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2499,"src":"660:251:10","usedErrors":[],"usedEvents":[]}],"src":"114:798:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2510]},"id":2511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2500,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"141:280:11","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2510,"linearizedBaseContracts":[2510],"name":"IERC165","nameLocation":"432:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"446:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2509,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:11","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:11","nodeType":"VariableDeclaration","scope":2509,"src":"818:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2503,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:11"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"861:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:11"},"scope":2510,"src":"791:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2511,"src":"422:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:755:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4131],"Panic":[895],"SafeCast":[5896]},"id":4132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2512,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":896,"src":"129:35:12","symbolAliases":[{"foreign":{"id":2513,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":5897,"src":"165:40:12","symbolAliases":[{"foreign":{"id":2515,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4131,"linearizedBaseContracts":[4131],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2522,"members":[{"id":2518,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":2519,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":2520,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":2521,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":2535,"nodeType":"Block","src":"731:112:12","statements":[{"AST":{"nativeSrc":"766:71:12","nodeType":"YulBlock","src":"766:71:12","statements":[{"nativeSrc":"780:16:12","nodeType":"YulAssignment","src":"780:16:12","value":{"arguments":[{"name":"a","nativeSrc":"791:1:12","nodeType":"YulIdentifier","src":"791:1:12"},{"name":"b","nativeSrc":"794:1:12","nodeType":"YulIdentifier","src":"794:1:12"}],"functionName":{"name":"add","nativeSrc":"787:3:12","nodeType":"YulIdentifier","src":"787:3:12"},"nativeSrc":"787:9:12","nodeType":"YulFunctionCall","src":"787:9:12"},"variableNames":[{"name":"low","nativeSrc":"780:3:12","nodeType":"YulIdentifier","src":"780:3:12"}]},{"nativeSrc":"809:18:12","nodeType":"YulAssignment","src":"809:18:12","value":{"arguments":[{"name":"low","nativeSrc":"820:3:12","nodeType":"YulIdentifier","src":"820:3:12"},{"name":"a","nativeSrc":"825:1:12","nodeType":"YulIdentifier","src":"825:1:12"}],"functionName":{"name":"lt","nativeSrc":"817:2:12","nodeType":"YulIdentifier","src":"817:2:12"},"nativeSrc":"817:10:12","nodeType":"YulFunctionCall","src":"817:10:12"},"variableNames":[{"name":"high","nativeSrc":"809:4:12","nodeType":"YulIdentifier","src":"809:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2525,"isOffset":false,"isSlot":false,"src":"791:1:12","valueSize":1},{"declaration":2525,"isOffset":false,"isSlot":false,"src":"825:1:12","valueSize":1},{"declaration":2527,"isOffset":false,"isSlot":false,"src":"794:1:12","valueSize":1},{"declaration":2530,"isOffset":false,"isSlot":false,"src":"809:4:12","valueSize":1},{"declaration":2532,"isOffset":false,"isSlot":false,"src":"780:3:12","valueSize":1},{"declaration":2532,"isOffset":false,"isSlot":false,"src":"820:3:12","valueSize":1}],"flags":["memory-safe"],"id":2534,"nodeType":"InlineAssembly","src":"741:96:12"}]},"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"475:163:12","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:12","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"a","nameLocation":"667:1:12","nodeType":"VariableDeclaration","scope":2536,"src":"659:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"b","nameLocation":"678:1:12","nodeType":"VariableDeclaration","scope":2536,"src":"670:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:12"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"high","nameLocation":"712:4:12","nodeType":"VariableDeclaration","scope":2536,"src":"704:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"low","nameLocation":"726:3:12","nodeType":"VariableDeclaration","scope":2536,"src":"718:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:12"},"scope":4131,"src":"643:200:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2549,"nodeType":"Block","src":"1115:462:12","statements":[{"AST":{"nativeSrc":"1437:134:12","nodeType":"YulBlock","src":"1437:134:12","statements":[{"nativeSrc":"1451:30:12","nodeType":"YulVariableDeclaration","src":"1451:30:12","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:12","nodeType":"YulIdentifier","src":"1468:1:12"},{"name":"b","nativeSrc":"1471:1:12","nodeType":"YulIdentifier","src":"1471:1:12"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:12","nodeType":"YulLiteral","src":"1478:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:12","nodeType":"YulIdentifier","src":"1474:3:12"},"nativeSrc":"1474:6:12","nodeType":"YulFunctionCall","src":"1474:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:12","nodeType":"YulIdentifier","src":"1461:6:12"},"nativeSrc":"1461:20:12","nodeType":"YulFunctionCall","src":"1461:20:12"},"variables":[{"name":"mm","nativeSrc":"1455:2:12","nodeType":"YulTypedName","src":"1455:2:12","type":""}]},{"nativeSrc":"1494:16:12","nodeType":"YulAssignment","src":"1494:16:12","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:12","nodeType":"YulIdentifier","src":"1505:1:12"},{"name":"b","nativeSrc":"1508:1:12","nodeType":"YulIdentifier","src":"1508:1:12"}],"functionName":{"name":"mul","nativeSrc":"1501:3:12","nodeType":"YulIdentifier","src":"1501:3:12"},"nativeSrc":"1501:9:12","nodeType":"YulFunctionCall","src":"1501:9:12"},"variableNames":[{"name":"low","nativeSrc":"1494:3:12","nodeType":"YulIdentifier","src":"1494:3:12"}]},{"nativeSrc":"1523:38:12","nodeType":"YulAssignment","src":"1523:38:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:12","nodeType":"YulIdentifier","src":"1539:2:12"},{"name":"low","nativeSrc":"1543:3:12","nodeType":"YulIdentifier","src":"1543:3:12"}],"functionName":{"name":"sub","nativeSrc":"1535:3:12","nodeType":"YulIdentifier","src":"1535:3:12"},"nativeSrc":"1535:12:12","nodeType":"YulFunctionCall","src":"1535:12:12"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:12","nodeType":"YulIdentifier","src":"1552:2:12"},{"name":"low","nativeSrc":"1556:3:12","nodeType":"YulIdentifier","src":"1556:3:12"}],"functionName":{"name":"lt","nativeSrc":"1549:2:12","nodeType":"YulIdentifier","src":"1549:2:12"},"nativeSrc":"1549:11:12","nodeType":"YulFunctionCall","src":"1549:11:12"}],"functionName":{"name":"sub","nativeSrc":"1531:3:12","nodeType":"YulIdentifier","src":"1531:3:12"},"nativeSrc":"1531:30:12","nodeType":"YulFunctionCall","src":"1531:30:12"},"variableNames":[{"name":"high","nativeSrc":"1523:4:12","nodeType":"YulIdentifier","src":"1523:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2539,"isOffset":false,"isSlot":false,"src":"1468:1:12","valueSize":1},{"declaration":2539,"isOffset":false,"isSlot":false,"src":"1505:1:12","valueSize":1},{"declaration":2541,"isOffset":false,"isSlot":false,"src":"1471:1:12","valueSize":1},{"declaration":2541,"isOffset":false,"isSlot":false,"src":"1508:1:12","valueSize":1},{"declaration":2544,"isOffset":false,"isSlot":false,"src":"1523:4:12","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"1494:3:12","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"1543:3:12","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"1556:3:12","valueSize":1}],"flags":["memory-safe"],"id":2548,"nodeType":"InlineAssembly","src":"1412:159:12"}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"849:173:12","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:12","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"a","nameLocation":"1051:1:12","nodeType":"VariableDeclaration","scope":2550,"src":"1043:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"b","nameLocation":"1062:1:12","nodeType":"VariableDeclaration","scope":2550,"src":"1054:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:12"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"high","nameLocation":"1096:4:12","nodeType":"VariableDeclaration","scope":2550,"src":"1088:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"low","nameLocation":"1110:3:12","nodeType":"VariableDeclaration","scope":2550,"src":"1102:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:12"},"scope":4131,"src":"1027:550:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2584,"nodeType":"Block","src":"1784:149:12","statements":[{"id":2583,"nodeType":"UncheckedBlock","src":"1794:133:12","statements":[{"assignments":[2563],"declarations":[{"constant":false,"id":2563,"mutability":"mutable","name":"c","nameLocation":"1826:1:12","nodeType":"VariableDeclaration","scope":2583,"src":"1818:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2567,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1830:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2565,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"1834:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:12"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1849:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1859:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1864:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"nodeType":"ExpressionStatement","src":"1849:16:12"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1879:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"1892:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"1892:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"1879:37:12"}]}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"1583:105:12","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:12","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"a","nameLocation":"1717:1:12","nodeType":"VariableDeclaration","scope":2585,"src":"1709:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"b","nameLocation":"1728:1:12","nodeType":"VariableDeclaration","scope":2585,"src":"1720:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"success","nameLocation":"1759:7:12","nodeType":"VariableDeclaration","scope":2585,"src":"1754:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2557,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"result","nameLocation":"1776:6:12","nodeType":"VariableDeclaration","scope":2585,"src":"1768:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:12"},"scope":4131,"src":"1693:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"2143:149:12","statements":[{"id":2618,"nodeType":"UncheckedBlock","src":"2153:133:12","statements":[{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"c","nameLocation":"2185:1:12","nodeType":"VariableDeclaration","scope":2618,"src":"2177:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"2189:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"2193:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:12"},{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2603,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2208:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"2218:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"2223:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2608,"nodeType":"ExpressionStatement","src":"2208:16:12"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2238:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"2247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2267:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"2251:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"2251:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"2238:37:12"}]}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1939:108:12","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:12","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"a","nameLocation":"2076:1:12","nodeType":"VariableDeclaration","scope":2620,"src":"2068:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"b","nameLocation":"2087:1:12","nodeType":"VariableDeclaration","scope":2620,"src":"2079:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:12"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"2118:7:12","nodeType":"VariableDeclaration","scope":2620,"src":"2113:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"result","nameLocation":"2135:6:12","nodeType":"VariableDeclaration","scope":2620,"src":"2127:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:12"},"scope":4131,"src":"2052:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"2505:391:12","statements":[{"id":2648,"nodeType":"UncheckedBlock","src":"2515:375:12","statements":[{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"c","nameLocation":"2547:1:12","nodeType":"VariableDeclaration","scope":2648,"src":"2539:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"2555:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:12"},{"AST":{"nativeSrc":"2595:188:12","nodeType":"YulBlock","src":"2595:188:12","statements":[{"nativeSrc":"2727:42:12","nodeType":"YulAssignment","src":"2727:42:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:12","nodeType":"YulIdentifier","src":"2748:1:12"},{"name":"a","nativeSrc":"2751:1:12","nodeType":"YulIdentifier","src":"2751:1:12"}],"functionName":{"name":"div","nativeSrc":"2744:3:12","nodeType":"YulIdentifier","src":"2744:3:12"},"nativeSrc":"2744:9:12","nodeType":"YulFunctionCall","src":"2744:9:12"},{"name":"b","nativeSrc":"2755:1:12","nodeType":"YulIdentifier","src":"2755:1:12"}],"functionName":{"name":"eq","nativeSrc":"2741:2:12","nodeType":"YulIdentifier","src":"2741:2:12"},"nativeSrc":"2741:16:12","nodeType":"YulFunctionCall","src":"2741:16:12"},{"arguments":[{"name":"a","nativeSrc":"2766:1:12","nodeType":"YulIdentifier","src":"2766:1:12"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:12","nodeType":"YulIdentifier","src":"2759:6:12"},"nativeSrc":"2759:9:12","nodeType":"YulFunctionCall","src":"2759:9:12"}],"functionName":{"name":"or","nativeSrc":"2738:2:12","nodeType":"YulIdentifier","src":"2738:2:12"},"nativeSrc":"2738:31:12","nodeType":"YulFunctionCall","src":"2738:31:12"},"variableNames":[{"name":"success","nativeSrc":"2727:7:12","nodeType":"YulIdentifier","src":"2727:7:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2623,"isOffset":false,"isSlot":false,"src":"2751:1:12","valueSize":1},{"declaration":2623,"isOffset":false,"isSlot":false,"src":"2766:1:12","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"2755:1:12","valueSize":1},{"declaration":2633,"isOffset":false,"isSlot":false,"src":"2748:1:12","valueSize":1},{"declaration":2628,"isOffset":false,"isSlot":false,"src":"2727:7:12","valueSize":1}],"flags":["memory-safe"],"id":2638,"nodeType":"InlineAssembly","src":"2570:213:12"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"2842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2851:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2643,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"2871:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2641,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"2855:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"2855:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"2842:37:12"}]}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"2298:111:12","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:12","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"a","nameLocation":"2438:1:12","nodeType":"VariableDeclaration","scope":2650,"src":"2430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"b","nameLocation":"2449:1:12","nodeType":"VariableDeclaration","scope":2650,"src":"2441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:12"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"success","nameLocation":"2480:7:12","nodeType":"VariableDeclaration","scope":2650,"src":"2475:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2627,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"result","nameLocation":"2497:6:12","nodeType":"VariableDeclaration","scope":2650,"src":"2489:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:12"},"scope":4131,"src":"2414:482:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2670,"nodeType":"Block","src":"3111:231:12","statements":[{"id":2669,"nodeType":"UncheckedBlock","src":"3121:215:12","statements":[{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2662,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"3145:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"3155:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"nodeType":"ExpressionStatement","src":"3145:15:12"},{"AST":{"nativeSrc":"3199:127:12","nodeType":"YulBlock","src":"3199:127:12","statements":[{"nativeSrc":"3293:19:12","nodeType":"YulAssignment","src":"3293:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:12","nodeType":"YulIdentifier","src":"3307:1:12"},{"name":"b","nativeSrc":"3310:1:12","nodeType":"YulIdentifier","src":"3310:1:12"}],"functionName":{"name":"div","nativeSrc":"3303:3:12","nodeType":"YulIdentifier","src":"3303:3:12"},"nativeSrc":"3303:9:12","nodeType":"YulFunctionCall","src":"3303:9:12"},"variableNames":[{"name":"result","nativeSrc":"3293:6:12","nodeType":"YulIdentifier","src":"3293:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2653,"isOffset":false,"isSlot":false,"src":"3307:1:12","valueSize":1},{"declaration":2655,"isOffset":false,"isSlot":false,"src":"3310:1:12","valueSize":1},{"declaration":2660,"isOffset":false,"isSlot":false,"src":"3293:6:12","valueSize":1}],"flags":["memory-safe"],"id":2668,"nodeType":"InlineAssembly","src":"3174:152:12"}]}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"2902:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2671,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:12","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"a","nameLocation":"3044:1:12","nodeType":"VariableDeclaration","scope":2671,"src":"3036:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"b","nameLocation":"3055:1:12","nodeType":"VariableDeclaration","scope":2671,"src":"3047:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:12"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"success","nameLocation":"3086:7:12","nodeType":"VariableDeclaration","scope":2671,"src":"3081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2657,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"result","nameLocation":"3103:6:12","nodeType":"VariableDeclaration","scope":2671,"src":"3095:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:12"},"scope":4131,"src":"3020:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2691,"nodeType":"Block","src":"3567:231:12","statements":[{"id":2690,"nodeType":"UncheckedBlock","src":"3577:215:12","statements":[{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2683,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3601:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3611:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2688,"nodeType":"ExpressionStatement","src":"3601:15:12"},{"AST":{"nativeSrc":"3655:127:12","nodeType":"YulBlock","src":"3655:127:12","statements":[{"nativeSrc":"3749:19:12","nodeType":"YulAssignment","src":"3749:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:12","nodeType":"YulIdentifier","src":"3763:1:12"},{"name":"b","nativeSrc":"3766:1:12","nodeType":"YulIdentifier","src":"3766:1:12"}],"functionName":{"name":"mod","nativeSrc":"3759:3:12","nodeType":"YulIdentifier","src":"3759:3:12"},"nativeSrc":"3759:9:12","nodeType":"YulFunctionCall","src":"3759:9:12"},"variableNames":[{"name":"result","nativeSrc":"3749:6:12","nodeType":"YulIdentifier","src":"3749:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2674,"isOffset":false,"isSlot":false,"src":"3763:1:12","valueSize":1},{"declaration":2676,"isOffset":false,"isSlot":false,"src":"3766:1:12","valueSize":1},{"declaration":2681,"isOffset":false,"isSlot":false,"src":"3749:6:12","valueSize":1}],"flags":["memory-safe"],"id":2689,"nodeType":"InlineAssembly","src":"3630:152:12"}]}]},"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"3348:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2692,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:12","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"a","nameLocation":"3500:1:12","nodeType":"VariableDeclaration","scope":2692,"src":"3492:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"b","nameLocation":"3511:1:12","nodeType":"VariableDeclaration","scope":2692,"src":"3503:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:12"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"success","nameLocation":"3542:7:12","nodeType":"VariableDeclaration","scope":2692,"src":"3537:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2678,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"result","nameLocation":"3559:6:12","nodeType":"VariableDeclaration","scope":2692,"src":"3551:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:12"},"scope":4131,"src":"3476:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2721,"nodeType":"Block","src":"3989:122:12","statements":[{"assignments":[2703,2705],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"success","nameLocation":"4005:7:12","nodeType":"VariableDeclaration","scope":2721,"src":"4000:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2702,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"result","nameLocation":"4022:6:12","nodeType":"VariableDeclaration","scope":2721,"src":"4014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2710,"initialValue":{"arguments":[{"id":2707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4039:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"4042:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2706,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4032:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:12"},{"expression":{"arguments":[{"id":2712,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4069:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"4078:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:12","memberName":"max","nodeType":"MemberAccess","src":"4086:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"4061:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2701,"id":2720,"nodeType":"Return","src":"4054:50:12"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"3804:103:12","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2722,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:12","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"a","nameLocation":"3943:1:12","nodeType":"VariableDeclaration","scope":2722,"src":"3935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"b","nameLocation":"3954:1:12","nodeType":"VariableDeclaration","scope":2722,"src":"3946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:12"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2722,"src":"3980:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:12"},"scope":4131,"src":"3912:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"4294:73:12","statements":[{"assignments":[null,2733],"declarations":[null,{"constant":false,"id":2733,"mutability":"mutable","name":"result","nameLocation":"4315:6:12","nodeType":"VariableDeclaration","scope":2741,"src":"4307:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"id":2735,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4332:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2736,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"4335:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2734,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"4325:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:12"},{"expression":{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2740,"nodeType":"Return","src":"4347:13:12"}]},"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"4117:95:12","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:12","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"a","nameLocation":"4248:1:12","nodeType":"VariableDeclaration","scope":2742,"src":"4240:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"b","nameLocation":"4259:1:12","nodeType":"VariableDeclaration","scope":2742,"src":"4251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:12"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2742,"src":"4285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:12"},"scope":4131,"src":"4217:150:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"4564:122:12","statements":[{"assignments":[2753,2755],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"success","nameLocation":"4580:7:12","nodeType":"VariableDeclaration","scope":2771,"src":"4575:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2752,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"result","nameLocation":"4597:6:12","nodeType":"VariableDeclaration","scope":2771,"src":"4589:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"arguments":[{"id":2757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"4614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"4617:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2756,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:12"},{"expression":{"arguments":[{"id":2762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"4653:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:12","memberName":"max","nodeType":"MemberAccess","src":"4661:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2761,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"4636:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2751,"id":2770,"nodeType":"Return","src":"4629:50:12"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"4373:109:12","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:12","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"a","nameLocation":"4518:1:12","nodeType":"VariableDeclaration","scope":2772,"src":"4510:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"b","nameLocation":"4529:1:12","nodeType":"VariableDeclaration","scope":2772,"src":"4521:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:12"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"4555:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:12"},"scope":4131,"src":"4487:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2798,"nodeType":"Block","src":"5158:207:12","statements":[{"id":2797,"nodeType":"UncheckedBlock","src":"5168:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"5306:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"5312:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"5316:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2791,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"5337:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"5321:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"5321:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2783,"id":2796,"nodeType":"Return","src":"5299:49:12"}]}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"4692:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:12","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"condition","nameLocation":"5093:9:12","nodeType":"VariableDeclaration","scope":2799,"src":"5088:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2774,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"a","nameLocation":"5112:1:12","nodeType":"VariableDeclaration","scope":2799,"src":"5104:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"b","nameLocation":"5123:1:12","nodeType":"VariableDeclaration","scope":2799,"src":"5115:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:12"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"5149:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:12"},"scope":4131,"src":"5071:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"5502:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"5527:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"5531:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"5534:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"5537:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5519:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2808,"id":2816,"nodeType":"Return","src":"5512:27:12"}]},"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"5371:59:12","text":" @dev Returns the largest of two numbers."},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:12","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"a","nameLocation":"5456:1:12","nodeType":"VariableDeclaration","scope":2818,"src":"5448:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"b","nameLocation":"5467:1:12","nodeType":"VariableDeclaration","scope":2818,"src":"5459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:12"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"5493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:12"},"scope":4131,"src":"5435:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2836,"nodeType":"Block","src":"5684:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"5709:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2830,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5713:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"5716:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"5719:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2828,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5701:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2827,"id":2835,"nodeType":"Return","src":"5694:27:12"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"5552:60:12","text":" @dev Returns the smallest of two numbers."},"id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:12","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"a","nameLocation":"5638:1:12","nodeType":"VariableDeclaration","scope":2837,"src":"5630:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"b","nameLocation":"5649:1:12","nodeType":"VariableDeclaration","scope":2837,"src":"5641:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:12"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2837,"src":"5675:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:12"},"scope":4131,"src":"5617:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2859,"nodeType":"Block","src":"5912:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"5967:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"5971:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"5977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"5981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2846,"id":2858,"nodeType":"Return","src":"5959:28:12"}]},"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"5734:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:12","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"a","nameLocation":"5866:1:12","nodeType":"VariableDeclaration","scope":2860,"src":"5858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"b","nameLocation":"5877:1:12","nodeType":"VariableDeclaration","scope":2860,"src":"5869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:12"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"5903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:12"},"scope":4131,"src":"5841:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"6286:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"6300:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2881,"nodeType":"IfStatement","src":"6296:150:12","trueBody":{"id":2880,"nodeType":"Block","src":"6308:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":2876,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6412:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":862,"src":"6412:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2873,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6400:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":894,"src":"6400:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"6400:35:12"}]}},{"id":2899,"nodeType":"UncheckedBlock","src":"6829:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"6876:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"6860:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"6860:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"6887:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"6896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2869,"id":2898,"nodeType":"Return","src":"6853:49:12"}]}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"6000:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:12","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"a","nameLocation":"6240:1:12","nodeType":"VariableDeclaration","scope":2901,"src":"6232:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"b","nameLocation":"6251:1:12","nodeType":"VariableDeclaration","scope":2901,"src":"6243:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:12"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"6277:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:12"},"scope":4131,"src":"6215:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3036,"nodeType":"Block","src":"7340:3585:12","statements":[{"id":3035,"nodeType":"UncheckedBlock","src":"7350:3569:12","statements":[{"assignments":[2914,2916],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"high","nameLocation":"7383:4:12","nodeType":"VariableDeclaration","scope":3035,"src":"7375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"low","nameLocation":"7397:3:12","nodeType":"VariableDeclaration","scope":3035,"src":"7389:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"arguments":[{"id":2918,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7411:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2919,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"7414:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2917,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"7404:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"7498:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"nodeType":"IfStatement","src":"7494:365:12","trueBody":{"id":2929,"nodeType":"Block","src":"7509:350:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"7827:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2926,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"7833:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2912,"id":2928,"nodeType":"Return","src":"7820:24:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"7969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2932,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"7984:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2949,"nodeType":"IfStatement","src":"7965:142:12","trueBody":{"id":2948,"nodeType":"Block","src":"7990:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8028:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2941,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":862,"src":"8046:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2943,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":858,"src":"8070:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2937,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"8020:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2934,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8008:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":894,"src":"8008:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2947,"nodeType":"ExpressionStatement","src":"8008:84:12"}]}},{"assignments":[2951],"declarations":[{"constant":false,"id":2951,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:12","nodeType":"VariableDeclaration","scope":3035,"src":"8359:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"nodeType":"VariableDeclarationStatement","src":"8359:17:12"},{"AST":{"nativeSrc":"8415:283:12","nodeType":"YulBlock","src":"8415:283:12","statements":[{"nativeSrc":"8484:38:12","nodeType":"YulAssignment","src":"8484:38:12","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:12","nodeType":"YulIdentifier","src":"8504:1:12"},{"name":"y","nativeSrc":"8507:1:12","nodeType":"YulIdentifier","src":"8507:1:12"},{"name":"denominator","nativeSrc":"8510:11:12","nodeType":"YulIdentifier","src":"8510:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:12","nodeType":"YulIdentifier","src":"8497:6:12"},"nativeSrc":"8497:25:12","nodeType":"YulFunctionCall","src":"8497:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:12","nodeType":"YulIdentifier","src":"8484:9:12"}]},{"nativeSrc":"8604:37:12","nodeType":"YulAssignment","src":"8604:37:12","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:12","nodeType":"YulIdentifier","src":"8616:4:12"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:12","nodeType":"YulIdentifier","src":"8625:9:12"},{"name":"low","nativeSrc":"8636:3:12","nodeType":"YulIdentifier","src":"8636:3:12"}],"functionName":{"name":"gt","nativeSrc":"8622:2:12","nodeType":"YulIdentifier","src":"8622:2:12"},"nativeSrc":"8622:18:12","nodeType":"YulFunctionCall","src":"8622:18:12"}],"functionName":{"name":"sub","nativeSrc":"8612:3:12","nodeType":"YulIdentifier","src":"8612:3:12"},"nativeSrc":"8612:29:12","nodeType":"YulFunctionCall","src":"8612:29:12"},"variableNames":[{"name":"high","nativeSrc":"8604:4:12","nodeType":"YulIdentifier","src":"8604:4:12"}]},{"nativeSrc":"8658:26:12","nodeType":"YulAssignment","src":"8658:26:12","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:12","nodeType":"YulIdentifier","src":"8669:3:12"},{"name":"remainder","nativeSrc":"8674:9:12","nodeType":"YulIdentifier","src":"8674:9:12"}],"functionName":{"name":"sub","nativeSrc":"8665:3:12","nodeType":"YulIdentifier","src":"8665:3:12"},"nativeSrc":"8665:19:12","nodeType":"YulFunctionCall","src":"8665:19:12"},"variableNames":[{"name":"low","nativeSrc":"8658:3:12","nodeType":"YulIdentifier","src":"8658:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2908,"isOffset":false,"isSlot":false,"src":"8510:11:12","valueSize":1},{"declaration":2914,"isOffset":false,"isSlot":false,"src":"8604:4:12","valueSize":1},{"declaration":2914,"isOffset":false,"isSlot":false,"src":"8616:4:12","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"8636:3:12","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"8658:3:12","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"8669:3:12","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"8484:9:12","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"8625:9:12","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"8674:9:12","valueSize":1},{"declaration":2904,"isOffset":false,"isSlot":false,"src":"8504:1:12","valueSize":1},{"declaration":2906,"isOffset":false,"isSlot":false,"src":"8507:1:12","valueSize":1}],"flags":["memory-safe"],"id":2953,"nodeType":"InlineAssembly","src":"8390:308:12"},{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"twos","nameLocation":"8910:4:12","nodeType":"VariableDeclaration","scope":3035,"src":"8902:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2962,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8917:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2958,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8936:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:12"},{"AST":{"nativeSrc":"8987:359:12","nodeType":"YulBlock","src":"8987:359:12","statements":[{"nativeSrc":"9052:37:12","nodeType":"YulAssignment","src":"9052:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:12","nodeType":"YulIdentifier","src":"9071:11:12"},{"name":"twos","nativeSrc":"9084:4:12","nodeType":"YulIdentifier","src":"9084:4:12"}],"functionName":{"name":"div","nativeSrc":"9067:3:12","nodeType":"YulIdentifier","src":"9067:3:12"},"nativeSrc":"9067:22:12","nodeType":"YulFunctionCall","src":"9067:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:12","nodeType":"YulIdentifier","src":"9052:11:12"}]},{"nativeSrc":"9153:21:12","nodeType":"YulAssignment","src":"9153:21:12","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:12","nodeType":"YulIdentifier","src":"9164:3:12"},{"name":"twos","nativeSrc":"9169:4:12","nodeType":"YulIdentifier","src":"9169:4:12"}],"functionName":{"name":"div","nativeSrc":"9160:3:12","nodeType":"YulIdentifier","src":"9160:3:12"},"nativeSrc":"9160:14:12","nodeType":"YulFunctionCall","src":"9160:14:12"},"variableNames":[{"name":"low","nativeSrc":"9153:3:12","nodeType":"YulIdentifier","src":"9153:3:12"}]},{"nativeSrc":"9293:39:12","nodeType":"YulAssignment","src":"9293:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:12","nodeType":"YulLiteral","src":"9313:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:12","nodeType":"YulIdentifier","src":"9316:4:12"}],"functionName":{"name":"sub","nativeSrc":"9309:3:12","nodeType":"YulIdentifier","src":"9309:3:12"},"nativeSrc":"9309:12:12","nodeType":"YulFunctionCall","src":"9309:12:12"},{"name":"twos","nativeSrc":"9323:4:12","nodeType":"YulIdentifier","src":"9323:4:12"}],"functionName":{"name":"div","nativeSrc":"9305:3:12","nodeType":"YulIdentifier","src":"9305:3:12"},"nativeSrc":"9305:23:12","nodeType":"YulFunctionCall","src":"9305:23:12"},{"kind":"number","nativeSrc":"9330:1:12","nodeType":"YulLiteral","src":"9330:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:12","nodeType":"YulIdentifier","src":"9301:3:12"},"nativeSrc":"9301:31:12","nodeType":"YulFunctionCall","src":"9301:31:12"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:12","nodeType":"YulIdentifier","src":"9293:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2908,"isOffset":false,"isSlot":false,"src":"9052:11:12","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"9071:11:12","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"9153:3:12","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"9164:3:12","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9084:4:12","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9169:4:12","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9293:4:12","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9316:4:12","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9323:4:12","valueSize":1}],"flags":["memory-safe"],"id":2963,"nodeType":"InlineAssembly","src":"8962:384:12"},{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2964,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"9409:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9416:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2966,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"9423:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"9409:18:12"},{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:12","nodeType":"VariableDeclaration","scope":3035,"src":"9762:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2978,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2973,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"9785:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:12"},{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10033:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2982,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"10018:36:12"},{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2987,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10103:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2990,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"10088:36:12"},{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2995,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10175:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2998,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"10160:36:12"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10231:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10246:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3006,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"10231:36:12"},{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3011,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10304:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10319:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3014,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10333:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"10304:36:12"},{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"10393:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3022,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"nodeType":"ExpressionStatement","src":"10378:36:12"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"10859:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"10868:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3029,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"10874:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ExpressionStatement","src":"10859:22:12"},{"expression":{"id":3033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"10902:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2912,"id":3034,"nodeType":"Return","src":"10895:13:12"}]}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"6925:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:12","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"x","nameLocation":"7266:1:12","nodeType":"VariableDeclaration","scope":3037,"src":"7258:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"y","nameLocation":"7277:1:12","nodeType":"VariableDeclaration","scope":3037,"src":"7269:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:12","nodeType":"VariableDeclaration","scope":3037,"src":"7280:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:12"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"result","nameLocation":"7332:6:12","nodeType":"VariableDeclaration","scope":3037,"src":"7324:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:12"},"scope":4131,"src":"7242:3683:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"11164:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3053,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"11188:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3054,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"11191:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3055,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"11194:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3037,3074],"referencedDeclaration":3037,"src":"11181:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3060,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"11242:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":3059,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"11225:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3063,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"11262:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3064,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"11265:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3065,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"11268:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3062,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3057,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"11209:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"11209:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3051,"id":3072,"nodeType":"Return","src":"11174:111:12"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"10931:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:12","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"x","nameLocation":"11078:1:12","nodeType":"VariableDeclaration","scope":3074,"src":"11070:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"y","nameLocation":"11089:1:12","nodeType":"VariableDeclaration","scope":3074,"src":"11081:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:12","nodeType":"VariableDeclaration","scope":3074,"src":"11092:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:12","nodeType":"VariableDeclaration","scope":3074,"src":"11113:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":3046,"nodeType":"UserDefinedTypeName","pathNode":{"id":3045,"name":"Rounding","nameLocations":["11113:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"11113:8:12"},"referencedDeclaration":2522,"src":"11113:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:12"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"11155:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:12"},"scope":4131,"src":"11054:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"11500:245:12","statements":[{"id":3122,"nodeType":"UncheckedBlock","src":"11510:229:12","statements":[{"assignments":[3087,3089],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"high","nameLocation":"11543:4:12","nodeType":"VariableDeclaration","scope":3122,"src":"11535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"low","nameLocation":"11557:3:12","nodeType":"VariableDeclaration","scope":3122,"src":"11549:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3091,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11571:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3092,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"11574:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"11564:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11594:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3097,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11607:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3108,"nodeType":"IfStatement","src":"11590:86:12","trueBody":{"id":3107,"nodeType":"Block","src":"11610:66:12","statements":[{"expression":{"arguments":[{"expression":{"id":3103,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"11640:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":858,"src":"11640:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3100,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"11628:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":894,"src":"11628:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3106,"nodeType":"ExpressionStatement","src":"11628:33:12"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11697:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3111,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11712:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"11719:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3117,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11726:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3085,"id":3121,"nodeType":"Return","src":"11689:39:12"}]}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"11298:111:12","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:12","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"x","nameLocation":"11438:1:12","nodeType":"VariableDeclaration","scope":3124,"src":"11430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"y","nameLocation":"11449:1:12","nodeType":"VariableDeclaration","scope":3124,"src":"11441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"n","nameLocation":"11458:1:12","nodeType":"VariableDeclaration","scope":3124,"src":"11452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3080,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:12"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"result","nameLocation":"11492:6:12","nodeType":"VariableDeclaration","scope":3124,"src":"11484:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:12"},"scope":4131,"src":"11414:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"11963:113:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3141,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3142,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"11993:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3139,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3124,3163],"referencedDeclaration":3124,"src":"11980:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3147,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"12031:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":3146,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"12014:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3150,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"12051:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3151,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"12054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3153,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"12062:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3149,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3144,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"11998:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"11998:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3138,"id":3161,"nodeType":"Return","src":"11973:96:12"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"11751:109:12","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:12","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"x","nameLocation":"11889:1:12","nodeType":"VariableDeclaration","scope":3163,"src":"11881:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"y","nameLocation":"11900:1:12","nodeType":"VariableDeclaration","scope":3163,"src":"11892:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"n","nameLocation":"11909:1:12","nodeType":"VariableDeclaration","scope":3163,"src":"11903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3130,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:12","nodeType":"VariableDeclaration","scope":3163,"src":"11912:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":3133,"nodeType":"UserDefinedTypeName","pathNode":{"id":3132,"name":"Rounding","nameLocations":["11912:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"11912:8:12"},"referencedDeclaration":2522,"src":"11912:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:12"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"11954:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:12"},"scope":4131,"src":"11865:211:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"12710:1849:12","statements":[{"id":3258,"nodeType":"UncheckedBlock","src":"12720:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"12748:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"IfStatement","src":"12744:20:12","trueBody":{"expression":{"hexValue":"30","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3172,"id":3177,"nodeType":"Return","src":"12756:8:12"}},{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:12","nodeType":"VariableDeclaration","scope":3258,"src":"13235:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"13255:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3182,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13259:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:12"},{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:12","nodeType":"VariableDeclaration","scope":3258,"src":"13274:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3188,"initialValue":{"id":3187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:12"},{"assignments":[3190],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"x","nameLocation":"13432:1:12","nodeType":"VariableDeclaration","scope":3258,"src":"13425:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3189,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3192,"initialValue":{"hexValue":"30","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:12"},{"assignments":[3194],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"y","nameLocation":"13458:1:12","nodeType":"VariableDeclaration","scope":3258,"src":"13451:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3193,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3196,"initialValue":{"hexValue":"31","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:12"},{"body":{"id":3233,"nodeType":"Block","src":"13501:882:12","statements":[{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:12","nodeType":"VariableDeclaration","scope":3233,"src":"13519:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13538:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3203,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13544:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:12"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3206,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13573:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3207,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13578:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3208,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3209,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13678:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"13923:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13929:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3212,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13941:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"13572:395:12"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3218,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"13987:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3219,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"13990:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3220,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3221,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14072:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"14326:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14330:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3226,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"14341:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3224,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:12","typeDescriptions":{}}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3232,"nodeType":"ExpressionStatement","src":"13986:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13485:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3234,"nodeType":"WhileStatement","src":"13478:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"14401:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"nodeType":"IfStatement","src":"14397:22:12","trueBody":{"expression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3172,"id":3239,"nodeType":"Return","src":"14411:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"14470:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14477:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:12","subExpression":{"id":3248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"14490:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:12","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3254,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"14502:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:12","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3241,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"14462:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3172,"id":3257,"nodeType":"Return","src":"14455:50:12"}]}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"12082:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:12","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"a","nameLocation":"12664:1:12","nodeType":"VariableDeclaration","scope":3260,"src":"12656:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"n","nameLocation":"12675:1:12","nodeType":"VariableDeclaration","scope":3260,"src":"12667:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:12"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"12701:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:12"},"scope":4131,"src":"12640:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"15159:82:12","statements":[{"id":3279,"nodeType":"UncheckedBlock","src":"15169:66:12","statements":[{"expression":{"arguments":[{"id":3272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"15212:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"15215:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3276,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"15222:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3270,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"15200:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4131_$","typeString":"type(library Math)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"15200:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3269,"id":3278,"nodeType":"Return","src":"15193:31:12"}]}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"14565:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:12","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"a","nameLocation":"15113:1:12","nodeType":"VariableDeclaration","scope":3281,"src":"15105:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"p","nameLocation":"15124:1:12","nodeType":"VariableDeclaration","scope":3281,"src":"15116:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:12"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3281,"src":"15150:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:12"},"scope":4131,"src":"15084:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"16011:174:12","statements":[{"assignments":[3294,3296],"declarations":[{"constant":false,"id":3294,"mutability":"mutable","name":"success","nameLocation":"16027:7:12","nodeType":"VariableDeclaration","scope":3316,"src":"16022:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3293,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"result","nameLocation":"16044:6:12","nodeType":"VariableDeclaration","scope":3316,"src":"16036:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3302,"initialValue":{"arguments":[{"id":3298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"16064:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3299,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"16067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3300,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"16070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3297,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3341,3423],"referencedDeclaration":3341,"src":"16054:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:12"},{"condition":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:12","subExpression":{"id":3303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"16087:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"IfStatement","src":"16082:74:12","trueBody":{"id":3312,"nodeType":"Block","src":"16096:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3308,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16122:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":862,"src":"16122:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3305,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16110:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":894,"src":"16110:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3311,"nodeType":"ExpressionStatement","src":"16110:35:12"}]}},{"expression":{"id":3314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"16172:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3292,"id":3315,"nodeType":"Return","src":"16165:13:12"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"15247:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:12","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"b","nameLocation":"15954:1:12","nodeType":"VariableDeclaration","scope":3317,"src":"15946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"e","nameLocation":"15965:1:12","nodeType":"VariableDeclaration","scope":3317,"src":"15957:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"m","nameLocation":"15976:1:12","nodeType":"VariableDeclaration","scope":3317,"src":"15968:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:12"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"16002:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:12"},"scope":4131,"src":"15930:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3340,"nodeType":"Block","src":"17039:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"17053:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3338,"nodeType":"IfStatement","src":"17049:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3330,"id":3337,"nodeType":"Return","src":"17061:17:12"}},{"AST":{"nativeSrc":"17113:1413:12","nodeType":"YulBlock","src":"17113:1413:12","statements":[{"nativeSrc":"17127:22:12","nodeType":"YulVariableDeclaration","src":"17127:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:12","nodeType":"YulLiteral","src":"17144:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:12","nodeType":"YulIdentifier","src":"17138:5:12"},"nativeSrc":"17138:11:12","nodeType":"YulFunctionCall","src":"17138:11:12"},"variables":[{"name":"ptr","nativeSrc":"17131:3:12","nodeType":"YulTypedName","src":"17131:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:12","nodeType":"YulIdentifier","src":"18057:3:12"},{"kind":"number","nativeSrc":"18062:4:12","nodeType":"YulLiteral","src":"18062:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:12","nodeType":"YulIdentifier","src":"18050:6:12"},"nativeSrc":"18050:17:12","nodeType":"YulFunctionCall","src":"18050:17:12"},"nativeSrc":"18050:17:12","nodeType":"YulExpressionStatement","src":"18050:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:12","nodeType":"YulIdentifier","src":"18091:3:12"},{"kind":"number","nativeSrc":"18096:4:12","nodeType":"YulLiteral","src":"18096:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:12","nodeType":"YulIdentifier","src":"18087:3:12"},"nativeSrc":"18087:14:12","nodeType":"YulFunctionCall","src":"18087:14:12"},{"kind":"number","nativeSrc":"18103:4:12","nodeType":"YulLiteral","src":"18103:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:12","nodeType":"YulIdentifier","src":"18080:6:12"},"nativeSrc":"18080:28:12","nodeType":"YulFunctionCall","src":"18080:28:12"},"nativeSrc":"18080:28:12","nodeType":"YulExpressionStatement","src":"18080:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:12","nodeType":"YulIdentifier","src":"18132:3:12"},{"kind":"number","nativeSrc":"18137:4:12","nodeType":"YulLiteral","src":"18137:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:12","nodeType":"YulIdentifier","src":"18128:3:12"},"nativeSrc":"18128:14:12","nodeType":"YulFunctionCall","src":"18128:14:12"},{"kind":"number","nativeSrc":"18144:4:12","nodeType":"YulLiteral","src":"18144:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:12","nodeType":"YulIdentifier","src":"18121:6:12"},"nativeSrc":"18121:28:12","nodeType":"YulFunctionCall","src":"18121:28:12"},"nativeSrc":"18121:28:12","nodeType":"YulExpressionStatement","src":"18121:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:12","nodeType":"YulIdentifier","src":"18173:3:12"},{"kind":"number","nativeSrc":"18178:4:12","nodeType":"YulLiteral","src":"18178:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:12","nodeType":"YulIdentifier","src":"18169:3:12"},"nativeSrc":"18169:14:12","nodeType":"YulFunctionCall","src":"18169:14:12"},{"name":"b","nativeSrc":"18185:1:12","nodeType":"YulIdentifier","src":"18185:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:12","nodeType":"YulIdentifier","src":"18162:6:12"},"nativeSrc":"18162:25:12","nodeType":"YulFunctionCall","src":"18162:25:12"},"nativeSrc":"18162:25:12","nodeType":"YulExpressionStatement","src":"18162:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:12","nodeType":"YulIdentifier","src":"18211:3:12"},{"kind":"number","nativeSrc":"18216:4:12","nodeType":"YulLiteral","src":"18216:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:12","nodeType":"YulIdentifier","src":"18207:3:12"},"nativeSrc":"18207:14:12","nodeType":"YulFunctionCall","src":"18207:14:12"},{"name":"e","nativeSrc":"18223:1:12","nodeType":"YulIdentifier","src":"18223:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:12","nodeType":"YulIdentifier","src":"18200:6:12"},"nativeSrc":"18200:25:12","nodeType":"YulFunctionCall","src":"18200:25:12"},"nativeSrc":"18200:25:12","nodeType":"YulExpressionStatement","src":"18200:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:12","nodeType":"YulIdentifier","src":"18249:3:12"},{"kind":"number","nativeSrc":"18254:4:12","nodeType":"YulLiteral","src":"18254:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:12","nodeType":"YulIdentifier","src":"18245:3:12"},"nativeSrc":"18245:14:12","nodeType":"YulFunctionCall","src":"18245:14:12"},{"name":"m","nativeSrc":"18261:1:12","nodeType":"YulIdentifier","src":"18261:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:12","nodeType":"YulIdentifier","src":"18238:6:12"},"nativeSrc":"18238:25:12","nodeType":"YulFunctionCall","src":"18238:25:12"},"nativeSrc":"18238:25:12","nodeType":"YulExpressionStatement","src":"18238:25:12"},{"nativeSrc":"18425:57:12","nodeType":"YulAssignment","src":"18425:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:12","nodeType":"YulIdentifier","src":"18447:3:12"},"nativeSrc":"18447:5:12","nodeType":"YulFunctionCall","src":"18447:5:12"},{"kind":"number","nativeSrc":"18454:4:12","nodeType":"YulLiteral","src":"18454:4:12","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:12","nodeType":"YulIdentifier","src":"18460:3:12"},{"kind":"number","nativeSrc":"18465:4:12","nodeType":"YulLiteral","src":"18465:4:12","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:12","nodeType":"YulLiteral","src":"18471:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:12","nodeType":"YulLiteral","src":"18477:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:12","nodeType":"YulIdentifier","src":"18436:10:12"},"nativeSrc":"18436:46:12","nodeType":"YulFunctionCall","src":"18436:46:12"},"variableNames":[{"name":"success","nativeSrc":"18425:7:12","nodeType":"YulIdentifier","src":"18425:7:12"}]},{"nativeSrc":"18495:21:12","nodeType":"YulAssignment","src":"18495:21:12","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:12","nodeType":"YulLiteral","src":"18511:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:12","nodeType":"YulIdentifier","src":"18505:5:12"},"nativeSrc":"18505:11:12","nodeType":"YulFunctionCall","src":"18505:11:12"},"variableNames":[{"name":"result","nativeSrc":"18495:6:12","nodeType":"YulIdentifier","src":"18495:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3320,"isOffset":false,"isSlot":false,"src":"18185:1:12","valueSize":1},{"declaration":3322,"isOffset":false,"isSlot":false,"src":"18223:1:12","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"18261:1:12","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"18495:6:12","valueSize":1},{"declaration":3327,"isOffset":false,"isSlot":false,"src":"18425:7:12","valueSize":1}],"flags":["memory-safe"],"id":3339,"nodeType":"InlineAssembly","src":"17088:1438:12"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"16191:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3341,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:12","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"b","nameLocation":"16961:1:12","nodeType":"VariableDeclaration","scope":3341,"src":"16953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"e","nameLocation":"16972:1:12","nodeType":"VariableDeclaration","scope":3341,"src":"16964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"m","nameLocation":"16983:1:12","nodeType":"VariableDeclaration","scope":3341,"src":"16975:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:12"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"success","nameLocation":"17014:7:12","nodeType":"VariableDeclaration","scope":3341,"src":"17009:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3326,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"result","nameLocation":"17031:6:12","nodeType":"VariableDeclaration","scope":3341,"src":"17023:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:12"},"scope":4131,"src":"16934:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"18729:179:12","statements":[{"assignments":[3354,3356],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"success","nameLocation":"18745:7:12","nodeType":"VariableDeclaration","scope":3376,"src":"18740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3353,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"result","nameLocation":"18767:6:12","nodeType":"VariableDeclaration","scope":3376,"src":"18754:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3355,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3362,"initialValue":{"arguments":[{"id":3358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"18787:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3359,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"18790:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3360,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"18793:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3357,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3341,3423],"referencedDeclaration":3423,"src":"18777:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:12"},{"condition":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:12","subExpression":{"id":3363,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"18810:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3373,"nodeType":"IfStatement","src":"18805:74:12","trueBody":{"id":3372,"nodeType":"Block","src":"18819:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3368,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"18845:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":862,"src":"18845:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3365,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"18833:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$895_$","typeString":"type(library Panic)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":894,"src":"18833:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3371,"nodeType":"ExpressionStatement","src":"18833:35:12"}]}},{"expression":{"id":3374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"18895:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3352,"id":3375,"nodeType":"Return","src":"18888:13:12"}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"18538:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:12","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"b","nameLocation":"18657:1:12","nodeType":"VariableDeclaration","scope":3377,"src":"18644:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3343,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"e","nameLocation":"18673:1:12","nodeType":"VariableDeclaration","scope":3377,"src":"18660:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3345,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3348,"mutability":"mutable","name":"m","nameLocation":"18689:1:12","nodeType":"VariableDeclaration","scope":3377,"src":"18676:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3347,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:12"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"18715:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3350,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:12"},"scope":4131,"src":"18628:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"19162:771:12","statements":[{"condition":{"arguments":[{"id":3392,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"19187:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3391,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"19176:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3401,"nodeType":"IfStatement","src":"19172:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3395,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3390,"id":3400,"nodeType":"Return","src":"19191:28:12"}},{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:12","nodeType":"VariableDeclaration","scope":3422,"src":"19230:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3406,"initialValue":{"expression":{"id":3404,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"19245:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:12","memberName":"length","nodeType":"MemberAccess","src":"19245:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:12"},{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"19335:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"19361:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:12","memberName":"length","nodeType":"MemberAccess","src":"19361:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3412,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"19371:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:12","memberName":"length","nodeType":"MemberAccess","src":"19371:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3414,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"19381:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"19387:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3416,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3417,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"19393:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3408,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3420,"nodeType":"ExpressionStatement","src":"19335:60:12"},{"AST":{"nativeSrc":"19431:496:12","nodeType":"YulBlock","src":"19431:496:12","statements":[{"nativeSrc":"19445:32:12","nodeType":"YulVariableDeclaration","src":"19445:32:12","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:12","nodeType":"YulIdentifier","src":"19464:6:12"},{"kind":"number","nativeSrc":"19472:4:12","nodeType":"YulLiteral","src":"19472:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:12","nodeType":"YulIdentifier","src":"19460:3:12"},"nativeSrc":"19460:17:12","nodeType":"YulFunctionCall","src":"19460:17:12"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:12","nodeType":"YulTypedName","src":"19449:7:12","type":""}]},{"nativeSrc":"19567:73:12","nodeType":"YulAssignment","src":"19567:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:12","nodeType":"YulIdentifier","src":"19589:3:12"},"nativeSrc":"19589:5:12","nodeType":"YulFunctionCall","src":"19589:5:12"},{"kind":"number","nativeSrc":"19596:4:12","nodeType":"YulLiteral","src":"19596:4:12","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:12","nodeType":"YulIdentifier","src":"19602:7:12"},{"arguments":[{"name":"result","nativeSrc":"19617:6:12","nodeType":"YulIdentifier","src":"19617:6:12"}],"functionName":{"name":"mload","nativeSrc":"19611:5:12","nodeType":"YulIdentifier","src":"19611:5:12"},"nativeSrc":"19611:13:12","nodeType":"YulFunctionCall","src":"19611:13:12"},{"name":"dataPtr","nativeSrc":"19626:7:12","nodeType":"YulIdentifier","src":"19626:7:12"},{"name":"mLen","nativeSrc":"19635:4:12","nodeType":"YulIdentifier","src":"19635:4:12"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:12","nodeType":"YulIdentifier","src":"19578:10:12"},"nativeSrc":"19578:62:12","nodeType":"YulFunctionCall","src":"19578:62:12"},"variableNames":[{"name":"success","nativeSrc":"19567:7:12","nodeType":"YulIdentifier","src":"19567:7:12"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:12","nodeType":"YulIdentifier","src":"19796:6:12"},{"name":"mLen","nativeSrc":"19804:4:12","nodeType":"YulIdentifier","src":"19804:4:12"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:12","nodeType":"YulIdentifier","src":"19789:6:12"},"nativeSrc":"19789:20:12","nodeType":"YulFunctionCall","src":"19789:20:12"},"nativeSrc":"19789:20:12","nodeType":"YulExpressionStatement","src":"19789:20:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:12","nodeType":"YulLiteral","src":"19892:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:12","nodeType":"YulIdentifier","src":"19902:7:12"},{"name":"mLen","nativeSrc":"19911:4:12","nodeType":"YulIdentifier","src":"19911:4:12"}],"functionName":{"name":"add","nativeSrc":"19898:3:12","nodeType":"YulIdentifier","src":"19898:3:12"},"nativeSrc":"19898:18:12","nodeType":"YulFunctionCall","src":"19898:18:12"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:12","nodeType":"YulIdentifier","src":"19885:6:12"},"nativeSrc":"19885:32:12","nodeType":"YulFunctionCall","src":"19885:32:12"},"nativeSrc":"19885:32:12","nodeType":"YulExpressionStatement","src":"19885:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3403,"isOffset":false,"isSlot":false,"src":"19635:4:12","valueSize":1},{"declaration":3403,"isOffset":false,"isSlot":false,"src":"19804:4:12","valueSize":1},{"declaration":3403,"isOffset":false,"isSlot":false,"src":"19911:4:12","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"19464:6:12","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"19617:6:12","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"19796:6:12","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"19567:7:12","valueSize":1}],"flags":["memory-safe"],"id":3421,"nodeType":"InlineAssembly","src":"19406:521:12"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"18914:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:12","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"b","nameLocation":"19048:1:12","nodeType":"VariableDeclaration","scope":3423,"src":"19035:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3379,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"e","nameLocation":"19072:1:12","nodeType":"VariableDeclaration","scope":3423,"src":"19059:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3381,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"m","nameLocation":"19096:1:12","nodeType":"VariableDeclaration","scope":3423,"src":"19083:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3383,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:12"},"returnParameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"success","nameLocation":"19132:7:12","nodeType":"VariableDeclaration","scope":3423,"src":"19127:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3386,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"result","nameLocation":"19154:6:12","nodeType":"VariableDeclaration","scope":3423,"src":"19141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3388,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:12"},"scope":4131,"src":"19007:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3455,"nodeType":"Block","src":"20088:176:12","statements":[{"body":{"id":3451,"nodeType":"Block","src":"20145:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3442,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"20163:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3444,"indexExpression":{"id":3443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"20173:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3450,"nodeType":"IfStatement","src":"20159:68:12","trueBody":{"id":3449,"nodeType":"Block","src":"20182:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3430,"id":3448,"nodeType":"Return","src":"20200:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"20118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3436,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"20122:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:12","memberName":"length","nodeType":"MemberAccess","src":"20122:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3452,"initializationExpression":{"assignments":[3432],"declarations":[{"constant":false,"id":3432,"mutability":"mutable","name":"i","nameLocation":"20111:1:12","nodeType":"VariableDeclaration","scope":3452,"src":"20103:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3434,"initialValue":{"hexValue":"30","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:12","subExpression":{"id":3439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"20142:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"20140:3:12"},"nodeType":"ForStatement","src":"20098:139:12"},{"expression":{"hexValue":"74727565","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3430,"id":3454,"nodeType":"Return","src":"20246:11:12"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"19939:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:12","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:12","nodeType":"VariableDeclaration","scope":3456,"src":"20036:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3425,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:12"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3456,"src":"20082:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3428,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:12"},"scope":4131,"src":"20016:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3674,"nodeType":"Block","src":"20624:5124:12","statements":[{"id":3673,"nodeType":"UncheckedBlock","src":"20634:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"20728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3470,"nodeType":"IfStatement","src":"20724:53:12","trueBody":{"id":3469,"nodeType":"Block","src":"20736:41:12","statements":[{"expression":{"id":3467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"20761:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3463,"id":3468,"nodeType":"Return","src":"20754:8:12"}]}},{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"aa","nameLocation":"21712:2:12","nodeType":"VariableDeclaration","scope":3673,"src":"21704:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3474,"initialValue":{"id":3473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"21717:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:12"},{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"xn","nameLocation":"21740:2:12","nodeType":"VariableDeclaration","scope":3673,"src":"21732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"initialValue":{"hexValue":"31","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"21765:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"21761:92:12","trueBody":{"id":3493,"nodeType":"Block","src":"21783:70:12","statements":[{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3485,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"21801:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ExpressionStatement","src":"21801:10:12"},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"21829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"nodeType":"ExpressionStatement","src":"21829:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"21870:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"21866:90:12","trueBody":{"id":3509,"nodeType":"Block","src":"21887:69:12","statements":[{"expression":{"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3501,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"21905:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3504,"nodeType":"ExpressionStatement","src":"21905:9:12"},{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3505,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"21932:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ExpressionStatement","src":"21932:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"21973:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3526,"nodeType":"IfStatement","src":"21969:90:12","trueBody":{"id":3525,"nodeType":"Block","src":"21990:69:12","statements":[{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3517,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22008:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"22008:9:12"},{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22035:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ExpressionStatement","src":"22035:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22076:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3542,"nodeType":"IfStatement","src":"22072:89:12","trueBody":{"id":3541,"nodeType":"Block","src":"22093:68:12","statements":[{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22111:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3536,"nodeType":"ExpressionStatement","src":"22111:9:12"},{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22138:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"22138:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22178:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3558,"nodeType":"IfStatement","src":"22174:87:12","trueBody":{"id":3557,"nodeType":"Block","src":"22194:67:12","statements":[{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22212:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"22212:8:12"},{"expression":{"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3553,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22238:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3556,"nodeType":"ExpressionStatement","src":"22238:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3574,"nodeType":"IfStatement","src":"22274:87:12","trueBody":{"id":3573,"nodeType":"Block","src":"22294:67:12","statements":[{"expression":{"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3565,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22312:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3568,"nodeType":"ExpressionStatement","src":"22312:8:12"},{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3569,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22338:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"22338:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"22378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"22374:61:12","trueBody":{"id":3585,"nodeType":"Block","src":"22394:41:12","statements":[{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22412:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"22412:8:12"}]}},{"expression":{"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22855:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"22865:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3595,"nodeType":"ExpressionStatement","src":"22855:18:12"},{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3596,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24760:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24766:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"24771:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3599,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24775:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"24760:23:12"},{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24869:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24875:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"24880:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24884:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"24869:23:12"},{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24980:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24986:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"24991:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"24995:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3628,"nodeType":"ExpressionStatement","src":"24980:23:12"},{"expression":{"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25089:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25095:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"25100:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25104:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ExpressionStatement","src":"25089:23:12"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25199:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25205:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"25210:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3643,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25214:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"25199:23:12"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25309:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25315:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"25320:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3654,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25324:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"25309:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25698:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25719:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"25724:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3667,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"25703:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"25703:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3463,"id":3672,"nodeType":"Return","src":"25691:40:12"}]}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"20270:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:12","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"a","nameLocation":"20589:1:12","nodeType":"VariableDeclaration","scope":3675,"src":"20581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:12"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3675,"src":"20615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:12"},"scope":4131,"src":"20567:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"25921:171:12","statements":[{"id":3707,"nodeType":"UncheckedBlock","src":"25931:155:12","statements":[{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"result","nameLocation":"25963:6:12","nodeType":"VariableDeclaration","scope":3707,"src":"25955:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3691,"initialValue":{"arguments":[{"id":3689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"25977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3688,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3675,3709],"referencedDeclaration":3675,"src":"25972:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"26000:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3696,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"26042:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":3695,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"26025:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"26055:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"26064:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"26073:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3693,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26009:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26009:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3685,"id":3706,"nodeType":"Return","src":"25993:82:12"}]}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"25754:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:12","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"a","nameLocation":"25867:1:12","nodeType":"VariableDeclaration","scope":3709,"src":"25859:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:12","nodeType":"VariableDeclaration","scope":3709,"src":"25870:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":3680,"nodeType":"UserDefinedTypeName","pathNode":{"id":3679,"name":"Rounding","nameLocations":["25870:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"25870:8:12"},"referencedDeclaration":2522,"src":"25870:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:12"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3709,"src":"25912:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:12"},"scope":4131,"src":"25845:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"26281:2334:12","statements":[{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26363:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"26383:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3718,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26367:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26367:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ExpressionStatement","src":"26363:64:12"},{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26503:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"26525:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3732,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26530:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3729,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26508:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26508:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ExpressionStatement","src":"26503:56:12"},{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26634:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"26656:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3746,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26661:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3743,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26639:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26639:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"26634:48:12"},{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26757:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"26779:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3760,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26784:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3757,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26762:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26762:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"26757:44:12"},{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26874:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"26896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26901:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3771,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26879:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26879:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3783,"nodeType":"ExpressionStatement","src":"26874:42:12"},{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"26988:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"27010:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"27015:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26993:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26993:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"26988:41:12"},{"AST":{"nativeSrc":"28490:119:12","nodeType":"YulBlock","src":"28490:119:12","statements":[{"nativeSrc":"28504:95:12","nodeType":"YulAssignment","src":"28504:95:12","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:12","nodeType":"YulIdentifier","src":"28512:1:12"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:12","nodeType":"YulIdentifier","src":"28524:1:12"},{"name":"x","nativeSrc":"28527:1:12","nodeType":"YulIdentifier","src":"28527:1:12"}],"functionName":{"name":"shr","nativeSrc":"28520:3:12","nodeType":"YulIdentifier","src":"28520:3:12"},"nativeSrc":"28520:9:12","nodeType":"YulFunctionCall","src":"28520:9:12"},{"kind":"number","nativeSrc":"28531:66:12","nodeType":"YulLiteral","src":"28531:66:12","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:12","nodeType":"YulIdentifier","src":"28515:4:12"},"nativeSrc":"28515:83:12","nodeType":"YulFunctionCall","src":"28515:83:12"}],"functionName":{"name":"or","nativeSrc":"28509:2:12","nodeType":"YulIdentifier","src":"28509:2:12"},"nativeSrc":"28509:90:12","nodeType":"YulFunctionCall","src":"28509:90:12"},"variableNames":[{"name":"r","nativeSrc":"28504:1:12","nodeType":"YulIdentifier","src":"28504:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3715,"isOffset":false,"isSlot":false,"src":"28504:1:12","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"28512:1:12","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"28524:1:12","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"28527:1:12","valueSize":1}],"flags":["memory-safe"],"id":3798,"nodeType":"InlineAssembly","src":"28465:144:12"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"26098:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:12","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"x","nameLocation":"26244:1:12","nodeType":"VariableDeclaration","scope":3800,"src":"26236:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:12"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"r","nameLocation":"26278:1:12","nodeType":"VariableDeclaration","scope":3800,"src":"26270:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:12"},"scope":4131,"src":"26222:2393:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"28848:175:12","statements":[{"id":3832,"nodeType":"UncheckedBlock","src":"28858:159:12","statements":[{"assignments":[3812],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"result","nameLocation":"28890:6:12","nodeType":"VariableDeclaration","scope":3832,"src":"28882:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3816,"initialValue":{"arguments":[{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"28904:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3813,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3800,3834],"referencedDeclaration":3800,"src":"28899:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"28931:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3821,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"28973:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":3820,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"28956:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"28991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"29000:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3818,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"28940:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"28940:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3810,"id":3831,"nodeType":"Return","src":"28924:82:12"}]}]},"documentation":{"id":3801,"nodeType":"StructuredDocumentation","src":"28621:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:12","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"value","nameLocation":"28790:5:12","nodeType":"VariableDeclaration","scope":3834,"src":"28782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:12","nodeType":"VariableDeclaration","scope":3834,"src":"28797:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":3805,"nodeType":"UserDefinedTypeName","pathNode":{"id":3804,"name":"Rounding","nameLocations":["28797:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"28797:8:12"},"referencedDeclaration":2522,"src":"28797:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:12"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"28839:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:12"},"scope":4131,"src":"28768:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"29216:854:12","statements":[{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"result","nameLocation":"29234:6:12","nodeType":"VariableDeclaration","scope":3962,"src":"29226:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:12"},{"id":3959,"nodeType":"UncheckedBlock","src":"29254:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29282:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3862,"nodeType":"IfStatement","src":"29278:103:12","trueBody":{"id":3861,"nodeType":"Block","src":"29301:80:12","statements":[{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29319:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"29319:17:12"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"29354:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29398:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3879,"nodeType":"IfStatement","src":"29394:103:12","trueBody":{"id":3878,"nodeType":"Block","src":"29417:80:12","statements":[{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29435:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"29435:17:12"},{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29470:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"29470:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"29510:103:12","trueBody":{"id":3895,"nodeType":"Block","src":"29533:80:12","statements":[{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3890,"nodeType":"ExpressionStatement","src":"29551:17:12"},{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29586:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"29586:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29630:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3913,"nodeType":"IfStatement","src":"29626:100:12","trueBody":{"id":3912,"nodeType":"Block","src":"29648:78:12","statements":[{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29666:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3907,"nodeType":"ExpressionStatement","src":"29666:16:12"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29700:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"29700:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"29739:100:12","trueBody":{"id":3929,"nodeType":"Block","src":"29761:78:12","statements":[{"expression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29779:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ExpressionStatement","src":"29779:16:12"},{"expression":{"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29813:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3928,"nodeType":"ExpressionStatement","src":"29813:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29856:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3947,"nodeType":"IfStatement","src":"29852:100:12","trueBody":{"id":3946,"nodeType":"Block","src":"29874:78:12","statements":[{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29892:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"29892:16:12"},{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"29926:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ExpressionStatement","src":"29926:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"29969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"29965:66:12","trueBody":{"id":3957,"nodeType":"Block","src":"29987:44:12","statements":[{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"30005:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ExpressionStatement","src":"30005:11:12"}]}}]},{"expression":{"id":3960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"30057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3841,"id":3961,"nodeType":"Return","src":"30050:13:12"}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"29029:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:12","nodeType":"FunctionDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"value","nameLocation":"29177:5:12","nodeType":"VariableDeclaration","scope":3963,"src":"29169:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:12"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3963,"src":"29207:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:12"},"scope":4131,"src":"29154:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"30305:177:12","statements":[{"id":3995,"nodeType":"UncheckedBlock","src":"30315:161:12","statements":[{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"result","nameLocation":"30347:6:12","nodeType":"VariableDeclaration","scope":3995,"src":"30339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3979,"initialValue":{"arguments":[{"id":3977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3976,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3963,3997],"referencedDeclaration":3963,"src":"30356:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"30389:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3984,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"30431:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":3983,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"30414:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"30450:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"30459:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3981,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"30398:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"30398:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3973,"id":3994,"nodeType":"Return","src":"30382:83:12"}]}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"30076:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:12","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"value","nameLocation":"30247:5:12","nodeType":"VariableDeclaration","scope":3997,"src":"30239:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:12","nodeType":"VariableDeclaration","scope":3997,"src":"30254:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":3968,"nodeType":"UserDefinedTypeName","pathNode":{"id":3967,"name":"Rounding","nameLocations":["30254:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"30254:8:12"},"referencedDeclaration":2522,"src":"30254:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:12"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3997,"src":"30296:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:12"},"scope":4131,"src":"30224:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4073,"nodeType":"Block","src":"30800:675:12","statements":[{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"30882:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"30902:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"30886:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"30886:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4015,"nodeType":"ExpressionStatement","src":"30882:64:12"},{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4016,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"31044:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4020,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31049:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4017,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31027:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"31027:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"31022:56:12"},{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31153:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"31175:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4034,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31180:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4031,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31158:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"31158:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"31153:48:12"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31276:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"31298:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4048,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31303:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4045,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31281:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"31281:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ExpressionStatement","src":"31276:44:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31426:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"31453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4065,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"31458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4062,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31436:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"31436:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4004,"id":4072,"nodeType":"Return","src":"31418:50:12"}]},"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"30488:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:12","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"x","nameLocation":"30763:1:12","nodeType":"VariableDeclaration","scope":4074,"src":"30755:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:12"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"r","nameLocation":"30797:1:12","nodeType":"VariableDeclaration","scope":4074,"src":"30789:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:12"},"scope":4131,"src":"30739:736:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4110,"nodeType":"Block","src":"31712:184:12","statements":[{"id":4109,"nodeType":"UncheckedBlock","src":"31722:168:12","statements":[{"assignments":[4086],"declarations":[{"constant":false,"id":4086,"mutability":"mutable","name":"result","nameLocation":"31754:6:12","nodeType":"VariableDeclaration","scope":4109,"src":"31746:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4090,"initialValue":{"arguments":[{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"31770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4074,4111],"referencedDeclaration":4074,"src":"31763:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"31797:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4095,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"31839:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":4094,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"31822:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2522_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"31873:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4092,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31806:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"31806:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4084,"id":4108,"nodeType":"Return","src":"31790:89:12"}]}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"31481:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:12","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"value","nameLocation":"31654:5:12","nodeType":"VariableDeclaration","scope":4111,"src":"31646:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:12","nodeType":"VariableDeclaration","scope":4111,"src":"31661:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":4079,"nodeType":"UserDefinedTypeName","pathNode":{"id":4078,"name":"Rounding","nameLocations":["31661:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"31661:8:12"},"referencedDeclaration":2522,"src":"31661:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:12"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4111,"src":"31703:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:12"},"scope":4131,"src":"31630:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"32094:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4122,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"32117:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}],"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4120,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:12","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4119,"id":4128,"nodeType":"Return","src":"32104:31:12"}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"31902:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:12","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:12","nodeType":"VariableDeclaration","scope":4130,"src":"32046:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"Rounding","nameLocations":["32046:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"32046:8:12"},"referencedDeclaration":2522,"src":"32046:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2522","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:12"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"32088:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4117,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:12"},"scope":4131,"src":"32020:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4132,"src":"281:31863:12","usedErrors":[],"usedEvents":[]}],"src":"103:32042:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5896]},"id":5897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4133,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5896,"linearizedBaseContracts":[5896],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4141,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4141,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4136,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4141,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4146,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4146,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4143,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4153,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4153,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4148,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4153,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4150,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4158,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4158,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4185,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4168,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4178,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4177,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4180,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4165,"id":4184,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4186,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4186,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4163,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":5896,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4196,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4206,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4201,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4205,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4208,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4193,"id":4212,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4187,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4214,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4191,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":5896,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4224,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4234,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4229,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4233,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4236,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4221,"id":4240,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4242,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4219,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":5896,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4252,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4262,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4257,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4261,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4264,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4249,"id":4268,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4270,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4247,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":5896,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4280,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4290,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4285,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4289,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4292,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4277,"id":4296,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4298,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4275,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":5896,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4308,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4319,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4318,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4313,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4317,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4320,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4305,"id":4324,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4326,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4326,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4303,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":5896,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4353,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4336,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4347,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4346,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4341,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4345,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4348,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4333,"id":4352,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4354,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4331,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":5896,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4364,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":4374,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4369,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4373,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4376,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4361,"id":4380,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":4382,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4359,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":5896,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4392,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4403,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":4402,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4401,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4404,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4389,"id":4408,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":4410,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4387,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":5896,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4420,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":4430,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4429,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4432,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4417,"id":4436,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":4438,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4415,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":5896,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4465,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4448,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":4458,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4457,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4460,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4445,"id":4464,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":4466,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4466,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4443,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":5896,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4476,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":4486,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4485,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4488,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4473,"id":4492,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":4494,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4471,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":5896,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4504,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4515,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":4514,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4513,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4516,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4501,"id":4520,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":4522,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4499,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":5896,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4532,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":4542,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4541,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4544,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4529,"id":4548,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":4550,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4527,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":5896,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4577,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4560,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":4570,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4569,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4572,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4557,"id":4576,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":4578,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4555,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":5896,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4588,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":4598,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4597,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4600,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4585,"id":4604,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":4606,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4606,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4583,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":5896,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4616,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":4626,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4625,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4628,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4613,"id":4632,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":4634,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4611,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":5896,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4644,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":4654,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4653,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4656,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4641,"id":4660,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":4662,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4639,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":5896,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4672,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":4682,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4681,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4684,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4669,"id":4688,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":4690,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4667,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":5896,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4700,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":4710,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4709,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4712,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4697,"id":4716,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":4718,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4695,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":5896,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4728,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4739,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":4738,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4737,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4740,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4725,"id":4744,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":4746,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4723,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":5896,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4756,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":4766,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4765,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4768,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4753,"id":4772,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":4774,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4751,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":5896,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4784,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":4794,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4793,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4796,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4781,"id":4800,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":4802,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4779,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":5896,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4812,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":4822,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4821,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4824,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4809,"id":4828,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":4830,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4807,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":5896,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4840,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":4850,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4849,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4852,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4837,"id":4856,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":4858,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4835,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":5896,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4868,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":4878,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4877,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4880,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":4886,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4863,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":5896,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4896,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4907,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":4906,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4905,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4908,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4893,"id":4912,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":4914,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4891,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":5896,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4924,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":4934,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4933,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4936,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4921,"id":4940,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":4942,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4919,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":5896,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4969,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4952,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":4962,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4961,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4964,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4949,"id":4968,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":4970,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4970,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4947,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":5896,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4980,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":4990,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4989,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4992,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4977,"id":4996,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":4971,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":4998,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4998,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4975,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":5896,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5008,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5018,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5017,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5020,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5005,"id":5024,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5026,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5003,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":5896,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5048,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5041,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5040,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5033,"id":5047,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5049,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5028,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":5896,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5058,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5063,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5073,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5072,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5067,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5071,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5075,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5051,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5075,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5054,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":5896,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5100,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5084,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5089,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5098,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5093,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5097,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5101,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5077,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5101,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5080,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":5896,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5126,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5110,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5115,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5124,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5119,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5123,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5127,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5103,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5127,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5106,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":5896,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5152,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5136,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5141,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5150,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5145,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5149,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5153,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5129,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5153,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5132,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":5896,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5178,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5162,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5167,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5176,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5171,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5175,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5179,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5179,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5155,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5179,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5158,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":5896,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5204,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5188,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5193,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5203,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5202,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5197,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5201,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5180,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5205,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5205,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5181,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5205,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5184,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":5896,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5214,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5219,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5228,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5223,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5227,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5206,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5231,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5207,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5231,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5210,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":5896,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5240,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5245,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5254,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5249,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5253,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5257,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5233,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5257,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5236,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":5896,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5266,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5271,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5280,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5275,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5279,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5283,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5259,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5283,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5262,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":5896,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5292,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5297,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5306,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5301,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5305,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5309,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5285,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5309,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5288,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":5896,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5334,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5318,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5323,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5333,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5332,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5327,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5331,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5335,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5311,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5335,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5314,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":5896,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5360,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5344,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5349,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5359,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5358,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5353,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5357,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5336,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5361,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5361,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5337,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5361,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5340,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":5896,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5370,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5375,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":5384,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5379,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5383,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5362,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":5387,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5363,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":5387,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5366,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":5896,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5396,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5401,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5411,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":5410,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5405,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5409,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":5413,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5389,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":5413,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5392,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":5896,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5438,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5422,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5427,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5437,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":5436,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5431,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5435,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5439,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":5439,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5415,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":5439,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5418,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":5896,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5464,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5448,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5453,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":5462,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5457,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5461,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":5465,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5441,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":5465,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5444,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":5896,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5490,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5474,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5479,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":5488,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5483,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5487,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":5491,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5467,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":5491,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5470,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":5896,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5500,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5505,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":5514,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5509,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5513,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":5517,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5493,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":5517,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5496,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":5896,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5526,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5531,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5541,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":5540,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5539,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":5543,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5519,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":5543,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5522,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":5896,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5552,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5557,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5567,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":5566,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5565,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":5569,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5545,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":5569,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5548,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":5896,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5578,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5583,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":5592,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5591,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":5595,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5571,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":5595,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5574,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":5896,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5604,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5609,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5619,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":5618,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5613,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5617,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":5621,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5597,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":5621,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5600,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":5896,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5630,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5635,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":5644,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5639,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5643,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":5647,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5623,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":5647,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5626,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":5896,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5672,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5656,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5661,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":5670,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5665,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5669,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":5673,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5649,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":5673,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5652,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":5896,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5698,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5682,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5687,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":5696,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5691,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5695,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":5699,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5675,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":5699,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5678,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":5896,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5708,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5713,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5723,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":5722,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5717,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5721,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":5725,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5701,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":5725,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5704,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":5896,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5734,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5739,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5749,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":5748,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5743,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5747,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":5751,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5727,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":5751,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5730,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":5896,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5760,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5765,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":5774,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5769,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5773,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":5777,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5753,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":5777,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5756,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":5896,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5802,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5786,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5791,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":5800,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5795,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5799,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":5803,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5779,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":5803,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5782,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":5896,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5812,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5817,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5827,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":5826,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5821,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5825,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":5829,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5805,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":5829,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5808,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":5896,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5838,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5843,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":5852,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5847,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5851,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":5855,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5831,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":5855,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5834,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":5896,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5884,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":5877,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5873,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5876,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5879,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5862,"id":5883,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":5885,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5860,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":5896,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nativeSrc":"34888:46:13","nodeType":"YulBlock","src":"34888:46:13","statements":[{"nativeSrc":"34902:22:13","nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:13","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:13","nodeType":"YulIdentifier","src":"34914:6:13"},"nativeSrc":"34914:9:13","nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:13","nodeType":"YulIdentifier","src":"34907:6:13"},"nativeSrc":"34907:17:13","nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nativeSrc":"34902:1:13","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5888,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":5891,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":5893,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":5895,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5887,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":5895,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":5896,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5897,"src":"769:34173:13","usedErrors":[4141,4146,4153,4158],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5896],"SignedMath":[6040]},"id":6041,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5898,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6041,"sourceUnit":5897,"src":"135:40:14","symbolAliases":[{"foreign":{"id":5899,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6040,"linearizedBaseContracts":[6040],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":5930,"nodeType":"Block","src":"746:215:14","statements":[{"id":5929,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5915,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5922,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5920,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5918,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5912,"id":5928,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":5931,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5903,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":5931,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5905,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5908,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":5931,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5907,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5910,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6040,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5949,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5941,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5940,"id":5948,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":5950,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5933,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":5950,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5935,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":5940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5938,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6040,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5968,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5965,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5960,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5959,"id":5967,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":5969,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5952,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":5969,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5954,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5957,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6040,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6012,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[5980],"declarations":[{"constant":false,"id":5980,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6012,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5979,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5993,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5999,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5995,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5978,"id":6011,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6013,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6013,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5971,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5974,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6013,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5973,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6013,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5976,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6040,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6037,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6022],"declarations":[{"constant":false,"id":6022,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6037,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6021,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6026,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6030,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6033,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6020,"id":6036,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6039,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6015,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6040,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6041,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/Collection.sol":{"ast":{"absolutePath":"contracts/Collection.sol","exportedSymbols":{"AccessControl":[295],"Collection":[8651],"Context":[843],"ERC165":[2498],"ERC2981":[813],"ERC721A":[10949],"ERC721A__IERC721Receiver":[8867],"IAccessControl":[378],"IERC165":[2510],"IERC2981":[546],"IERC721A":[11170],"Math":[4131],"Ownable":[526],"Pausable":[1003],"ReentrancyGuard":[1072],"SafeCast":[5896],"SignedMath":[6040],"Strings":[2474]},"id":8652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6042,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"erc721a/contracts/ERC721A.sol","file":"erc721a/contracts/ERC721A.sol","id":6043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":10950,"src":"61:39:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":527,"src":"102:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":6045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":1004,"src":"156:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":1073,"src":"210:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":296,"src":"271:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":2475,"src":"331:51:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":6049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8652,"sourceUnit":814,"src":"384:58:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6051,"name":"ERC721A","nameLocations":["571:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10949,"src":"571:7:15"},"id":6052,"nodeType":"InheritanceSpecifier","src":"571:7:15"},{"baseName":{"id":6053,"name":"Ownable","nameLocations":["580:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"580:7:15"},"id":6054,"nodeType":"InheritanceSpecifier","src":"580:7:15"},{"baseName":{"id":6055,"name":"Pausable","nameLocations":["589:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"589:8:15"},"id":6056,"nodeType":"InheritanceSpecifier","src":"589:8:15"},{"baseName":{"id":6057,"name":"ReentrancyGuard","nameLocations":["599:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"599:15:15"},"id":6058,"nodeType":"InheritanceSpecifier","src":"599:15:15"},{"baseName":{"id":6059,"name":"AccessControl","nameLocations":["616:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"616:13:15"},"id":6060,"nodeType":"InheritanceSpecifier","src":"616:13:15"},{"baseName":{"id":6061,"name":"ERC2981","nameLocations":["631:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"631:7:15"},"id":6062,"nodeType":"InheritanceSpecifier","src":"631:7:15"}],"canonicalName":"Collection","contractDependencies":[],"contractKind":"contract","documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"446:100:15","text":" @title Collection\n @dev 배치 민팅 기능을 구현한 NFT 컬렉션 컨트랙트"},"fullyImplemented":true,"id":8651,"linearizedBaseContracts":[8651,813,295,2498,546,2510,378,1072,1003,526,843,10949,11170],"name":"Collection","nameLocation":"557:10:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6065,"libraryName":{"id":6063,"name":"Strings","nameLocations":["652:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2474,"src":"652:7:15"},"nodeType":"UsingForDirective","src":"646:26:15","typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"6ce76f30","id":6070,"mutability":"constant","name":"ESCROW_ROLE","nameLocation":"726:11:15","nodeType":"VariableDeclaration","scope":8651,"src":"702:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"702:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"455343524f575f524f4c45","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"750:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fdac322ee704ce09f0773f7f3f92eb98d5e7c836ee9c056cccd5f61041e5e3f","typeString":"literal_string \"ESCROW_ROLE\""},"value":"ESCROW_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2fdac322ee704ce09f0773f7f3f92eb98d5e7c836ee9c056cccd5f61041e5e3f","typeString":"literal_string \"ESCROW_ROLE\""}],"id":6067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"740:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"id":6075,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"832:10:15","nodeType":"VariableDeclaration","scope":8651,"src":"807:156:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"807:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5472616e7366657228616464726573732066726f6d2c6164647265737320746f2c75696e7432353620746f6b656e49642c6164647265737320766572696679696e67436f6e74726163742c75696e74323536206e6f6e63652c75696e7432353620636861696e496429","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"855:107:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5845c8b965119358c29037dc6226e8f2195e0d03c7d2055c52fb161f57928741","typeString":"literal_string \"Transfer(address from,address to,uint256 tokenId,address verifyingContract,uint256 nonce,uint256 chainId)\""},"value":"Transfer(address from,address to,uint256 tokenId,address verifyingContract,uint256 nonce,uint256 chainId)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5845c8b965119358c29037dc6226e8f2195e0d03c7d2055c52fb161f57928741","typeString":"literal_string \"Transfer(address from,address to,uint256 tokenId,address verifyingContract,uint256 nonce,uint256 chainId)\""}],"id":6072,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"845:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:118:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6077,"mutability":"mutable","name":"_DOMAIN_SEPARATOR","nameLocation":"1028:17:15","nodeType":"VariableDeclaration","scope":8651,"src":"1012:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1012:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"functionSelector":"233dedf1","id":6079,"mutability":"mutable","name":"averageBlockTime","nameLocation":"1115:16:15","nodeType":"VariableDeclaration","scope":8651,"src":"1100:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":6081,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1181:13:15","nodeType":"VariableDeclaration","scope":8651,"src":"1166:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6080,"name":"string","nodeType":"ElementaryTypeName","src":"1166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":6083,"mutability":"mutable","name":"_contractURI","nameLocation":"1216:12:15","nodeType":"VariableDeclaration","scope":8651,"src":"1201:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6082,"name":"string","nodeType":"ElementaryTypeName","src":"1201:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"9fd6db12","id":6085,"mutability":"mutable","name":"mintingEnabled","nameLocation":"1247:14:15","nodeType":"VariableDeclaration","scope":8651,"src":"1235:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6084,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":6087,"mutability":"mutable","name":"maxSupply","nameLocation":"1283:9:15","nodeType":"VariableDeclaration","scope":8651,"src":"1268:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6817c76c","id":6089,"mutability":"mutable","name":"mintPrice","nameLocation":"1314:9:15","nodeType":"VariableDeclaration","scope":8651,"src":"1299:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":6093,"mutability":"mutable","name":"_nonces","nameLocation":"1366:7:15","nodeType":"VariableDeclaration","scope":8651,"src":"1330:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6092,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6090,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1330:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"26f4c0c9dd9536441681c861e4c72684bbec9e4e6d7e4492c2a90ff07cf35c6f","id":6103,"name":"BatchMinted","nameLocation":"1413:11:15","nodeType":"EventDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1441:2:15","nodeType":"VariableDeclaration","scope":6103,"src":"1425:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6094,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6097,"indexed":false,"mutability":"mutable","name":"startTokenId","nameLocation":"1453:12:15","nodeType":"VariableDeclaration","scope":6103,"src":"1445:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6099,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"1475:8:15","nodeType":"VariableDeclaration","scope":6103,"src":"1467:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6101,"indexed":false,"mutability":"mutable","name":"gasPrice","nameLocation":"1493:8:15","nodeType":"VariableDeclaration","scope":6103,"src":"1485:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1424:78:15"},"src":"1407:96:15"},{"anonymous":false,"eventSelector":"1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2","id":6109,"name":"TokenBurned","nameLocation":"1515:11:15","nodeType":"EventDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1543:5:15","nodeType":"VariableDeclaration","scope":6109,"src":"1527:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6104,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6107,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1558:7:15","nodeType":"VariableDeclaration","scope":6109,"src":"1550:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:40:15"},"src":"1509:58:15"},{"anonymous":false,"eventSelector":"ae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c62","id":6115,"name":"RoyaltyInfoUpdated","nameLocation":"1579:18:15","nodeType":"EventDefinition","parameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1614:8:15","nodeType":"VariableDeclaration","scope":6115,"src":"1598:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6110,"name":"address","nodeType":"ElementaryTypeName","src":"1598:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6113,"indexed":false,"mutability":"mutable","name":"basisPoints","nameLocation":"1631:11:15","nodeType":"VariableDeclaration","scope":6115,"src":"1624:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6112,"name":"uint96","nodeType":"ElementaryTypeName","src":"1624:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1597:46:15"},"src":"1573:71:15"},{"anonymous":false,"eventSelector":"6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad","id":6119,"name":"BaseURIUpdated","nameLocation":"1656:14:15","nodeType":"EventDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"indexed":false,"mutability":"mutable","name":"baseURI","nameLocation":"1678:7:15","nodeType":"VariableDeclaration","scope":6119,"src":"1671:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6116,"name":"string","nodeType":"ElementaryTypeName","src":"1671:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1670:16:15"},"src":"1650:37:15"},{"anonymous":false,"eventSelector":"905d981207a7d0b6c62cc46ab0be2a076d0298e4a86d0ab79882dbd01ac37378","id":6123,"name":"ContractURIUpdated","nameLocation":"1699:18:15","nodeType":"EventDefinition","parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"indexed":false,"mutability":"mutable","name":"contractURI","nameLocation":"1725:11:15","nodeType":"VariableDeclaration","scope":6123,"src":"1718:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6120,"name":"string","nodeType":"ElementaryTypeName","src":"1718:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1717:20:15"},"src":"1693:45:15"},{"anonymous":false,"eventSelector":"f62079051152e03bd87f33518b9ce4a5564414395b75afeef8a467e7ca4ee91b","id":6127,"name":"MintingStatusUpdated","nameLocation":"1750:20:15","nodeType":"EventDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1776:7:15","nodeType":"VariableDeclaration","scope":6127,"src":"1771:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6124,"name":"bool","nodeType":"ElementaryTypeName","src":"1771:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1770:14:15"},"src":"1744:41:15"},{"anonymous":false,"eventSelector":"2e1c9e000c6e8dda4d03536adb13b7cb6034ccff90d17f01de381e4d5097b525","id":6133,"name":"MintPriceUpdated","nameLocation":"1797:16:15","nodeType":"EventDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"indexed":false,"mutability":"mutable","name":"oldPrice","nameLocation":"1822:8:15","nodeType":"VariableDeclaration","scope":6133,"src":"1814:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6131,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"1840:8:15","nodeType":"VariableDeclaration","scope":6133,"src":"1832:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1813:36:15"},"src":"1791:59:15"},{"anonymous":false,"eventSelector":"24859c978b6d14d129380f4145e897fce2d691a5f6cf3983b43ce79cd6ba75a9","id":6137,"name":"GlobalLockupPeriodUpdated","nameLocation":"1862:25:15","nodeType":"EventDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"indexed":false,"mutability":"mutable","name":"period","nameLocation":"1896:6:15","nodeType":"VariableDeclaration","scope":6137,"src":"1888:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:16:15"},"src":"1856:48:15"},{"anonymous":false,"eventSelector":"f25fd82f8bf40df41b90b95a0159c55596f50b182d7b7dff1d3e04a5a16ac7c4","id":6145,"name":"TokenLocked","nameLocation":"1916:11:15","nodeType":"EventDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1944:7:15","nodeType":"VariableDeclaration","scope":6145,"src":"1928:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6141,"indexed":false,"mutability":"mutable","name":"lockedAt","nameLocation":"1961:8:15","nodeType":"VariableDeclaration","scope":6145,"src":"1953:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6143,"indexed":false,"mutability":"mutable","name":"unlockScheduledAt","nameLocation":"1979:17:15","nodeType":"VariableDeclaration","scope":6145,"src":"1971:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1927:70:15"},"src":"1910:88:15"},{"anonymous":false,"eventSelector":"5114e731f472514591aa5a2e7254174b62963e757a427cf9e9b069666478b060","id":6151,"name":"TokenUnlocked","nameLocation":"2010:13:15","nodeType":"EventDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2040:7:15","nodeType":"VariableDeclaration","scope":6151,"src":"2024:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6149,"indexed":false,"mutability":"mutable","name":"unlockedAt","nameLocation":"2057:10:15","nodeType":"VariableDeclaration","scope":6151,"src":"2049:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2023:45:15"},"src":"2004:65:15"},{"anonymous":false,"eventSelector":"31c682dcd71348807b079d0cb25bf0c85c9e75f84a8b7b31111ba081e52817f3","id":6155,"name":"EscrowRoleGranted","nameLocation":"2081:17:15","nodeType":"EventDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2115:7:15","nodeType":"VariableDeclaration","scope":6155,"src":"2099:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6152,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2098:25:15"},"src":"2075:49:15"},{"anonymous":false,"eventSelector":"4a84a984790b90cdc99acb8cf998c3f36e0efefd6a3f5b47dcaf480f6a1862c2","id":6159,"name":"EscrowRoleRevoked","nameLocation":"2136:17:15","nodeType":"EventDefinition","parameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2170:7:15","nodeType":"VariableDeclaration","scope":6159,"src":"2154:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6156,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2153:25:15"},"src":"2130:49:15"},{"anonymous":false,"eventSelector":"e37e962447c072d61e0164c30f30d2a3f4752dea7a7224ffd42d5fc2586b02d5","id":6169,"name":"EscrowTransferred","nameLocation":"2191:17:15","nodeType":"EventDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2225:4:15","nodeType":"VariableDeclaration","scope":6169,"src":"2209:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6160,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6163,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2247:2:15","nodeType":"VariableDeclaration","scope":6169,"src":"2231:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6162,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6165,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2259:7:15","nodeType":"VariableDeclaration","scope":6169,"src":"2251:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6167,"indexed":false,"mutability":"mutable","name":"gasPrice","nameLocation":"2276:8:15","nodeType":"VariableDeclaration","scope":6169,"src":"2268:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2268:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2208:77:15"},"src":"2185:101:15"},{"constant":false,"functionSelector":"80c47440","id":6171,"mutability":"mutable","name":"globalLockupPeriod","nameLocation":"2338:18:15","nodeType":"VariableDeclaration","scope":8651,"src":"2323:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dcae6754","id":6175,"mutability":"mutable","name":"lockedAt","nameLocation":"2445:8:15","nodeType":"VariableDeclaration","scope":8651,"src":"2410:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6174,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2410:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"a5f10fe7","id":6179,"mutability":"mutable","name":"unlockScheduledAt","nameLocation":"2525:17:15","nodeType":"VariableDeclaration","scope":8651,"src":"2490:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6178,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2490:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c4228aaa","id":6183,"mutability":"mutable","name":"unlockedAt","nameLocation":"2645:10:15","nodeType":"VariableDeclaration","scope":8651,"src":"2610:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6182,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2610:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"f050b2baf6ca05cd2c20249f287d6e7e119daab008a714d9784ce99ca6024933","id":6193,"name":"BatchMintGasInfo","nameLocation":"2764:16:15","nodeType":"EventDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2797:2:15","nodeType":"VariableDeclaration","scope":6193,"src":"2781:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6184,"name":"address","nodeType":"ElementaryTypeName","src":"2781:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6187,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"2809:8:15","nodeType":"VariableDeclaration","scope":6193,"src":"2801:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6189,"indexed":false,"mutability":"mutable","name":"gasPrice","nameLocation":"2827:8:15","nodeType":"VariableDeclaration","scope":6193,"src":"2819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6191,"indexed":false,"mutability":"mutable","name":"estimatedTime","nameLocation":"2845:13:15","nodeType":"VariableDeclaration","scope":6193,"src":"2837:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2837:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2780:79:15"},"src":"2758:102:15"},{"anonymous":false,"eventSelector":"be1531878ca10f11c57318847b09788b90ed4e6dd52b36836be286097a74ff4f","id":6199,"name":"AverageBlockTimeUpdated","nameLocation":"2872:23:15","nodeType":"EventDefinition","parameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"indexed":false,"mutability":"mutable","name":"oldBlockTime","nameLocation":"2904:12:15","nodeType":"VariableDeclaration","scope":6199,"src":"2896:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6197,"indexed":false,"mutability":"mutable","name":"newBlockTime","nameLocation":"2926:12:15","nodeType":"VariableDeclaration","scope":6199,"src":"2918:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2918:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2895:44:15"},"src":"2866:74:15"},{"anonymous":false,"eventSelector":"c6547c0333e4388a6f451f8c57798cd08546b7988001147672596626d4f04abd","id":6211,"name":"EscrowBatchMinted","nameLocation":"2952:17:15","nodeType":"EventDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"indexed":true,"mutability":"mutable","name":"escrow","nameLocation":"2986:6:15","nodeType":"VariableDeclaration","scope":6211,"src":"2970:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6200,"name":"address","nodeType":"ElementaryTypeName","src":"2970:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6203,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3010:2:15","nodeType":"VariableDeclaration","scope":6211,"src":"2994:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6202,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6205,"indexed":false,"mutability":"mutable","name":"fromTokenId","nameLocation":"3022:11:15","nodeType":"VariableDeclaration","scope":6211,"src":"3014:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6207,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"3043:8:15","nodeType":"VariableDeclaration","scope":6211,"src":"3035:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6209,"indexed":false,"mutability":"mutable","name":"gasPrice","nameLocation":"3061:8:15","nodeType":"VariableDeclaration","scope":6211,"src":"3053:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2969:101:15"},"src":"2946:125:15"},{"body":{"id":6303,"nodeType":"Block","src":"3403:906:15","statements":[{"expression":{"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"3414:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6236,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"3426:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3414:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6238,"nodeType":"ExpressionStatement","src":"3414:22:15"},{"expression":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6239,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"3447:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6240,"name":"initialMintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"3459:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3447:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6242,"nodeType":"ExpressionStatement","src":"3447:28:15"},{"expression":{"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6243,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"3486:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6244,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"3502:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3486:23:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6246,"nodeType":"ExpressionStatement","src":"3486:23:15"},{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6247,"name":"_contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"3520:12:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6248,"name":"contractURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"3535:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3520:27:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6250,"nodeType":"ExpressionStatement","src":"3520:27:15"},{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6251,"name":"mintingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"3558:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3575:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3558:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6254,"nodeType":"ExpressionStatement","src":"3558:22:15"},{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6255,"name":"globalLockupPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"3591:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3591:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6258,"nodeType":"ExpressionStatement","src":"3591:22:15"},{"expression":{"arguments":[{"id":6260,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3716:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6261,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"3736:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6259,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3705:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6263,"nodeType":"ExpressionStatement","src":"3705:44:15"},{"expression":{"arguments":[{"id":6265,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3771:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6266,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"3784:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6264,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3760:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6268,"nodeType":"ExpressionStatement","src":"3760:37:15"},{"expression":{"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6269,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3865:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3948:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":6273,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3938:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6279,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"4068:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4062:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6277,"name":"bytes","nodeType":"ElementaryTypeName","src":"4062:5:15","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6276,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4052:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4052:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4103:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6283,"name":"bytes","nodeType":"ElementaryTypeName","src":"4103:5:15","typeDescriptions":{}}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6282,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4093:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6288,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4133:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4139:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4133:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6292,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4173:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}],"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4165:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6290,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:15","typeDescriptions":{}}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4165:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6271,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3909:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3913:6:15","memberName":"encode","nodeType":"MemberAccess","src":"3909:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3909:284:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6270,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3885:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3885:319:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3865:339:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6297,"nodeType":"ExpressionStatement","src":"3865:339:15"},{"expression":{"arguments":[{"id":6299,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"4285:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4299:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6298,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4266:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"ExpressionStatement","src":"4266:35:15"}]},"id":6304,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6228,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"3367:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6229,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"3373:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6230,"kind":"baseConstructorSpecifier","modifierName":{"id":6227,"name":"ERC721A","nameLocations":["3359:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10949,"src":"3359:7:15"},"nodeType":"ModifierInvocation","src":"3359:21:15"},{"arguments":[{"id":6232,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"3389:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6233,"kind":"baseConstructorSpecifier","modifierName":{"id":6231,"name":"Ownable","nameLocations":["3381:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"3381:7:15"},"nodeType":"ModifierInvocation","src":"3381:21:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"name","nameLocation":"3152:4:15","nodeType":"VariableDeclaration","scope":6304,"src":"3138:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6212,"name":"string","nodeType":"ElementaryTypeName","src":"3138:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6215,"mutability":"mutable","name":"symbol","nameLocation":"3181:6:15","nodeType":"VariableDeclaration","scope":6304,"src":"3167:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6214,"name":"string","nodeType":"ElementaryTypeName","src":"3167:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"initialOwner","nameLocation":"3206:12:15","nodeType":"VariableDeclaration","scope":6304,"src":"3198:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6216,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"_maxSupply","nameLocation":"3237:10:15","nodeType":"VariableDeclaration","scope":6304,"src":"3229:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"initialMintPrice","nameLocation":"3266:16:15","nodeType":"VariableDeclaration","scope":6304,"src":"3258:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6223,"mutability":"mutable","name":"baseURI","nameLocation":"3307:7:15","nodeType":"VariableDeclaration","scope":6304,"src":"3293:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6222,"name":"string","nodeType":"ElementaryTypeName","src":"3293:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"contractURI_","nameLocation":"3339:12:15","nodeType":"VariableDeclaration","scope":6304,"src":"3325:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6224,"name":"string","nodeType":"ElementaryTypeName","src":"3325:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3127:231:15"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[],"src":"3403:0:15"},"scope":8651,"src":"3116:1193:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6322,"nodeType":"Block","src":"4504:92:15","statements":[{"expression":{"arguments":[{"id":6314,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"4525:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6315,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"4538:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6313,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4515:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6317,"nodeType":"ExpressionStatement","src":"4515:31:15"},{"eventCall":{"arguments":[{"id":6319,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"4580:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6318,"name":"EscrowRoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"4562:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6321,"nodeType":"EmitStatement","src":"4557:31:15"}]},"documentation":{"id":6305,"nodeType":"StructuredDocumentation","src":"4321:104:15","text":" @dev ESCROW 역할 부여\n @param account: ESCROW 역할을 부여할 계정"},"functionSelector":"6cc232e9","id":6323,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6310,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"4491:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6311,"kind":"modifierInvocation","modifierName":{"id":6309,"name":"onlyRole","nameLocations":["4482:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4482:8:15"},"nodeType":"ModifierInvocation","src":"4482:21:15"}],"name":"grantEscrowRole","nameLocation":"4440:15:15","nodeType":"FunctionDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"account","nameLocation":"4464:7:15","nodeType":"VariableDeclaration","scope":6323,"src":"4456:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6306,"name":"address","nodeType":"ElementaryTypeName","src":"4456:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4455:17:15"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[],"src":"4504:0:15"},"scope":8651,"src":"4431:165:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6341,"nodeType":"Block","src":"4792:93:15","statements":[{"expression":{"arguments":[{"id":6333,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"4814:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6334,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"4827:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6332,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"4803:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6336,"nodeType":"ExpressionStatement","src":"4803:32:15"},{"eventCall":{"arguments":[{"id":6338,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"4869:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6337,"name":"EscrowRoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"4851:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6340,"nodeType":"EmitStatement","src":"4846:31:15"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"4608:104:15","text":" @dev ESCROW 역할 박탈\n @param account: ESCROW 역할을 박탈할 계정"},"functionSelector":"f12e061b","id":6342,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6329,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"4779:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6330,"kind":"modifierInvocation","modifierName":{"id":6328,"name":"onlyRole","nameLocations":["4770:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4770:8:15"},"nodeType":"ModifierInvocation","src":"4770:21:15"}],"name":"revokeEscrowRole","nameLocation":"4727:16:15","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"account","nameLocation":"4752:7:15","nodeType":"VariableDeclaration","scope":6342,"src":"4744:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6325,"name":"address","nodeType":"ElementaryTypeName","src":"4744:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4743:17:15"},"returnParameters":{"id":6331,"nodeType":"ParameterList","parameters":[],"src":"4792:0:15"},"scope":8651,"src":"4718:167:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6354,"nodeType":"Block","src":"5102:40:15","statements":[{"expression":{"baseExpression":{"id":6350,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"5120:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6352,"indexExpression":{"id":6351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"5128:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5120:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6349,"id":6353,"nodeType":"Return","src":"5113:21:15"}]},"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"4897:139:15","text":" @dev 사용자의 현재 Nonce 조회\n @param owner: 사용자 주소\n @return 사용자의 현재 Nonce"},"functionSelector":"70ae92d2","id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"5051:5:15","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"owner","nameLocation":"5065:5:15","nodeType":"VariableDeclaration","scope":6355,"src":"5057:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6344,"name":"address","nodeType":"ElementaryTypeName","src":"5057:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5056:15:15"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"5093:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5092:9:15"},"scope":8651,"src":"5042:100:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6363,"nodeType":"Block","src":"5305:43:15","statements":[{"expression":{"id":6361,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"5323:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6360,"id":6362,"nodeType":"Return","src":"5316:24:15"}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"5154:88:15","text":" @dev 도메인 분리자 조회\n @return 도메인 분리자"},"functionSelector":"f698da25","id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"5257:15:15","nodeType":"FunctionDefinition","parameters":{"id":6357,"nodeType":"ParameterList","parameters":[],"src":"5272:2:15"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"5296:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5296:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5295:9:15"},"scope":8651,"src":"5248:100:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6429,"nodeType":"Block","src":"5722:658:15","statements":[{"assignments":[6377],"declarations":[{"constant":false,"id":6377,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"5741:20:15","nodeType":"VariableDeclaration","scope":6429,"src":"5733:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5733:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6385,"initialValue":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5823:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":6382,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"5876:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6379,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5788:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5792:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"5788:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5788:114:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6378,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5764:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5764:149:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5733:180:15"},{"assignments":[6387,6389,6391],"declarations":[{"constant":false,"id":6387,"mutability":"mutable","name":"r","nameLocation":"5943:1:15","nodeType":"VariableDeclaration","scope":6429,"src":"5935:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5935:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6389,"mutability":"mutable","name":"s","nameLocation":"5954:1:15","nodeType":"VariableDeclaration","scope":6429,"src":"5946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5946:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6391,"mutability":"mutable","name":"v","nameLocation":"5963:1:15","nodeType":"VariableDeclaration","scope":6429,"src":"5957:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6390,"name":"uint8","nodeType":"ElementaryTypeName","src":"5957:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6395,"initialValue":{"arguments":[{"id":6393,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"5983:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6392,"name":"splitSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"5968:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"function (bytes memory) pure returns (bytes32,bytes32,uint8)"}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"tuple(bytes32,bytes32,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"5934:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6399,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"6070:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6062:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6062:7:15","typeDescriptions":{}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6062:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6076:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6062:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265202773272076616c7565","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6144:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b","typeString":"literal_string \"Invalid signature 's' value\""},"value":"Invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b","typeString":"literal_string \"Invalid signature 's' value\""}],"id":6396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6054:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6054:120:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"ExpressionStatement","src":"6054:120:15"},{"assignments":[6407],"declarations":[{"constant":false,"id":6407,"mutability":"mutable","name":"recoveredSigner","nameLocation":"6199:15:15","nodeType":"VariableDeclaration","scope":6429,"src":"6191:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6406,"name":"address","nodeType":"ElementaryTypeName","src":"6191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6414,"initialValue":{"arguments":[{"id":6409,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"6227:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6410,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6249:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6411,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"6252:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6412,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"6255:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6408,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6217:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6217:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6191:66:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"6276:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6417,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:15","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6307:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":6415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6268:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6268:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6424,"nodeType":"ExpressionStatement","src":"6268:59:15"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"6347:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6426,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"6366:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6347:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6375,"id":6428,"nodeType":"Return","src":"6340:32:15"}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"5360:207:15","text":" @dev 서명 검증\n @param signer: 서명자 주소\n @param messageHash: 메시지 해시\n @param signature: 서명 데이터\n @return 유효한 서명 여부"},"id":6430,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nameLocation":"5582:15:15","nodeType":"FunctionDefinition","parameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"signer","nameLocation":"5616:6:15","nodeType":"VariableDeclaration","scope":6430,"src":"5608:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6366,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6369,"mutability":"mutable","name":"messageHash","nameLocation":"5641:11:15","nodeType":"VariableDeclaration","scope":6430,"src":"5633:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5633:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6371,"mutability":"mutable","name":"signature","nameLocation":"5676:9:15","nodeType":"VariableDeclaration","scope":6430,"src":"5663:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6370,"name":"bytes","nodeType":"ElementaryTypeName","src":"5663:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5597:95:15"},"returnParameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"5716:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6373,"name":"bool","nodeType":"ElementaryTypeName","src":"5716:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5715:6:15"},"scope":8651,"src":"5573:807:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6476,"nodeType":"Block","src":"6597:410:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6443,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"6616:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6626:6:15","memberName":"length","nodeType":"MemberAccess","src":"6616:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6636:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"6616:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265206c656e677468","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6640:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c","typeString":"literal_string \"Invalid signature length\""},"value":"Invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c","typeString":"literal_string \"Invalid signature length\""}],"id":6442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6608:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6449,"nodeType":"ExpressionStatement","src":"6608:59:15"},{"AST":{"nativeSrc":"6689:153:15","nodeType":"YulBlock","src":"6689:153:15","statements":[{"nativeSrc":"6704:30:15","nodeType":"YulAssignment","src":"6704:30:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"6719:9:15","nodeType":"YulIdentifier","src":"6719:9:15"},{"kind":"number","nativeSrc":"6730:2:15","nodeType":"YulLiteral","src":"6730:2:15","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6715:3:15","nodeType":"YulIdentifier","src":"6715:3:15"},"nativeSrc":"6715:18:15","nodeType":"YulFunctionCall","src":"6715:18:15"}],"functionName":{"name":"mload","nativeSrc":"6709:5:15","nodeType":"YulIdentifier","src":"6709:5:15"},"nativeSrc":"6709:25:15","nodeType":"YulFunctionCall","src":"6709:25:15"},"variableNames":[{"name":"r","nativeSrc":"6704:1:15","nodeType":"YulIdentifier","src":"6704:1:15"}]},{"nativeSrc":"6748:30:15","nodeType":"YulAssignment","src":"6748:30:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"6763:9:15","nodeType":"YulIdentifier","src":"6763:9:15"},{"kind":"number","nativeSrc":"6774:2:15","nodeType":"YulLiteral","src":"6774:2:15","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6759:3:15","nodeType":"YulIdentifier","src":"6759:3:15"},"nativeSrc":"6759:18:15","nodeType":"YulFunctionCall","src":"6759:18:15"}],"functionName":{"name":"mload","nativeSrc":"6753:5:15","nodeType":"YulIdentifier","src":"6753:5:15"},"nativeSrc":"6753:25:15","nodeType":"YulFunctionCall","src":"6753:25:15"},"variableNames":[{"name":"s","nativeSrc":"6748:1:15","nodeType":"YulIdentifier","src":"6748:1:15"}]},{"nativeSrc":"6792:39:15","nodeType":"YulAssignment","src":"6792:39:15","value":{"arguments":[{"kind":"number","nativeSrc":"6802:1:15","nodeType":"YulLiteral","src":"6802:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"6815:9:15","nodeType":"YulIdentifier","src":"6815:9:15"},{"kind":"number","nativeSrc":"6826:2:15","nodeType":"YulLiteral","src":"6826:2:15","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6811:3:15","nodeType":"YulIdentifier","src":"6811:3:15"},"nativeSrc":"6811:18:15","nodeType":"YulFunctionCall","src":"6811:18:15"}],"functionName":{"name":"mload","nativeSrc":"6805:5:15","nodeType":"YulIdentifier","src":"6805:5:15"},"nativeSrc":"6805:25:15","nodeType":"YulFunctionCall","src":"6805:25:15"}],"functionName":{"name":"byte","nativeSrc":"6797:4:15","nodeType":"YulIdentifier","src":"6797:4:15"},"nativeSrc":"6797:34:15","nodeType":"YulFunctionCall","src":"6797:34:15"},"variableNames":[{"name":"v","nativeSrc":"6792:1:15","nodeType":"YulIdentifier","src":"6792:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6436,"isOffset":false,"isSlot":false,"src":"6704:1:15","valueSize":1},{"declaration":6438,"isOffset":false,"isSlot":false,"src":"6748:1:15","valueSize":1},{"declaration":6433,"isOffset":false,"isSlot":false,"src":"6719:9:15","valueSize":1},{"declaration":6433,"isOffset":false,"isSlot":false,"src":"6763:9:15","valueSize":1},{"declaration":6433,"isOffset":false,"isSlot":false,"src":"6815:9:15","valueSize":1},{"declaration":6440,"isOffset":false,"isSlot":false,"src":"6792:1:15","valueSize":1}],"id":6450,"nodeType":"InlineAssembly","src":"6680:162:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6451,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"6858:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3237","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6862:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6858:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6459,"nodeType":"IfStatement","src":"6854:46:15","trueBody":{"id":6458,"nodeType":"Block","src":"6866:34:15","statements":[{"expression":{"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6454,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"6881:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3237","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6886:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6881:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6457,"nodeType":"ExpressionStatement","src":"6881:7:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6461,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"6920:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3237","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6925:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6920:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6464,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"6931:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3238","id":6465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6936:2:15","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6931:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6920:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265202776272076616c7565","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6940:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0","typeString":"literal_string \"Invalid signature 'v' value\""},"value":"Invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0","typeString":"literal_string \"Invalid signature 'v' value\""}],"id":6460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6912:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6912:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"ExpressionStatement","src":"6912:58:15"},{"expression":{"components":[{"id":6471,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"6991:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6472,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"6994:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6473,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"6997:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6990:9:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"tuple(bytes32,bytes32,uint8)"}},"functionReturnParameters":6441,"id":6475,"nodeType":"Return","src":"6983:16:15"}]},"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"6392:82:15","text":" @dev 서명 분리\n @param signature: 서명 데이터"},"id":6477,"implemented":true,"kind":"function","modifiers":[],"name":"splitSignature","nameLocation":"6489:14:15","nodeType":"FunctionDefinition","parameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"signature","nameLocation":"6517:9:15","nodeType":"VariableDeclaration","scope":6477,"src":"6504:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6432,"name":"bytes","nodeType":"ElementaryTypeName","src":"6504:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6503:24:15"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"r","nameLocation":"6568:1:15","nodeType":"VariableDeclaration","scope":6477,"src":"6560:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6560:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6438,"mutability":"mutable","name":"s","nameLocation":"6579:1:15","nodeType":"VariableDeclaration","scope":6477,"src":"6571:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6571:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"v","nameLocation":"6588:1:15","nodeType":"VariableDeclaration","scope":6477,"src":"6582:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6439,"name":"uint8","nodeType":"ElementaryTypeName","src":"6582:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6559:31:15"},"scope":8651,"src":"6480:527:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6523,"nodeType":"Block","src":"7380:631:15","statements":[{"assignments":[6490],"declarations":[{"constant":false,"id":6490,"mutability":"mutable","name":"currentNonce","nameLocation":"7399:12:15","nodeType":"VariableDeclaration","scope":6523,"src":"7391:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"7391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6494,"initialValue":{"baseExpression":{"id":6491,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"7414:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6493,"indexExpression":{"id":6492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7422:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7414:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7391:36:15"},{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"structHash","nameLocation":"7492:10:15","nodeType":"VariableDeclaration","scope":6523,"src":"7484:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7484:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6513,"initialValue":{"arguments":[{"arguments":[{"id":6500,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"7558:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6501,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7587:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6502,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"7610:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6503,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6506,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7665:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}],"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7657:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6504,"name":"address","nodeType":"ElementaryTypeName","src":"7657:7:15","typeDescriptions":{}}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7657:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6508,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"7689:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6509,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7720:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7726:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"7720:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6498,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7529:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7533:6:15","memberName":"encode","nodeType":"MemberAccess","src":"7529:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:219:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6497,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7505:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7505:254:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7484:275:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7902:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":6518,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"7931:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6519,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"7967:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6515,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7867:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7871:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7867:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:125:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6514,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7843:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7843:160:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6488,"id":6522,"nodeType":"Return","src":"7836:167:15"}]},"documentation":{"id":6478,"nodeType":"StructuredDocumentation","src":"7019:222:15","text":" @dev 메시지 해시 생성 (프론트엔드 서명에 활용)\n @param from: 보내는 주소\n @param to: 받는 주소\n @param tokenId: 토큰 ID\n @return 메시지 해시"},"functionSelector":"bc577940","id":6524,"implemented":true,"kind":"function","modifiers":[],"name":"getMessageHash","nameLocation":"7256:14:15","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"from","nameLocation":"7289:4:15","nodeType":"VariableDeclaration","scope":6524,"src":"7281:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6479,"name":"address","nodeType":"ElementaryTypeName","src":"7281:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6482,"mutability":"mutable","name":"to","nameLocation":"7312:2:15","nodeType":"VariableDeclaration","scope":6524,"src":"7304:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6481,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"tokenId","nameLocation":"7333:7:15","nodeType":"VariableDeclaration","scope":6524,"src":"7325:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"7325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7270:77:15"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6524,"src":"7371:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7371:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7370:9:15"},"scope":8651,"src":"7247:764:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6615,"nodeType":"Block","src":"8348:750:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6540,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"8375:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6541,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8395:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8395:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6539,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"8367:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8367:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":6545,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"8420:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8433:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8433:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6544,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"8412:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8367:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420616e2041444d494e206f7220455343524f57","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8466:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_38ecd89afeedea203d4db2e72466d06be07086444823a8c71beae0d2f049c419","typeString":"literal_string \"Caller is not an ADMIN or ESCROW\""},"value":"Caller is not an ADMIN or ESCROW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38ecd89afeedea203d4db2e72466d06be07086444823a8c71beae0d2f049c419","typeString":"literal_string \"Caller is not an ADMIN or ESCROW\""}],"id":6538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8359:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8359:142:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6552,"nodeType":"ExpressionStatement","src":"8359:142:15"},{"expression":{"arguments":[{"id":6554,"name":"mintingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"8520:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74696e67206973206e6f7420656e61626c6564","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8536:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e","typeString":"literal_string \"Minting is not enabled\""},"value":"Minting is not enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e","typeString":"literal_string \"Minting is not enabled\""}],"id":6553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8512:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8512:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6557,"nodeType":"ExpressionStatement","src":"8512:49:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6559,"name":"_totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9090,"src":"8580:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8580:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6561,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8597:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8580:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6563,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"8609:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8580:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c792072656163686564","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8620:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""},"value":"Max supply reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7","typeString":"literal_string \"Max supply reached\""}],"id":6558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8572:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8572:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6567,"nodeType":"ExpressionStatement","src":"8572:69:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"8660:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8674:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6570,"name":"address","nodeType":"ElementaryTypeName","src":"8666:7:15","typeDescriptions":{}}},"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8666:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8660:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8678:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":6568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8652:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8652:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6577,"nodeType":"ExpressionStatement","src":"8652:44:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8715:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8726:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8715:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207175616e74697479","id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8729:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""},"value":"Invalid quantity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""}],"id":6578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8707:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8707:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"ExpressionStatement","src":"8707:41:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"gasFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"8767:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8767:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320666565206d7573742062652067726561746572207468616e2030","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8779:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_07de7260ce0fce61391a54ab2faaa89075632badefdbb765c47f356421ad7685","typeString":"literal_string \"Gas fee must be greater than 0\""},"value":"Gas fee must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07de7260ce0fce61391a54ab2faaa89075632badefdbb765c47f356421ad7685","typeString":"literal_string \"Gas fee must be greater than 0\""}],"id":6585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8759:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8759:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6591,"nodeType":"ExpressionStatement","src":"8759:53:15"},{"assignments":[6593],"declarations":[{"constant":false,"id":6593,"mutability":"mutable","name":"gasPrice","nameLocation":"8904:8:15","nodeType":"VariableDeclaration","scope":6615,"src":"8896:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6592,"name":"uint256","nodeType":"ElementaryTypeName","src":"8896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6597,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6594,"name":"gasFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"8915:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8924:3:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"8915:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8896:31:15"},{"assignments":[6599],"declarations":[{"constant":false,"id":6599,"mutability":"mutable","name":"startTokenId","nameLocation":"8956:12:15","nodeType":"VariableDeclaration","scope":6615,"src":"8948:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6602,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6600,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"8971:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8948:37:15"},{"expression":{"arguments":[{"id":6604,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"9002:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6605,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"9006:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6603,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10208,"src":"8996:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6607,"nodeType":"ExpressionStatement","src":"8996:19:15"},{"eventCall":{"arguments":[{"id":6609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"9053:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6610,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"9057:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6611,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"9071:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6612,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"9081:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6608,"name":"BatchMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"9041:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9041:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6614,"nodeType":"EmitStatement","src":"9036:54:15"}]},"documentation":{"id":6525,"nodeType":"StructuredDocumentation","src":"8023:186:15","text":" @dev 배치 민팅 NFTs\n @param to: 민팅할 주소\n @param quantity: 민팅할 토큰 수\n @param gasFee: 트랜잭션 가스비 (gwei 단위)"},"functionSelector":"2a959b89","id":6616,"implemented":true,"kind":"function","modifiers":[{"id":6534,"kind":"modifierInvocation","modifierName":{"id":6533,"name":"nonReentrant","nameLocations":["8307:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1036,"src":"8307:12:15"},"nodeType":"ModifierInvocation","src":"8307:12:15"},{"id":6536,"kind":"modifierInvocation","modifierName":{"id":6535,"name":"whenNotPaused","nameLocations":["8329:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"8329:13:15"},"nodeType":"ModifierInvocation","src":"8329:13:15"}],"name":"batchMint","nameLocation":"8224:9:15","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"to","nameLocation":"8242:2:15","nodeType":"VariableDeclaration","scope":6616,"src":"8234:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6526,"name":"address","nodeType":"ElementaryTypeName","src":"8234:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6529,"mutability":"mutable","name":"quantity","nameLocation":"8254:8:15","nodeType":"VariableDeclaration","scope":6616,"src":"8246:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"8246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6531,"mutability":"mutable","name":"gasFee","nameLocation":"8272:6:15","nodeType":"VariableDeclaration","scope":6616,"src":"8264:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8233:46:15"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[],"src":"8348:0:15"},"scope":8651,"src":"8215:883:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9323],"body":{"id":6625,"nodeType":"Block","src":"9261:39:15","statements":[{"expression":{"id":6623,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"9279:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6622,"id":6624,"nodeType":"Return","src":"9272:20:15"}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"9106:82:15","text":" @dev 토큰 URI 조회 (컴퓨팅)\n @return 토큰 URI"},"id":6626,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"9203:8:15","nodeType":"FunctionDefinition","overrides":{"id":6619,"nodeType":"OverrideSpecifier","overrides":[],"src":"9228:8:15"},"parameters":{"id":6618,"nodeType":"ParameterList","parameters":[],"src":"9211:2:15"},"returnParameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6626,"src":"9246:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6620,"name":"string","nodeType":"ElementaryTypeName","src":"9246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9245:15:15"},"scope":8651,"src":"9194:106:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[9314],"body":{"id":6667,"nodeType":"Block","src":"9510:219:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":6637,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"9537:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6636,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"9529:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9529:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9547:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":6635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9521:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9521:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6641,"nodeType":"ExpressionStatement","src":"9521:49:15"},{"assignments":[6643],"declarations":[{"constant":false,"id":6643,"mutability":"mutable","name":"baseURI","nameLocation":"9597:7:15","nodeType":"VariableDeclaration","scope":6667,"src":"9583:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6642,"name":"string","nodeType":"ElementaryTypeName","src":"9583:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6646,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6644,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[6626],"referencedDeclaration":6626,"src":"9607:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9607:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"9583:34:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6649,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"9641:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9635:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6647,"name":"bytes","nodeType":"ElementaryTypeName","src":"9635:5:15","typeDescriptions":{}}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9650:6:15","memberName":"length","nodeType":"MemberAccess","src":"9635:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9635:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9719:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9635:86:15","trueExpression":{"arguments":[{"arguments":[{"id":6658,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"9687:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"9696:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9704:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1186,"src":"9696:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9696:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6656,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9670:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9674:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9670:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9670:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6654,"name":"string","nodeType":"ElementaryTypeName","src":"9663:6:15","typeDescriptions":{}}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6634,"id":6666,"nodeType":"Return","src":"9628:93:15"}]},"documentation":{"id":6627,"nodeType":"StructuredDocumentation","src":"9308:116:15","text":" @dev 토큰 URI 조회 (사용자)\n @param tokenId: 토큰 ID\n @return 토큰 URI"},"functionSelector":"c87b56dd","id":6668,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"9439:8:15","nodeType":"FunctionDefinition","overrides":{"id":6631,"nodeType":"OverrideSpecifier","overrides":[],"src":"9477:8:15"},"parameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"tokenId","nameLocation":"9456:7:15","nodeType":"VariableDeclaration","scope":6668,"src":"9448:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"9448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9447:17:15"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6668,"src":"9495:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6632,"name":"string","nodeType":"ElementaryTypeName","src":"9495:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9494:15:15"},"scope":8651,"src":"9430:299:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[9062],"body":{"id":6678,"nodeType":"Block","src":"9889:40:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6675,"name":"_totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9090,"src":"9907:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9907:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6674,"id":6677,"nodeType":"Return","src":"9900:21:15"}]},"documentation":{"id":6669,"nodeType":"StructuredDocumentation","src":"9737:84:15","text":" @dev 현재 총 공급량 조회\n @return 총 토큰 수"},"functionSelector":"18160ddd","id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"9836:11:15","nodeType":"FunctionDefinition","overrides":{"id":6671,"nodeType":"OverrideSpecifier","overrides":[],"src":"9862:8:15"},"parameters":{"id":6670,"nodeType":"ParameterList","parameters":[],"src":"9847:2:15"},"returnParameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6679,"src":"9880:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"9880:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9879:9:15"},"scope":8651,"src":"9827:102:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[10008],"body":{"id":6761,"nodeType":"Block","src":"10332:763:15","statements":[{"expression":{"arguments":[{"id":6697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"10371:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"10377:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6699,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"10381:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6700,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"10395:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6694,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10343:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Collection_$8651_$","typeString":"type(contract super Collection)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10349:21:15","memberName":"_beforeTokenTransfers","nodeType":"MemberAccess","referencedDeclaration":10008,"src":"10343:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10343:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6702,"nodeType":"ExpressionStatement","src":"10343:61:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"10488:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10504:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6704,"name":"address","nodeType":"ElementaryTypeName","src":"10496:7:15","typeDescriptions":{}}},"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10488:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"10510:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10524:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10516:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6710,"name":"address","nodeType":"ElementaryTypeName","src":"10516:7:15","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10516:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10510:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10488:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"10484:604:15","trueBody":{"id":6759,"nodeType":"Block","src":"10528:560:15","statements":[{"body":{"id":6757,"nodeType":"Block","src":"10645:432:15","statements":[{"assignments":[6727],"declarations":[{"constant":false,"id":6727,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:15","nodeType":"VariableDeclaration","scope":6757,"src":"10664:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6728,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"10682:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"10697:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10682:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10664:34:15"},{"condition":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10813:35:15","subExpression":{"arguments":[{"id":6733,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"10822:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6734,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10835:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6732,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"10814:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10814:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"10809:253:15","trueBody":{"id":6755,"nodeType":"Block","src":"10850:212:15","statements":[{"expression":{"arguments":[{"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10881:23:15","subExpression":{"arguments":[{"id":6740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"10896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6739,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"10882:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10882:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206c6f636b6564","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10906:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""},"value":"Token is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""}],"id":6738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10873:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10873:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"ExpressionStatement","src":"10873:51:15"},{"expression":{"arguments":[{"arguments":[{"id":6748,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"10974:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6749,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10983:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6747,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"10955:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10955:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10998:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_97666216b72413d890c8517dc824cbf15efb1096a696f65f8c05dbd1c81acff6","typeString":"literal_string \"Transfer caller is not owner nor approved\""},"value":"Transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97666216b72413d890c8517dc824cbf15efb1096a696f65f8c05dbd1c81acff6","typeString":"literal_string \"Transfer caller is not owner nor approved\""}],"id":6746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10947:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10947:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6754,"nodeType":"ExpressionStatement","src":"10947:95:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"10626:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6721,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"10630:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10626:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6758,"initializationExpression":{"assignments":[6717],"declarations":[{"constant":false,"id":6717,"mutability":"mutable","name":"i","nameLocation":"10619:1:15","nodeType":"VariableDeclaration","scope":6758,"src":"10611:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6716,"name":"uint256","nodeType":"ElementaryTypeName","src":"10611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6719,"initialValue":{"hexValue":"30","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10623:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10611:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10640:3:15","subExpression":{"id":6723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"10640:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6725,"nodeType":"ExpressionStatement","src":"10640:3:15"},"nodeType":"ForStatement","src":"10606:471:15"}]}}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"9941:213:15","text":" @dev 토큰 전송 전 실행되는 훅\n @param from: 보내는 주소\n @param to: 받는 주소\n @param startTokenId: 시작 토큰 ID\n @param quantity: 토큰 수"},"id":6762,"implemented":true,"kind":"function","modifiers":[{"id":6692,"kind":"modifierInvocation","modifierName":{"id":6691,"name":"whenNotPaused","nameLocations":["10318:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"10318:13:15"},"nodeType":"ModifierInvocation","src":"10318:13:15"}],"name":"_beforeTokenTransfers","nameLocation":"10169:21:15","nodeType":"FunctionDefinition","overrides":{"id":6690,"nodeType":"OverrideSpecifier","overrides":[],"src":"10309:8:15"},"parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"from","nameLocation":"10209:4:15","nodeType":"VariableDeclaration","scope":6762,"src":"10201:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6681,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6684,"mutability":"mutable","name":"to","nameLocation":"10232:2:15","nodeType":"VariableDeclaration","scope":6762,"src":"10224:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6683,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"startTokenId","nameLocation":"10253:12:15","nodeType":"VariableDeclaration","scope":6762,"src":"10245:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6688,"mutability":"mutable","name":"quantity","nameLocation":"10284:8:15","nodeType":"VariableDeclaration","scope":6762,"src":"10276:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10276:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10190:109:15"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[],"src":"10332:0:15"},"scope":8651,"src":"10160:935:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[62,623,9249],"body":{"id":6779,"nodeType":"Block","src":"11341:62:15","statements":[{"expression":{"arguments":[{"id":6776,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"11383:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6774,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11359:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Collection_$8651_$","typeString":"type(contract super Collection)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11365:17:15","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":623,"src":"11359:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11359:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6773,"id":6778,"nodeType":"Return","src":"11352:43:15"}]},"documentation":{"id":6763,"nodeType":"StructuredDocumentation","src":"11107:71:15","text":" @dev 인터페이스 지원 여부 확인 (ERC165)"},"functionSelector":"01ffc9a7","id":6780,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"11193:17:15","nodeType":"FunctionDefinition","overrides":{"id":6770,"nodeType":"OverrideSpecifier","overrides":[{"id":6767,"name":"ERC721A","nameLocations":["11279:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10949,"src":"11279:7:15"},{"id":6768,"name":"AccessControl","nameLocations":["11288:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"11288:13:15"},{"id":6769,"name":"ERC2981","nameLocations":["11303:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"11303:7:15"}],"src":"11270:41:15"},"parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"interfaceId","nameLocation":"11218:11:15","nodeType":"VariableDeclaration","scope":6780,"src":"11211:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6764,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11211:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"11210:20:15"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6780,"src":"11330:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6771,"name":"bool","nodeType":"ElementaryTypeName","src":"11330:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11329:6:15"},"scope":8651,"src":"11184:219:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6804,"nodeType":"Block","src":"11451:180:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":6787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"11489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6788,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"11498:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6786,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"11470:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11470:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11513:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c52d8a267cca22510f5a5b23cfd13135d738a215ab145957a8742a2248da059d","typeString":"literal_string \"Caller is not owner nor approved\""},"value":"Caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c52d8a267cca22510f5a5b23cfd13135d738a215ab145957a8742a2248da059d","typeString":"literal_string \"Caller is not owner nor approved\""}],"id":6785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11462:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11462:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6793,"nodeType":"ExpressionStatement","src":"11462:86:15"},{"expression":{"arguments":[{"id":6795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"11565:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6794,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[10674,10828],"referencedDeclaration":10674,"src":"11559:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11559:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6797,"nodeType":"ExpressionStatement","src":"11559:14:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6799,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"11601:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"11615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6798,"name":"TokenBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"11589:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11589:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6803,"nodeType":"EmitStatement","src":"11584:39:15"}]},"functionSelector":"42966c68","id":6805,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"11420:4:15","nodeType":"FunctionDefinition","parameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"tokenId","nameLocation":"11433:7:15","nodeType":"VariableDeclaration","scope":6805,"src":"11425:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11424:17:15"},"returnParameters":{"id":6784,"nodeType":"ParameterList","parameters":[],"src":"11451:0:15"},"scope":8651,"src":"11411:220:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6832,"nodeType":"Block","src":"11735:185:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6816,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"11754:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11769:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11754:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c74792063616e6e6f742065786365656420313025","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11775:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5","typeString":"literal_string \"Royalty cannot exceed 10%\""},"value":"Royalty cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5","typeString":"literal_string \"Royalty cannot exceed 10%\""}],"id":6815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11746:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11746:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"ExpressionStatement","src":"11746:57:15"},{"expression":{"arguments":[{"id":6823,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6807,"src":"11833:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6824,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"11843:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6822,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"11814:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11814:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6826,"nodeType":"ExpressionStatement","src":"11814:41:15"},{"eventCall":{"arguments":[{"id":6828,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6807,"src":"11890:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6829,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"11900:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6827,"name":"RoyaltyInfoUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"11871:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11871:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6831,"nodeType":"EmitStatement","src":"11866:46:15"}]},"functionSelector":"04634d8d","id":6833,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6812,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"11722:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6813,"kind":"modifierInvocation","modifierName":{"id":6811,"name":"onlyRole","nameLocations":["11713:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"11713:8:15"},"nodeType":"ModifierInvocation","src":"11713:21:15"}],"name":"setDefaultRoyalty","nameLocation":"11648:17:15","nodeType":"FunctionDefinition","parameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6807,"mutability":"mutable","name":"receiver","nameLocation":"11674:8:15","nodeType":"VariableDeclaration","scope":6833,"src":"11666:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6806,"name":"address","nodeType":"ElementaryTypeName","src":"11666:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6809,"mutability":"mutable","name":"basisPoints","nameLocation":"11691:11:15","nodeType":"VariableDeclaration","scope":6833,"src":"11684:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6808,"name":"uint96","nodeType":"ElementaryTypeName","src":"11684:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11665:38:15"},"returnParameters":{"id":6814,"nodeType":"ParameterList","parameters":[],"src":"11735:0:15"},"scope":8651,"src":"11639:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6870,"nodeType":"Block","src":"12065:252:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"12084:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12099:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12084:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c74792063616e6e6f742065786365656420313025","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12105:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5","typeString":"literal_string \"Royalty cannot exceed 10%\""},"value":"Royalty cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5","typeString":"literal_string \"Royalty cannot exceed 10%\""}],"id":6845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12076:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12076:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6851,"nodeType":"ExpressionStatement","src":"12076:57:15"},{"expression":{"arguments":[{"arguments":[{"id":6854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6853,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"12152:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":6856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12170:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":6852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12144:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12144:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6858,"nodeType":"ExpressionStatement","src":"12144:49:15"},{"expression":{"arguments":[{"id":6860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6861,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"12230:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6862,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"12240:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6859,"name":"_setTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"12204:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint96_$returns$__$","typeString":"function (uint256,address,uint96)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12204:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"ExpressionStatement","src":"12204:48:15"},{"eventCall":{"arguments":[{"id":6866,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"12287:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6867,"name":"basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"12297:11:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6865,"name":"RoyaltyInfoUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"12268:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12268:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6869,"nodeType":"EmitStatement","src":"12263:46:15"}]},"functionSelector":"5944c753","id":6871,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6842,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12046:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6843,"kind":"modifierInvocation","modifierName":{"id":6841,"name":"onlyRole","nameLocations":["12037:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12037:8:15"},"nodeType":"ModifierInvocation","src":"12037:21:15"}],"name":"setTokenRoyalty","nameLocation":"11937:15:15","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"tokenId","nameLocation":"11961:7:15","nodeType":"VariableDeclaration","scope":6871,"src":"11953:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6837,"mutability":"mutable","name":"receiver","nameLocation":"11978:8:15","nodeType":"VariableDeclaration","scope":6871,"src":"11970:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6836,"name":"address","nodeType":"ElementaryTypeName","src":"11970:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"basisPoints","nameLocation":"11995:11:15","nodeType":"VariableDeclaration","scope":6871,"src":"11988:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6838,"name":"uint96","nodeType":"ElementaryTypeName","src":"11988:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11952:55:15"},"returnParameters":{"id":6844,"nodeType":"ParameterList","parameters":[],"src":"12065:0:15"},"scope":8651,"src":"11928:389:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6887,"nodeType":"Block","src":"12400:83:15","statements":[{"expression":{"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6879,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"12411:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6880,"name":"baseURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"12427:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12411:24:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6882,"nodeType":"ExpressionStatement","src":"12411:24:15"},{"eventCall":{"arguments":[{"id":6884,"name":"baseURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"12466:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6883,"name":"BaseURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12451:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12451:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6886,"nodeType":"EmitStatement","src":"12446:29:15"}]},"functionSelector":"55f804b3","id":6888,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6876,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12387:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6877,"kind":"modifierInvocation","modifierName":{"id":6875,"name":"onlyRole","nameLocations":["12378:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12378:8:15"},"nodeType":"ModifierInvocation","src":"12378:21:15"}],"name":"setBaseURI","nameLocation":"12334:10:15","nodeType":"FunctionDefinition","parameters":{"id":6874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6873,"mutability":"mutable","name":"baseURI_","nameLocation":"12359:8:15","nodeType":"VariableDeclaration","scope":6888,"src":"12345:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6872,"name":"string","nodeType":"ElementaryTypeName","src":"12345:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12344:24:15"},"returnParameters":{"id":6878,"nodeType":"ParameterList","parameters":[],"src":"12400:0:15"},"scope":8651,"src":"12325:158:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6904,"nodeType":"Block","src":"12574:94:15","statements":[{"expression":{"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6896,"name":"_contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"12585:12:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6897,"name":"contractURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"12600:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12585:27:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6899,"nodeType":"ExpressionStatement","src":"12585:27:15"},{"eventCall":{"arguments":[{"id":6901,"name":"contractURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"12647:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6900,"name":"ContractURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"12628:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12628:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"EmitStatement","src":"12623:37:15"}]},"functionSelector":"938e3d7b","id":6905,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6893,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12561:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6894,"kind":"modifierInvocation","modifierName":{"id":6892,"name":"onlyRole","nameLocations":["12552:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12552:8:15"},"nodeType":"ModifierInvocation","src":"12552:21:15"}],"name":"setContractURI","nameLocation":"12500:14:15","nodeType":"FunctionDefinition","parameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"contractURI_","nameLocation":"12529:12:15","nodeType":"VariableDeclaration","scope":6905,"src":"12515:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6889,"name":"string","nodeType":"ElementaryTypeName","src":"12515:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12514:28:15"},"returnParameters":{"id":6895,"nodeType":"ParameterList","parameters":[],"src":"12574:0:15"},"scope":8651,"src":"12491:177:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6921,"nodeType":"Block","src":"12748:88:15","statements":[{"expression":{"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6913,"name":"mintingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"12759:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6914,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"12776:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12759:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6916,"nodeType":"ExpressionStatement","src":"12759:24:15"},{"eventCall":{"arguments":[{"id":6918,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"12820:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6917,"name":"MintingStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"12799:20:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12799:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"EmitStatement","src":"12794:34:15"}]},"functionSelector":"4ea3871a","id":6922,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6910,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12735:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6911,"kind":"modifierInvocation","modifierName":{"id":6909,"name":"onlyRole","nameLocations":["12726:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12726:8:15"},"nodeType":"ModifierInvocation","src":"12726:21:15"}],"name":"setMintingEnabled","nameLocation":"12685:17:15","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"enabled","nameLocation":"12708:7:15","nodeType":"VariableDeclaration","scope":6922,"src":"12703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6906,"name":"bool","nodeType":"ElementaryTypeName","src":"12703:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12702:14:15"},"returnParameters":{"id":6912,"nodeType":"ParameterList","parameters":[],"src":"12748:0:15"},"scope":8651,"src":"12676:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6931,"nodeType":"Block","src":"12892:27:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6928,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"12903:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12903:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6930,"nodeType":"ExpressionStatement","src":"12903:8:15"}]},"functionSelector":"8456cb59","id":6932,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6925,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12879:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6926,"kind":"modifierInvocation","modifierName":{"id":6924,"name":"onlyRole","nameLocations":["12870:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12870:8:15"},"nodeType":"ModifierInvocation","src":"12870:21:15"}],"name":"pause","nameLocation":"12853:5:15","nodeType":"FunctionDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[],"src":"12858:2:15"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[],"src":"12892:0:15"},"scope":8651,"src":"12844:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6941,"nodeType":"Block","src":"12977:29:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6938,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"12988:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6940,"nodeType":"ExpressionStatement","src":"12988:10:15"}]},"functionSelector":"3f4ba83a","id":6942,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6935,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12964:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6936,"kind":"modifierInvocation","modifierName":{"id":6934,"name":"onlyRole","nameLocations":["12955:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12955:8:15"},"nodeType":"ModifierInvocation","src":"12955:21:15"}],"name":"unpause","nameLocation":"12936:7:15","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[],"src":"12943:2:15"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[],"src":"12977:0:15"},"scope":8651,"src":"12927:79:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6971,"nodeType":"Block","src":"13205:231:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6952,"name":"blockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"13224:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13236:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13224:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426c6f636b2074696d65206d7573742062652067726561746572207468616e2030","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13239:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4a27a2e2c82d8782cc0401b203bdf7659e1e61d1765c5fb525048693d8d859b","typeString":"literal_string \"Block time must be greater than 0\""},"value":"Block time must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4a27a2e2c82d8782cc0401b203bdf7659e1e61d1765c5fb525048693d8d859b","typeString":"literal_string \"Block time must be greater than 0\""}],"id":6951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13216:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13216:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6957,"nodeType":"ExpressionStatement","src":"13216:59:15"},{"assignments":[6959],"declarations":[{"constant":false,"id":6959,"mutability":"mutable","name":"oldBlockTime","nameLocation":"13294:12:15","nodeType":"VariableDeclaration","scope":6971,"src":"13286:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6961,"initialValue":{"id":6960,"name":"averageBlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"13309:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13286:39:15"},{"expression":{"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6962,"name":"averageBlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"13336:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6963,"name":"blockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"13355:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13336:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6965,"nodeType":"ExpressionStatement","src":"13336:28:15"},{"eventCall":{"arguments":[{"id":6967,"name":"oldBlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"13404:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6968,"name":"blockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"13418:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6966,"name":"AverageBlockTimeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"13380:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13380:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6970,"nodeType":"EmitStatement","src":"13375:53:15"}]},"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"13014:106:15","text":" @dev 평균 블록 시간 설정\n @param blockTime: 블록 시간 (초 단위)"},"functionSelector":"3736d853","id":6972,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6948,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"13192:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6949,"kind":"modifierInvocation","modifierName":{"id":6947,"name":"onlyRole","nameLocations":["13183:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"13183:8:15"},"nodeType":"ModifierInvocation","src":"13183:21:15"}],"name":"setAverageBlockTime","nameLocation":"13135:19:15","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"blockTime","nameLocation":"13163:9:15","nodeType":"VariableDeclaration","scope":6972,"src":"13155:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"13155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13154:19:15"},"returnParameters":{"id":6950,"nodeType":"ParameterList","parameters":[],"src":"13205:0:15"},"scope":8651,"src":"13126:310:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7108,"nodeType":"Block","src":"14021:1576:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":6993,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"14048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6992,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"14040:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14040:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14058:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":6991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14032:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14032:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6997,"nodeType":"ExpressionStatement","src":"14032:49:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7000,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"14108:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6999,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"14100:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"14120:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14100:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46726f6d2061646472657373206973206e6f7420746865206f776e6572","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14126:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8319aeae59501de05041cb1f5b1b186c591092bd7f0bb220c7df139ae4452dd5","typeString":"literal_string \"From address is not the owner\""},"value":"From address is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8319aeae59501de05041cb1f5b1b186c591092bd7f0bb220c7df139ae4452dd5","typeString":"literal_string \"From address is not the owner\""}],"id":6998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14092:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14092:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"ExpressionStatement","src":"14092:66:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7008,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"14177:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14191:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14183:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7009,"name":"address","nodeType":"ElementaryTypeName","src":"14183:7:15","typeDescriptions":{}}},"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14183:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14177:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14195:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":7007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14169:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14169:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7016,"nodeType":"ExpressionStatement","src":"14169:60:15"},{"expression":{"arguments":[{"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14248:23:15","subExpression":{"arguments":[{"id":7019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"14263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7018,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"14249:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14249:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206c6f636b6564","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14273:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""},"value":"Token is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""}],"id":7017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14240:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14240:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"ExpressionStatement","src":"14240:51:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7026,"name":"gasFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"14310:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14310:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320666565206d7573742062652067726561746572207468616e2030","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14322:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_07de7260ce0fce61391a54ab2faaa89075632badefdbb765c47f356421ad7685","typeString":"literal_string \"Gas fee must be greater than 0\""},"value":"Gas fee must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07de7260ce0fce61391a54ab2faaa89075632badefdbb765c47f356421ad7685","typeString":"literal_string \"Gas fee must be greater than 0\""}],"id":7025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14302:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14302:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7031,"nodeType":"ExpressionStatement","src":"14302:53:15"},{"assignments":[7033],"declarations":[{"constant":false,"id":7033,"mutability":"mutable","name":"gasPrice","nameLocation":"14447:8:15","nodeType":"VariableDeclaration","scope":7108,"src":"14439:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"14439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7037,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"gasFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"14458:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14467:3:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"14458:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14439:31:15"},{"assignments":[7039],"declarations":[{"constant":false,"id":7039,"mutability":"mutable","name":"currentNonce","nameLocation":"14527:12:15","nodeType":"VariableDeclaration","scope":7108,"src":"14519:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7038,"name":"uint256","nodeType":"ElementaryTypeName","src":"14519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7043,"initialValue":{"baseExpression":{"id":7040,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"14542:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7042,"indexExpression":{"id":7041,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"14550:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14542:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14519:36:15"},{"assignments":[7045],"declarations":[{"constant":false,"id":7045,"mutability":"mutable","name":"structHash","nameLocation":"14574:10:15","nodeType":"VariableDeclaration","scope":7108,"src":"14566:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14566:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7062,"initialValue":{"arguments":[{"arguments":[{"id":7049,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"14640:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7050,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"14669:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7051,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"14692:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7052,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"14713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7055,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14747:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}],"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14739:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7053,"name":"address","nodeType":"ElementaryTypeName","src":"14739:7:15","typeDescriptions":{}}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14739:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7057,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"14771:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7058,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14802:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14808:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"14802:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7047,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14611:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14615:6:15","memberName":"encode","nodeType":"MemberAccess","src":"14611:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14611:219:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7046,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14587:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14587:254:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14566:275:15"},{"assignments":[7064],"declarations":[{"constant":false,"id":7064,"mutability":"mutable","name":"messageHash","nameLocation":"14862:11:15","nodeType":"VariableDeclaration","scope":7108,"src":"14854:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14854:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7073,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14935:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":7069,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"14964:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7070,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"15000:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7066,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14900:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14904:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"14900:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14900:125:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7065,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14876:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14876:160:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14854:182:15"},{"expression":{"arguments":[{"arguments":[{"id":7076,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"15099:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7077,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"15105:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7078,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"15118:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7075,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"15083:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) pure returns (bool)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15083:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15130:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15075:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15075:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7082,"nodeType":"ExpressionStatement","src":"15075:75:15"},{"expression":{"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15188:15:15","subExpression":{"baseExpression":{"id":7083,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"15188:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7085,"indexExpression":{"id":7084,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"15196:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15188:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7087,"nodeType":"ExpressionStatement","src":"15188:15:15"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7089,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"15307:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15307:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"15321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15330:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7088,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10612,10662],"referencedDeclaration":10662,"src":"15298:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15298:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7094,"nodeType":"ExpressionStatement","src":"15298:38:15"},{"expression":{"arguments":[{"id":7096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"15453:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7097,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"15459:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"15463:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7095,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"15440:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15440:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7100,"nodeType":"ExpressionStatement","src":"15440:31:15"},{"eventCall":{"arguments":[{"id":7102,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"15561:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"15567:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"15571:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7105,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"15580:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7101,"name":"EscrowTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"15543:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"EmitStatement","src":"15538:51:15"}]},"documentation":{"id":6973,"nodeType":"StructuredDocumentation","src":"13444:367:15","text":" @dev 에스크로 전송 (서명 기반)\n @notice 가스비를 ESCROW_ROLE이 대신 지불하는 전송 방식\n @param from: 토큰 소유자 주소\n @param to: 받는 주소\n @param tokenId: 전송할 토큰 ID\n @param signature: 소유자의 서명\n @param gasFee: 트랜잭션 가스비 (gwei 단위)"},"functionSelector":"82666bc8","id":7109,"implemented":true,"kind":"function","modifiers":[{"id":6986,"kind":"modifierInvocation","modifierName":{"id":6985,"name":"whenNotPaused","nameLocations":["13985:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"13985:13:15"},"nodeType":"ModifierInvocation","src":"13985:13:15"},{"arguments":[{"id":6988,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14008:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6989,"kind":"modifierInvocation","modifierName":{"id":6987,"name":"onlyRole","nameLocations":["13999:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"13999:8:15"},"nodeType":"ModifierInvocation","src":"13999:21:15"}],"name":"escrowTransfer","nameLocation":"13826:14:15","nodeType":"FunctionDefinition","parameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"from","nameLocation":"13859:4:15","nodeType":"VariableDeclaration","scope":7109,"src":"13851:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6974,"name":"address","nodeType":"ElementaryTypeName","src":"13851:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"to","nameLocation":"13882:2:15","nodeType":"VariableDeclaration","scope":7109,"src":"13874:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6976,"name":"address","nodeType":"ElementaryTypeName","src":"13874:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"tokenId","nameLocation":"13903:7:15","nodeType":"VariableDeclaration","scope":7109,"src":"13895:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"13895:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6981,"mutability":"mutable","name":"signature","nameLocation":"13934:9:15","nodeType":"VariableDeclaration","scope":7109,"src":"13921:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6980,"name":"bytes","nodeType":"ElementaryTypeName","src":"13921:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6983,"mutability":"mutable","name":"gasFee","nameLocation":"13962:6:15","nodeType":"VariableDeclaration","scope":7109,"src":"13954:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"13954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13840:135:15"},"returnParameters":{"id":6990,"nodeType":"ParameterList","parameters":[],"src":"14021:0:15"},"scope":8651,"src":"13817:1780:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7117,"nodeType":"Block","src":"15767:43:15","statements":[{"expression":{"id":7115,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"15785:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7114,"id":7116,"nodeType":"Return","src":"15778:24:15"}]},"documentation":{"id":7110,"nodeType":"StructuredDocumentation","src":"15605:96:15","text":" @dev EIP-712 도메인 분리자 조회\n @return 도메인 분리자"},"functionSelector":"ed24911d","id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"15716:18:15","nodeType":"FunctionDefinition","parameters":{"id":7111,"nodeType":"ParameterList","parameters":[],"src":"15734:2:15"},"returnParameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"15758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15758:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15757:9:15"},"scope":8651,"src":"15707:103:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7150,"nodeType":"Block","src":"16099:158:15","statements":[{"assignments":[7129],"declarations":[{"constant":false,"id":7129,"mutability":"mutable","name":"owner","nameLocation":"16118:5:15","nodeType":"VariableDeclaration","scope":7150,"src":"16110:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7128,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7133,"initialValue":{"arguments":[{"id":7131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"16134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7130,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"16126:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16126:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16110:32:15"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"16161:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"16172:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16161:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7138,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"16198:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"16205:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7137,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"16181:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16181:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16161:52:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7143,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"16229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7142,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"16217:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16217:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7145,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"16241:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16217:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16161:87:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16160:89:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7127,"id":7149,"nodeType":"Return","src":"16153:96:15"}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"15818:184:15","text":" @dev 토큰 소유자 또는 승인된 주소인지 확인\n @param tokenId: 토큰 ID\n @param spender: 확인할 주소\n @return 승인 여부"},"id":7151,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"16017:18:15","nodeType":"FunctionDefinition","parameters":{"id":7124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"tokenId","nameLocation":"16044:7:15","nodeType":"VariableDeclaration","scope":7151,"src":"16036:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7123,"mutability":"mutable","name":"spender","nameLocation":"16061:7:15","nodeType":"VariableDeclaration","scope":7151,"src":"16053:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7122,"name":"address","nodeType":"ElementaryTypeName","src":"16053:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16035:34:15"},"returnParameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7151,"src":"16093:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7125,"name":"bool","nodeType":"ElementaryTypeName","src":"16093:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16092:6:15"},"scope":8651,"src":"16008:249:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7203,"nodeType":"Block","src":"16683:644:15","statements":[{"condition":{"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16698:17:15","subExpression":{"arguments":[{"id":7160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"16707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7159,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"16699:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16699:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7166,"nodeType":"IfStatement","src":"16694:62:15","trueBody":{"id":7165,"nodeType":"Block","src":"16717:39:15","statements":[{"expression":{"hexValue":"66616c7365","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16739:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7158,"id":7164,"nodeType":"Return","src":"16732:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7167,"name":"unlockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"16823:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7169,"indexExpression":{"id":7168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"16834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16823:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16845:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16823:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7175,"nodeType":"IfStatement","src":"16819:68:15","trueBody":{"id":7174,"nodeType":"Block","src":"16848:39:15","statements":[{"expression":{"hexValue":"66616c7365","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16870:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7158,"id":7173,"nodeType":"Return","src":"16863:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7176,"name":"lockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"16955:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7178,"indexExpression":{"id":7177,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"16964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16955:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16976:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16955:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7184,"nodeType":"IfStatement","src":"16951:67:15","trueBody":{"id":7183,"nodeType":"Block","src":"16979:39:15","statements":[{"expression":{"hexValue":"66616c7365","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7158,"id":7182,"nodeType":"Return","src":"16994:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7185,"name":"unlockScheduledAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"17121:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7187,"indexExpression":{"id":7186,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"17139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17121:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17151:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17121:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7190,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17156:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17162:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"17156:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":7192,"name":"unlockScheduledAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"17175:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7194,"indexExpression":{"id":7193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"17193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17175:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17156:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17121:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7200,"nodeType":"IfStatement","src":"17117:125:15","trueBody":{"id":7199,"nodeType":"Block","src":"17203:39:15","statements":[{"expression":{"hexValue":"66616c7365","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17225:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7158,"id":7198,"nodeType":"Return","src":"17218:12:15"}]}},{"expression":{"hexValue":"74727565","id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17315:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7158,"id":7202,"nodeType":"Return","src":"17308:11:15"}]},"documentation":{"id":7152,"nodeType":"StructuredDocumentation","src":"16456:154:15","text":" @dev 토큰 락업 상태 확인\n @param tokenId: 토큰 ID\n @return 락업 상태 (true: 락업, false: 락업 해제)"},"functionSelector":"276a28a3","id":7204,"implemented":true,"kind":"function","modifiers":[],"name":"isTokenLocked","nameLocation":"16625:13:15","nodeType":"FunctionDefinition","parameters":{"id":7155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"tokenId","nameLocation":"16647:7:15","nodeType":"VariableDeclaration","scope":7204,"src":"16639:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16639:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16638:17:15"},"returnParameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7204,"src":"16677:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7156,"name":"bool","nodeType":"ElementaryTypeName","src":"16677:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16676:6:15"},"scope":8651,"src":"16616:711:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7271,"nodeType":"Block","src":"17624:544:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7217,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"17651:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"17643:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17643:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17661:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17635:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17635:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7221,"nodeType":"ExpressionStatement","src":"17635:49:15"},{"expression":{"arguments":[{"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17703:23:15","subExpression":{"arguments":[{"id":7224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"17718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7223,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17704:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17704:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20697320616c7265616479206c6f636b6564","id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6522f61249cd006741e70b982be43809220419afb4a762e5f791fd057664f2f","typeString":"literal_string \"Token is already locked\""},"value":"Token is already locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6522f61249cd006741e70b982be43809220419afb4a762e5f791fd057664f2f","typeString":"literal_string \"Token is already locked\""}],"id":7222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17695:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17695:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"ExpressionStatement","src":"17695:59:15"},{"assignments":[7231],"declarations":[{"constant":false,"id":7231,"mutability":"mutable","name":"currentTime","nameLocation":"17775:11:15","nodeType":"VariableDeclaration","scope":7271,"src":"17767:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"17767:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7234,"initialValue":{"expression":{"id":7232,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17789:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17795:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"17789:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17767:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"unlockScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"17820:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17843:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17820:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7246,"nodeType":"IfStatement","src":"17817:135:15","trueBody":{"id":7245,"nodeType":"Block","src":"17846:106:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"unlockScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"17869:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7240,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"17891:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17869:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d65206d75737420626520696e2074686520667574757265","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17904:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_759b7a454c4cadab52208bd2966cc917b41a628c466c4f23a2e1d34b6a633433","typeString":"literal_string \"Unlock time must be in the future\""},"value":"Unlock time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_759b7a454c4cadab52208bd2966cc917b41a628c466c4f23a2e1d34b6a633433","typeString":"literal_string \"Unlock time must be in the future\""}],"id":7238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17861:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17861:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7244,"nodeType":"ExpressionStatement","src":"17861:79:15"}]}},{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7247,"name":"lockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"17964:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7249,"indexExpression":{"id":7248,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"17973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17964:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7250,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"17984:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17964:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7252,"nodeType":"ExpressionStatement","src":"17964:31:15"},{"expression":{"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7253,"name":"unlockScheduledAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"18006:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7255,"indexExpression":{"id":7254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"18024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18006:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7256,"name":"unlockScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"18035:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18006:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7258,"nodeType":"ExpressionStatement","src":"18006:48:15"},{"expression":{"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7259,"name":"unlockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"18065:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7261,"indexExpression":{"id":7260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"18076:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18065:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18087:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18065:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7264,"nodeType":"ExpressionStatement","src":"18065:23:15"},{"eventCall":{"arguments":[{"id":7266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"18118:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7267,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"18127:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7268,"name":"unlockScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"18140:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"name":"TokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"18106:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18106:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7270,"nodeType":"EmitStatement","src":"18101:59:15"}]},"documentation":{"id":7205,"nodeType":"StructuredDocumentation","src":"17339:182:15","text":" @dev 특정 토큰 락업 설정\n @param tokenId: 토큰 ID\n @param unlockScheduledTime: 락업 해제 예정 시간 (0이면 수동 언락 필요)"},"functionSelector":"be707db1","id":7272,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7212,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"17611:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7213,"kind":"modifierInvocation","modifierName":{"id":7211,"name":"onlyRole","nameLocations":["17602:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17602:8:15"},"nodeType":"ModifierInvocation","src":"17602:21:15"}],"name":"setLockToken","nameLocation":"17536:12:15","nodeType":"FunctionDefinition","parameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7207,"mutability":"mutable","name":"tokenId","nameLocation":"17557:7:15","nodeType":"VariableDeclaration","scope":7272,"src":"17549:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7206,"name":"uint256","nodeType":"ElementaryTypeName","src":"17549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7209,"mutability":"mutable","name":"unlockScheduledTime","nameLocation":"17574:19:15","nodeType":"VariableDeclaration","scope":7272,"src":"17566:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7208,"name":"uint256","nodeType":"ElementaryTypeName","src":"17566:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17548:46:15"},"returnParameters":{"id":7214,"nodeType":"ParameterList","parameters":[],"src":"17624:0:15"},"scope":8651,"src":"17527:641:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7325,"nodeType":"Block","src":"18492:296:15","statements":[{"body":{"id":7323,"nodeType":"Block","src":"18549:232:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7296,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"18572:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7298,"indexExpression":{"id":7297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18581:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18572:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7299,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"18586:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18586:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18572:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18602:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18564:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18564:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7304,"nodeType":"ExpressionStatement","src":"18564:63:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7306,"name":"unlockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"18650:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7310,"indexExpression":{"baseExpression":{"id":7307,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"18661:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7309,"indexExpression":{"id":7308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18670:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18661:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18650:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18677:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18650:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20697320616c726561647920756e6c6f636b6564","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18680:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_71c56afa06c9528dba646f498604ef29a30e64c6dd8ed0c6fe20b6fc7c8c1193","typeString":"literal_string \"Token is already unlocked\""},"value":"Token is already unlocked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71c56afa06c9528dba646f498604ef29a30e64c6dd8ed0c6fe20b6fc7c8c1193","typeString":"literal_string \"Token is already unlocked\""}],"id":7305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18642:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18642:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7315,"nodeType":"ExpressionStatement","src":"18642:66:15"},{"expression":{"arguments":[{"baseExpression":{"id":7317,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"18736:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7319,"indexExpression":{"id":7318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18745:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7320,"name":"unlockScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"18749:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7316,"name":"setLockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"18723:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18723:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7322,"nodeType":"ExpressionStatement","src":"18723:46:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18523:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7289,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"18527:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18536:6:15","memberName":"length","nodeType":"MemberAccess","src":"18527:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18523:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7324,"initializationExpression":{"assignments":[7285],"declarations":[{"constant":false,"id":7285,"mutability":"mutable","name":"i","nameLocation":"18516:1:15","nodeType":"VariableDeclaration","scope":7324,"src":"18508:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"18508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7287,"initialValue":{"hexValue":"30","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18520:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18508:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18544:3:15","subExpression":{"id":7292,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18544:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7294,"nodeType":"ExpressionStatement","src":"18544:3:15"},"nodeType":"ForStatement","src":"18503:278:15"}]},"documentation":{"id":7273,"nodeType":"StructuredDocumentation","src":"18180:190:15","text":" @dev 여러 토큰 락업 설정\n @param tokenIds: 토큰 ID 배열\n @param unlockScheduledTime: 락업 해제 예정 시간 (0이면 수동 언락 필요)"},"functionSelector":"2496dd51","id":7326,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7281,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"18479:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7282,"kind":"modifierInvocation","modifierName":{"id":7280,"name":"onlyRole","nameLocations":["18470:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18470:8:15"},"nodeType":"ModifierInvocation","src":"18470:21:15"}],"name":"setLockTokenBatch","nameLocation":"18385:17:15","nodeType":"FunctionDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"tokenIds","nameLocation":"18422:8:15","nodeType":"VariableDeclaration","scope":7326,"src":"18403:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7274,"name":"uint256","nodeType":"ElementaryTypeName","src":"18403:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7275,"nodeType":"ArrayTypeName","src":"18403:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7278,"mutability":"mutable","name":"unlockScheduledTime","nameLocation":"18440:19:15","nodeType":"VariableDeclaration","scope":7326,"src":"18432:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7277,"name":"uint256","nodeType":"ElementaryTypeName","src":"18432:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18402:58:15"},"returnParameters":{"id":7283,"nodeType":"ParameterList","parameters":[],"src":"18492:0:15"},"scope":8651,"src":"18376:412:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7381,"nodeType":"Block","src":"18959:435:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"18986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7336,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"18978:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18978:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18996:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18970:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18970:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7341,"nodeType":"ExpressionStatement","src":"18970:49:15"},{"expression":{"arguments":[{"arguments":[{"id":7344,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"19052:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7343,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"19038:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19038:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74206c6f636b6564","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19062:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""},"value":"Token is not locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""}],"id":7342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19030:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19030:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7348,"nodeType":"ExpressionStatement","src":"19030:54:15"},{"assignments":[7350],"declarations":[{"constant":false,"id":7350,"mutability":"mutable","name":"currentTime","nameLocation":"19105:11:15","nodeType":"VariableDeclaration","scope":7381,"src":"19097:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"19097:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7353,"initialValue":{"expression":{"id":7351,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19119:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19125:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"19119:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19097:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7354,"name":"unlockScheduledAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"19150:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7356,"indexExpression":{"id":7355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"19168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19150:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19150:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7369,"nodeType":"IfStatement","src":"19147:143:15","trueBody":{"id":7368,"nodeType":"Block","src":"19183:107:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7360,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"19206:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":7361,"name":"unlockScheduledAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"19221:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7363,"indexExpression":{"id":7362,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"19239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19221:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19206:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d6520686173206e6f7420706173736564","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19249:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5ef5760e87b6b53d24aa4e34337c8b6abdd5c39ec4d0ee3a1562540f9ae8404","typeString":"literal_string \"Unlock time has not passed\""},"value":"Unlock time has not passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5ef5760e87b6b53d24aa4e34337c8b6abdd5c39ec4d0ee3a1562540f9ae8404","typeString":"literal_string \"Unlock time has not passed\""}],"id":7359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19198:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19198:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7367,"nodeType":"ExpressionStatement","src":"19198:80:15"}]}},{"expression":{"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7370,"name":"unlockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"19302:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7372,"indexExpression":{"id":7371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"19313:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19302:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7373,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"19324:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19302:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7375,"nodeType":"ExpressionStatement","src":"19302:33:15"},{"eventCall":{"arguments":[{"id":7377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"19365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7378,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"19374:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7376,"name":"TokenUnlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"19351:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19351:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7380,"nodeType":"EmitStatement","src":"19346:40:15"}]},"documentation":{"id":7327,"nodeType":"StructuredDocumentation","src":"18796:87:15","text":" @dev 특정 토큰 락업 해제\n @param tokenId: 토큰 ID"},"functionSelector":"2474e2b2","id":7382,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7332,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"18946:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7333,"kind":"modifierInvocation","modifierName":{"id":7331,"name":"onlyRole","nameLocations":["18937:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18937:8:15"},"nodeType":"ModifierInvocation","src":"18937:21:15"}],"name":"setUnlockToken","nameLocation":"18898:14:15","nodeType":"FunctionDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7329,"mutability":"mutable","name":"tokenId","nameLocation":"18921:7:15","nodeType":"VariableDeclaration","scope":7382,"src":"18913:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7328,"name":"uint256","nodeType":"ElementaryTypeName","src":"18913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18912:17:15"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[],"src":"18959:0:15"},"scope":8651,"src":"18889:505:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7430,"nodeType":"Block","src":"19596:269:15","statements":[{"body":{"id":7428,"nodeType":"Block","src":"19653:205:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7404,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"19676:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7406,"indexExpression":{"id":7405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"19685:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19676:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7407,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"19690:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19690:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19676:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19706:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19668:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19668:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7412,"nodeType":"ExpressionStatement","src":"19668:63:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7415,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"19768:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7417,"indexExpression":{"id":7416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"19777:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19768:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7414,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"19754:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19754:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74206c6f636b6564","id":7419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19782:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""},"value":"Token is not locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""}],"id":7413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19746:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19746:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7421,"nodeType":"ExpressionStatement","src":"19746:58:15"},{"expression":{"arguments":[{"baseExpression":{"id":7423,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"19834:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7425,"indexExpression":{"id":7424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"19843:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19834:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7422,"name":"setUnlockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"19819:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19819:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7427,"nodeType":"ExpressionStatement","src":"19819:27:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"19627:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7397,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"19631:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19640:6:15","memberName":"length","nodeType":"MemberAccess","src":"19631:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19627:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7429,"initializationExpression":{"assignments":[7393],"declarations":[{"constant":false,"id":7393,"mutability":"mutable","name":"i","nameLocation":"19620:1:15","nodeType":"VariableDeclaration","scope":7429,"src":"19612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"19612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7395,"initialValue":{"hexValue":"30","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19624:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19612:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19648:3:15","subExpression":{"id":7400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"19648:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7402,"nodeType":"ExpressionStatement","src":"19648:3:15"},"nodeType":"ForStatement","src":"19607:251:15"}]},"documentation":{"id":7383,"nodeType":"StructuredDocumentation","src":"19406:95:15","text":" @dev 여러 토큰 락업 해제\n @param tokenIds: 토큰 ID 배열"},"functionSelector":"6fc23db4","id":7431,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7389,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"19583:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7390,"kind":"modifierInvocation","modifierName":{"id":7388,"name":"onlyRole","nameLocations":["19574:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"19574:8:15"},"nodeType":"ModifierInvocation","src":"19574:21:15"}],"name":"setUnlockTokenBatch","nameLocation":"19516:19:15","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"tokenIds","nameLocation":"19555:8:15","nodeType":"VariableDeclaration","scope":7431,"src":"19536:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7384,"name":"uint256","nodeType":"ElementaryTypeName","src":"19536:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7385,"nodeType":"ArrayTypeName","src":"19536:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19535:29:15"},"returnParameters":{"id":7391,"nodeType":"ParameterList","parameters":[],"src":"19596:0:15"},"scope":8651,"src":"19507:358:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7470,"nodeType":"Block","src":"20047:278:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"20074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"20066:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20066:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20084:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20058:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20058:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7446,"nodeType":"ExpressionStatement","src":"20058:49:15"},{"expression":{"arguments":[{"arguments":[{"id":7449,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"20140:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7448,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"20126:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20126:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74206c6f636b6564","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20150:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""},"value":"Token is not locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""}],"id":7447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20118:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20118:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7453,"nodeType":"ExpressionStatement","src":"20118:54:15"},{"assignments":[7455],"declarations":[{"constant":false,"id":7455,"mutability":"mutable","name":"currentTime","nameLocation":"20193:11:15","nodeType":"VariableDeclaration","scope":7470,"src":"20185:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7454,"name":"uint256","nodeType":"ElementaryTypeName","src":"20185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7458,"initialValue":{"expression":{"id":7456,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20207:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20213:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"20207:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20185:37:15"},{"expression":{"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7459,"name":"unlockedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"20233:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7461,"indexExpression":{"id":7460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"20244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20233:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7462,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"20255:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20233:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7464,"nodeType":"ExpressionStatement","src":"20233:33:15"},{"eventCall":{"arguments":[{"id":7466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"20296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7467,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"20305:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7465,"name":"TokenUnlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"20282:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20282:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7469,"nodeType":"EmitStatement","src":"20277:40:15"}]},"documentation":{"id":7432,"nodeType":"StructuredDocumentation","src":"19873:96:15","text":" @dev 특정 토큰 락업 해제 (강제)\n @param tokenId: 토큰 ID"},"functionSelector":"ccd40400","id":7471,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7437,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"20034:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7438,"kind":"modifierInvocation","modifierName":{"id":7436,"name":"onlyRole","nameLocations":["20025:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"20025:8:15"},"nodeType":"ModifierInvocation","src":"20025:21:15"}],"name":"forceUnlockToken","nameLocation":"19984:16:15","nodeType":"FunctionDefinition","parameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"tokenId","nameLocation":"20009:7:15","nodeType":"VariableDeclaration","scope":7471,"src":"20001:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7433,"name":"uint256","nodeType":"ElementaryTypeName","src":"20001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20000:17:15"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[],"src":"20047:0:15"},"scope":8651,"src":"19975:350:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7519,"nodeType":"Block","src":"20534:271:15","statements":[{"body":{"id":7517,"nodeType":"Block","src":"20591:207:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7493,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"20614:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7495,"indexExpression":{"id":7494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"20623:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20614:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7496,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"20628:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20628:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20614:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20644:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20606:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20606:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7501,"nodeType":"ExpressionStatement","src":"20606:63:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7504,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"20706:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7506,"indexExpression":{"id":7505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"20715:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20706:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7503,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"20692:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20692:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74206c6f636b6564","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20720:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""},"value":"Token is not locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66","typeString":"literal_string \"Token is not locked\""}],"id":7502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20684:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20684:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7510,"nodeType":"ExpressionStatement","src":"20684:58:15"},{"expression":{"arguments":[{"baseExpression":{"id":7512,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"20774:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7514,"indexExpression":{"id":7513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"20783:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20774:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7511,"name":"forceUnlockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"20757:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20757:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"20757:29:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"20565:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7486,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"20569:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20578:6:15","memberName":"length","nodeType":"MemberAccess","src":"20569:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20565:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7518,"initializationExpression":{"assignments":[7482],"declarations":[{"constant":false,"id":7482,"mutability":"mutable","name":"i","nameLocation":"20558:1:15","nodeType":"VariableDeclaration","scope":7518,"src":"20550:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7481,"name":"uint256","nodeType":"ElementaryTypeName","src":"20550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7484,"initialValue":{"hexValue":"30","id":7483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20562:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20550:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20586:3:15","subExpression":{"id":7489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"20586:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7491,"nodeType":"ExpressionStatement","src":"20586:3:15"},"nodeType":"ForStatement","src":"20545:253:15"}]},"documentation":{"id":7472,"nodeType":"StructuredDocumentation","src":"20333:104:15","text":" @dev 여러 토큰 락업 해제 (강제)\n @param tokenIds: 토큰 ID 배열"},"functionSelector":"ae594865","id":7520,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7478,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"20521:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7479,"kind":"modifierInvocation","modifierName":{"id":7477,"name":"onlyRole","nameLocations":["20512:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"20512:8:15"},"nodeType":"ModifierInvocation","src":"20512:21:15"}],"name":"forceUnlockTokenBatch","nameLocation":"20452:21:15","nodeType":"FunctionDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"tokenIds","nameLocation":"20493:8:15","nodeType":"VariableDeclaration","scope":7520,"src":"20474:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7473,"name":"uint256","nodeType":"ElementaryTypeName","src":"20474:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7474,"nodeType":"ArrayTypeName","src":"20474:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20473:29:15"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[],"src":"20534:0:15"},"scope":8651,"src":"20443:362:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"Collection.StakedToken","id":7533,"members":[{"constant":false,"id":7522,"mutability":"mutable","name":"tokenId","nameLocation":"21048:7:15","nodeType":"VariableDeclaration","scope":7533,"src":"21040:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"21040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"staker","nameLocation":"21074:6:15","nodeType":"VariableDeclaration","scope":7533,"src":"21066:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7523,"name":"address","nodeType":"ElementaryTypeName","src":"21066:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"stakedAt","nameLocation":"21099:8:15","nodeType":"VariableDeclaration","scope":7533,"src":"21091:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"21091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7528,"mutability":"mutable","name":"unstakeScheduledAt","nameLocation":"21126:18:15","nodeType":"VariableDeclaration","scope":7533,"src":"21118:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7527,"name":"uint256","nodeType":"ElementaryTypeName","src":"21118:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7530,"mutability":"mutable","name":"unstakedAt","nameLocation":"21163:10:15","nodeType":"VariableDeclaration","scope":7533,"src":"21155:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7529,"name":"uint256","nodeType":"ElementaryTypeName","src":"21155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7532,"mutability":"mutable","name":"isStaked","nameLocation":"21189:8:15","nodeType":"VariableDeclaration","scope":7533,"src":"21184:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7531,"name":"bool","nodeType":"ElementaryTypeName","src":"21184:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StakedToken","nameLocation":"21017:11:15","nodeType":"StructDefinition","scope":8651,"src":"21010:195:15","visibility":"public"},{"constant":false,"functionSelector":"c0788555","id":7538,"mutability":"mutable","name":"stakedTokens","nameLocation":"21280:12:15","nodeType":"VariableDeclaration","scope":8651,"src":"21241:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken)"},"typeName":{"id":7537,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7534,"name":"uint256","nodeType":"ElementaryTypeName","src":"21249:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"21241:31:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7536,"nodeType":"UserDefinedTypeName","pathNode":{"id":7535,"name":"StakedToken","nameLocations":["21260:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"21260:11:15"},"referencedDeclaration":7533,"src":"21260:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"30441850b15fd31a9413cd27711113d1430f46dd517499b60a5d8365fa375bf0","id":7548,"name":"TokenStaked","nameLocation":"21338:11:15","nodeType":"EventDefinition","parameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7540,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"21366:7:15","nodeType":"VariableDeclaration","scope":7548,"src":"21350:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7539,"name":"uint256","nodeType":"ElementaryTypeName","src":"21350:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7542,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"21391:6:15","nodeType":"VariableDeclaration","scope":7548,"src":"21375:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7541,"name":"address","nodeType":"ElementaryTypeName","src":"21375:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7544,"indexed":false,"mutability":"mutable","name":"stakedAt","nameLocation":"21407:8:15","nodeType":"VariableDeclaration","scope":7548,"src":"21399:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7543,"name":"uint256","nodeType":"ElementaryTypeName","src":"21399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7546,"indexed":false,"mutability":"mutable","name":"unstakeScheduledAt","nameLocation":"21425:18:15","nodeType":"VariableDeclaration","scope":7548,"src":"21417:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7545,"name":"uint256","nodeType":"ElementaryTypeName","src":"21417:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21349:95:15"},"src":"21332:113:15"},{"anonymous":false,"eventSelector":"8400aad51ec7b4a6d1c58218ea03e51798a0485003beae9e5b76662e91d7058f","id":7556,"name":"TokenUnstaked","nameLocation":"21457:13:15","nodeType":"EventDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7550,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"21487:7:15","nodeType":"VariableDeclaration","scope":7556,"src":"21471:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"21471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7552,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"21512:6:15","nodeType":"VariableDeclaration","scope":7556,"src":"21496:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"21496:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7554,"indexed":false,"mutability":"mutable","name":"unstakedAt","nameLocation":"21528:10:15","nodeType":"VariableDeclaration","scope":7556,"src":"21520:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7553,"name":"uint256","nodeType":"ElementaryTypeName","src":"21520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21470:69:15"},"src":"21451:89:15"},{"body":{"id":7656,"nodeType":"Block","src":"21828:1000:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7568,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"21855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7567,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"21847:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21847:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21865:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21839:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21839:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7572,"nodeType":"ExpressionStatement","src":"21839:49:15"},{"expression":{"arguments":[{"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21907:31:15","subExpression":{"expression":{"baseExpression":{"id":7574,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"21908:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7576,"indexExpression":{"id":7575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"21921:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21908:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21930:8:15","memberName":"isStaked","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"21908:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20697320616c7265616479207374616b6564","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21940:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_41c62d9bb555d05ea16c3d11232e48a7c828d1ab50943c553ef0ac7e39b7ebd8","typeString":"literal_string \"Token is already staked\""},"value":"Token is already staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41c62d9bb555d05ea16c3d11232e48a7c828d1ab50943c553ef0ac7e39b7ebd8","typeString":"literal_string \"Token is already staked\""}],"id":7573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21899:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21899:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7581,"nodeType":"ExpressionStatement","src":"21899:67:15"},{"expression":{"arguments":[{"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21985:23:15","subExpression":{"arguments":[{"id":7584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7583,"name":"isTokenLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"21986:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21986:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206c6f636b6564","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22010:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""},"value":"Token is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc","typeString":"literal_string \"Token is locked\""}],"id":7582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21977:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21977:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7589,"nodeType":"ExpressionStatement","src":"21977:51:15"},{"condition":{"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22045:35:15","subExpression":{"arguments":[{"id":7591,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"22054:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7592,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"22067:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22067:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7590,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"22046:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22046:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7607,"nodeType":"IfStatement","src":"22041:148:15","trueBody":{"id":7606,"nodeType":"Block","src":"22082:107:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7598,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7597,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"22105:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22105:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7600,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"22125:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22125:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22105:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865207374616b65722063616e207374616b652074686520746f6b656e","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22139:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_dde1024abc3b759bd1437c752cadc5933d79b76037a6e5368f0bcceab7577632","typeString":"literal_string \"Only the staker can stake the token\""},"value":"Only the staker can stake the token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dde1024abc3b759bd1437c752cadc5933d79b76037a6e5368f0bcceab7577632","typeString":"literal_string \"Only the staker can stake the token\""}],"id":7596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22097:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22097:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7605,"nodeType":"ExpressionStatement","src":"22097:80:15"}]}},{"assignments":[7609],"declarations":[{"constant":false,"id":7609,"mutability":"mutable","name":"currentTime","nameLocation":"22209:11:15","nodeType":"VariableDeclaration","scope":7656,"src":"22201:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7608,"name":"uint256","nodeType":"ElementaryTypeName","src":"22201:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7612,"initialValue":{"expression":{"id":7610,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22223:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22229:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"22223:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22201:37:15"},{"assignments":[7614],"declarations":[{"constant":false,"id":7614,"mutability":"mutable","name":"staker","nameLocation":"22257:6:15","nodeType":"VariableDeclaration","scope":7656,"src":"22249:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7613,"name":"address","nodeType":"ElementaryTypeName","src":"22249:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7618,"initialValue":{"arguments":[{"id":7616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7615,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"22266:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22266:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22249:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"unstakeScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22299:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22323:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22299:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7630,"nodeType":"IfStatement","src":"22295:139:15","trueBody":{"id":7629,"nodeType":"Block","src":"22326:108:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7623,"name":"unstakeScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22349:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7624,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"22372:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22349:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7374616b652074696d65206d75737420626520696e2074686520667574757265","id":7626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22385:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ed0f15dfb64fb979a1cd1635c4724637aaba53e52d73f451c3f9abd68a7e532","typeString":"literal_string \"Unstake time must be in the future\""},"value":"Unstake time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ed0f15dfb64fb979a1cd1635c4724637aaba53e52d73f451c3f9abd68a7e532","typeString":"literal_string \"Unstake time must be in the future\""}],"id":7622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22341:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22341:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7628,"nodeType":"ExpressionStatement","src":"22341:81:15"}]}},{"expression":{"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7631,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"22446:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7633,"indexExpression":{"id":7632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22446:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7635,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7636,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"22536:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7637,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"22567:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7638,"name":"unstakeScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22613:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22660:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":7640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22686:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7634,"name":"StakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"22470:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StakedToken_$7533_storage_ptr_$","typeString":"type(struct Collection.StakedToken storage pointer)"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["22497:7:15","22528:6:15","22557:8:15","22593:18:15","22648:10:15","22676:8:15"],"names":["tokenId","staker","stakedAt","unstakeScheduledAt","unstakedAt","isStaked"],"nodeType":"FunctionCall","src":"22470:232:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"src":"22446:256:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7643,"nodeType":"ExpressionStatement","src":"22446:256:15"},{"expression":{"arguments":[{"id":7645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22737:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7644,"name":"setLockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"22715:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22715:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7648,"nodeType":"ExpressionStatement","src":"22715:24:15"},{"eventCall":{"arguments":[{"id":7650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"22769:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7651,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"22778:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7652,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"22786:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7653,"name":"unstakeScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"22799:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7649,"name":"TokenStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"22757:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22757:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7655,"nodeType":"EmitStatement","src":"22752:68:15"}]},"documentation":{"id":7557,"nodeType":"StructuredDocumentation","src":"21548:186:15","text":" @dev 토큰 스테이킹\n @param tokenId: 토큰 ID\n @param unstakeScheduledTime: 언스테이킹 예정 시간 (0이면 수동 언스테이킹 필요)"},"functionSelector":"ffab4bd9","id":7657,"implemented":true,"kind":"function","modifiers":[{"id":7564,"kind":"modifierInvocation","modifierName":{"id":7563,"name":"whenNotPaused","nameLocations":["21814:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"21814:13:15"},"nodeType":"ModifierInvocation","src":"21814:13:15"}],"name":"stakeToken","nameLocation":"21749:10:15","nodeType":"FunctionDefinition","parameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7559,"mutability":"mutable","name":"tokenId","nameLocation":"21768:7:15","nodeType":"VariableDeclaration","scope":7657,"src":"21760:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7558,"name":"uint256","nodeType":"ElementaryTypeName","src":"21760:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"unstakeScheduledTime","nameLocation":"21785:20:15","nodeType":"VariableDeclaration","scope":7657,"src":"21777:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"21777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21759:47:15"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[],"src":"21828:0:15"},"scope":8651,"src":"21740:1088:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7698,"nodeType":"Block","src":"23150:214:15","statements":[{"body":{"id":7696,"nodeType":"Block","src":"23207:150:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7680,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"23230:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7682,"indexExpression":{"id":7681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"23239:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23230:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7683,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"23244:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23244:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23230:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23260:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"23222:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23222:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7688,"nodeType":"ExpressionStatement","src":"23222:63:15"},{"expression":{"arguments":[{"baseExpression":{"id":7690,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"23311:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7692,"indexExpression":{"id":7691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"23320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23311:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7693,"name":"unstakeScheduledTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"23324:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7689,"name":"stakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"23300:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23300:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7695,"nodeType":"ExpressionStatement","src":"23300:45:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"23181:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7673,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"23185:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23194:6:15","memberName":"length","nodeType":"MemberAccess","src":"23185:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23181:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7697,"initializationExpression":{"assignments":[7669],"declarations":[{"constant":false,"id":7669,"mutability":"mutable","name":"i","nameLocation":"23174:1:15","nodeType":"VariableDeclaration","scope":7697,"src":"23166:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7668,"name":"uint256","nodeType":"ElementaryTypeName","src":"23166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7671,"initialValue":{"hexValue":"30","id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23166:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23202:3:15","subExpression":{"id":7676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"23202:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7678,"nodeType":"ExpressionStatement","src":"23202:3:15"},"nodeType":"ForStatement","src":"23161:196:15"}]},"documentation":{"id":7658,"nodeType":"StructuredDocumentation","src":"22836:201:15","text":" @dev 여러 토큰 스테이킹\n @param tokenIds: 토큰 ID 배열\n @param unstakeScheduledTime: 언스테이킹 예정 시간 (0이면 수동 언스테이킹 필요)"},"functionSelector":"8ad7d9de","id":7699,"implemented":true,"kind":"function","modifiers":[{"id":7666,"kind":"modifierInvocation","modifierName":{"id":7665,"name":"whenNotPaused","nameLocations":["23136:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"23136:13:15"},"nodeType":"ModifierInvocation","src":"23136:13:15"}],"name":"stakeTokenBatch","nameLocation":"23052:15:15","nodeType":"FunctionDefinition","parameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"tokenIds","nameLocation":"23087:8:15","nodeType":"VariableDeclaration","scope":7699,"src":"23068:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7659,"name":"uint256","nodeType":"ElementaryTypeName","src":"23068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7660,"nodeType":"ArrayTypeName","src":"23068:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7663,"mutability":"mutable","name":"unstakeScheduledTime","nameLocation":"23105:20:15","nodeType":"VariableDeclaration","scope":7699,"src":"23097:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7662,"name":"uint256","nodeType":"ElementaryTypeName","src":"23097:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23067:59:15"},"returnParameters":{"id":7667,"nodeType":"ParameterList","parameters":[],"src":"23150:0:15"},"scope":8651,"src":"23043:321:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7790,"nodeType":"Block","src":"23537:786:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7709,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"23564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7708,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"23556:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23556:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23574:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"23548:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23548:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7713,"nodeType":"ExpressionStatement","src":"23548:49:15"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7715,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"23616:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7717,"indexExpression":{"id":7716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"23629:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23616:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23638:8:15","memberName":"isStaked","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"23616:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74207374616b6564","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23648:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951","typeString":"literal_string \"Token is not staked\""},"value":"Token is not staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951","typeString":"literal_string \"Token is not staked\""}],"id":7714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"23608:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23608:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7721,"nodeType":"ExpressionStatement","src":"23608:62:15"},{"assignments":[7724],"declarations":[{"constant":false,"id":7724,"mutability":"mutable","name":"staking","nameLocation":"23702:7:15","nodeType":"VariableDeclaration","scope":7790,"src":"23683:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken"},"typeName":{"id":7723,"nodeType":"UserDefinedTypeName","pathNode":{"id":7722,"name":"StakedToken","nameLocations":["23683:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"23683:11:15"},"referencedDeclaration":7533,"src":"23683:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"visibility":"internal"}],"id":7728,"initialValue":{"baseExpression":{"id":7725,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"23712:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7727,"indexExpression":{"id":7726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"23725:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23712:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23683:50:15"},{"condition":{"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23750:35:15","subExpression":{"arguments":[{"id":7730,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"23759:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7731,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"23772:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23772:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7729,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"23751:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23751:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7745,"nodeType":"IfStatement","src":"23746:148:15","trueBody":{"id":7744,"nodeType":"Block","src":"23787:107:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7736,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"23810:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23818:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"23810:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7738,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23828:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23810:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865207374616b65722063616e20756e7374616b652074686520746f6b656e","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23842:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecc3cba37814dfc63104d0e1ea071ecd6ae3db1a6ac05168561f45f17cc78957","typeString":"literal_string \"Only the staker can unstake the token\""},"value":"Only the staker can unstake the token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecc3cba37814dfc63104d0e1ea071ecd6ae3db1a6ac05168561f45f17cc78957","typeString":"literal_string \"Only the staker can unstake the token\""}],"id":7735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"23802:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23802:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7743,"nodeType":"ExpressionStatement","src":"23802:80:15"}]}},{"assignments":[7747],"declarations":[{"constant":false,"id":7747,"mutability":"mutable","name":"currentTime","nameLocation":"23914:11:15","nodeType":"VariableDeclaration","scope":7790,"src":"23906:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"23906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7750,"initialValue":{"expression":{"id":7748,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23928:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23934:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"23928:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23906:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7751,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"23960:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23968:18:15","memberName":"unstakeScheduledAt","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"23960:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23990:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23960:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7764,"nodeType":"IfStatement","src":"23956:145:15","trueBody":{"id":7763,"nodeType":"Block","src":"23993:108:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7756,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"24016:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7757,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"24031:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24039:18:15","memberName":"unstakeScheduledAt","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"24031:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24016:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7374616b652074696d6520686173206e6f7420706173736564","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24059:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4a2b64c8834b64b6189cb7ee4330ec6c83a868ebec40c39af9040a519ce8fd","typeString":"literal_string \"Unstake time has not passed\""},"value":"Unstake time has not passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4a2b64c8834b64b6189cb7ee4330ec6c83a868ebec40c39af9040a519ce8fd","typeString":"literal_string \"Unstake time has not passed\""}],"id":7755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"24008:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24008:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7762,"nodeType":"ExpressionStatement","src":"24008:81:15"}]}},{"expression":{"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7765,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"24113:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7767,"indexExpression":{"id":7766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"24126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24113:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24135:10:15","memberName":"unstakedAt","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"24113:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7769,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"24148:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24113:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7771,"nodeType":"ExpressionStatement","src":"24113:46:15"},{"expression":{"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7772,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"24170:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7774,"indexExpression":{"id":7773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"24183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24170:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24192:8:15","memberName":"isStaked","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"24170:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24203:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"24170:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7778,"nodeType":"ExpressionStatement","src":"24170:38:15"},{"expression":{"arguments":[{"id":7780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"24238:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7779,"name":"forceUnlockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"24221:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24221:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7782,"nodeType":"ExpressionStatement","src":"24221:25:15"},{"eventCall":{"arguments":[{"id":7784,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"24278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7785,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"24287:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24295:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"24287:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7787,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"24303:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7783,"name":"TokenUnstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"24264:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24264:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7789,"nodeType":"EmitStatement","src":"24259:56:15"}]},"documentation":{"id":7700,"nodeType":"StructuredDocumentation","src":"23382:89:15","text":" @dev 특정 토큰 언스테이킹\n @param tokenId: 토큰 ID"},"functionSelector":"2cfb6688","id":7791,"implemented":true,"kind":"function","modifiers":[{"id":7705,"kind":"modifierInvocation","modifierName":{"id":7704,"name":"whenNotPaused","nameLocations":["23523:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"23523:13:15"},"nodeType":"ModifierInvocation","src":"23523:13:15"}],"name":"unstakeToken","nameLocation":"23486:12:15","nodeType":"FunctionDefinition","parameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7702,"mutability":"mutable","name":"tokenId","nameLocation":"23507:7:15","nodeType":"VariableDeclaration","scope":7791,"src":"23499:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7701,"name":"uint256","nodeType":"ElementaryTypeName","src":"23499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23498:17:15"},"returnParameters":{"id":7706,"nodeType":"ParameterList","parameters":[],"src":"23537:0:15"},"scope":8651,"src":"23477:846:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7829,"nodeType":"Block","src":"24513:194:15","statements":[{"body":{"id":7827,"nodeType":"Block","src":"24570:130:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7812,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"24593:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7814,"indexExpression":{"id":7813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"24602:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24593:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7815,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"24607:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24607:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24593:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24623:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"24585:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24585:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7820,"nodeType":"ExpressionStatement","src":"24585:63:15"},{"expression":{"arguments":[{"baseExpression":{"id":7822,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"24676:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7824,"indexExpression":{"id":7823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"24685:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24676:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7821,"name":"unstakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"24663:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24663:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7826,"nodeType":"ExpressionStatement","src":"24663:25:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"24544:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7805,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"24548:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24557:6:15","memberName":"length","nodeType":"MemberAccess","src":"24548:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24544:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7828,"initializationExpression":{"assignments":[7801],"declarations":[{"constant":false,"id":7801,"mutability":"mutable","name":"i","nameLocation":"24537:1:15","nodeType":"VariableDeclaration","scope":7828,"src":"24529:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7800,"name":"uint256","nodeType":"ElementaryTypeName","src":"24529:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7803,"initialValue":{"hexValue":"30","id":7802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24541:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24529:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24565:3:15","subExpression":{"id":7808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"24565:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7810,"nodeType":"ExpressionStatement","src":"24565:3:15"},"nodeType":"ForStatement","src":"24524:176:15"}]},"documentation":{"id":7792,"nodeType":"StructuredDocumentation","src":"24331:97:15","text":" @dev 여러 토큰 언스테이킹\n @param tokenIds: 토큰 ID 배열"},"functionSelector":"17f82990","id":7830,"implemented":true,"kind":"function","modifiers":[{"id":7798,"kind":"modifierInvocation","modifierName":{"id":7797,"name":"whenNotPaused","nameLocations":["24499:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"24499:13:15"},"nodeType":"ModifierInvocation","src":"24499:13:15"}],"name":"unstakeTokenBatch","nameLocation":"24443:17:15","nodeType":"FunctionDefinition","parameters":{"id":7796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7795,"mutability":"mutable","name":"tokenIds","nameLocation":"24480:8:15","nodeType":"VariableDeclaration","scope":7830,"src":"24461:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"24461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7794,"nodeType":"ArrayTypeName","src":"24461:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24460:29:15"},"returnParameters":{"id":7799,"nodeType":"ParameterList","parameters":[],"src":"24513:0:15"},"scope":8651,"src":"24434:273:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7908,"nodeType":"Block","src":"24892:633:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7841,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"24919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7840,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"24911:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24911:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24929:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"24903:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24903:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7845,"nodeType":"ExpressionStatement","src":"24903:49:15"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7847,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"24971:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7849,"indexExpression":{"id":7848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"24984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24971:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24993:8:15","memberName":"isStaked","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"24971:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74207374616b6564","id":7851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25003:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951","typeString":"literal_string \"Token is not staked\""},"value":"Token is not staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951","typeString":"literal_string \"Token is not staked\""}],"id":7846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"24963:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24963:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7853,"nodeType":"ExpressionStatement","src":"24963:62:15"},{"assignments":[7856],"declarations":[{"constant":false,"id":7856,"mutability":"mutable","name":"staking","nameLocation":"25057:7:15","nodeType":"VariableDeclaration","scope":7908,"src":"25038:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken"},"typeName":{"id":7855,"nodeType":"UserDefinedTypeName","pathNode":{"id":7854,"name":"StakedToken","nameLocations":["25038:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"25038:11:15"},"referencedDeclaration":7533,"src":"25038:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"visibility":"internal"}],"id":7860,"initialValue":{"baseExpression":{"id":7857,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"25067:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7859,"indexExpression":{"id":7858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"25080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25067:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25038:50:15"},{"condition":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25105:35:15","subExpression":{"arguments":[{"id":7862,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"25114:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"25127:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25127:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7861,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"25106:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25106:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7877,"nodeType":"IfStatement","src":"25101:154:15","trueBody":{"id":7876,"nodeType":"Block","src":"25142:113:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7868,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"25165:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25173:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"25165:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7870,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"25183:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25183:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25165:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865207374616b65722063616e20666f72636520756e7374616b652074686520746f6b656e","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25197:45:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb3833dd350efe0fffee02b74017db0659cb54aad9262593a280b96266c64e49","typeString":"literal_string \"Only the staker can force unstake the token\""},"value":"Only the staker can force unstake the token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb3833dd350efe0fffee02b74017db0659cb54aad9262593a280b96266c64e49","typeString":"literal_string \"Only the staker can force unstake the token\""}],"id":7867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25157:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25157:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7875,"nodeType":"ExpressionStatement","src":"25157:86:15"}]}},{"assignments":[7879],"declarations":[{"constant":false,"id":7879,"mutability":"mutable","name":"currentTime","nameLocation":"25275:11:15","nodeType":"VariableDeclaration","scope":7908,"src":"25267:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"25267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7882,"initialValue":{"expression":{"id":7880,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"25289:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25295:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"25289:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25267:37:15"},{"expression":{"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7883,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"25315:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7885,"indexExpression":{"id":7884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"25328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25315:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25337:10:15","memberName":"unstakedAt","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"25315:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7887,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"25350:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7889,"nodeType":"ExpressionStatement","src":"25315:46:15"},{"expression":{"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7890,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"25372:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7892,"indexExpression":{"id":7891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"25385:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25372:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"id":7893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25394:8:15","memberName":"isStaked","nodeType":"MemberAccess","referencedDeclaration":7532,"src":"25372:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25405:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"25372:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7896,"nodeType":"ExpressionStatement","src":"25372:38:15"},{"expression":{"arguments":[{"id":7898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"25440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7897,"name":"forceUnlockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"25423:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25423:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7900,"nodeType":"ExpressionStatement","src":"25423:25:15"},{"eventCall":{"arguments":[{"id":7902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"25480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7903,"name":"staking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"25489:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":7904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25497:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"25489:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7905,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"25505:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7901,"name":"TokenUnstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"25466:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25466:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7907,"nodeType":"EmitStatement","src":"25461:56:15"}]},"documentation":{"id":7831,"nodeType":"StructuredDocumentation","src":"24715:98:15","text":" @dev 특정 토큰 언스테이킹 (강제)\n @param tokenId: 토큰 ID"},"functionSelector":"bd39e149","id":7909,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7836,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"24879:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7837,"kind":"modifierInvocation","modifierName":{"id":7835,"name":"onlyRole","nameLocations":["24870:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"24870:8:15"},"nodeType":"ModifierInvocation","src":"24870:21:15"}],"name":"forceUnstakeToken","nameLocation":"24828:17:15","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"tokenId","nameLocation":"24854:7:15","nodeType":"VariableDeclaration","scope":7909,"src":"24846:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7832,"name":"uint256","nodeType":"ElementaryTypeName","src":"24846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24845:17:15"},"returnParameters":{"id":7838,"nodeType":"ParameterList","parameters":[],"src":"24892:0:15"},"scope":8651,"src":"24819:706:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7948,"nodeType":"Block","src":"25737:199:15","statements":[{"body":{"id":7946,"nodeType":"Block","src":"25794:135:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7931,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"25817:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7933,"indexExpression":{"id":7932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25826:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25817:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7934,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"25831:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25831:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25817:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25847:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25809:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25809:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"ExpressionStatement","src":"25809:63:15"},{"expression":{"arguments":[{"baseExpression":{"id":7941,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"25905:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7943,"indexExpression":{"id":7942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25914:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25905:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7940,"name":"forceUnstakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"25887:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25887:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7945,"nodeType":"ExpressionStatement","src":"25887:30:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25768:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7924,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"25772:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25781:6:15","memberName":"length","nodeType":"MemberAccess","src":"25772:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25768:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7947,"initializationExpression":{"assignments":[7920],"declarations":[{"constant":false,"id":7920,"mutability":"mutable","name":"i","nameLocation":"25761:1:15","nodeType":"VariableDeclaration","scope":7947,"src":"25753:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7919,"name":"uint256","nodeType":"ElementaryTypeName","src":"25753:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7922,"initialValue":{"hexValue":"30","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25765:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25753:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25789:3:15","subExpression":{"id":7927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"25789:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7929,"nodeType":"ExpressionStatement","src":"25789:3:15"},"nodeType":"ForStatement","src":"25748:181:15"}]},"documentation":{"id":7910,"nodeType":"StructuredDocumentation","src":"25533:106:15","text":" @dev 여러 토큰 언스테이킹 (강제)\n @param tokenIds: 토큰 ID 배열"},"functionSelector":"14f93a49","id":7949,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7916,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"25724:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7917,"kind":"modifierInvocation","modifierName":{"id":7915,"name":"onlyRole","nameLocations":["25715:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"25715:8:15"},"nodeType":"ModifierInvocation","src":"25715:21:15"}],"name":"forceUnstakeTokenBatch","nameLocation":"25654:22:15","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"tokenIds","nameLocation":"25696:8:15","nodeType":"VariableDeclaration","scope":7949,"src":"25677:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7911,"name":"uint256","nodeType":"ElementaryTypeName","src":"25677:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7912,"nodeType":"ArrayTypeName","src":"25677:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25676:29:15"},"returnParameters":{"id":7918,"nodeType":"ParameterList","parameters":[],"src":"25737:0:15"},"scope":8651,"src":"25645:291:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7962,"nodeType":"Block","src":"26175:47:15","statements":[{"expression":{"baseExpression":{"id":7958,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"26193:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":7960,"indexExpression":{"id":7959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"26206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26193:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"functionReturnParameters":7957,"id":7961,"nodeType":"Return","src":"26186:28:15"}]},"documentation":{"id":7950,"nodeType":"StructuredDocumentation","src":"25948:137:15","text":" @dev 특정 토큰 스테이킹 정보 조회\n @param tokenId: 토큰 ID\n @return 스테이킹 정보 "},"functionSelector":"b5573847","id":7963,"implemented":true,"kind":"function","modifiers":[],"name":"getStakingStatus","nameLocation":"26100:16:15","nodeType":"FunctionDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"tokenId","nameLocation":"26125:7:15","nodeType":"VariableDeclaration","scope":7963,"src":"26117:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"26117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26116:17:15"},"returnParameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7963,"src":"26155:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken"},"typeName":{"id":7955,"nodeType":"UserDefinedTypeName","pathNode":{"id":7954,"name":"StakedToken","nameLocations":["26155:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"26155:11:15"},"referencedDeclaration":7533,"src":"26155:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"visibility":"internal"}],"src":"26154:20:15"},"scope":8651,"src":"26091:131:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8022,"nodeType":"Block","src":"26492:315:15","statements":[{"assignments":[7978],"declarations":[{"constant":false,"id":7978,"mutability":"mutable","name":"statuses","nameLocation":"26524:8:15","nodeType":"VariableDeclaration","scope":8022,"src":"26503:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.StakedToken[]"},"typeName":{"baseType":{"id":7976,"nodeType":"UserDefinedTypeName","pathNode":{"id":7975,"name":"StakedToken","nameLocations":["26503:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"26503:11:15"},"referencedDeclaration":7533,"src":"26503:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"id":7977,"nodeType":"ArrayTypeName","src":"26503:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_storage_$dyn_storage_ptr","typeString":"struct Collection.StakedToken[]"}},"visibility":"internal"}],"id":7986,"initialValue":{"arguments":[{"expression":{"id":7983,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"26553:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26562:6:15","memberName":"length","nodeType":"MemberAccess","src":"26553:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26535:17:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Collection.StakedToken memory[] memory)"},"typeName":{"baseType":{"id":7980,"nodeType":"UserDefinedTypeName","pathNode":{"id":7979,"name":"StakedToken","nameLocations":["26539:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"26539:11:15"},"referencedDeclaration":7533,"src":"26539:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"id":7981,"nodeType":"ArrayTypeName","src":"26539:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_storage_$dyn_storage_ptr","typeString":"struct Collection.StakedToken[]"}}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26535:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.StakedToken memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26503:66:15"},{"body":{"id":8018,"nodeType":"Block","src":"26626:148:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7999,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"26649:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8001,"indexExpression":{"id":8000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"26658:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26649:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8002,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9031,"src":"26663:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26663:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26649:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e204944206f7574206f6620626f756e6473","id":8005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26679:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""},"value":"Token ID out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e","typeString":"literal_string \"Token ID out of bounds\""}],"id":7998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26641:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26641:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8007,"nodeType":"ExpressionStatement","src":"26641:63:15"},{"expression":{"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8008,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"26719:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.StakedToken memory[] memory"}},"id":8010,"indexExpression":{"id":8009,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"26728:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26719:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8012,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"26750:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8014,"indexExpression":{"id":8013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"26759:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26750:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"name":"getStakingStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"26733:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_StakedToken_$7533_memory_ptr_$","typeString":"function (uint256) view returns (struct Collection.StakedToken memory)"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26733:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"src":"26719:43:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":8017,"nodeType":"ExpressionStatement","src":"26719:43:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"26600:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7992,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"26604:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26613:6:15","memberName":"length","nodeType":"MemberAccess","src":"26604:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26600:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8019,"initializationExpression":{"assignments":[7988],"declarations":[{"constant":false,"id":7988,"mutability":"mutable","name":"i","nameLocation":"26593:1:15","nodeType":"VariableDeclaration","scope":8019,"src":"26585:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7987,"name":"uint256","nodeType":"ElementaryTypeName","src":"26585:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7990,"initialValue":{"hexValue":"30","id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26597:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26585:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26621:3:15","subExpression":{"id":7995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"26621:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7997,"nodeType":"ExpressionStatement","src":"26621:3:15"},"nodeType":"ForStatement","src":"26580:194:15"},{"expression":{"id":8020,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"26791:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.StakedToken memory[] memory"}},"functionReturnParameters":7973,"id":8021,"nodeType":"Return","src":"26784:15:15"}]},"documentation":{"id":7964,"nodeType":"StructuredDocumentation","src":"26230:151:15","text":" @dev 여러 토큰 스테이킹 정보 조회\n @param tokenIds: 토큰 ID 배열\n @return 스테이킹 정보 배열"},"functionSelector":"dd4ba7e1","id":8023,"implemented":true,"kind":"function","modifiers":[],"name":"getStakingStatusBatch","nameLocation":"26396:21:15","nodeType":"FunctionDefinition","parameters":{"id":7968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7967,"mutability":"mutable","name":"tokenIds","nameLocation":"26437:8:15","nodeType":"VariableDeclaration","scope":8023,"src":"26418:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7965,"name":"uint256","nodeType":"ElementaryTypeName","src":"26418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7966,"nodeType":"ArrayTypeName","src":"26418:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26417:29:15"},"returnParameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8023,"src":"26470:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.StakedToken[]"},"typeName":{"baseType":{"id":7970,"nodeType":"UserDefinedTypeName","pathNode":{"id":7969,"name":"StakedToken","nameLocations":["26470:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"26470:11:15"},"referencedDeclaration":7533,"src":"26470:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"id":7971,"nodeType":"ArrayTypeName","src":"26470:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakedToken_$7533_storage_$dyn_storage_ptr","typeString":"struct Collection.StakedToken[]"}},"visibility":"internal"}],"src":"26469:22:15"},"scope":8651,"src":"26387:420:15","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"Collection.Reward","id":8046,"members":[{"constant":false,"id":8025,"mutability":"mutable","name":"rewardId","nameLocation":"26848:8:15","nodeType":"VariableDeclaration","scope":8046,"src":"26840:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8024,"name":"uint256","nodeType":"ElementaryTypeName","src":"26840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8027,"mutability":"mutable","name":"rewardType","nameLocation":"26874:10:15","nodeType":"VariableDeclaration","scope":8046,"src":"26867:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8026,"name":"string","nodeType":"ElementaryTypeName","src":"26867:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8029,"mutability":"mutable","name":"amount","nameLocation":"26903:6:15","nodeType":"VariableDeclaration","scope":8046,"src":"26895:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8028,"name":"uint256","nodeType":"ElementaryTypeName","src":"26895:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8031,"mutability":"mutable","name":"description","nameLocation":"26927:11:15","nodeType":"VariableDeclaration","scope":8046,"src":"26920:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8030,"name":"string","nodeType":"ElementaryTypeName","src":"26920:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8033,"mutability":"mutable","name":"isActive","nameLocation":"26954:8:15","nodeType":"VariableDeclaration","scope":8046,"src":"26949:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8032,"name":"bool","nodeType":"ElementaryTypeName","src":"26949:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8035,"mutability":"mutable","name":"activeAt","nameLocation":"26981:8:15","nodeType":"VariableDeclaration","scope":8046,"src":"26973:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8034,"name":"uint256","nodeType":"ElementaryTypeName","src":"26973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8037,"mutability":"mutable","name":"deactiveAt","nameLocation":"27008:10:15","nodeType":"VariableDeclaration","scope":8046,"src":"27000:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8036,"name":"uint256","nodeType":"ElementaryTypeName","src":"27000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8039,"mutability":"mutable","name":"claimableStakedTime","nameLocation":"27037:19:15","nodeType":"VariableDeclaration","scope":8046,"src":"27029:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"27029:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8041,"mutability":"mutable","name":"metadata","nameLocation":"27074:8:15","nodeType":"VariableDeclaration","scope":8046,"src":"27067:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8040,"name":"string","nodeType":"ElementaryTypeName","src":"27067:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8043,"mutability":"mutable","name":"functionAbi","nameLocation":"27100:11:15","nodeType":"VariableDeclaration","scope":8046,"src":"27093:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8042,"name":"string","nodeType":"ElementaryTypeName","src":"27093:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8045,"mutability":"mutable","name":"createdAt","nameLocation":"27130:9:15","nodeType":"VariableDeclaration","scope":8046,"src":"27122:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8044,"name":"uint256","nodeType":"ElementaryTypeName","src":"27122:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reward","nameLocation":"26822:6:15","nodeType":"StructDefinition","scope":8651,"src":"26815:332:15","visibility":"public"},{"canonicalName":"Collection.ClaimedReward","id":8067,"members":[{"constant":false,"id":8048,"mutability":"mutable","name":"rewardId","nameLocation":"27195:8:15","nodeType":"VariableDeclaration","scope":8067,"src":"27187:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8047,"name":"uint256","nodeType":"ElementaryTypeName","src":"27187:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8050,"mutability":"mutable","name":"tokenId","nameLocation":"27222:7:15","nodeType":"VariableDeclaration","scope":8067,"src":"27214:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8049,"name":"uint256","nodeType":"ElementaryTypeName","src":"27214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8052,"mutability":"mutable","name":"staker","nameLocation":"27248:6:15","nodeType":"VariableDeclaration","scope":8067,"src":"27240:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8051,"name":"address","nodeType":"ElementaryTypeName","src":"27240:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8054,"mutability":"mutable","name":"stakedAt","nameLocation":"27273:8:15","nodeType":"VariableDeclaration","scope":8067,"src":"27265:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"27265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8056,"mutability":"mutable","name":"claimedAt","nameLocation":"27300:9:15","nodeType":"VariableDeclaration","scope":8067,"src":"27292:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8055,"name":"uint256","nodeType":"ElementaryTypeName","src":"27292:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8058,"mutability":"mutable","name":"isClaimed","nameLocation":"27325:9:15","nodeType":"VariableDeclaration","scope":8067,"src":"27320:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8057,"name":"bool","nodeType":"ElementaryTypeName","src":"27320:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"isRevoked","nameLocation":"27350:9:15","nodeType":"VariableDeclaration","scope":8067,"src":"27345:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8059,"name":"bool","nodeType":"ElementaryTypeName","src":"27345:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8062,"mutability":"mutable","name":"revokedAt","nameLocation":"27378:9:15","nodeType":"VariableDeclaration","scope":8067,"src":"27370:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"27370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8064,"mutability":"mutable","name":"revokedReason","nameLocation":"27405:13:15","nodeType":"VariableDeclaration","scope":8067,"src":"27398:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8063,"name":"string","nodeType":"ElementaryTypeName","src":"27398:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8066,"mutability":"mutable","name":"createdAt","nameLocation":"27437:9:15","nodeType":"VariableDeclaration","scope":8067,"src":"27429:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8065,"name":"uint256","nodeType":"ElementaryTypeName","src":"27429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ClaimedReward","nameLocation":"27162:13:15","nodeType":"StructDefinition","scope":8651,"src":"27155:299:15","visibility":"public"},{"constant":false,"functionSelector":"f301af42","id":8072,"mutability":"mutable","name":"rewards","nameLocation":"27496:7:15","nodeType":"VariableDeclaration","scope":8651,"src":"27462:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward)"},"typeName":{"id":8071,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8068,"name":"uint256","nodeType":"ElementaryTypeName","src":"27470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"27462:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8070,"nodeType":"UserDefinedTypeName","pathNode":{"id":8069,"name":"Reward","nameLocations":["27481:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":8046,"src":"27481:6:15"},"referencedDeclaration":8046,"src":"27481:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage_ptr","typeString":"struct Collection.Reward"}}},"visibility":"public"},{"constant":false,"functionSelector":"c7a5156f","id":8079,"mutability":"mutable","name":"claimedRewards","nameLocation":"27571:14:15","nodeType":"VariableDeclaration","scope":8651,"src":"27510:75:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward))"},"typeName":{"id":8078,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8073,"name":"uint256","nodeType":"ElementaryTypeName","src":"27518:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"27510:53:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8077,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8074,"name":"uint256","nodeType":"ElementaryTypeName","src":"27537:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"27529:33:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8076,"nodeType":"UserDefinedTypeName","pathNode":{"id":8075,"name":"ClaimedReward","nameLocations":["27548:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"27548:13:15"},"referencedDeclaration":8067,"src":"27548:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}}}},"visibility":"public"},{"constant":false,"functionSelector":"f064997c","id":8081,"mutability":"mutable","name":"nextRewardId","nameLocation":"27607:12:15","nodeType":"VariableDeclaration","scope":8651,"src":"27592:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8080,"name":"uint256","nodeType":"ElementaryTypeName","src":"27592:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"408e1e6b24c523df52071026044644bc970ace38bba503fa10e7c6e4e9ee0661","id":8101,"name":"RewardAdded","nameLocation":"27634:11:15","nodeType":"EventDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8083,"indexed":true,"mutability":"mutable","name":"rewardId","nameLocation":"27662:8:15","nodeType":"VariableDeclaration","scope":8101,"src":"27646:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8082,"name":"uint256","nodeType":"ElementaryTypeName","src":"27646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8085,"indexed":true,"mutability":"mutable","name":"rewardType","nameLocation":"27687:10:15","nodeType":"VariableDeclaration","scope":8101,"src":"27672:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8084,"name":"string","nodeType":"ElementaryTypeName","src":"27672:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8087,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"27707:6:15","nodeType":"VariableDeclaration","scope":8101,"src":"27699:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"27699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8089,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"27722:11:15","nodeType":"VariableDeclaration","scope":8101,"src":"27715:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8088,"name":"string","nodeType":"ElementaryTypeName","src":"27715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8091,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"27742:8:15","nodeType":"VariableDeclaration","scope":8101,"src":"27735:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8090,"name":"string","nodeType":"ElementaryTypeName","src":"27735:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8093,"indexed":false,"mutability":"mutable","name":"functionAbi","nameLocation":"27759:11:15","nodeType":"VariableDeclaration","scope":8101,"src":"27752:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8092,"name":"string","nodeType":"ElementaryTypeName","src":"27752:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8095,"indexed":false,"mutability":"mutable","name":"activeAt","nameLocation":"27780:8:15","nodeType":"VariableDeclaration","scope":8101,"src":"27772:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"27772:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8097,"indexed":false,"mutability":"mutable","name":"deactiveAt","nameLocation":"27798:10:15","nodeType":"VariableDeclaration","scope":8101,"src":"27790:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8096,"name":"uint256","nodeType":"ElementaryTypeName","src":"27790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8099,"indexed":false,"mutability":"mutable","name":"claimableStakedTime","nameLocation":"27818:19:15","nodeType":"VariableDeclaration","scope":8101,"src":"27810:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8098,"name":"uint256","nodeType":"ElementaryTypeName","src":"27810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27645:193:15"},"src":"27628:211:15"},{"anonymous":false,"eventSelector":"7ef1954a47bcf45f29bbc3b53d86df999b6f295782796ac65ea2df0347116935","id":8113,"name":"RewardClaimed","nameLocation":"27851:13:15","nodeType":"EventDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"indexed":true,"mutability":"mutable","name":"rewardId","nameLocation":"27881:8:15","nodeType":"VariableDeclaration","scope":8113,"src":"27865:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8102,"name":"uint256","nodeType":"ElementaryTypeName","src":"27865:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8105,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"27907:7:15","nodeType":"VariableDeclaration","scope":8113,"src":"27891:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8104,"name":"uint256","nodeType":"ElementaryTypeName","src":"27891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8107,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"27932:6:15","nodeType":"VariableDeclaration","scope":8113,"src":"27916:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8106,"name":"address","nodeType":"ElementaryTypeName","src":"27916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8109,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"27948:6:15","nodeType":"VariableDeclaration","scope":8113,"src":"27940:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8108,"name":"uint256","nodeType":"ElementaryTypeName","src":"27940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8111,"indexed":false,"mutability":"mutable","name":"claimedAt","nameLocation":"27964:9:15","nodeType":"VariableDeclaration","scope":8113,"src":"27956:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8110,"name":"uint256","nodeType":"ElementaryTypeName","src":"27956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27864:110:15"},"src":"27845:130:15"},{"anonymous":false,"eventSelector":"7de9b19a9a16075e228395248ad5311ffab7748c0525bd16ab44912a968161c3","id":8125,"name":"RewardRevoked","nameLocation":"27987:13:15","nodeType":"EventDefinition","parameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8115,"indexed":true,"mutability":"mutable","name":"rewardId","nameLocation":"28017:8:15","nodeType":"VariableDeclaration","scope":8125,"src":"28001:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8114,"name":"uint256","nodeType":"ElementaryTypeName","src":"28001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8117,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"28043:7:15","nodeType":"VariableDeclaration","scope":8125,"src":"28027:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8116,"name":"uint256","nodeType":"ElementaryTypeName","src":"28027:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8119,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"28068:6:15","nodeType":"VariableDeclaration","scope":8125,"src":"28052:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8118,"name":"address","nodeType":"ElementaryTypeName","src":"28052:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8121,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"28083:6:15","nodeType":"VariableDeclaration","scope":8125,"src":"28076:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8120,"name":"string","nodeType":"ElementaryTypeName","src":"28076:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8123,"indexed":false,"mutability":"mutable","name":"revokedAt","nameLocation":"28099:9:15","nodeType":"VariableDeclaration","scope":8125,"src":"28091:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"28091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28000:109:15"},"src":"27981:129:15"},{"anonymous":false,"eventSelector":"077df36c64e7c698035a47d2e97da79ab1c3bcfdf6f82430581659cc4d2a969a","id":8129,"name":"RewardActivated","nameLocation":"28122:15:15","nodeType":"EventDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8127,"indexed":true,"mutability":"mutable","name":"rewardId","nameLocation":"28154:8:15","nodeType":"VariableDeclaration","scope":8129,"src":"28138:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8126,"name":"uint256","nodeType":"ElementaryTypeName","src":"28138:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28137:26:15"},"src":"28116:48:15"},{"anonymous":false,"eventSelector":"385eed96ca33f0da03d900751711ff4392adf11be79222f4aa99f92e71a1da4f","id":8133,"name":"RewardDeactivated","nameLocation":"28176:17:15","nodeType":"EventDefinition","parameters":{"id":8132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8131,"indexed":true,"mutability":"mutable","name":"rewardId","nameLocation":"28210:8:15","nodeType":"VariableDeclaration","scope":8133,"src":"28194:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8130,"name":"uint256","nodeType":"ElementaryTypeName","src":"28194:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28193:26:15"},"src":"28170:50:15"},{"body":{"id":8261,"nodeType":"Block","src":"29053:1367:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8159,"name":"rewardType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"29078:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29072:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8157,"name":"bytes","nodeType":"ElementaryTypeName","src":"29072:5:15","typeDescriptions":{}}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29072:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29090:6:15","memberName":"length","nodeType":"MemberAccess","src":"29072:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29099:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29072:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420747970652063616e6e6f7420626520656d707479","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29102:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b9091c54dea04ad826788ef1b88f72736e453cc8e0143b63bd11a8112fee855","typeString":"literal_string \"Reward type cannot be empty\""},"value":"Reward type cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b9091c54dea04ad826788ef1b88f72736e453cc8e0143b63bd11a8112fee855","typeString":"literal_string \"Reward type cannot be empty\""}],"id":8156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29064:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29064:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8166,"nodeType":"ExpressionStatement","src":"29064:68:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8170,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"29157:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29151:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8168,"name":"bytes","nodeType":"ElementaryTypeName","src":"29151:5:15","typeDescriptions":{}}},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29151:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29170:6:15","memberName":"length","nodeType":"MemberAccess","src":"29151:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29151:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465736372697074696f6e2063616e6e6f7420626520656d707479","id":8175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29182:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""},"value":"Description cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""}],"id":8167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29143:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29143:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8177,"nodeType":"ExpressionStatement","src":"29143:69:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8179,"name":"claimableStakedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"29231:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29253:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29231:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d61626c65207374616b65642074696d65206d7573742062652067726561746572207468616e2030","id":8182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29256:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f92cc8de7276d47c85f2e672ced5c32aee5f2c444772cab989962a86bf7d109","typeString":"literal_string \"Claimable staked time must be greater than 0\""},"value":"Claimable staked time must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f92cc8de7276d47c85f2e672ced5c32aee5f2c444772cab989962a86bf7d109","typeString":"literal_string \"Claimable staked time must be greater than 0\""}],"id":8178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29223:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29223:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8184,"nodeType":"ExpressionStatement","src":"29223:80:15"},{"assignments":[8186],"declarations":[{"constant":false,"id":8186,"mutability":"mutable","name":"currentTime","nameLocation":"29324:11:15","nodeType":"VariableDeclaration","scope":8261,"src":"29316:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8185,"name":"uint256","nodeType":"ElementaryTypeName","src":"29316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8189,"initialValue":{"expression":{"id":8187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"29339:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29345:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"29339:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29316:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8190,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"29371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29383:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29371:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8201,"nodeType":"IfStatement","src":"29367:114:15","trueBody":{"id":8200,"nodeType":"Block","src":"29386:95:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8194,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"29409:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8195,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"29420:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29409:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4163746976652074696d65206d75737420626520696e2074686520667574757265","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29433:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_79fada3f5e1d0b5d490e9b700b2e9dafc65cb557074fb0d1b52195d859bcc6d6","typeString":"literal_string \"Active time must be in the future\""},"value":"Active time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79fada3f5e1d0b5d490e9b700b2e9dafc65cb557074fb0d1b52195d859bcc6d6","typeString":"literal_string \"Active time must be in the future\""}],"id":8193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29401:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29401:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8199,"nodeType":"ExpressionStatement","src":"29401:68:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8202,"name":"deactiveAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"29497:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29511:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29497:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8225,"nodeType":"IfStatement","src":"29493:261:15","trueBody":{"id":8224,"nodeType":"Block","src":"29514:240:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8206,"name":"deactiveAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"29537:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8207,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"29550:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29537:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656163746976652074696d65206d75737420626520696e2074686520667574757265","id":8209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29563:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1761b687ec402ab45018b4fc7d907dcbd8cc8c7218d81c8b9f46ed9d8bd0f99","typeString":"literal_string \"Deactive time must be in the future\""},"value":"Deactive time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1761b687ec402ab45018b4fc7d907dcbd8cc8c7218d81c8b9f46ed9d8bd0f99","typeString":"literal_string \"Deactive time must be in the future\""}],"id":8205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29529:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29529:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8211,"nodeType":"ExpressionStatement","src":"29529:72:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"29620:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29632:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29620:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8223,"nodeType":"IfStatement","src":"29616:127:15","trueBody":{"id":8222,"nodeType":"Block","src":"29635:108:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8216,"name":"deactiveAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"29662:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8217,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"29675:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29662:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656163746976652074696d65206d757374206265206166746572206163746976652074696d65","id":8219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29685:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_09b020912eb521984d8a7220224fb9b2d43df5a9493013bf90695f813ffdde6b","typeString":"literal_string \"Deactive time must be after active time\""},"value":"Deactive time must be after active time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09b020912eb521984d8a7220224fb9b2d43df5a9493013bf90695f813ffdde6b","typeString":"literal_string \"Deactive time must be after active time\""}],"id":8215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"29654:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29654:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8221,"nodeType":"ExpressionStatement","src":"29654:73:15"}]}}]}},{"assignments":[8227],"declarations":[{"constant":false,"id":8227,"mutability":"mutable","name":"rewardId","nameLocation":"29774:8:15","nodeType":"VariableDeclaration","scope":8261,"src":"29766:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8226,"name":"uint256","nodeType":"ElementaryTypeName","src":"29766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8230,"initialValue":{"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29785:14:15","subExpression":{"id":8228,"name":"nextRewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"29785:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29766:33:15"},{"expression":{"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8231,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"29810:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8233,"indexExpression":{"id":8232,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"29818:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29810:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8235,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"29862:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8236,"name":"rewardType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"29897:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"29930:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8238,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"29964:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":8240,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"30053:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8241,"name":"deactiveAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"30088:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8242,"name":"claimableStakedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"30134:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8243,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"30178:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8244,"name":"functionAbi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"30214:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8245,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"30251:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8234,"name":"Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"29830:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Reward_$8046_storage_ptr_$","typeString":"type(struct Collection.Reward storage pointer)"}},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["29852:8:15","29885:10:15","29922:6:15","29951:11:15","29990:8:15","30043:8:15","30076:10:15","30113:19:15","30168:8:15","30201:11:15","30240:9:15"],"names":["rewardId","rewardType","amount","description","isActive","activeAt","deactiveAt","claimableStakedTime","metadata","functionAbi","createdAt"],"nodeType":"FunctionCall","src":"29830:444:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"src":"29810:464:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8248,"nodeType":"ExpressionStatement","src":"29810:464:15"},{"eventCall":{"arguments":[{"id":8250,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"30304:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8251,"name":"rewardType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"30314:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"30326:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8253,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"30334:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8254,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"30347:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8255,"name":"functionAbi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"30357:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8256,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"30370:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8257,"name":"deactiveAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"30380:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8258,"name":"claimableStakedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"30392:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8249,"name":"RewardAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"30292:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,uint256,string memory,string memory,string memory,uint256,uint256,uint256)"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30292:120:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8260,"nodeType":"EmitStatement","src":"30287:125:15"}]},"documentation":{"id":8134,"nodeType":"StructuredDocumentation","src":"28228:503:15","text":" @dev 보상 추가\n @param rewardType: 보상 타입\n @param amount: 보상 금액\n @param description: 보상 설명\n @param metadata: 보상 메타데이터\n @param functionAbi: 보상 함수 ABI\n @param activeAt: 보상 활성화 시간 (0이면 즉시 활성화)\n @param deactiveAt: 보상 비활성화 시간 (0이면 무제한)\n @param claimableStakedTime: 보상을 받기 위한 최소 스테이킹 시간 (초 단위)"},"functionSelector":"2a67c158","id":8262,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8153,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"29040:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8154,"kind":"modifierInvocation","modifierName":{"id":8152,"name":"onlyRole","nameLocations":["29031:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"29031:8:15"},"nodeType":"ModifierInvocation","src":"29031:21:15"}],"name":"addReward","nameLocation":"28746:9:15","nodeType":"FunctionDefinition","parameters":{"id":8151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8136,"mutability":"mutable","name":"rewardType","nameLocation":"28780:10:15","nodeType":"VariableDeclaration","scope":8262,"src":"28766:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8135,"name":"string","nodeType":"ElementaryTypeName","src":"28766:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8138,"mutability":"mutable","name":"amount","nameLocation":"28809:6:15","nodeType":"VariableDeclaration","scope":8262,"src":"28801:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"28801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"description","nameLocation":"28840:11:15","nodeType":"VariableDeclaration","scope":8262,"src":"28826:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8139,"name":"string","nodeType":"ElementaryTypeName","src":"28826:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8142,"mutability":"mutable","name":"metadata","nameLocation":"28876:8:15","nodeType":"VariableDeclaration","scope":8262,"src":"28862:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8141,"name":"string","nodeType":"ElementaryTypeName","src":"28862:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"functionAbi","nameLocation":"28909:11:15","nodeType":"VariableDeclaration","scope":8262,"src":"28895:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8143,"name":"string","nodeType":"ElementaryTypeName","src":"28895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8146,"mutability":"mutable","name":"activeAt","nameLocation":"28939:8:15","nodeType":"VariableDeclaration","scope":8262,"src":"28931:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8145,"name":"uint256","nodeType":"ElementaryTypeName","src":"28931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8148,"mutability":"mutable","name":"deactiveAt","nameLocation":"28966:10:15","nodeType":"VariableDeclaration","scope":8262,"src":"28958:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8147,"name":"uint256","nodeType":"ElementaryTypeName","src":"28958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8150,"mutability":"mutable","name":"claimableStakedTime","nameLocation":"28995:19:15","nodeType":"VariableDeclaration","scope":8262,"src":"28987:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"28987:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28755:266:15"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[],"src":"29053:0:15"},"scope":8651,"src":"28737:1683:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8291,"nodeType":"Block","src":"30584:170:15","statements":[{"expression":{"arguments":[{"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30603:27:15","subExpression":{"expression":{"baseExpression":{"id":8272,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"30604:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8274,"indexExpression":{"id":8273,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"30612:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30604:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30622:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8033,"src":"30604:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420697320616c726561647920616374697665","id":8277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30632:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d51c9ba6c02dcfa58f540c16f573b090d0ef0ca395b66ef2a5123d3136c9c4dd","typeString":"literal_string \"Reward is already active\""},"value":"Reward is already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d51c9ba6c02dcfa58f540c16f573b090d0ef0ca395b66ef2a5123d3136c9c4dd","typeString":"literal_string \"Reward is already active\""}],"id":8271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"30595:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30595:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8279,"nodeType":"ExpressionStatement","src":"30595:64:15"},{"expression":{"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8280,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"30672:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8282,"indexExpression":{"id":8281,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"30680:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30672:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"30690:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8033,"src":"30672:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30701:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"30672:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8286,"nodeType":"ExpressionStatement","src":"30672:33:15"},{"eventCall":{"arguments":[{"id":8288,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"30737:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8287,"name":"RewardActivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"30721:15:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30721:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8290,"nodeType":"EmitStatement","src":"30716:30:15"}]},"documentation":{"id":8263,"nodeType":"StructuredDocumentation","src":"30428:77:15","text":" @dev 보상 활성화\n @param rewardId: 보상 ID"},"functionSelector":"66cfd072","id":8292,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8268,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"30571:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8269,"kind":"modifierInvocation","modifierName":{"id":8267,"name":"onlyRole","nameLocations":["30562:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"30562:8:15"},"nodeType":"ModifierInvocation","src":"30562:21:15"}],"name":"activateReward","nameLocation":"30520:14:15","nodeType":"FunctionDefinition","parameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8265,"mutability":"mutable","name":"rewardId","nameLocation":"30543:8:15","nodeType":"VariableDeclaration","scope":8292,"src":"30535:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8264,"name":"uint256","nodeType":"ElementaryTypeName","src":"30535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30534:18:15"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[],"src":"30584:0:15"},"scope":8651,"src":"30511:243:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8320,"nodeType":"Block","src":"30927:168:15","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8302,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"30946:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8304,"indexExpression":{"id":8303,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"30954:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30946:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30964:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8033,"src":"30946:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206973206e6f7420616374697665","id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30974:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26","typeString":"literal_string \"Reward is not active\""},"value":"Reward is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26","typeString":"literal_string \"Reward is not active\""}],"id":8301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"30938:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30938:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8308,"nodeType":"ExpressionStatement","src":"30938:59:15"},{"expression":{"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8309,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"31010:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8311,"indexExpression":{"id":8310,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"31018:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31010:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31028:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8033,"src":"31010:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"31039:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"31010:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8315,"nodeType":"ExpressionStatement","src":"31010:34:15"},{"eventCall":{"arguments":[{"id":8317,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"31078:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8316,"name":"RewardDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"31060:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31060:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8319,"nodeType":"EmitStatement","src":"31055:32:15"}]},"documentation":{"id":8293,"nodeType":"StructuredDocumentation","src":"30766:80:15","text":" @dev 보상 비활성화\n @param rewardId: 보상 ID"},"functionSelector":"eabdc5b4","id":8321,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8298,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"30914:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8299,"kind":"modifierInvocation","modifierName":{"id":8297,"name":"onlyRole","nameLocations":["30905:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"30905:8:15"},"nodeType":"ModifierInvocation","src":"30905:21:15"}],"name":"deactivateReward","nameLocation":"30861:16:15","nodeType":"FunctionDefinition","parameters":{"id":8296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8295,"mutability":"mutable","name":"rewardId","nameLocation":"30886:8:15","nodeType":"VariableDeclaration","scope":8321,"src":"30878:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8294,"name":"uint256","nodeType":"ElementaryTypeName","src":"30878:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30877:18:15"},"returnParameters":{"id":8300,"nodeType":"ParameterList","parameters":[],"src":"30927:0:15"},"scope":8651,"src":"30852:243:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8334,"nodeType":"Block","src":"31295:43:15","statements":[{"expression":{"baseExpression":{"id":8330,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"31313:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8332,"indexExpression":{"id":8331,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"31321:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31313:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"functionReturnParameters":8329,"id":8333,"nodeType":"Return","src":"31306:24:15"}]},"documentation":{"id":8322,"nodeType":"StructuredDocumentation","src":"31103:111:15","text":" @dev 보상 정보 조회\n @param rewardId: 보상 ID\n @return 보상 정보"},"functionSelector":"1c4b774b","id":8335,"implemented":true,"kind":"function","modifiers":[],"name":"getReward","nameLocation":"31229:9:15","nodeType":"FunctionDefinition","parameters":{"id":8325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8324,"mutability":"mutable","name":"rewardId","nameLocation":"31247:8:15","nodeType":"VariableDeclaration","scope":8335,"src":"31239:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8323,"name":"uint256","nodeType":"ElementaryTypeName","src":"31239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31238:18:15"},"returnParameters":{"id":8329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8335,"src":"31280:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward"},"typeName":{"id":8327,"nodeType":"UserDefinedTypeName","pathNode":{"id":8326,"name":"Reward","nameLocations":["31280:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":8046,"src":"31280:6:15"},"referencedDeclaration":8046,"src":"31280:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage_ptr","typeString":"struct Collection.Reward"}},"visibility":"internal"}],"src":"31279:15:15"},"scope":8651,"src":"31220:118:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8475,"nodeType":"Block","src":"31552:1392:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":8349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"31579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8348,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"31571:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31571:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31589:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31563:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31563:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8353,"nodeType":"ExpressionStatement","src":"31563:49:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8355,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"31631:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8357,"indexExpression":{"id":8356,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"31639:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31631:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"id":8358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31649:8:15","memberName":"rewardId","nodeType":"MemberAccess","referencedDeclaration":8025,"src":"31631:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31631:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420646f6573206e6f74206578697374","id":8361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31664:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b8179326fadb1107959ee228467cf53bd098cb1b60ef3def4b4f83858242cb4","typeString":"literal_string \"Reward does not exist\""},"value":"Reward does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b8179326fadb1107959ee228467cf53bd098cb1b60ef3def4b4f83858242cb4","typeString":"literal_string \"Reward does not exist\""}],"id":8354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31623:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31623:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8363,"nodeType":"ExpressionStatement","src":"31623:65:15"},{"assignments":[8366],"declarations":[{"constant":false,"id":8366,"mutability":"mutable","name":"reward","nameLocation":"31715:6:15","nodeType":"VariableDeclaration","scope":8475,"src":"31701:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward"},"typeName":{"id":8365,"nodeType":"UserDefinedTypeName","pathNode":{"id":8364,"name":"Reward","nameLocations":["31701:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":8046,"src":"31701:6:15"},"referencedDeclaration":8046,"src":"31701:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage_ptr","typeString":"struct Collection.Reward"}},"visibility":"internal"}],"id":8370,"initialValue":{"baseExpression":{"id":8367,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"31724:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Reward_$8046_storage_$","typeString":"mapping(uint256 => struct Collection.Reward storage ref)"}},"id":8369,"indexExpression":{"id":8368,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"31732:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31724:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_storage","typeString":"struct Collection.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"31701:40:15"},{"assignments":[8373],"declarations":[{"constant":false,"id":8373,"mutability":"mutable","name":"stakedToken","nameLocation":"31771:11:15","nodeType":"VariableDeclaration","scope":8475,"src":"31752:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken"},"typeName":{"id":8372,"nodeType":"UserDefinedTypeName","pathNode":{"id":8371,"name":"StakedToken","nameLocations":["31752:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":7533,"src":"31752:11:15"},"referencedDeclaration":7533,"src":"31752:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage_ptr","typeString":"struct Collection.StakedToken"}},"visibility":"internal"}],"id":8377,"initialValue":{"baseExpression":{"id":8374,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"31785:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedToken_$7533_storage_$","typeString":"mapping(uint256 => struct Collection.StakedToken storage ref)"}},"id":8376,"indexExpression":{"id":8375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"31798:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31785:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_storage","typeString":"struct Collection.StakedToken storage ref"}},"nodeType":"VariableDeclarationStatement","src":"31752:54:15"},{"assignments":[8379],"declarations":[{"constant":false,"id":8379,"mutability":"mutable","name":"currentTime","nameLocation":"31825:11:15","nodeType":"VariableDeclaration","scope":8475,"src":"31817:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8378,"name":"uint256","nodeType":"ElementaryTypeName","src":"31817:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8382,"initialValue":{"expression":{"id":8380,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"31839:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31845:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"31839:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31817:37:15"},{"expression":{"arguments":[{"expression":{"id":8384,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"31875:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"id":8385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31882:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8033,"src":"31875:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206973206e6f7420616374697665","id":8386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31892:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26","typeString":"literal_string \"Reward is not active\""},"value":"Reward is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26","typeString":"literal_string \"Reward is not active\""}],"id":8383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31867:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31867:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8388,"nodeType":"ExpressionStatement","src":"31867:48:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8390,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"31934:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"id":8391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31941:8:15","memberName":"activeAt","nodeType":"MemberAccess","referencedDeclaration":8035,"src":"31934:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8392,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"31953:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31934:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206973206e6f742061637469766520796574","id":8394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31966:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_004c0fbd326960ce29f4df95136da84859284ef8bbfa64745cc7c802e0e19246","typeString":"literal_string \"Reward is not active yet\""},"value":"Reward is not active yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_004c0fbd326960ce29f4df95136da84859284ef8bbfa64745cc7c802e0e19246","typeString":"literal_string \"Reward is not active yet\""}],"id":8389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31926:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31926:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8396,"nodeType":"ExpressionStatement","src":"31926:67:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8398,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"32012:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"id":8399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32019:10:15","memberName":"deactiveAt","nodeType":"MemberAccess","referencedDeclaration":8037,"src":"32012:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8400,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"32033:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32012:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206973206e6f742061637469766520616e796d6f7265","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32046:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e193236b66e5c7edbedc85f7e92cadfaebb3b241ef9b538fcc50ee7d9f469ef","typeString":"literal_string \"Reward is not active anymore\""},"value":"Reward is not active anymore"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e193236b66e5c7edbedc85f7e92cadfaebb3b241ef9b538fcc50ee7d9f469ef","typeString":"literal_string \"Reward is not active anymore\""}],"id":8397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"32004:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8404,"nodeType":"ExpressionStatement","src":"32004:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8406,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"32096:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"id":8407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32103:19:15","memberName":"claimableStakedTime","nodeType":"MemberAccess","referencedDeclaration":8039,"src":"32096:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8408,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"32126:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8409,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"32140:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":8410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32152:8:15","memberName":"stakedAt","nodeType":"MemberAccess","referencedDeclaration":7526,"src":"32140:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32126:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32096:64:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f74207374616b6564206c6f6e6720656e6f756768","id":8413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32162:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4791eb8792cb87968622cd066eabf1adaaff23c4aa72697289ca224d0359e62f","typeString":"literal_string \"Token is not staked long enough\""},"value":"Token is not staked long enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4791eb8792cb87968622cd066eabf1adaaff23c4aa72697289ca224d0359e62f","typeString":"literal_string \"Token is not staked long enough\""}],"id":8405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"32088:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32088:108:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8415,"nodeType":"ExpressionStatement","src":"32088:108:15"},{"expression":{"arguments":[{"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"32217:44:15","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":8417,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"32218:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8419,"indexExpression":{"id":8418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32233:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32218:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8421,"indexExpression":{"id":8420,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"32242:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32218:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"id":8422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32252:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":8058,"src":"32218:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420697320616c726561647920636c61696d6564","id":8424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32263:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c36f421ed86d258f14041e9aa3558400079a098daab72f201bd88d4d661b8242","typeString":"literal_string \"Reward is already claimed\""},"value":"Reward is already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c36f421ed86d258f14041e9aa3558400079a098daab72f201bd88d4d661b8242","typeString":"literal_string \"Reward is already claimed\""}],"id":8416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"32209:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32209:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8426,"nodeType":"ExpressionStatement","src":"32209:82:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8428,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"32310:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":8429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32322:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"32310:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"32332:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32332:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32310:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8434,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"32356:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"32369:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32369:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8433,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"32348:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32348:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32310:72:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865207374616b65722063616e20636c61696d2074686520726577617264","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32384:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3fa6927abb8aa53d7a694318451edab40a04c3abf7bef6ec605ac322cc9ce2c","typeString":"literal_string \"Only the staker can claim the reward\""},"value":"Only the staker can claim the reward"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3fa6927abb8aa53d7a694318451edab40a04c3abf7bef6ec605ac322cc9ce2c","typeString":"literal_string \"Only the staker can claim the reward\""}],"id":8427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"32302:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32302:121:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8441,"nodeType":"ExpressionStatement","src":"32302:121:15"},{"expression":{"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8442,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"32436:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8445,"indexExpression":{"id":8443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32436:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8446,"indexExpression":{"id":8444,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"32460:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"32436:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8448,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"32511:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8449,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8450,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"32573:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32573:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8453,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"32614:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakedToken_$7533_memory_ptr","typeString":"struct Collection.StakedToken memory"}},"id":8454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32626:8:15","memberName":"stakedAt","nodeType":"MemberAccess","referencedDeclaration":7526,"src":"32614:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8455,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"32660:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":8456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"32697:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"32727:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"","id":8459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32789:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":8460,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"32817:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8447,"name":"ClaimedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"32472:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ClaimedReward_$8067_storage_ptr_$","typeString":"type(struct Collection.ClaimedReward storage pointer)"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["32501:8:15","32534:7:15","32565:6:15","32604:8:15","32649:9:15","32686:9:15","32716:9:15","32747:9:15","32774:13:15","32806:9:15"],"names":["rewardId","tokenId","staker","stakedAt","claimedAt","isClaimed","isRevoked","revokedAt","revokedReason","createdAt"],"nodeType":"FunctionCall","src":"32472:368:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"src":"32436:404:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"id":8463,"nodeType":"ExpressionStatement","src":"32436:404:15"},{"eventCall":{"arguments":[{"id":8465,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"32872:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"32899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8467,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"32891:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32891:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8470,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"32909:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$8046_memory_ptr","typeString":"struct Collection.Reward memory"}},"id":8471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32916:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8029,"src":"32909:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8472,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"32924:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8464,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32858:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256,uint256)"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32858:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8474,"nodeType":"EmitStatement","src":"32853:83:15"}]},"documentation":{"id":8336,"nodeType":"StructuredDocumentation","src":"31346:108:15","text":" @dev 보상 청구\n @param rewardId: 보상 ID\n @param tokenId: 토큰 ID"},"functionSelector":"86bb8f37","id":8476,"implemented":true,"kind":"function","modifiers":[{"id":8343,"kind":"modifierInvocation","modifierName":{"id":8342,"name":"nonReentrant","nameLocations":["31525:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1036,"src":"31525:12:15"},"nodeType":"ModifierInvocation","src":"31525:12:15"},{"id":8345,"kind":"modifierInvocation","modifierName":{"id":8344,"name":"whenNotPaused","nameLocations":["31538:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":928,"src":"31538:13:15"},"nodeType":"ModifierInvocation","src":"31538:13:15"}],"name":"claimReward","nameLocation":"31469:11:15","nodeType":"FunctionDefinition","parameters":{"id":8341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"rewardId","nameLocation":"31489:8:15","nodeType":"VariableDeclaration","scope":8476,"src":"31481:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8337,"name":"uint256","nodeType":"ElementaryTypeName","src":"31481:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8340,"mutability":"mutable","name":"tokenId","nameLocation":"31507:7:15","nodeType":"VariableDeclaration","scope":8476,"src":"31499:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8339,"name":"uint256","nodeType":"ElementaryTypeName","src":"31499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31480:35:15"},"returnParameters":{"id":8346,"nodeType":"ParameterList","parameters":[],"src":"31552:0:15"},"scope":8651,"src":"31460:1484:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8544,"nodeType":"Block","src":"33227:478:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":8491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"33254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8490,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"33246:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33246:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33264:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"33238:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33238:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8495,"nodeType":"ExpressionStatement","src":"33238:49:15"},{"expression":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":8497,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"33306:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8499,"indexExpression":{"id":8498,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"33321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33306:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8501,"indexExpression":{"id":8500,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"33330:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33306:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"id":8502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33340:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":8058,"src":"33306:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264206973206e6f7420636c61696d6564","id":8503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33351:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1e57e3ca654459218e44002e03f901f814d7054ebea87141d0bfcd9d990b3df","typeString":"literal_string \"Reward is not claimed\""},"value":"Reward is not claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1e57e3ca654459218e44002e03f901f814d7054ebea87141d0bfcd9d990b3df","typeString":"literal_string \"Reward is not claimed\""}],"id":8496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"33298:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33298:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8505,"nodeType":"ExpressionStatement","src":"33298:77:15"},{"assignments":[8508],"declarations":[{"constant":false,"id":8508,"mutability":"mutable","name":"claimedReward","nameLocation":"33409:13:15","nodeType":"VariableDeclaration","scope":8544,"src":"33388:34:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward"},"typeName":{"id":8507,"nodeType":"UserDefinedTypeName","pathNode":{"id":8506,"name":"ClaimedReward","nameLocations":["33388:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"33388:13:15"},"referencedDeclaration":8067,"src":"33388:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}},"visibility":"internal"}],"id":8514,"initialValue":{"baseExpression":{"baseExpression":{"id":8509,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"33425:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8511,"indexExpression":{"id":8510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"33440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33425:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8513,"indexExpression":{"id":8512,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"33449:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33425:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33388:70:15"},{"expression":{"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8515,"name":"claimedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"33471:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"id":8517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"33485:9:15","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":8060,"src":"33471:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33497:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"33471:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8520,"nodeType":"ExpressionStatement","src":"33471:30:15"},{"expression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8521,"name":"claimedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"33512:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"id":8523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"33526:9:15","memberName":"revokedAt","nodeType":"MemberAccess","referencedDeclaration":8062,"src":"33512:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8524,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"33538:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33544:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"33538:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33512:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8527,"nodeType":"ExpressionStatement","src":"33512:41:15"},{"expression":{"id":8532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8528,"name":"claimedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"33564:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"id":8530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"33578:13:15","memberName":"revokedReason","nodeType":"MemberAccess","referencedDeclaration":8064,"src":"33564:27:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8531,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"33594:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"33564:36:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8533,"nodeType":"ExpressionStatement","src":"33564:36:15"},{"eventCall":{"arguments":[{"id":8535,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"33632:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"33642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8537,"name":"claimedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"33651:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"id":8538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33665:6:15","memberName":"staker","nodeType":"MemberAccess","referencedDeclaration":8052,"src":"33651:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8539,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"33673:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"33681:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33687:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"33681:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8534,"name":"RewardRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"33618:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,string memory,uint256)"}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8543,"nodeType":"EmitStatement","src":"33613:84:15"}]},"documentation":{"id":8477,"nodeType":"StructuredDocumentation","src":"32952:152:15","text":" @dev 보상 청구 취소\n @param rewardId: 보상 ID\n @param reason: 취소 이유\n @param tokenId: 토큰 ID"},"functionSelector":"a7b1190a","id":8545,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8486,"name":"ESCROW_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"33214:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8487,"kind":"modifierInvocation","modifierName":{"id":8485,"name":"onlyRole","nameLocations":["33205:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"33205:8:15"},"nodeType":"ModifierInvocation","src":"33205:21:15"}],"name":"revokeClaimedReward","nameLocation":"33119:19:15","nodeType":"FunctionDefinition","parameters":{"id":8484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"rewardId","nameLocation":"33147:8:15","nodeType":"VariableDeclaration","scope":8545,"src":"33139:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8478,"name":"uint256","nodeType":"ElementaryTypeName","src":"33139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8481,"mutability":"mutable","name":"tokenId","nameLocation":"33165:7:15","nodeType":"VariableDeclaration","scope":8545,"src":"33157:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8480,"name":"uint256","nodeType":"ElementaryTypeName","src":"33157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8483,"mutability":"mutable","name":"reason","nameLocation":"33188:6:15","nodeType":"VariableDeclaration","scope":8545,"src":"33174:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8482,"name":"string","nodeType":"ElementaryTypeName","src":"33174:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33138:57:15"},"returnParameters":{"id":8488,"nodeType":"ParameterList","parameters":[],"src":"33227:0:15"},"scope":8651,"src":"33110:595:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8562,"nodeType":"Block","src":"33975:59:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":8556,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"33993:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8558,"indexExpression":{"id":8557,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8548,"src":"34008:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33993:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8560,"indexExpression":{"id":8559,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"34017:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33993:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"functionReturnParameters":8555,"id":8561,"nodeType":"Return","src":"33986:40:15"}]},"documentation":{"id":8546,"nodeType":"StructuredDocumentation","src":"33713:152:15","text":" @dev 보상 청구 정보 조회\n @param tokenId: 토큰 ID\n @param rewardId: 보상 ID\n @return 청구 정보"},"functionSelector":"a3e37652","id":8563,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimedReward","nameLocation":"33880:16:15","nodeType":"FunctionDefinition","parameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8548,"mutability":"mutable","name":"tokenId","nameLocation":"33905:7:15","nodeType":"VariableDeclaration","scope":8563,"src":"33897:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8547,"name":"uint256","nodeType":"ElementaryTypeName","src":"33897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8550,"mutability":"mutable","name":"rewardId","nameLocation":"33922:8:15","nodeType":"VariableDeclaration","scope":8563,"src":"33914:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8549,"name":"uint256","nodeType":"ElementaryTypeName","src":"33914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33896:35:15"},"returnParameters":{"id":8555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8563,"src":"33953:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward"},"typeName":{"id":8553,"nodeType":"UserDefinedTypeName","pathNode":{"id":8552,"name":"ClaimedReward","nameLocations":["33953:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"33953:13:15"},"referencedDeclaration":8067,"src":"33953:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}},"visibility":"internal"}],"src":"33952:22:15"},"scope":8651,"src":"33871:163:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8649,"nodeType":"Block","src":"34256:525:15","statements":[{"assignments":[8574],"declarations":[{"constant":false,"id":8574,"mutability":"mutable","name":"count","nameLocation":"34275:5:15","nodeType":"VariableDeclaration","scope":8649,"src":"34267:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"34267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8576,"initialValue":{"hexValue":"30","id":8575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34283:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"34267:17:15"},{"body":{"id":8598,"nodeType":"Block","src":"34338:110:15","statements":[{"condition":{"expression":{"baseExpression":{"baseExpression":{"id":8587,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"34357:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8589,"indexExpression":{"id":8588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"34372:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34357:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8591,"indexExpression":{"id":8590,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"34381:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34357:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"id":8592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34384:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":8058,"src":"34357:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8597,"nodeType":"IfStatement","src":"34353:84:15","trueBody":{"id":8596,"nodeType":"Block","src":"34395:42:15","statements":[{"expression":{"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"34414:7:15","subExpression":{"id":8593,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"34414:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8595,"nodeType":"ExpressionStatement","src":"34414:7:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"34315:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8582,"name":"nextRewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"34319:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34315:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8599,"initializationExpression":{"assignments":[8578],"declarations":[{"constant":false,"id":8578,"mutability":"mutable","name":"i","nameLocation":"34308:1:15","nodeType":"VariableDeclaration","scope":8599,"src":"34300:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8577,"name":"uint256","nodeType":"ElementaryTypeName","src":"34300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8580,"initialValue":{"hexValue":"30","id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34312:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"34300:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"34333:3:15","subExpression":{"id":8584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"34333:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8586,"nodeType":"ExpressionStatement","src":"34333:3:15"},"nodeType":"ForStatement","src":"34295:153:15"},{"assignments":[8604],"declarations":[{"constant":false,"id":8604,"mutability":"mutable","name":"claimed","nameLocation":"34483:7:15","nodeType":"VariableDeclaration","scope":8649,"src":"34460:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.ClaimedReward[]"},"typeName":{"baseType":{"id":8602,"nodeType":"UserDefinedTypeName","pathNode":{"id":8601,"name":"ClaimedReward","nameLocations":["34460:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"34460:13:15"},"referencedDeclaration":8067,"src":"34460:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}},"id":8603,"nodeType":"ArrayTypeName","src":"34460:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_storage_$dyn_storage_ptr","typeString":"struct Collection.ClaimedReward[]"}},"visibility":"internal"}],"id":8611,"initialValue":{"arguments":[{"id":8609,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"34513:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"34493:19:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Collection.ClaimedReward memory[] memory)"},"typeName":{"baseType":{"id":8606,"nodeType":"UserDefinedTypeName","pathNode":{"id":8605,"name":"ClaimedReward","nameLocations":["34497:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"34497:13:15"},"referencedDeclaration":8067,"src":"34497:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}},"id":8607,"nodeType":"ArrayTypeName","src":"34497:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_storage_$dyn_storage_ptr","typeString":"struct Collection.ClaimedReward[]"}}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34493:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.ClaimedReward memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"34460:59:15"},{"assignments":[8613],"declarations":[{"constant":false,"id":8613,"mutability":"mutable","name":"index","nameLocation":"34538:5:15","nodeType":"VariableDeclaration","scope":8649,"src":"34530:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"34530:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8615,"initialValue":{"hexValue":"30","id":8614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34546:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"34530:17:15"},{"body":{"id":8645,"nodeType":"Block","src":"34601:148:15","statements":[{"condition":{"expression":{"baseExpression":{"baseExpression":{"id":8626,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"34620:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8628,"indexExpression":{"id":8627,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"34635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34620:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8630,"indexExpression":{"id":8629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"34644:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34620:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"id":8631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34647:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":8058,"src":"34620:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8644,"nodeType":"IfStatement","src":"34616:122:15","trueBody":{"id":8643,"nodeType":"Block","src":"34658:80:15","statements":[{"expression":{"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8632,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8604,"src":"34677:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.ClaimedReward memory[] memory"}},"id":8635,"indexExpression":{"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"34685:7:15","subExpression":{"id":8633,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"34685:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34677:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":8636,"name":"claimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"34696:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward storage ref))"}},"id":8638,"indexExpression":{"id":8637,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"34711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34696:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ClaimedReward_$8067_storage_$","typeString":"mapping(uint256 => struct Collection.ClaimedReward storage ref)"}},"id":8640,"indexExpression":{"id":8639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"34720:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34696:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage","typeString":"struct Collection.ClaimedReward storage ref"}},"src":"34677:45:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_memory_ptr","typeString":"struct Collection.ClaimedReward memory"}},"id":8642,"nodeType":"ExpressionStatement","src":"34677:45:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"34578:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8621,"name":"nextRewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"34582:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34578:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8646,"initializationExpression":{"assignments":[8617],"declarations":[{"constant":false,"id":8617,"mutability":"mutable","name":"i","nameLocation":"34571:1:15","nodeType":"VariableDeclaration","scope":8646,"src":"34563:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8616,"name":"uint256","nodeType":"ElementaryTypeName","src":"34563:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8619,"initialValue":{"hexValue":"30","id":8618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34575:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"34563:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"34596:3:15","subExpression":{"id":8623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"34596:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8625,"nodeType":"ExpressionStatement","src":"34596:3:15"},"nodeType":"ForStatement","src":"34558:191:15"},{"expression":{"id":8647,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8604,"src":"34766:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.ClaimedReward memory[] memory"}},"functionReturnParameters":8572,"id":8648,"nodeType":"Return","src":"34759:14:15"}]},"documentation":{"id":8564,"nodeType":"StructuredDocumentation","src":"34042:117:15","text":" @dev 보상 청구 정보 조회\n @param tokenId: 토큰 ID\n @return 청구 정보"},"functionSelector":"7c33bd70","id":8650,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimedRewards","nameLocation":"34174:17:15","nodeType":"FunctionDefinition","parameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8566,"mutability":"mutable","name":"tokenId","nameLocation":"34200:7:15","nodeType":"VariableDeclaration","scope":8650,"src":"34192:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"34192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34191:17:15"},"returnParameters":{"id":8572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8650,"src":"34232:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_memory_ptr_$dyn_memory_ptr","typeString":"struct Collection.ClaimedReward[]"},"typeName":{"baseType":{"id":8569,"nodeType":"UserDefinedTypeName","pathNode":{"id":8568,"name":"ClaimedReward","nameLocations":["34232:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":8067,"src":"34232:13:15"},"referencedDeclaration":8067,"src":"34232:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimedReward_$8067_storage_ptr","typeString":"struct Collection.ClaimedReward"}},"id":8570,"nodeType":"ArrayTypeName","src":"34232:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimedReward_$8067_storage_$dyn_storage_ptr","typeString":"struct Collection.ClaimedReward[]"}},"visibility":"internal"}],"src":"34231:24:15"},"scope":8651,"src":"34165:616:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8652,"src":"548:34314:15","usedErrors":[305,308,392,397,578,583,592,599,917,920,1017,10955,10958,10961,10964,10967,10970,10973,10976,10979,10982,10985,10988,10991,10994,10997,11000,11003,11006],"usedEvents":[317,326,335,403,909,914,6103,6109,6115,6119,6123,6127,6133,6137,6145,6151,6155,6159,6169,6193,6199,6211,7548,7556,8101,8113,8125,8129,8133,11038,11047,11056,11169]}],"src":"33:34831:15"},"id":15},"contracts/Factory.sol":{"ast":{"absolutePath":"contracts/Factory.sol","exportedSymbols":{"AccessControl":[295],"Collection":[8651],"CollectionFactory":[8849],"Context":[843],"ERC165":[2498],"ERC2981":[813],"ERC721A":[10949],"ERC721A__IERC721Receiver":[8867],"IAccessControl":[378],"IERC165":[2510],"IERC2981":[546],"IERC721A":[11170],"Math":[4131],"Ownable":[526],"Pausable":[1003],"ReentrancyGuard":[1072],"SafeCast":[5896],"SignedMath":[6040],"Strings":[2474]},"id":8850,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8653,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8850,"sourceUnit":527,"src":"61:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Collection.sol","file":"./Collection.sol","id":8655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8850,"sourceUnit":8652,"src":"115:26:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8656,"name":"Ownable","nameLocations":["175:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"175:7:16"},"id":8657,"nodeType":"InheritanceSpecifier","src":"175:7:16"}],"canonicalName":"CollectionFactory","contractDependencies":[8651],"contractKind":"contract","fullyImplemented":true,"id":8849,"linearizedBaseContracts":[8849,526,843],"name":"CollectionFactory","nameLocation":"154:17:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fdbda0ec","id":8660,"mutability":"mutable","name":"collections","nameLocation":"207:11:16","nodeType":"VariableDeclaration","scope":8849,"src":"190:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8658,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8659,"nodeType":"ArrayTypeName","src":"190:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"id":8664,"mutability":"mutable","name":"_usedNames","nameLocation":"257:10:16","nodeType":"VariableDeclaration","scope":8849,"src":"225:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":8663,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8661,"name":"string","nodeType":"ElementaryTypeName","src":"233:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"225:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8662,"name":"bool","nodeType":"ElementaryTypeName","src":"243:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":8668,"mutability":"mutable","name":"_collectionIndex","nameLocation":"310:16:16","nodeType":"VariableDeclaration","scope":8849,"src":"274:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8667,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8665,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"274:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8666,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"75432e2e509efcaf947efcc7a5a6b6b3562425b29e9725c7a4a5c652291ac35d","id":8672,"name":"CollectionCreated","nameLocation":"341:17:16","nodeType":"EventDefinition","parameters":{"id":8671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8670,"indexed":true,"mutability":"mutable","name":"collectionAddress","nameLocation":"375:17:16","nodeType":"VariableDeclaration","scope":8672,"src":"359:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8669,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"358:35:16"},"src":"335:59:16"},{"anonymous":false,"eventSelector":"15db1813f994e3207e1b7cd688154dca03609984e865399cd2163d9eb3b0a63c","id":8676,"name":"CollectionDeleted","nameLocation":"406:17:16","nodeType":"EventDefinition","parameters":{"id":8675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8674,"indexed":true,"mutability":"mutable","name":"collectionAddress","nameLocation":"440:17:16","nodeType":"VariableDeclaration","scope":8676,"src":"424:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8673,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"423:35:16"},"src":"400:59:16"},{"body":{"id":8684,"nodeType":"Block","src":"523:2:16","statements":[]},"id":8685,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8681,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"509:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8682,"kind":"baseConstructorSpecifier","modifierName":{"id":8680,"name":"Ownable","nameLocations":["501:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"501:7:16"},"nodeType":"ModifierInvocation","src":"501:21:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"initialOwner","nameLocation":"487:12:16","nodeType":"VariableDeclaration","scope":8685,"src":"479:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8677,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:22:16"},"returnParameters":{"id":8683,"nodeType":"ParameterList","parameters":[],"src":"523:0:16"},"scope":8849,"src":"467:58:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8762,"nodeType":"Block","src":"788:589:16","statements":[{"expression":{"arguments":[{"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"807:17:16","subExpression":{"baseExpression":{"id":8705,"name":"_usedNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"808:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8707,"indexExpression":{"id":8706,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"819:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"808:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e414d455f54414b454e","id":8709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"826:12:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c40cf522ea2be8d229693c3d73544484ef6dd050756d8814389b3c91022e412","typeString":"literal_string \"NAME_TAKEN\""},"value":"NAME_TAKEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c40cf522ea2be8d229693c3d73544484ef6dd050756d8814389b3c91022e412","typeString":"literal_string \"NAME_TAKEN\""}],"id":8704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"799:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8711,"nodeType":"ExpressionStatement","src":"799:40:16"},{"assignments":[8714],"declarations":[{"constant":false,"id":8714,"mutability":"mutable","name":"newCollection","nameLocation":"863:13:16","nodeType":"VariableDeclaration","scope":8762,"src":"852:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"},"typeName":{"id":8713,"nodeType":"UserDefinedTypeName","pathNode":{"id":8712,"name":"Collection","nameLocations":["852:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":8651,"src":"852:10:16"},"referencedDeclaration":8651,"src":"852:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}},"visibility":"internal"}],"id":8727,"initialValue":{"arguments":[{"id":8718,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"908:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8719,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"927:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8720,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"948:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"952:6:16","memberName":"sender","nodeType":"MemberAccess","src":"948:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8722,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"973:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8723,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"997:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8724,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"1021:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8725,"name":"contractURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"1043:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"879:14:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Collection_$8651_$","typeString":"function (string memory,string memory,address,uint256,uint256,string memory,string memory) returns (contract Collection)"},"typeName":{"id":8716,"nodeType":"UserDefinedTypeName","pathNode":{"id":8715,"name":"Collection","nameLocations":["883:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":8651,"src":"883:10:16"},"referencedDeclaration":8651,"src":"883:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}}},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"879:187:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}},"nodeType":"VariableDeclarationStatement","src":"852:214:16"},{"assignments":[8729],"declarations":[{"constant":false,"id":8729,"mutability":"mutable","name":"collectionAddress","nameLocation":"1087:17:16","nodeType":"VariableDeclaration","scope":8762,"src":"1079:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8728,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8734,"initialValue":{"arguments":[{"id":8732,"name":"newCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"1115:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}],"id":8731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1107:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8730,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:16","typeDescriptions":{}}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1107:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1079:50:16"},{"expression":{"arguments":[{"id":8738,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"1157:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8735,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1140:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1152:4:16","memberName":"push","nodeType":"MemberAccess","src":"1140:16:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1140:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8740,"nodeType":"ExpressionStatement","src":"1140:35:16"},{"expression":{"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8741,"name":"_usedNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"1186:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8743,"indexExpression":{"id":8742,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"1197:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1186:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1205:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1186:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8746,"nodeType":"ExpressionStatement","src":"1186:23:16"},{"expression":{"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8747,"name":"_collectionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"1220:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8749,"indexExpression":{"id":8748,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"1237:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1220:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8750,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1258:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1270:6:16","memberName":"length","nodeType":"MemberAccess","src":"1258:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1258:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1220:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8755,"nodeType":"ExpressionStatement","src":"1220:60:16"},{"eventCall":{"arguments":[{"id":8757,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"1316:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8756,"name":"CollectionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"1298:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1298:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8759,"nodeType":"EmitStatement","src":"1293:41:16"},{"expression":{"id":8760,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"1352:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8703,"id":8761,"nodeType":"Return","src":"1345:24:16"}]},"functionSelector":"d6a4448b","id":8763,"implemented":true,"kind":"function","modifiers":[{"id":8700,"kind":"modifierInvocation","modifierName":{"id":8699,"name":"onlyOwner","nameLocations":["760:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"760:9:16"},"nodeType":"ModifierInvocation","src":"760:9:16"}],"name":"createCollection","nameLocation":"542:16:16","nodeType":"FunctionDefinition","parameters":{"id":8698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"name","nameLocation":"583:4:16","nodeType":"VariableDeclaration","scope":8763,"src":"569:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8686,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8689,"mutability":"mutable","name":"symbol","nameLocation":"612:6:16","nodeType":"VariableDeclaration","scope":8763,"src":"598:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8688,"name":"string","nodeType":"ElementaryTypeName","src":"598:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8691,"mutability":"mutable","name":"maxSupply","nameLocation":"637:9:16","nodeType":"VariableDeclaration","scope":8763,"src":"629:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8690,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8693,"mutability":"mutable","name":"mintPrice","nameLocation":"665:9:16","nodeType":"VariableDeclaration","scope":8763,"src":"657:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8692,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8695,"mutability":"mutable","name":"baseURI","nameLocation":"699:7:16","nodeType":"VariableDeclaration","scope":8763,"src":"685:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8694,"name":"string","nodeType":"ElementaryTypeName","src":"685:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8697,"mutability":"mutable","name":"contractURI_","nameLocation":"731:12:16","nodeType":"VariableDeclaration","scope":8763,"src":"717:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8696,"name":"string","nodeType":"ElementaryTypeName","src":"717:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"558:192:16"},"returnParameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8763,"src":"779:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8701,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"778:9:16"},"scope":8849,"src":"533:844:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8838,"nodeType":"Block","src":"1457:613:16","statements":[{"assignments":[8771],"declarations":[{"constant":false,"id":8771,"mutability":"mutable","name":"index","nameLocation":"1476:5:16","nodeType":"VariableDeclaration","scope":8838,"src":"1468:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8775,"initialValue":{"baseExpression":{"id":8772,"name":"_collectionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"1484:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8774,"indexExpression":{"id":8773,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"1501:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1484:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1468:51:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8777,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1538:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8779,"indexExpression":{"id":8778,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"1550:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1538:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8780,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"1560:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f545f464f554e44","id":8782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1579:11:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b","typeString":"literal_string \"NOT_FOUND\""},"value":"NOT_FOUND"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b","typeString":"literal_string \"NOT_FOUND\""}],"id":8776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1530:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8784,"nodeType":"ExpressionStatement","src":"1530:61:16"},{"assignments":[8786],"declarations":[{"constant":false,"id":8786,"mutability":"mutable","name":"lastIndex","nameLocation":"1612:9:16","nodeType":"VariableDeclaration","scope":8838,"src":"1604:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8791,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8787,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1624:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1636:6:16","memberName":"length","nodeType":"MemberAccess","src":"1624:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1624:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1604:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8792,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"1661:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8793,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"1670:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1661:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8814,"nodeType":"IfStatement","src":"1657:203:16","trueBody":{"id":8813,"nodeType":"Block","src":"1681:179:16","statements":[{"assignments":[8796],"declarations":[{"constant":false,"id":8796,"mutability":"mutable","name":"lastCollection","nameLocation":"1704:14:16","nodeType":"VariableDeclaration","scope":8813,"src":"1696:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8795,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8800,"initialValue":{"baseExpression":{"id":8797,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1721:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8799,"indexExpression":{"id":8798,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"1733:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1721:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1696:47:16"},{"expression":{"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8801,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1758:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8803,"indexExpression":{"id":8802,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"1770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1758:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8804,"name":"lastCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"1779:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1758:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8806,"nodeType":"ExpressionStatement","src":"1758:35:16"},{"expression":{"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8807,"name":"_collectionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"1808:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8809,"indexExpression":{"id":8808,"name":"lastCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"1825:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1808:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8810,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"1843:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1808:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8812,"nodeType":"ExpressionStatement","src":"1808:40:16"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8815,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"1872:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:3:16","memberName":"pop","nodeType":"MemberAccess","src":"1872:15:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8819,"nodeType":"ExpressionStatement","src":"1872:17:16"},{"expression":{"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1900:42:16","subExpression":{"baseExpression":{"id":8820,"name":"_collectionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"1907:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8822,"indexExpression":{"id":8821,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"1924:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1907:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8824,"nodeType":"ExpressionStatement","src":"1900:42:16"},{"expression":{"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1953:55:16","subExpression":{"baseExpression":{"id":8825,"name":"_usedNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"1960:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8831,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8827,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"1982:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8826,"name":"Collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"1971:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Collection_$8651_$","typeString":"type(contract Collection)"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Collection_$8651","typeString":"contract Collection"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2001:4:16","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":9259,"src":"1971:34:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1960:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8833,"nodeType":"ExpressionStatement","src":"1953:55:16"},{"eventCall":{"arguments":[{"id":8835,"name":"collectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"2044:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8834,"name":"CollectionDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"2026:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2026:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8837,"nodeType":"EmitStatement","src":"2021:41:16"}]},"functionSelector":"a6bb6cac","id":8839,"implemented":true,"kind":"function","modifiers":[{"id":8768,"kind":"modifierInvocation","modifierName":{"id":8767,"name":"onlyOwner","nameLocations":["1447:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1447:9:16"},"nodeType":"ModifierInvocation","src":"1447:9:16"}],"name":"deleteCollection","nameLocation":"1394:16:16","nodeType":"FunctionDefinition","parameters":{"id":8766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"collectionAddress","nameLocation":"1419:17:16","nodeType":"VariableDeclaration","scope":8839,"src":"1411:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8764,"name":"address","nodeType":"ElementaryTypeName","src":"1411:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1410:27:16"},"returnParameters":{"id":8769,"nodeType":"ParameterList","parameters":[],"src":"1457:0:16"},"scope":8849,"src":"1385:685:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8847,"nodeType":"Block","src":"2145:37:16","statements":[{"expression":{"id":8845,"name":"collections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"2163:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":8844,"id":8846,"nodeType":"Return","src":"2156:18:16"}]},"functionSelector":"46e63586","id":8848,"implemented":true,"kind":"function","modifiers":[],"name":"getCollections","nameLocation":"2087:14:16","nodeType":"FunctionDefinition","parameters":{"id":8840,"nodeType":"ParameterList","parameters":[],"src":"2101:2:16"},"returnParameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8848,"src":"2127:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8841,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8842,"nodeType":"ArrayTypeName","src":"2127:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2126:18:16"},"scope":8849,"src":"2078:104:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8850,"src":"145:2040:16","usedErrors":[392,397],"usedEvents":[403,8672,8676]}],"src":"33:2152:16"},"id":16},"erc721a/contracts/ERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/ERC721A.sol","exportedSymbols":{"ERC721A":[10949],"ERC721A__IERC721Receiver":[8867],"IERC721A":[11170]},"id":10950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8851,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:17"},{"absolutePath":"erc721a/contracts/IERC721A.sol","file":"./IERC721A.sol","id":8852,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10950,"sourceUnit":11171,"src":"109:24:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721A__IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":8853,"nodeType":"StructuredDocumentation","src":"135:51:17","text":" @dev Interface of ERC721 token receiver."},"fullyImplemented":false,"id":8867,"linearizedBaseContracts":[8867],"name":"ERC721A__IERC721Receiver","nameLocation":"197:24:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"150b7a02","id":8866,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"237:16:17","nodeType":"FunctionDefinition","parameters":{"id":8862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8855,"mutability":"mutable","name":"operator","nameLocation":"271:8:17","nodeType":"VariableDeclaration","scope":8866,"src":"263:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8854,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8857,"mutability":"mutable","name":"from","nameLocation":"297:4:17","nodeType":"VariableDeclaration","scope":8866,"src":"289:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8856,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8859,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:17","nodeType":"VariableDeclaration","scope":8866,"src":"311:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8858,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8861,"mutability":"mutable","name":"data","nameLocation":"351:4:17","nodeType":"VariableDeclaration","scope":8866,"src":"336:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8860,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"253:108:17"},"returnParameters":{"id":8865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8866,"src":"380:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8863,"name":"bytes4","nodeType":"ElementaryTypeName","src":"380:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"379:8:17"},"scope":8867,"src":"228:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10950,"src":"187:203:17","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8869,"name":"IERC721A","nameLocations":["1073:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":11170,"src":"1073:8:17"},"id":8870,"nodeType":"InheritanceSpecifier","src":"1073:8:17"}],"canonicalName":"ERC721A","contractDependencies":[],"contractKind":"contract","documentation":{"id":8868,"nodeType":"StructuredDocumentation","src":"392:660:17","text":" @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n The `_sequentialUpTo()` function can be overriden to enable spot mints\n (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."},"fullyImplemented":true,"id":10949,"linearizedBaseContracts":[10949,11170],"name":"ERC721A","nameLocation":"1062:7:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC721A.TokenApprovalRef","id":8873,"members":[{"constant":false,"id":8872,"mutability":"mutable","name":"value","nameLocation":"1215:5:17","nodeType":"VariableDeclaration","scope":8873,"src":"1207:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8871,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenApprovalRef","nameLocation":"1180:16:17","nodeType":"StructDefinition","scope":10949,"src":"1173:54:17","visibility":"public"},{"constant":true,"id":8881,"mutability":"constant","name":"_BITMASK_ADDRESS_DATA_ENTRY","nameLocation":"1488:27:17","nodeType":"VariableDeclaration","scope":10949,"src":"1463:68:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":8880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":8877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1524:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1519:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":8878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1518:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1518:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"visibility":"private"},{"constant":true,"id":8884,"mutability":"constant","name":"_BITPOS_NUMBER_MINTED","nameLocation":"1629:21:17","nodeType":"VariableDeclaration","scope":10949,"src":"1604:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3634","id":8883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1653:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"visibility":"private"},{"constant":true,"id":8887,"mutability":"constant","name":"_BITPOS_NUMBER_BURNED","nameLocation":"1753:21:17","nodeType":"VariableDeclaration","scope":10949,"src":"1728:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313238","id":8886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"private"},{"constant":true,"id":8890,"mutability":"constant","name":"_BITPOS_AUX","nameLocation":"1869:11:17","nodeType":"VariableDeclaration","scope":10949,"src":"1844:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313932","id":8889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"private"},{"constant":true,"id":8898,"mutability":"constant","name":"_BITMASK_AUX_COMPLEMENT","nameLocation":"1999:23:17","nodeType":"VariableDeclaration","scope":10949,"src":"1974:65:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":8897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":8894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":8893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2031:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"2026:8:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}}],"id":8895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2025:10:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2025:14:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"constant":true,"id":8901,"mutability":"constant","name":"_BITPOS_START_TIMESTAMP","nameLocation":"2136:23:17","nodeType":"VariableDeclaration","scope":10949,"src":"2111:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":8900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":8906,"mutability":"constant","name":"_BITMASK_BURNED","nameLocation":"2258:15:17","nodeType":"VariableDeclaration","scope":10949,"src":"2233:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"},"id":8905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323234","id":8904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2281:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"src":"2276:8:17","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"}},"visibility":"private"},{"constant":true,"id":8909,"mutability":"constant","name":"_BITPOS_NEXT_INITIALIZED","nameLocation":"2390:24:17","nodeType":"VariableDeclaration","scope":10949,"src":"2365:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323235","id":8908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2417:3:17","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"visibility":"private"},{"constant":true,"id":8914,"mutability":"constant","name":"_BITMASK_NEXT_INITIALIZED","nameLocation":"2522:25:17","nodeType":"VariableDeclaration","scope":10949,"src":"2497:61:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"},"id":8913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323235","id":8912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:3:17","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"src":"2550:8:17","typeDescriptions":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"}},"visibility":"private"},{"constant":true,"id":8917,"mutability":"constant","name":"_BITPOS_EXTRA_DATA","nameLocation":"2650:18:17","nodeType":"VariableDeclaration","scope":10949,"src":"2625:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323332","id":8916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"visibility":"private"},{"constant":true,"id":8925,"mutability":"constant","name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nameLocation":"2792:30:17","nodeType":"VariableDeclaration","scope":10949,"src":"2767:72:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"},"id":8924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"},"id":8921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2826:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323332","id":8920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2831:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"src":"2826:8:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}}],"id":8922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2825:10:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2825:14:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"}},"visibility":"private"},{"constant":true,"id":8933,"mutability":"constant","name":"_BITMASK_ADDRESS","nameLocation":"2924:16:17","nodeType":"VariableDeclaration","scope":10949,"src":"2899:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":8932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":8929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2944:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2944:8:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":8930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2943:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2943:14:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"constant":true,"id":8936,"mutability":"constant","name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nameLocation":"3265:32:17","nodeType":"VariableDeclaration","scope":10949,"src":"3240:64:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":8935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3300:4:17","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":8939,"mutability":"constant","name":"_TRANSFER_EVENT_SIGNATURE","nameLocation":"3451:25:17","nodeType":"VariableDeclaration","scope":10949,"src":"3426:127:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3426:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566","id":8938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:66:17","typeDescriptions":{"typeIdentifier":"t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1","typeString":"int_const 1003...(70 digits omitted)...2991"},"value":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"visibility":"private"},{"constant":false,"id":8941,"mutability":"mutable","name":"_currentIndex","nameLocation":"3796:13:17","nodeType":"VariableDeclaration","scope":10949,"src":"3780:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8943,"mutability":"mutable","name":"_burnCounter","nameLocation":"3868:12:17","nodeType":"VariableDeclaration","scope":10949,"src":"3852:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8945,"mutability":"mutable","name":"_name","nameLocation":"3920:5:17","nodeType":"VariableDeclaration","scope":10949,"src":"3905:20:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8944,"name":"string","nodeType":"ElementaryTypeName","src":"3905:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":8947,"mutability":"mutable","name":"_symbol","nameLocation":"3967:7:17","nodeType":"VariableDeclaration","scope":10949,"src":"3952:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8946,"name":"string","nodeType":"ElementaryTypeName","src":"3952:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":8951,"mutability":"mutable","name":"_packedOwnerships","nameLocation":"4394:17:17","nodeType":"VariableDeclaration","scope":10949,"src":"4358:53:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8950,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4366:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4358:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8955,"mutability":"mutable","name":"_packedAddressData","nameLocation":"4653:18:17","nodeType":"VariableDeclaration","scope":10949,"src":"4617:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8954,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8952,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4617:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8953,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8960,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"4773:15:17","nodeType":"VariableDeclaration","scope":10949,"src":"4728:60:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8873_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"typeName":{"id":8959,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8956,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4728:36:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8873_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8958,"nodeType":"UserDefinedTypeName","pathNode":{"id":8957,"name":"TokenApprovalRef","nameLocations":["4747:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8873,"src":"4747:16:17"},"referencedDeclaration":8873,"src":"4747:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}}},"visibility":"private"},{"constant":false,"id":8966,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"4896:18:17","nodeType":"VariableDeclaration","scope":10949,"src":"4843:71:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":8965,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8961,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4843:44:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8964,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8962,"name":"address","nodeType":"ElementaryTypeName","src":"4870:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4862:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8963,"name":"bool","nodeType":"ElementaryTypeName","src":"4881:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":8968,"mutability":"mutable","name":"_spotMinted","nameLocation":"5060:11:17","nodeType":"VariableDeclaration","scope":10949,"src":"5044:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8967,"name":"uint256","nodeType":"ElementaryTypeName","src":"5044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":8999,"nodeType":"Block","src":"5317:190:17","statements":[{"expression":{"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8975,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8945,"src":"5327:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8976,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"5335:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5327:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8978,"nodeType":"ExpressionStatement","src":"5327:13:17"},{"expression":{"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8979,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"5350:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8980,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8972,"src":"5360:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5350:17:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8982,"nodeType":"ExpressionStatement","src":"5350:17:17"},{"expression":{"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8983,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"5377:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":8984,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"5393:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5377:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8987,"nodeType":"ExpressionStatement","src":"5377:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8988,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"5423:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8990,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"5443:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5423:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8998,"nodeType":"IfStatement","src":"5419:81:17","trueBody":{"expression":{"arguments":[{"expression":{"id":8994,"name":"SequentialUpToTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10994,"src":"5468:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:8:17","memberName":"selector","nodeType":"MemberAccess","src":"5468:31:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8993,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"5460:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5460:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8997,"nodeType":"ExpressionStatement","src":"5460:40:17"}}]},"id":9000,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8970,"mutability":"mutable","name":"name_","nameLocation":"5287:5:17","nodeType":"VariableDeclaration","scope":9000,"src":"5273:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8969,"name":"string","nodeType":"ElementaryTypeName","src":"5273:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8972,"mutability":"mutable","name":"symbol_","nameLocation":"5308:7:17","nodeType":"VariableDeclaration","scope":9000,"src":"5294:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8971,"name":"string","nodeType":"ElementaryTypeName","src":"5294:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5272:44:17"},"returnParameters":{"id":8974,"nodeType":"ParameterList","parameters":[],"src":"5317:0:17"},"scope":10949,"src":"5261:246:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9008,"nodeType":"Block","src":"6031:25:17","statements":[{"expression":{"hexValue":"30","id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9005,"id":9007,"nodeType":"Return","src":"6041:8:17"}]},"documentation":{"id":9001,"nodeType":"StructuredDocumentation","src":"5703:258:17","text":" @dev Returns the starting token ID for sequential mints.\n Override this function to change the starting token ID for sequential mints.\n Note: The value returned must never change after any tokens have been minted."},"id":9009,"implemented":true,"kind":"function","modifiers":[],"name":"_startTokenId","nameLocation":"5975:13:17","nodeType":"FunctionDefinition","parameters":{"id":9002,"nodeType":"ParameterList","parameters":[],"src":"5988:2:17"},"returnParameters":{"id":9005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9009,"src":"6022:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9003,"name":"uint256","nodeType":"ElementaryTypeName","src":"6022:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6021:9:17"},"scope":10949,"src":"5966:90:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9021,"nodeType":"Block","src":"6471:41:17","statements":[{"expression":{"expression":{"arguments":[{"id":9017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6493:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6488:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6488:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6502:3:17","memberName":"max","nodeType":"MemberAccess","src":"6488:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9014,"id":9020,"nodeType":"Return","src":"6481:24:17"}]},"documentation":{"id":9010,"nodeType":"StructuredDocumentation","src":"6062:337:17","text":" @dev Returns the maximum token ID (inclusive) for sequential mints.\n Override this function to return a value less than 2**256 - 1,\n but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n Note: The value returned must never change after any tokens have been minted."},"id":9022,"implemented":true,"kind":"function","modifiers":[],"name":"_sequentialUpTo","nameLocation":"6413:15:17","nodeType":"FunctionDefinition","parameters":{"id":9011,"nodeType":"ParameterList","parameters":[],"src":"6428:2:17"},"returnParameters":{"id":9014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9022,"src":"6462:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6461:9:17"},"scope":10949,"src":"6404:108:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9030,"nodeType":"Block","src":"6650:37:17","statements":[{"expression":{"id":9028,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"6667:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9027,"id":9029,"nodeType":"Return","src":"6660:20:17"}]},"documentation":{"id":9023,"nodeType":"StructuredDocumentation","src":"6518:63:17","text":" @dev Returns the next token ID to be minted."},"id":9031,"implemented":true,"kind":"function","modifiers":[],"name":"_nextTokenId","nameLocation":"6595:12:17","nodeType":"FunctionDefinition","parameters":{"id":9024,"nodeType":"ParameterList","parameters":[],"src":"6607:2:17"},"returnParameters":{"id":9027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9031,"src":"6641:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9025,"name":"uint256","nodeType":"ElementaryTypeName","src":"6641:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6640:9:17"},"scope":10949,"src":"6586:101:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11021],"body":{"id":9061,"nodeType":"Block","src":"6967:487:17","statements":[{"id":9060,"nodeType":"UncheckedBlock","src":"7136:312:17","statements":[{"expression":{"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"7303:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9039,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"7312:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9040,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"7328:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9042,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"7343:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7303:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9046,"nodeType":"ExpressionStatement","src":"7303:55:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9047,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"7376:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":9051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7402:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9050,"name":"uint256","nodeType":"ElementaryTypeName","src":"7402:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7397:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7397:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7411:3:17","memberName":"max","nodeType":"MemberAccess","src":"7397:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7376:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9059,"nodeType":"IfStatement","src":"7372:65:17","trueBody":{"expression":{"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"7416:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9056,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"7426:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7416:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9058,"nodeType":"ExpressionStatement","src":"7416:21:17"}}]}]},"documentation":{"id":9032,"nodeType":"StructuredDocumentation","src":"6693:192:17","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":9062,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"6899:11:17","nodeType":"FunctionDefinition","overrides":{"id":9034,"nodeType":"OverrideSpecifier","overrides":[],"src":"6933:8:17"},"parameters":{"id":9033,"nodeType":"ParameterList","parameters":[],"src":"6910:2:17"},"returnParameters":{"id":9037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9036,"mutability":"mutable","name":"result","nameLocation":"6959:6:17","nodeType":"VariableDeclaration","scope":9062,"src":"6951:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"6951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6950:16:17"},"scope":10949,"src":"6890:564:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9089,"nodeType":"Block","src":"7618:307:17","statements":[{"id":9088,"nodeType":"UncheckedBlock","src":"7765:154:17","statements":[{"expression":{"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"7789:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9069,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"7798:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9070,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"7814:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7789:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9074,"nodeType":"ExpressionStatement","src":"7789:40:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9075,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"7847:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":9079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9078,"name":"uint256","nodeType":"ElementaryTypeName","src":"7873:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7868:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7868:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7882:3:17","memberName":"max","nodeType":"MemberAccess","src":"7868:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7847:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9087,"nodeType":"IfStatement","src":"7843:65:17","trueBody":{"expression":{"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"7887:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9084,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"7897:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7887:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9086,"nodeType":"ExpressionStatement","src":"7887:21:17"}}]}]},"documentation":{"id":9063,"nodeType":"StructuredDocumentation","src":"7460:82:17","text":" @dev Returns the total amount of tokens minted in the contract."},"id":9090,"implemented":true,"kind":"function","modifiers":[],"name":"_totalMinted","nameLocation":"7556:12:17","nodeType":"FunctionDefinition","parameters":{"id":9064,"nodeType":"ParameterList","parameters":[],"src":"7568:2:17"},"returnParameters":{"id":9067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9066,"mutability":"mutable","name":"result","nameLocation":"7610:6:17","nodeType":"VariableDeclaration","scope":9090,"src":"7602:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7601:16:17"},"scope":10949,"src":"7547:378:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9098,"nodeType":"Block","src":"8066:36:17","statements":[{"expression":{"id":9096,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"8083:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9095,"id":9097,"nodeType":"Return","src":"8076:19:17"}]},"documentation":{"id":9091,"nodeType":"StructuredDocumentation","src":"7931:66:17","text":" @dev Returns the total number of tokens burned."},"id":9099,"implemented":true,"kind":"function","modifiers":[],"name":"_totalBurned","nameLocation":"8011:12:17","nodeType":"FunctionDefinition","parameters":{"id":9092,"nodeType":"ParameterList","parameters":[],"src":"8023:2:17"},"returnParameters":{"id":9095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9099,"src":"8057:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9093,"name":"uint256","nodeType":"ElementaryTypeName","src":"8057:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8056:9:17"},"scope":10949,"src":"8002:100:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9107,"nodeType":"Block","src":"8261:35:17","statements":[{"expression":{"id":9105,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"8278:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9104,"id":9106,"nodeType":"Return","src":"8271:18:17"}]},"documentation":{"id":9100,"nodeType":"StructuredDocumentation","src":"8108:80:17","text":" @dev Returns the total number of tokens that are spot-minted."},"id":9108,"implemented":true,"kind":"function","modifiers":[],"name":"_totalSpotMinted","nameLocation":"8202:16:17","nodeType":"FunctionDefinition","parameters":{"id":9101,"nodeType":"ParameterList","parameters":[],"src":"8218:2:17"},"returnParameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9108,"src":"8252:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9102,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:9:17"},"scope":10949,"src":"8193:103:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11064],"body":{"id":9135,"nodeType":"Block","src":"8651:158:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9117,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9111,"src":"8665:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8674:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9118,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:17","typeDescriptions":{}}},"id":9121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8665:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9128,"nodeType":"IfStatement","src":"8661:69:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9124,"name":"BalanceQueryForZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10961,"src":"8694:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8721:8:17","memberName":"selector","nodeType":"MemberAccess","src":"8694:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9123,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"8686:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8686:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9127,"nodeType":"ExpressionStatement","src":"8686:44:17"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9129,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"8747:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9131,"indexExpression":{"id":9130,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9111,"src":"8766:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8747:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9132,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"8775:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9116,"id":9134,"nodeType":"Return","src":"8740:62:17"}]},"documentation":{"id":9109,"nodeType":"StructuredDocumentation","src":"8491:74:17","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":9136,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8579:9:17","nodeType":"FunctionDefinition","overrides":{"id":9113,"nodeType":"OverrideSpecifier","overrides":[],"src":"8624:8:17"},"parameters":{"id":9112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9111,"mutability":"mutable","name":"owner","nameLocation":"8597:5:17","nodeType":"VariableDeclaration","scope":9136,"src":"8589:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9110,"name":"address","nodeType":"ElementaryTypeName","src":"8589:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8588:15:17"},"returnParameters":{"id":9116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9136,"src":"8642:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9114,"name":"uint256","nodeType":"ElementaryTypeName","src":"8642:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8641:9:17"},"scope":10949,"src":"8570:239:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9153,"nodeType":"Block","src":"8956:106:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9144,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"8974:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9146,"indexExpression":{"id":9145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9139,"src":"8993:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8974:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9147,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"9003:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8974:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8973:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9150,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"9028:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8973:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9143,"id":9152,"nodeType":"Return","src":"8966:89:17"}]},"documentation":{"id":9137,"nodeType":"StructuredDocumentation","src":"8815:66:17","text":" Returns the number of tokens minted by `owner`."},"id":9154,"implemented":true,"kind":"function","modifiers":[],"name":"_numberMinted","nameLocation":"8895:13:17","nodeType":"FunctionDefinition","parameters":{"id":9140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9139,"mutability":"mutable","name":"owner","nameLocation":"8917:5:17","nodeType":"VariableDeclaration","scope":9154,"src":"8909:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9138,"name":"address","nodeType":"ElementaryTypeName","src":"8909:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8908:15:17"},"returnParameters":{"id":9143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9154,"src":"8947:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8947:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8946:9:17"},"scope":10949,"src":"8886:176:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9171,"nodeType":"Block","src":"9225:106:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9162,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"9243:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9164,"indexExpression":{"id":9163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9157,"src":"9262:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9243:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9165,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"9272:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9243:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9242:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9168,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"9297:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9242:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9161,"id":9170,"nodeType":"Return","src":"9235:89:17"}]},"documentation":{"id":9155,"nodeType":"StructuredDocumentation","src":"9068:82:17","text":" Returns the number of tokens burned by or on behalf of `owner`."},"id":9172,"implemented":true,"kind":"function","modifiers":[],"name":"_numberBurned","nameLocation":"9164:13:17","nodeType":"FunctionDefinition","parameters":{"id":9158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9157,"mutability":"mutable","name":"owner","nameLocation":"9186:5:17","nodeType":"VariableDeclaration","scope":9172,"src":"9178:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9156,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9177:15:17"},"returnParameters":{"id":9161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9172,"src":"9216:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9159,"name":"uint256","nodeType":"ElementaryTypeName","src":"9216:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9215:9:17"},"scope":10949,"src":"9155:176:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9189,"nodeType":"Block","src":"9507:72:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9182,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"9531:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9184,"indexExpression":{"id":9183,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"9550:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9531:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9185,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"9560:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9531:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9524:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9180,"name":"uint64","nodeType":"ElementaryTypeName","src":"9524:6:17","typeDescriptions":{}}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9524:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9179,"id":9188,"nodeType":"Return","src":"9517:55:17"}]},"documentation":{"id":9173,"nodeType":"StructuredDocumentation","src":"9337:102:17","text":" Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."},"id":9190,"implemented":true,"kind":"function","modifiers":[],"name":"_getAux","nameLocation":"9453:7:17","nodeType":"FunctionDefinition","parameters":{"id":9176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9175,"mutability":"mutable","name":"owner","nameLocation":"9469:5:17","nodeType":"VariableDeclaration","scope":9190,"src":"9461:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9174,"name":"address","nodeType":"ElementaryTypeName","src":"9461:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9460:15:17"},"returnParameters":{"id":9179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9190,"src":"9499:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9177,"name":"uint64","nodeType":"ElementaryTypeName","src":"9499:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9498:8:17"},"scope":10949,"src":"9444:135:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9226,"nodeType":"Block","src":"9822:334:17","statements":[{"assignments":[9199],"declarations":[{"constant":false,"id":9199,"mutability":"mutable","name":"packed","nameLocation":"9840:6:17","nodeType":"VariableDeclaration","scope":9226,"src":"9832:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9203,"initialValue":{"baseExpression":{"id":9200,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"9849:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9202,"indexExpression":{"id":9201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9193,"src":"9868:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9849:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9832:42:17"},{"assignments":[9205],"declarations":[{"constant":false,"id":9205,"mutability":"mutable","name":"auxCasted","nameLocation":"9892:9:17","nodeType":"VariableDeclaration","scope":9226,"src":"9884:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9204,"name":"uint256","nodeType":"ElementaryTypeName","src":"9884:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9206,"nodeType":"VariableDeclarationStatement","src":"9884:17:17"},{"AST":{"nativeSrc":"9984:40:17","nodeType":"YulBlock","src":"9984:40:17","statements":[{"nativeSrc":"9998:16:17","nodeType":"YulAssignment","src":"9998:16:17","value":{"name":"aux","nativeSrc":"10011:3:17","nodeType":"YulIdentifier","src":"10011:3:17"},"variableNames":[{"name":"auxCasted","nativeSrc":"9998:9:17","nodeType":"YulIdentifier","src":"9998:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9195,"isOffset":false,"isSlot":false,"src":"10011:3:17","valueSize":1},{"declaration":9205,"isOffset":false,"isSlot":false,"src":"9998:9:17","valueSize":1}],"id":9207,"nodeType":"InlineAssembly","src":"9975:49:17"},{"expression":{"id":9218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9208,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"10033:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9209,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"10043:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9210,"name":"_BITMASK_AUX_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"10052:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10043:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10042:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9213,"name":"auxCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"10080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":9214,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"10093:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10080:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10079:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10042:63:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9219,"nodeType":"ExpressionStatement","src":"10033:72:17"},{"expression":{"id":9224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9220,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"10115:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9222,"indexExpression":{"id":9221,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9193,"src":"10134:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10115:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9223,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"10143:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10115:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9225,"nodeType":"ExpressionStatement","src":"10115:34:17"}]},"documentation":{"id":9191,"nodeType":"StructuredDocumentation","src":"9585:171:17","text":" Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."},"id":9227,"implemented":true,"kind":"function","modifiers":[],"name":"_setAux","nameLocation":"9770:7:17","nodeType":"FunctionDefinition","parameters":{"id":9196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9193,"mutability":"mutable","name":"owner","nameLocation":"9786:5:17","nodeType":"VariableDeclaration","scope":9227,"src":"9778:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9192,"name":"address","nodeType":"ElementaryTypeName","src":"9778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9195,"mutability":"mutable","name":"aux","nameLocation":"9800:3:17","nodeType":"VariableDeclaration","scope":9227,"src":"9793:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9194,"name":"uint64","nodeType":"ElementaryTypeName","src":"9793:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9777:27:17"},"returnParameters":{"id":9197,"nodeType":"ParameterList","parameters":[],"src":"9822:0:17"},"scope":10949,"src":"9761:395:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[11029],"body":{"id":9248,"nodeType":"Block","src":"10780:539:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"11092:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031666663396137","id":9237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:10:17","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"src":"11092:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9239,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"11168:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783830616335386364","id":9240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:10:17","typeDescriptions":{"typeIdentifier":"t_rational_2158778573_by_1","typeString":"int_const 2158778573"},"value":"0x80ac58cd"},"src":"11168:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:101:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9243,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"11244:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562356531333966","id":9244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11259:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1532892063_by_1","typeString":"int_const 1532892063"},"value":"0x5b5e139f"},"src":"11244:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:177:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9235,"id":9247,"nodeType":"Return","src":"11073:196:17"}]},"documentation":{"id":9228,"nodeType":"StructuredDocumentation","src":"10343:341:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":9249,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10698:17:17","nodeType":"FunctionDefinition","overrides":{"id":9232,"nodeType":"OverrideSpecifier","overrides":[],"src":"10756:8:17"},"parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"interfaceId","nameLocation":"10723:11:17","nodeType":"VariableDeclaration","scope":9249,"src":"10716:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9229,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10716:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10715:20:17"},"returnParameters":{"id":9235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9249,"src":"10774:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9233,"name":"bool","nodeType":"ElementaryTypeName","src":"10774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10773:6:17"},"scope":10949,"src":"10689:630:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11144],"body":{"id":9258,"nodeType":"Block","src":"11642:29:17","statements":[{"expression":{"id":9256,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8945,"src":"11659:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9255,"id":9257,"nodeType":"Return","src":"11652:12:17"}]},"documentation":{"id":9250,"nodeType":"StructuredDocumentation","src":"11510:58:17","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":9259,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"11582:4:17","nodeType":"FunctionDefinition","overrides":{"id":9252,"nodeType":"OverrideSpecifier","overrides":[],"src":"11609:8:17"},"parameters":{"id":9251,"nodeType":"ParameterList","parameters":[],"src":"11586:2:17"},"returnParameters":{"id":9255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9259,"src":"11627:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9253,"name":"string","nodeType":"ElementaryTypeName","src":"11627:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11626:15:17"},"scope":10949,"src":"11573:98:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11150],"body":{"id":9268,"nodeType":"Block","src":"11813:31:17","statements":[{"expression":{"id":9266,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"11830:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9265,"id":9267,"nodeType":"Return","src":"11823:14:17"}]},"documentation":{"id":9260,"nodeType":"StructuredDocumentation","src":"11677:60:17","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":9269,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"11751:6:17","nodeType":"FunctionDefinition","overrides":{"id":9262,"nodeType":"OverrideSpecifier","overrides":[],"src":"11780:8:17"},"parameters":{"id":9261,"nodeType":"ParameterList","parameters":[],"src":"11757:2:17"},"returnParameters":{"id":9265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9269,"src":"11798:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9263,"name":"string","nodeType":"ElementaryTypeName","src":"11798:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11797:15:17"},"scope":10949,"src":"11742:102:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11158],"body":{"id":9313,"nodeType":"Block","src":"12033:234:17","statements":[{"condition":{"id":9281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12047:17:17","subExpression":{"arguments":[{"id":9279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9272,"src":"12056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9278,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"12048:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9287,"nodeType":"IfStatement","src":"12043:68:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9283,"name":"URIQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10985,"src":"12074:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12102:8:17","memberName":"selector","nodeType":"MemberAccess","src":"12074:36:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9282,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"12066:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9286,"nodeType":"ExpressionStatement","src":"12066:45:17"}},{"assignments":[9289],"declarations":[{"constant":false,"id":9289,"mutability":"mutable","name":"baseURI","nameLocation":"12136:7:17","nodeType":"VariableDeclaration","scope":9313,"src":"12122:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9288,"name":"string","nodeType":"ElementaryTypeName","src":"12122:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":9292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9290,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"12146:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12146:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"12122:34:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9295,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"12179:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12173:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9293,"name":"bytes","nodeType":"ElementaryTypeName","src":"12173:5:17","typeDescriptions":{}}},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12173:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12188:6:17","memberName":"length","nodeType":"MemberAccess","src":"12173:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12198:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12173:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":9310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12258:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12173:87:17","trueExpression":{"arguments":[{"arguments":[{"id":9304,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"12226:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":9306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9272,"src":"12245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9305,"name":"_toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10940,"src":"12235:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":9302,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12209:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12213:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"12209:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12202:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9300,"name":"string","nodeType":"ElementaryTypeName","src":"12202:6:17","typeDescriptions":{}}},"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12202:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9277,"id":9312,"nodeType":"Return","src":"12166:94:17"}]},"documentation":{"id":9270,"nodeType":"StructuredDocumentation","src":"11850:90:17","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":9314,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"11954:8:17","nodeType":"FunctionDefinition","overrides":{"id":9274,"nodeType":"OverrideSpecifier","overrides":[],"src":"12000:8:17"},"parameters":{"id":9273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9272,"mutability":"mutable","name":"tokenId","nameLocation":"11971:7:17","nodeType":"VariableDeclaration","scope":9314,"src":"11963:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11963:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11962:17:17"},"returnParameters":{"id":9277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9314,"src":"12018:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9275,"name":"string","nodeType":"ElementaryTypeName","src":"12018:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12017:15:17"},"scope":10949,"src":"11945:322:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9322,"nodeType":"Block","src":"12578:26:17","statements":[{"expression":{"hexValue":"","id":9320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12595:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":9319,"id":9321,"nodeType":"Return","src":"12588:9:17"}]},"documentation":{"id":9315,"nodeType":"StructuredDocumentation","src":"12273:234:17","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."},"id":9323,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"12521:8:17","nodeType":"FunctionDefinition","parameters":{"id":9316,"nodeType":"ParameterList","parameters":[],"src":"12529:2:17"},"returnParameters":{"id":9319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9323,"src":"12563:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9317,"name":"string","nodeType":"ElementaryTypeName","src":"12563:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12562:15:17"},"scope":10949,"src":"12512:92:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11072],"body":{"id":9342,"nodeType":"Block","src":"13015:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":9337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"13067:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9336,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"13048:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13040:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9334,"name":"uint160","nodeType":"ElementaryTypeName","src":"13040:7:17","typeDescriptions":{}}},"id":9339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13040:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9332,"name":"address","nodeType":"ElementaryTypeName","src":"13032:7:17","typeDescriptions":{}}},"id":9340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9331,"id":9341,"nodeType":"Return","src":"13025:52:17"}]},"documentation":{"id":9324,"nodeType":"StructuredDocumentation","src":"12798:131:17","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":9343,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"12943:7:17","nodeType":"FunctionDefinition","overrides":{"id":9328,"nodeType":"OverrideSpecifier","overrides":[],"src":"12988:8:17"},"parameters":{"id":9327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9326,"mutability":"mutable","name":"tokenId","nameLocation":"12959:7:17","nodeType":"VariableDeclaration","scope":9343,"src":"12951:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9325,"name":"uint256","nodeType":"ElementaryTypeName","src":"12951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12950:17:17"},"returnParameters":{"id":9331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9343,"src":"13006:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9329,"name":"address","nodeType":"ElementaryTypeName","src":"13006:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13005:9:17"},"scope":10949,"src":"12934:150:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9358,"nodeType":"Block","src":"13360:71:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":9354,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"13415:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9353,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"13396:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13396:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9352,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9559,"src":"13377:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$11015_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":9351,"id":9357,"nodeType":"Return","src":"13370:54:17"}]},"documentation":{"id":9344,"nodeType":"StructuredDocumentation","src":"13090:172:17","text":" @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."},"id":9359,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipOf","nameLocation":"13276:12:17","nodeType":"FunctionDefinition","parameters":{"id":9347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9346,"mutability":"mutable","name":"tokenId","nameLocation":"13297:7:17","nodeType":"VariableDeclaration","scope":9359,"src":"13289:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9345,"name":"uint256","nodeType":"ElementaryTypeName","src":"13289:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13288:17:17"},"returnParameters":{"id":9351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9359,"src":"13337:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9349,"nodeType":"UserDefinedTypeName","pathNode":{"id":9348,"name":"TokenOwnership","nameLocations":["13337:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":11015,"src":"13337:14:17"},"referencedDeclaration":11015,"src":"13337:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13336:23:17"},"scope":10949,"src":"13267:164:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9374,"nodeType":"Block","src":"13613:68:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9369,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"13649:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9371,"indexExpression":{"id":9370,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"13667:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13649:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9368,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9559,"src":"13630:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$11015_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":9372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13630:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":9367,"id":9373,"nodeType":"Return","src":"13623:51:17"}]},"documentation":{"id":9360,"nodeType":"StructuredDocumentation","src":"13437:80:17","text":" @dev Returns the unpacked `TokenOwnership` struct at `index`."},"id":9375,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipAt","nameLocation":"13531:12:17","nodeType":"FunctionDefinition","parameters":{"id":9363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9362,"mutability":"mutable","name":"index","nameLocation":"13552:5:17","nodeType":"VariableDeclaration","scope":9375,"src":"13544:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9361,"name":"uint256","nodeType":"ElementaryTypeName","src":"13544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13543:15:17"},"returnParameters":{"id":9367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9375,"src":"13590:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9365,"nodeType":"UserDefinedTypeName","pathNode":{"id":9364,"name":"TokenOwnership","nameLocations":["13590:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":11015,"src":"13590:14:17"},"referencedDeclaration":11015,"src":"13590:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13589:23:17"},"scope":10949,"src":"13522:159:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9389,"nodeType":"Block","src":"13945:53:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9383,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"13962:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9385,"indexExpression":{"id":9384,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"13980:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13962:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13962:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9382,"id":9388,"nodeType":"Return","src":"13955:36:17"}]},"documentation":{"id":9376,"nodeType":"StructuredDocumentation","src":"13687:168:17","text":" @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."},"id":9390,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipIsInitialized","nameLocation":"13869:23:17","nodeType":"FunctionDefinition","parameters":{"id":9379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9378,"mutability":"mutable","name":"index","nameLocation":"13901:5:17","nodeType":"VariableDeclaration","scope":9390,"src":"13893:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9377,"name":"uint256","nodeType":"ElementaryTypeName","src":"13893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13892:15:17"},"returnParameters":{"id":9382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9390,"src":"13939:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9380,"name":"bool","nodeType":"ElementaryTypeName","src":"13939:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13938:6:17"},"scope":10949,"src":"13860:138:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9411,"nodeType":"Block","src":"14170:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9396,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"14184:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9398,"indexExpression":{"id":9397,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"14202:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14184:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14184:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9410,"nodeType":"IfStatement","src":"14180:112:17","trueBody":{"id":9409,"nodeType":"Block","src":"14215:77:17","statements":[{"expression":{"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9401,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"14229:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9403,"indexExpression":{"id":9402,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"14247:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14229:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9405,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"14275:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9404,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"14256:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14256:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14229:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9408,"nodeType":"ExpressionStatement","src":"14229:52:17"}]}}]},"documentation":{"id":9391,"nodeType":"StructuredDocumentation","src":"14004:97:17","text":" @dev Initializes the ownership slot minted at `index` for efficiency purposes."},"id":9412,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeOwnershipAt","nameLocation":"14115:22:17","nodeType":"FunctionDefinition","parameters":{"id":9394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9393,"mutability":"mutable","name":"index","nameLocation":"14146:5:17","nodeType":"VariableDeclaration","scope":9412,"src":"14138:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9392,"name":"uint256","nodeType":"ElementaryTypeName","src":"14138:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14137:15:17"},"returnParameters":{"id":9395,"nodeType":"ParameterList","parameters":[],"src":"14170:0:17"},"scope":10949,"src":"14106:192:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9504,"nodeType":"Block","src":"14463:2090:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9420,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"14477:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14477:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"14496:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9498,"nodeType":"IfStatement","src":"14473:2017:17","trueBody":{"id":9497,"nodeType":"Block","src":"14505:1985:17","statements":[{"expression":{"id":9428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9424,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"14519:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9425,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"14528:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9427,"indexExpression":{"id":9426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"14546:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14528:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14519:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9429,"nodeType":"ExpressionStatement","src":"14519:35:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"14573:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9431,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"14583:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14583:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14573:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9446,"nodeType":"IfStatement","src":"14569:180:17","trueBody":{"id":9445,"nodeType":"Block","src":"14602:147:17","statements":[{"condition":{"arguments":[{"id":9435,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"14647:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9434,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"14624:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14624:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9439,"nodeType":"IfStatement","src":"14620:49:17","trueBody":{"expression":{"id":9437,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"14663:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9419,"id":9438,"nodeType":"Return","src":"14656:13:17"}},{"expression":{"arguments":[{"expression":{"id":9441,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10970,"src":"14695:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14725:8:17","memberName":"selector","nodeType":"MemberAccess","src":"14695:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9440,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"14687:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9444,"nodeType":"ExpressionStatement","src":"14687:47:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9447,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"14847:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14857:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14847:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9488,"nodeType":"IfStatement","src":"14843:1270:17","trueBody":{"id":9487,"nodeType":"Block","src":"14860:1253:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"14882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9451,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"14893:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14882:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9458,"nodeType":"IfStatement","src":"14878:77:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9454,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10970,"src":"14916:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14946:8:17","memberName":"selector","nodeType":"MemberAccess","src":"14916:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9453,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"14908:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14908:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9457,"nodeType":"ExpressionStatement","src":"14908:47:17"}},{"body":{"id":9485,"nodeType":"Block","src":"15511:588:17","statements":[{"id":9466,"nodeType":"UncheckedBlock","src":"15533:96:17","statements":[{"expression":{"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9459,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"15569:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9460,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"15578:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9463,"indexExpression":{"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"15596:9:17","subExpression":{"id":9461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"15598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15578:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15569:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9465,"nodeType":"ExpressionStatement","src":"15569:37:17"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9467,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"15654:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15664:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15654:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9471,"nodeType":"IfStatement","src":"15650:25:17","trueBody":{"id":9470,"nodeType":"Continue","src":"15667:8:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9472,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"15701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9473,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"15710:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15701:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15729:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15701:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9479,"nodeType":"IfStatement","src":"15697:48:17","trueBody":{"expression":{"id":9477,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"15739:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9419,"id":9478,"nodeType":"Return","src":"15732:13:17"}},{"expression":{"arguments":[{"expression":{"id":9481,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10970,"src":"16041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16071:8:17","memberName":"selector","nodeType":"MemberAccess","src":"16041:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9480,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"16033:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16033:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9484,"nodeType":"ExpressionStatement","src":"16033:47:17"}]},"id":9486,"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"15502:597:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9489,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"16435:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9490,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"16444:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16435:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16463:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16435:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9496,"nodeType":"IfStatement","src":"16431:48:17","trueBody":{"expression":{"id":9494,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"16473:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9419,"id":9495,"nodeType":"Return","src":"16466:13:17"}}]}},{"expression":{"arguments":[{"expression":{"id":9500,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10970,"src":"16507:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16537:8:17","memberName":"selector","nodeType":"MemberAccess","src":"16507:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9499,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"16499:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16499:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9503,"nodeType":"ExpressionStatement","src":"16499:47:17"}]},"documentation":{"id":9413,"nodeType":"StructuredDocumentation","src":"14304:71:17","text":" @dev Returns the packed ownership data of `tokenId`."},"id":9505,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipOf","nameLocation":"14389:18:17","nodeType":"FunctionDefinition","parameters":{"id":9416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9415,"mutability":"mutable","name":"tokenId","nameLocation":"14416:7:17","nodeType":"VariableDeclaration","scope":9505,"src":"14408:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9414,"name":"uint256","nodeType":"ElementaryTypeName","src":"14408:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14407:17:17"},"returnParameters":{"id":9419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9418,"mutability":"mutable","name":"packed","nameLocation":"14455:6:17","nodeType":"VariableDeclaration","scope":9505,"src":"14447:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9417,"name":"uint256","nodeType":"ElementaryTypeName","src":"14447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14446:16:17"},"scope":10949,"src":"14380:2173:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9558,"nodeType":"Block","src":"16746:262:17","statements":[{"expression":{"id":9524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9514,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"16756:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16766:4:17","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":11008,"src":"16756:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9521,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"16789:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16781:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9519,"name":"uint160","nodeType":"ElementaryTypeName","src":"16781:7:17","typeDescriptions":{}}},"id":9522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16781:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16773:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9517,"name":"address","nodeType":"ElementaryTypeName","src":"16773:7:17","typeDescriptions":{}}},"id":9523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16773:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16756:41:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9525,"nodeType":"ExpressionStatement","src":"16756:41:17"},{"expression":{"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9526,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"16807:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16817:14:17","memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":11010,"src":"16807:24:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9531,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"16841:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9532,"name":"_BITPOS_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"16851:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16841:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16834:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9529,"name":"uint64","nodeType":"ElementaryTypeName","src":"16834:6:17","typeDescriptions":{}}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16834:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16807:68:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":9536,"nodeType":"ExpressionStatement","src":"16807:68:17"},{"expression":{"id":9545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9537,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"16885:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16895:6:17","memberName":"burned","nodeType":"MemberAccess","referencedDeclaration":11012,"src":"16885:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9540,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"16904:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9541,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"16913:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16904:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16904:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16885:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9546,"nodeType":"ExpressionStatement","src":"16885:48:17"},{"expression":{"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9547,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"16943:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16953:9:17","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":11014,"src":"16943:19:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9552,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9508,"src":"16972:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9553,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"16982:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16972:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16965:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9550,"name":"uint24","nodeType":"ElementaryTypeName","src":"16965:6:17","typeDescriptions":{}}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16943:58:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":9557,"nodeType":"ExpressionStatement","src":"16943:58:17"}]},"documentation":{"id":9506,"nodeType":"StructuredDocumentation","src":"16559:83:17","text":" @dev Returns the unpacked `TokenOwnership` struct from `packed`."},"id":9559,"implemented":true,"kind":"function","modifiers":[],"name":"_unpackedOwnership","nameLocation":"16656:18:17","nodeType":"FunctionDefinition","parameters":{"id":9509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9508,"mutability":"mutable","name":"packed","nameLocation":"16683:6:17","nodeType":"VariableDeclaration","scope":9559,"src":"16675:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9507,"name":"uint256","nodeType":"ElementaryTypeName","src":"16675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16674:16:17"},"returnParameters":{"id":9513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9512,"mutability":"mutable","name":"ownership","nameLocation":"16735:9:17","nodeType":"VariableDeclaration","scope":9559,"src":"16713:31:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9511,"nodeType":"UserDefinedTypeName","pathNode":{"id":9510,"name":"TokenOwnership","nameLocations":["16713:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":11015,"src":"16713:14:17"},"referencedDeclaration":11015,"src":"16713:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11015_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"16712:33:17"},"scope":10949,"src":"16647:361:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9570,"nodeType":"Block","src":"17182:347:17","statements":[{"AST":{"nativeSrc":"17201:322:17","nodeType":"YulBlock","src":"17201:322:17","statements":[{"nativeSrc":"17311:37:17","nodeType":"YulAssignment","src":"17311:37:17","value":{"arguments":[{"name":"owner","nativeSrc":"17324:5:17","nodeType":"YulIdentifier","src":"17324:5:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"17331:16:17","nodeType":"YulIdentifier","src":"17331:16:17"}],"functionName":{"name":"and","nativeSrc":"17320:3:17","nodeType":"YulIdentifier","src":"17320:3:17"},"nativeSrc":"17320:28:17","nodeType":"YulFunctionCall","src":"17320:28:17"},"variableNames":[{"name":"owner","nativeSrc":"17311:5:17","nodeType":"YulIdentifier","src":"17311:5:17"}]},{"nativeSrc":"17440:73:17","nodeType":"YulAssignment","src":"17440:73:17","value":{"arguments":[{"name":"owner","nativeSrc":"17453:5:17","nodeType":"YulIdentifier","src":"17453:5:17"},{"arguments":[{"arguments":[{"name":"_BITPOS_START_TIMESTAMP","nativeSrc":"17467:23:17","nodeType":"YulIdentifier","src":"17467:23:17"},{"arguments":[],"functionName":{"name":"timestamp","nativeSrc":"17492:9:17","nodeType":"YulIdentifier","src":"17492:9:17"},"nativeSrc":"17492:11:17","nodeType":"YulFunctionCall","src":"17492:11:17"}],"functionName":{"name":"shl","nativeSrc":"17463:3:17","nodeType":"YulIdentifier","src":"17463:3:17"},"nativeSrc":"17463:41:17","nodeType":"YulFunctionCall","src":"17463:41:17"},{"name":"flags","nativeSrc":"17506:5:17","nodeType":"YulIdentifier","src":"17506:5:17"}],"functionName":{"name":"or","nativeSrc":"17460:2:17","nodeType":"YulIdentifier","src":"17460:2:17"},"nativeSrc":"17460:52:17","nodeType":"YulFunctionCall","src":"17460:52:17"}],"functionName":{"name":"or","nativeSrc":"17450:2:17","nodeType":"YulIdentifier","src":"17450:2:17"},"nativeSrc":"17450:63:17","nodeType":"YulFunctionCall","src":"17450:63:17"},"variableNames":[{"name":"result","nativeSrc":"17440:6:17","nodeType":"YulIdentifier","src":"17440:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8933,"isOffset":false,"isSlot":false,"src":"17331:16:17","valueSize":1},{"declaration":8901,"isOffset":false,"isSlot":false,"src":"17467:23:17","valueSize":1},{"declaration":9564,"isOffset":false,"isSlot":false,"src":"17506:5:17","valueSize":1},{"declaration":9562,"isOffset":false,"isSlot":false,"src":"17311:5:17","valueSize":1},{"declaration":9562,"isOffset":false,"isSlot":false,"src":"17324:5:17","valueSize":1},{"declaration":9562,"isOffset":false,"isSlot":false,"src":"17453:5:17","valueSize":1},{"declaration":9567,"isOffset":false,"isSlot":false,"src":"17440:6:17","valueSize":1}],"id":9569,"nodeType":"InlineAssembly","src":"17192:331:17"}]},"documentation":{"id":9560,"nodeType":"StructuredDocumentation","src":"17014:67:17","text":" @dev Packs ownership data into a single uint256."},"id":9571,"implemented":true,"kind":"function","modifiers":[],"name":"_packOwnershipData","nameLocation":"17095:18:17","nodeType":"FunctionDefinition","parameters":{"id":9565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9562,"mutability":"mutable","name":"owner","nameLocation":"17122:5:17","nodeType":"VariableDeclaration","scope":9571,"src":"17114:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9561,"name":"address","nodeType":"ElementaryTypeName","src":"17114:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9564,"mutability":"mutable","name":"flags","nameLocation":"17137:5:17","nodeType":"VariableDeclaration","scope":9571,"src":"17129:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9563,"name":"uint256","nodeType":"ElementaryTypeName","src":"17129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17113:30:17"},"returnParameters":{"id":9568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9567,"mutability":"mutable","name":"result","nameLocation":"17174:6:17","nodeType":"VariableDeclaration","scope":9571,"src":"17166:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9566,"name":"uint256","nodeType":"ElementaryTypeName","src":"17166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17165:16:17"},"scope":10949,"src":"17086:443:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9580,"nodeType":"Block","src":"17712:232:17","statements":[{"AST":{"nativeSrc":"17796:142:17","nodeType":"YulBlock","src":"17796:142:17","statements":[{"nativeSrc":"17872:56:17","nodeType":"YulAssignment","src":"17872:56:17","value":{"arguments":[{"name":"_BITPOS_NEXT_INITIALIZED","nativeSrc":"17886:24:17","nodeType":"YulIdentifier","src":"17886:24:17"},{"arguments":[{"name":"quantity","nativeSrc":"17915:8:17","nodeType":"YulIdentifier","src":"17915:8:17"},{"kind":"number","nativeSrc":"17925:1:17","nodeType":"YulLiteral","src":"17925:1:17","type":"","value":"1"}],"functionName":{"name":"eq","nativeSrc":"17912:2:17","nodeType":"YulIdentifier","src":"17912:2:17"},"nativeSrc":"17912:15:17","nodeType":"YulFunctionCall","src":"17912:15:17"}],"functionName":{"name":"shl","nativeSrc":"17882:3:17","nodeType":"YulIdentifier","src":"17882:3:17"},"nativeSrc":"17882:46:17","nodeType":"YulFunctionCall","src":"17882:46:17"},"variableNames":[{"name":"result","nativeSrc":"17872:6:17","nodeType":"YulIdentifier","src":"17872:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8909,"isOffset":false,"isSlot":false,"src":"17886:24:17","valueSize":1},{"declaration":9574,"isOffset":false,"isSlot":false,"src":"17915:8:17","valueSize":1},{"declaration":9577,"isOffset":false,"isSlot":false,"src":"17872:6:17","valueSize":1}],"id":9579,"nodeType":"InlineAssembly","src":"17787:151:17"}]},"documentation":{"id":9572,"nodeType":"StructuredDocumentation","src":"17535:86:17","text":" @dev Returns the `nextInitialized` flag set if `quantity` equals 1."},"id":9581,"implemented":true,"kind":"function","modifiers":[],"name":"_nextInitializedFlag","nameLocation":"17635:20:17","nodeType":"FunctionDefinition","parameters":{"id":9575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9574,"mutability":"mutable","name":"quantity","nameLocation":"17664:8:17","nodeType":"VariableDeclaration","scope":9581,"src":"17656:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9573,"name":"uint256","nodeType":"ElementaryTypeName","src":"17656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17655:18:17"},"returnParameters":{"id":9578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9577,"mutability":"mutable","name":"result","nameLocation":"17704:6:17","nodeType":"VariableDeclaration","scope":9581,"src":"17696:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9576,"name":"uint256","nodeType":"ElementaryTypeName","src":"17696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17695:16:17"},"scope":10949,"src":"17626:318:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[11112],"body":{"id":9596,"nodeType":"Block","src":"18442:44:17","statements":[{"expression":{"arguments":[{"id":9591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"18461:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9592,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"18465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18474:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9590,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10612,10662],"referencedDeclaration":10662,"src":"18452:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18452:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9595,"nodeType":"ExpressionStatement","src":"18452:27:17"}]},"documentation":{"id":9582,"nodeType":"StructuredDocumentation","src":"18137:222:17","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."},"functionSelector":"095ea7b3","id":9597,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"18373:7:17","nodeType":"FunctionDefinition","overrides":{"id":9588,"nodeType":"OverrideSpecifier","overrides":[],"src":"18433:8:17"},"parameters":{"id":9587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9584,"mutability":"mutable","name":"to","nameLocation":"18389:2:17","nodeType":"VariableDeclaration","scope":9597,"src":"18381:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9583,"name":"address","nodeType":"ElementaryTypeName","src":"18381:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9586,"mutability":"mutable","name":"tokenId","nameLocation":"18401:7:17","nodeType":"VariableDeclaration","scope":9597,"src":"18393:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9585,"name":"uint256","nodeType":"ElementaryTypeName","src":"18393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18380:29:17"},"returnParameters":{"id":9589,"nodeType":"ParameterList","parameters":[],"src":"18442:0:17"},"scope":10949,"src":"18364:122:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11128],"body":{"id":9621,"nodeType":"Block","src":"18721:138:17","statements":[{"condition":{"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18735:17:17","subExpression":{"arguments":[{"id":9607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"18744:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9606,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"18736:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18736:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9615,"nodeType":"IfStatement","src":"18731:73:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9611,"name":"ApprovalQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10958,"src":"18762:32:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18795:8:17","memberName":"selector","nodeType":"MemberAccess","src":"18762:41:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9610,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"18754:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18754:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9614,"nodeType":"ExpressionStatement","src":"18754:50:17"}},{"expression":{"expression":{"baseExpression":{"id":9616,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"18822:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8873_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":9618,"indexExpression":{"id":9617,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"18838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18822:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":9619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18847:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":8872,"src":"18822:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9605,"id":9620,"nodeType":"Return","src":"18815:37:17"}]},"documentation":{"id":9598,"nodeType":"StructuredDocumentation","src":"18492:139:17","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":9622,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"18645:11:17","nodeType":"FunctionDefinition","overrides":{"id":9602,"nodeType":"OverrideSpecifier","overrides":[],"src":"18694:8:17"},"parameters":{"id":9601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9600,"mutability":"mutable","name":"tokenId","nameLocation":"18665:7:17","nodeType":"VariableDeclaration","scope":9622,"src":"18657:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9599,"name":"uint256","nodeType":"ElementaryTypeName","src":"18657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18656:17:17"},"returnParameters":{"id":9605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9622,"src":"18712:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9603,"name":"address","nodeType":"ElementaryTypeName","src":"18712:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18711:9:17"},"scope":10949,"src":"18636:223:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11120],"body":{"id":9647,"nodeType":"Block","src":"19270:147:17","statements":[{"expression":{"id":9638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9631,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"19280:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9635,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9632,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"19299:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19299:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19280:39:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9636,"indexExpression":{"id":9634,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"19320:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19280:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9637,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"19332:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19280:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9639,"nodeType":"ExpressionStatement","src":"19280:60:17"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9641,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"19370:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19370:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9643,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"19391:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9644,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"19401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9640,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11056,"src":"19355:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19355:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9646,"nodeType":"EmitStatement","src":"19350:60:17"}]},"documentation":{"id":9623,"nodeType":"StructuredDocumentation","src":"18865:316:17","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":9648,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"19195:17:17","nodeType":"FunctionDefinition","overrides":{"id":9629,"nodeType":"OverrideSpecifier","overrides":[],"src":"19261:8:17"},"parameters":{"id":9628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9625,"mutability":"mutable","name":"operator","nameLocation":"19221:8:17","nodeType":"VariableDeclaration","scope":9648,"src":"19213:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9624,"name":"address","nodeType":"ElementaryTypeName","src":"19213:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9627,"mutability":"mutable","name":"approved","nameLocation":"19236:8:17","nodeType":"VariableDeclaration","scope":9648,"src":"19231:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9626,"name":"bool","nodeType":"ElementaryTypeName","src":"19231:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19212:33:17"},"returnParameters":{"id":9630,"nodeType":"ParameterList","parameters":[],"src":"19270:0:17"},"scope":10949,"src":"19186:231:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[11138],"body":{"id":9665,"nodeType":"Block","src":"19670:59:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9659,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"19687:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9661,"indexExpression":{"id":9660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"19706:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9663,"indexExpression":{"id":9662,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"19713:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9658,"id":9664,"nodeType":"Return","src":"19680:42:17"}]},"documentation":{"id":9649,"nodeType":"StructuredDocumentation","src":"19423:139:17","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":9666,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"19576:16:17","nodeType":"FunctionDefinition","overrides":{"id":9655,"nodeType":"OverrideSpecifier","overrides":[],"src":"19646:8:17"},"parameters":{"id":9654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9651,"mutability":"mutable","name":"owner","nameLocation":"19601:5:17","nodeType":"VariableDeclaration","scope":9666,"src":"19593:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9650,"name":"address","nodeType":"ElementaryTypeName","src":"19593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9653,"mutability":"mutable","name":"operator","nameLocation":"19616:8:17","nodeType":"VariableDeclaration","scope":9666,"src":"19608:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9652,"name":"address","nodeType":"ElementaryTypeName","src":"19608:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19592:33:17"},"returnParameters":{"id":9658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9666,"src":"19664:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9656,"name":"bool","nodeType":"ElementaryTypeName","src":"19664:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19663:6:17"},"scope":10949,"src":"19567:162:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9719,"nodeType":"Block","src":"20056:387:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9674,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"20070:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20070:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20070:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9718,"nodeType":"IfStatement","src":"20066:371:17","trueBody":{"id":9717,"nodeType":"Block","src":"20098:339:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9679,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"20126:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20126:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9688,"nodeType":"IfStatement","src":"20112:90:17","trueBody":{"expression":{"arguments":[{"baseExpression":{"id":9683,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"20175:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9685,"indexExpression":{"id":9684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20175:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9682,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"20152:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20152:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9673,"id":9687,"nodeType":"Return","src":"20145:57:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9689,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20221:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9690,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"20231:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20221:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9716,"nodeType":"IfStatement","src":"20217:210:17","trueBody":{"id":9715,"nodeType":"Block","src":"20246:181:17","statements":[{"assignments":[9693],"declarations":[{"constant":false,"id":9693,"mutability":"mutable","name":"packed","nameLocation":"20272:6:17","nodeType":"VariableDeclaration","scope":9715,"src":"20264:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9692,"name":"uint256","nodeType":"ElementaryTypeName","src":"20264:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9694,"nodeType":"VariableDeclarationStatement","src":"20264:14:17"},{"body":{"expression":{"id":9704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"20347:9:17","subExpression":{"id":9703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20349:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9705,"nodeType":"ExpressionStatement","src":"20347:9:17"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9695,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9693,"src":"20304:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9696,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"20313:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9698,"indexExpression":{"id":9697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"20331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20313:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20304:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20303:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20303:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9706,"nodeType":"WhileStatement","src":"20296:60:17"},{"expression":{"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"20374:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9708,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9693,"src":"20383:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9709,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"20392:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20383:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20411:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20383:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20374:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9714,"nodeType":"ExpressionStatement","src":"20374:38:17"}]}}]}}]},"documentation":{"id":9667,"nodeType":"StructuredDocumentation","src":"19735:238:17","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."},"id":9720,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"19987:7:17","nodeType":"FunctionDefinition","parameters":{"id":9670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9669,"mutability":"mutable","name":"tokenId","nameLocation":"20003:7:17","nodeType":"VariableDeclaration","scope":9720,"src":"19995:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9668,"name":"uint256","nodeType":"ElementaryTypeName","src":"19995:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19994:17:17"},"returnParameters":{"id":9673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9672,"mutability":"mutable","name":"result","nameLocation":"20048:6:17","nodeType":"VariableDeclaration","scope":9720,"src":"20043:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9671,"name":"bool","nodeType":"ElementaryTypeName","src":"20043:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20042:13:17"},"scope":10949,"src":"19978:465:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9729,"nodeType":"Block","src":"20617:246:17","statements":[{"AST":{"nativeSrc":"20636:221:17","nodeType":"YulBlock","src":"20636:221:17","statements":[{"nativeSrc":"20774:73:17","nodeType":"YulAssignment","src":"20774:73:17","value":{"arguments":[{"arguments":[{"name":"packed","nativeSrc":"20791:6:17","nodeType":"YulIdentifier","src":"20791:6:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"20799:16:17","nodeType":"YulIdentifier","src":"20799:16:17"}],"functionName":{"name":"and","nativeSrc":"20787:3:17","nodeType":"YulIdentifier","src":"20787:3:17"},"nativeSrc":"20787:29:17","nodeType":"YulFunctionCall","src":"20787:29:17"},{"arguments":[{"name":"packed","nativeSrc":"20822:6:17","nodeType":"YulIdentifier","src":"20822:6:17"},{"name":"_BITMASK_BURNED","nativeSrc":"20830:15:17","nodeType":"YulIdentifier","src":"20830:15:17"}],"functionName":{"name":"and","nativeSrc":"20818:3:17","nodeType":"YulIdentifier","src":"20818:3:17"},"nativeSrc":"20818:28:17","nodeType":"YulFunctionCall","src":"20818:28:17"}],"functionName":{"name":"gt","nativeSrc":"20784:2:17","nodeType":"YulIdentifier","src":"20784:2:17"},"nativeSrc":"20784:63:17","nodeType":"YulFunctionCall","src":"20784:63:17"},"variableNames":[{"name":"result","nativeSrc":"20774:6:17","nodeType":"YulIdentifier","src":"20774:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8933,"isOffset":false,"isSlot":false,"src":"20799:16:17","valueSize":1},{"declaration":8906,"isOffset":false,"isSlot":false,"src":"20830:15:17","valueSize":1},{"declaration":9723,"isOffset":false,"isSlot":false,"src":"20791:6:17","valueSize":1},{"declaration":9723,"isOffset":false,"isSlot":false,"src":"20822:6:17","valueSize":1},{"declaration":9726,"isOffset":false,"isSlot":false,"src":"20774:6:17","valueSize":1}],"id":9728,"nodeType":"InlineAssembly","src":"20627:230:17"}]},"documentation":{"id":9721,"nodeType":"StructuredDocumentation","src":"20449:80:17","text":" @dev Returns whether `packed` represents a token that exists."},"id":9730,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipExists","nameLocation":"20543:22:17","nodeType":"FunctionDefinition","parameters":{"id":9724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9723,"mutability":"mutable","name":"packed","nameLocation":"20574:6:17","nodeType":"VariableDeclaration","scope":9730,"src":"20566:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9722,"name":"uint256","nodeType":"ElementaryTypeName","src":"20566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20565:16:17"},"returnParameters":{"id":9727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9726,"mutability":"mutable","name":"result","nameLocation":"20609:6:17","nodeType":"VariableDeclaration","scope":9730,"src":"20604:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9725,"name":"bool","nodeType":"ElementaryTypeName","src":"20604:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20603:13:17"},"scope":10949,"src":"20534:329:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9743,"nodeType":"Block","src":"21125:488:17","statements":[{"AST":{"nativeSrc":"21144:463:17","nodeType":"YulBlock","src":"21144:463:17","statements":[{"nativeSrc":"21254:37:17","nodeType":"YulAssignment","src":"21254:37:17","value":{"arguments":[{"name":"owner","nativeSrc":"21267:5:17","nodeType":"YulIdentifier","src":"21267:5:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21274:16:17","nodeType":"YulIdentifier","src":"21274:16:17"}],"functionName":{"name":"and","nativeSrc":"21263:3:17","nodeType":"YulIdentifier","src":"21263:3:17"},"nativeSrc":"21263:28:17","nodeType":"YulFunctionCall","src":"21263:28:17"},"variableNames":[{"name":"owner","nativeSrc":"21254:5:17","nodeType":"YulIdentifier","src":"21254:5:17"}]},{"nativeSrc":"21404:45:17","nodeType":"YulAssignment","src":"21404:45:17","value":{"arguments":[{"name":"msgSender","nativeSrc":"21421:9:17","nodeType":"YulIdentifier","src":"21421:9:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21432:16:17","nodeType":"YulIdentifier","src":"21432:16:17"}],"functionName":{"name":"and","nativeSrc":"21417:3:17","nodeType":"YulIdentifier","src":"21417:3:17"},"nativeSrc":"21417:32:17","nodeType":"YulFunctionCall","src":"21417:32:17"},"variableNames":[{"name":"msgSender","nativeSrc":"21404:9:17","nodeType":"YulIdentifier","src":"21404:9:17"}]},{"nativeSrc":"21531:66:17","nodeType":"YulAssignment","src":"21531:66:17","value":{"arguments":[{"arguments":[{"name":"msgSender","nativeSrc":"21547:9:17","nodeType":"YulIdentifier","src":"21547:9:17"},{"name":"owner","nativeSrc":"21558:5:17","nodeType":"YulIdentifier","src":"21558:5:17"}],"functionName":{"name":"eq","nativeSrc":"21544:2:17","nodeType":"YulIdentifier","src":"21544:2:17"},"nativeSrc":"21544:20:17","nodeType":"YulFunctionCall","src":"21544:20:17"},{"arguments":[{"name":"msgSender","nativeSrc":"21569:9:17","nodeType":"YulIdentifier","src":"21569:9:17"},{"name":"approvedAddress","nativeSrc":"21580:15:17","nodeType":"YulIdentifier","src":"21580:15:17"}],"functionName":{"name":"eq","nativeSrc":"21566:2:17","nodeType":"YulIdentifier","src":"21566:2:17"},"nativeSrc":"21566:30:17","nodeType":"YulFunctionCall","src":"21566:30:17"}],"functionName":{"name":"or","nativeSrc":"21541:2:17","nodeType":"YulIdentifier","src":"21541:2:17"},"nativeSrc":"21541:56:17","nodeType":"YulFunctionCall","src":"21541:56:17"},"variableNames":[{"name":"result","nativeSrc":"21531:6:17","nodeType":"YulIdentifier","src":"21531:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8933,"isOffset":false,"isSlot":false,"src":"21274:16:17","valueSize":1},{"declaration":8933,"isOffset":false,"isSlot":false,"src":"21432:16:17","valueSize":1},{"declaration":9733,"isOffset":false,"isSlot":false,"src":"21580:15:17","valueSize":1},{"declaration":9737,"isOffset":false,"isSlot":false,"src":"21404:9:17","valueSize":1},{"declaration":9737,"isOffset":false,"isSlot":false,"src":"21421:9:17","valueSize":1},{"declaration":9737,"isOffset":false,"isSlot":false,"src":"21547:9:17","valueSize":1},{"declaration":9737,"isOffset":false,"isSlot":false,"src":"21569:9:17","valueSize":1},{"declaration":9735,"isOffset":false,"isSlot":false,"src":"21254:5:17","valueSize":1},{"declaration":9735,"isOffset":false,"isSlot":false,"src":"21267:5:17","valueSize":1},{"declaration":9735,"isOffset":false,"isSlot":false,"src":"21558:5:17","valueSize":1},{"declaration":9740,"isOffset":false,"isSlot":false,"src":"21531:6:17","valueSize":1}],"id":9742,"nodeType":"InlineAssembly","src":"21135:472:17"}]},"documentation":{"id":9731,"nodeType":"StructuredDocumentation","src":"20869:93:17","text":" @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."},"id":9744,"implemented":true,"kind":"function","modifiers":[],"name":"_isSenderApprovedOrOwner","nameLocation":"20976:24:17","nodeType":"FunctionDefinition","parameters":{"id":9738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9733,"mutability":"mutable","name":"approvedAddress","nameLocation":"21018:15:17","nodeType":"VariableDeclaration","scope":9744,"src":"21010:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9732,"name":"address","nodeType":"ElementaryTypeName","src":"21010:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9735,"mutability":"mutable","name":"owner","nameLocation":"21051:5:17","nodeType":"VariableDeclaration","scope":9744,"src":"21043:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9734,"name":"address","nodeType":"ElementaryTypeName","src":"21043:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9737,"mutability":"mutable","name":"msgSender","nameLocation":"21074:9:17","nodeType":"VariableDeclaration","scope":9744,"src":"21066:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9736,"name":"address","nodeType":"ElementaryTypeName","src":"21066:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21000:89:17"},"returnParameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9740,"mutability":"mutable","name":"result","nameLocation":"21117:6:17","nodeType":"VariableDeclaration","scope":9744,"src":"21112:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9739,"name":"bool","nodeType":"ElementaryTypeName","src":"21112:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21111:13:17"},"scope":10949,"src":"20967:646:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9762,"nodeType":"Block","src":"21878:317:17","statements":[{"assignments":[9756],"declarations":[{"constant":false,"id":9756,"mutability":"mutable","name":"tokenApproval","nameLocation":"21913:13:17","nodeType":"VariableDeclaration","scope":9762,"src":"21888:38:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"},"typeName":{"id":9755,"nodeType":"UserDefinedTypeName","pathNode":{"id":9754,"name":"TokenApprovalRef","nameLocations":["21888:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8873,"src":"21888:16:17"},"referencedDeclaration":8873,"src":"21888:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}},"visibility":"internal"}],"id":9760,"initialValue":{"baseExpression":{"id":9757,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"21929:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8873_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":9759,"indexExpression":{"id":9758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"21945:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21929:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21888:65:17"},{"AST":{"nativeSrc":"22066:123:17","nodeType":"YulBlock","src":"22066:123:17","statements":[{"nativeSrc":"22080:41:17","nodeType":"YulAssignment","src":"22080:41:17","value":{"name":"tokenApproval.slot","nativeSrc":"22103:18:17","nodeType":"YulIdentifier","src":"22103:18:17"},"variableNames":[{"name":"approvedAddressSlot","nativeSrc":"22080:19:17","nodeType":"YulIdentifier","src":"22080:19:17"}]},{"nativeSrc":"22134:45:17","nodeType":"YulAssignment","src":"22134:45:17","value":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"22159:19:17","nodeType":"YulIdentifier","src":"22159:19:17"}],"functionName":{"name":"sload","nativeSrc":"22153:5:17","nodeType":"YulIdentifier","src":"22153:5:17"},"nativeSrc":"22153:26:17","nodeType":"YulFunctionCall","src":"22153:26:17"},"variableNames":[{"name":"approvedAddress","nativeSrc":"22134:15:17","nodeType":"YulIdentifier","src":"22134:15:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9752,"isOffset":false,"isSlot":false,"src":"22134:15:17","valueSize":1},{"declaration":9750,"isOffset":false,"isSlot":false,"src":"22080:19:17","valueSize":1},{"declaration":9750,"isOffset":false,"isSlot":false,"src":"22159:19:17","valueSize":1},{"declaration":9756,"isOffset":false,"isSlot":true,"src":"22103:18:17","suffix":"slot","valueSize":1}],"id":9761,"nodeType":"InlineAssembly","src":"22057:132:17"}]},"documentation":{"id":9745,"nodeType":"StructuredDocumentation","src":"21619:97:17","text":" @dev Returns the storage slot and value for the approved address of `tokenId`."},"id":9763,"implemented":true,"kind":"function","modifiers":[],"name":"_getApprovedSlotAndAddress","nameLocation":"21730:26:17","nodeType":"FunctionDefinition","parameters":{"id":9748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9747,"mutability":"mutable","name":"tokenId","nameLocation":"21765:7:17","nodeType":"VariableDeclaration","scope":9763,"src":"21757:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9746,"name":"uint256","nodeType":"ElementaryTypeName","src":"21757:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21756:17:17"},"returnParameters":{"id":9753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9750,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"21828:19:17","nodeType":"VariableDeclaration","scope":9763,"src":"21820:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9749,"name":"uint256","nodeType":"ElementaryTypeName","src":"21820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9752,"mutability":"mutable","name":"approvedAddress","nameLocation":"21857:15:17","nodeType":"VariableDeclaration","scope":9763,"src":"21849:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9751,"name":"address","nodeType":"ElementaryTypeName","src":"21849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21819:54:17"},"scope":10949,"src":"21721:474:17","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[11104],"body":{"id":9935,"nodeType":"Block","src":"22923:3320:17","statements":[{"assignments":[9775],"declarations":[{"constant":false,"id":9775,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"22941:19:17","nodeType":"VariableDeclaration","scope":9935,"src":"22933:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9774,"name":"uint256","nodeType":"ElementaryTypeName","src":"22933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9779,"initialValue":{"arguments":[{"id":9777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"22982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9776,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"22963:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22963:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22933:57:17"},{"expression":{"id":9796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23092:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23131:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23123:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9787,"name":"uint160","nodeType":"ElementaryTypeName","src":"23123:7:17","typeDescriptions":{}}},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23123:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23115:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9785,"name":"uint256","nodeType":"ElementaryTypeName","src":"23115:7:17","typeDescriptions":{}}},"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23115:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9792,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"23140:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23115:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23107:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9783,"name":"uint160","nodeType":"ElementaryTypeName","src":"23107:7:17","typeDescriptions":{}}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23107:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23099:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9781,"name":"address","nodeType":"ElementaryTypeName","src":"23099:7:17","typeDescriptions":{}}},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23099:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23092:66:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9797,"nodeType":"ExpressionStatement","src":"23092:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9802,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"23189:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23181:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9800,"name":"uint160","nodeType":"ElementaryTypeName","src":"23181:7:17","typeDescriptions":{}}},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23181:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23173:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9798,"name":"address","nodeType":"ElementaryTypeName","src":"23173:7:17","typeDescriptions":{}}},"id":9804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23173:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23214:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23173:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9812,"nodeType":"IfStatement","src":"23169:95:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9808,"name":"TransferFromIncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10976,"src":"23228:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23255:8:17","memberName":"selector","nodeType":"MemberAccess","src":"23228:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9807,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"23220:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23220:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9811,"nodeType":"ExpressionStatement","src":"23220:44:17"}},{"assignments":[9814,9816],"declarations":[{"constant":false,"id":9814,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"23284:19:17","nodeType":"VariableDeclaration","scope":9935,"src":"23276:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9813,"name":"uint256","nodeType":"ElementaryTypeName","src":"23276:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9816,"mutability":"mutable","name":"approvedAddress","nameLocation":"23313:15:17","nodeType":"VariableDeclaration","scope":9935,"src":"23305:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9815,"name":"address","nodeType":"ElementaryTypeName","src":"23305:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9820,"initialValue":{"arguments":[{"id":9818,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"23359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9817,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"23332:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":9819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23332:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"23275:92:17"},{"condition":{"id":9827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23463:69:17","subExpression":{"arguments":[{"id":9822,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9816,"src":"23489:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9823,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23506:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9824,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"23512:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23512:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9821,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9744,"src":"23464:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":9826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23464:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9840,"nodeType":"IfStatement","src":"23459:188:17","trueBody":{"condition":{"id":9833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23550:44:17","subExpression":{"arguments":[{"id":9829,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23568:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9830,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"23574:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23574:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9828,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"23551:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23551:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9839,"nodeType":"IfStatement","src":"23546:101:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9835,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10973,"src":"23604:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23638:8:17","memberName":"selector","nodeType":"MemberAccess","src":"23604:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9834,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"23596:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23596:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9838,"nodeType":"ExpressionStatement","src":"23596:51:17"}}},{"expression":{"arguments":[{"id":9842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"23680:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"23686:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"23690:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23699:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9841,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"23658:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23658:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9847,"nodeType":"ExpressionStatement","src":"23658:43:17"},{"AST":{"nativeSrc":"23773:181:17","nodeType":"YulBlock","src":"23773:181:17","statements":[{"body":{"nativeSrc":"23806:138:17","nodeType":"YulBlock","src":"23806:138:17","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"23907:19:17","nodeType":"YulIdentifier","src":"23907:19:17"},{"kind":"number","nativeSrc":"23928:1:17","nodeType":"YulLiteral","src":"23928:1:17","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"23900:6:17","nodeType":"YulIdentifier","src":"23900:6:17"},"nativeSrc":"23900:30:17","nodeType":"YulFunctionCall","src":"23900:30:17"},"nativeSrc":"23900:30:17","nodeType":"YulExpressionStatement","src":"23900:30:17"}]},"condition":{"name":"approvedAddress","nativeSrc":"23790:15:17","nodeType":"YulIdentifier","src":"23790:15:17"},"nativeSrc":"23787:157:17","nodeType":"YulIf","src":"23787:157:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":9816,"isOffset":false,"isSlot":false,"src":"23790:15:17","valueSize":1},{"declaration":9814,"isOffset":false,"isSlot":false,"src":"23907:19:17","valueSize":1}],"id":9848,"nodeType":"InlineAssembly","src":"23764:190:17"},{"id":9905,"nodeType":"UncheckedBlock","src":"24221:1361:17","statements":[{"expression":{"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"24314:26:17","subExpression":{"baseExpression":{"id":9849,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"24316:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9851,"indexExpression":{"id":9850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"24335:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24316:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9853,"nodeType":"ExpressionStatement","src":"24314:26:17"},{"expression":{"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24382:24:17","subExpression":{"baseExpression":{"id":9854,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"24384:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9856,"indexExpression":{"id":9855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"24403:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24384:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9858,"nodeType":"ExpressionStatement","src":"24382:24:17"},{"expression":{"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9859,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"24670:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9861,"indexExpression":{"id":9860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"24688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24670:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"24735:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9864,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"24755:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"24798:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"24804:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9868,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"24808:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9865,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10920,"src":"24783:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":9869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24783:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24755:73:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9862,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"24699:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24699:143:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24670:172:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9873,"nodeType":"ExpressionStatement","src":"24670:172:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9874,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"24959:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9875,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"24981:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24959:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25010:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24959:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9904,"nodeType":"IfStatement","src":"24955:617:17","trueBody":{"id":9903,"nodeType":"Block","src":"25013:559:17","statements":[{"assignments":[9880],"declarations":[{"constant":false,"id":9880,"mutability":"mutable","name":"nextTokenId","nameLocation":"25039:11:17","nodeType":"VariableDeclaration","scope":9903,"src":"25031:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9879,"name":"uint256","nodeType":"ElementaryTypeName","src":"25031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"25053:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25063:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25053:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25031:33:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9885,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"25184:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9887,"indexExpression":{"id":9886,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"25202:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25184:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25218:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25184:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9902,"nodeType":"IfStatement","src":"25180:378:17","trueBody":{"id":9901,"nodeType":"Block","src":"25221:337:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9890,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"25305:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9891,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"25320:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25305:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9900,"nodeType":"IfStatement","src":"25301:239:17","trueBody":{"id":9899,"nodeType":"Block","src":"25335:205:17","statements":[{"expression":{"id":9897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9893,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"25465:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9895,"indexExpression":{"id":9894,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"25483:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25465:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9896,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"25498:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25465:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9898,"nodeType":"ExpressionStatement","src":"25465:52:17"}]}}]}}]}}]},{"assignments":[9907],"declarations":[{"constant":false,"id":9907,"mutability":"mutable","name":"toMasked","nameLocation":"25689:8:17","nodeType":"VariableDeclaration","scope":9935,"src":"25681:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9906,"name":"uint256","nodeType":"ElementaryTypeName","src":"25681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9917,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"25716:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25708:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9910,"name":"uint160","nodeType":"ElementaryTypeName","src":"25708:7:17","typeDescriptions":{}}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25708:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25700:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9908,"name":"uint256","nodeType":"ElementaryTypeName","src":"25700:7:17","typeDescriptions":{}}},"id":9914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25700:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9915,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"25723:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25700:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25681:58:17"},{"AST":{"nativeSrc":"25758:358:17","nodeType":"YulBlock","src":"25758:358:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25836:1:17","nodeType":"YulLiteral","src":"25836:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"25892:1:17","nodeType":"YulLiteral","src":"25892:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"25946:25:17","nodeType":"YulIdentifier","src":"25946:25:17"},{"name":"from","nativeSrc":"26003:4:17","nodeType":"YulIdentifier","src":"26003:4:17"},{"name":"toMasked","nativeSrc":"26036:8:17","nodeType":"YulIdentifier","src":"26036:8:17"},{"name":"tokenId","nativeSrc":"26071:7:17","nodeType":"YulIdentifier","src":"26071:7:17"}],"functionName":{"name":"log4","nativeSrc":"25814:4:17","nodeType":"YulIdentifier","src":"25814:4:17"},"nativeSrc":"25814:292:17","nodeType":"YulFunctionCall","src":"25814:292:17"},"nativeSrc":"25814:292:17","nodeType":"YulExpressionStatement","src":"25814:292:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8939,"isOffset":false,"isSlot":false,"src":"25946:25:17","valueSize":1},{"declaration":9766,"isOffset":false,"isSlot":false,"src":"26003:4:17","valueSize":1},{"declaration":9907,"isOffset":false,"isSlot":false,"src":"26036:8:17","valueSize":1},{"declaration":9770,"isOffset":false,"isSlot":false,"src":"26071:7:17","valueSize":1}],"id":9918,"nodeType":"InlineAssembly","src":"25749:367:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9919,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9907,"src":"26129:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26129:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9927,"nodeType":"IfStatement","src":"26125:58:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9923,"name":"TransferToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10982,"src":"26152:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26174:8:17","memberName":"selector","nodeType":"MemberAccess","src":"26152:30:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9922,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"26144:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26144:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9926,"nodeType":"ExpressionStatement","src":"26144:39:17"}},{"expression":{"arguments":[{"id":9929,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"26215:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"26221:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"26225:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26234:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9928,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"26194:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26194:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9934,"nodeType":"ExpressionStatement","src":"26194:42:17"}]},"documentation":{"id":9764,"nodeType":"StructuredDocumentation","src":"22388:403:17","text":" @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":9936,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"22805:12:17","nodeType":"FunctionDefinition","overrides":{"id":9772,"nodeType":"OverrideSpecifier","overrides":[],"src":"22914:8:17"},"parameters":{"id":9771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9766,"mutability":"mutable","name":"from","nameLocation":"22835:4:17","nodeType":"VariableDeclaration","scope":9936,"src":"22827:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9765,"name":"address","nodeType":"ElementaryTypeName","src":"22827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9768,"mutability":"mutable","name":"to","nameLocation":"22857:2:17","nodeType":"VariableDeclaration","scope":9936,"src":"22849:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9767,"name":"address","nodeType":"ElementaryTypeName","src":"22849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9770,"mutability":"mutable","name":"tokenId","nameLocation":"22877:7:17","nodeType":"VariableDeclaration","scope":9936,"src":"22869:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9769,"name":"uint256","nodeType":"ElementaryTypeName","src":"22869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22817:73:17"},"returnParameters":{"id":9773,"nodeType":"ParameterList","parameters":[],"src":"22923:0:17"},"scope":10949,"src":"22796:3447:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11094],"body":{"id":9954,"nodeType":"Block","src":"26465:56:17","statements":[{"expression":{"arguments":[{"id":9948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9939,"src":"26492:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9941,"src":"26498:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9943,"src":"26502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":9951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26511:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9947,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[9955,9995],"referencedDeclaration":9995,"src":"26475:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26475:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9953,"nodeType":"ExpressionStatement","src":"26475:39:17"}]},"documentation":{"id":9937,"nodeType":"StructuredDocumentation","src":"26249:80:17","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":9955,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"26343:16:17","nodeType":"FunctionDefinition","overrides":{"id":9945,"nodeType":"OverrideSpecifier","overrides":[],"src":"26456:8:17"},"parameters":{"id":9944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9939,"mutability":"mutable","name":"from","nameLocation":"26377:4:17","nodeType":"VariableDeclaration","scope":9955,"src":"26369:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9938,"name":"address","nodeType":"ElementaryTypeName","src":"26369:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9941,"mutability":"mutable","name":"to","nameLocation":"26399:2:17","nodeType":"VariableDeclaration","scope":9955,"src":"26391:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9940,"name":"address","nodeType":"ElementaryTypeName","src":"26391:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9943,"mutability":"mutable","name":"tokenId","nameLocation":"26419:7:17","nodeType":"VariableDeclaration","scope":9955,"src":"26411:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9942,"name":"uint256","nodeType":"ElementaryTypeName","src":"26411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26359:73:17"},"returnParameters":{"id":9946,"nodeType":"ParameterList","parameters":[],"src":"26465:0:17"},"scope":10949,"src":"26334:187:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11084],"body":{"id":9994,"nodeType":"Block","src":"27261:246:17","statements":[{"expression":{"arguments":[{"id":9969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"27284:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"27290:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"27294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9968,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"27271:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27271:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9973,"nodeType":"ExpressionStatement","src":"27271:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"27316:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27319:4:17","memberName":"code","nodeType":"MemberAccess","src":"27316:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27324:6:17","memberName":"length","nodeType":"MemberAccess","src":"27316:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27316:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9993,"nodeType":"IfStatement","src":"27312:189:17","trueBody":{"condition":{"id":9985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27353:57:17","subExpression":{"arguments":[{"id":9980,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"27385:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9981,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"27391:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9982,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"27395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9983,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9964,"src":"27404:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9979,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"27354:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":9984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27354:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9992,"nodeType":"IfStatement","src":"27349:152:17","trueBody":{"id":9991,"nodeType":"Block","src":"27412:89:17","statements":[{"expression":{"arguments":[{"expression":{"id":9987,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10979,"src":"27438:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27477:8:17","memberName":"selector","nodeType":"MemberAccess","src":"27438:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9986,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"27430:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27430:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9990,"nodeType":"ExpressionStatement","src":"27430:56:17"}]}}}]},"documentation":{"id":9956,"nodeType":"StructuredDocumentation","src":"26527:570:17","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":9995,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"27111:16:17","nodeType":"FunctionDefinition","overrides":{"id":9966,"nodeType":"OverrideSpecifier","overrides":[],"src":"27252:8:17"},"parameters":{"id":9965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9958,"mutability":"mutable","name":"from","nameLocation":"27145:4:17","nodeType":"VariableDeclaration","scope":9995,"src":"27137:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9957,"name":"address","nodeType":"ElementaryTypeName","src":"27137:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9960,"mutability":"mutable","name":"to","nameLocation":"27167:2:17","nodeType":"VariableDeclaration","scope":9995,"src":"27159:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9959,"name":"address","nodeType":"ElementaryTypeName","src":"27159:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9962,"mutability":"mutable","name":"tokenId","nameLocation":"27187:7:17","nodeType":"VariableDeclaration","scope":9995,"src":"27179:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9961,"name":"uint256","nodeType":"ElementaryTypeName","src":"27179:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9964,"mutability":"mutable","name":"_data","nameLocation":"27217:5:17","nodeType":"VariableDeclaration","scope":9995,"src":"27204:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9963,"name":"bytes","nodeType":"ElementaryTypeName","src":"27204:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27127:101:17"},"returnParameters":{"id":9967,"nodeType":"ParameterList","parameters":[],"src":"27261:0:17"},"scope":10949,"src":"27102:405:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":10007,"nodeType":"Block","src":"28303:2:17","statements":[]},"documentation":{"id":9996,"nodeType":"StructuredDocumentation","src":"27513:633:17","text":" @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":10008,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfers","nameLocation":"28160:21:17","nodeType":"FunctionDefinition","parameters":{"id":10005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9998,"mutability":"mutable","name":"from","nameLocation":"28199:4:17","nodeType":"VariableDeclaration","scope":10008,"src":"28191:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9997,"name":"address","nodeType":"ElementaryTypeName","src":"28191:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10000,"mutability":"mutable","name":"to","nameLocation":"28221:2:17","nodeType":"VariableDeclaration","scope":10008,"src":"28213:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9999,"name":"address","nodeType":"ElementaryTypeName","src":"28213:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10002,"mutability":"mutable","name":"startTokenId","nameLocation":"28241:12:17","nodeType":"VariableDeclaration","scope":10008,"src":"28233:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10001,"name":"uint256","nodeType":"ElementaryTypeName","src":"28233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10004,"mutability":"mutable","name":"quantity","nameLocation":"28271:8:17","nodeType":"VariableDeclaration","scope":10008,"src":"28263:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10003,"name":"uint256","nodeType":"ElementaryTypeName","src":"28263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28181:104:17"},"returnParameters":{"id":10006,"nodeType":"ParameterList","parameters":[],"src":"28303:0:17"},"scope":10949,"src":"28151:154:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10020,"nodeType":"Block","src":"29103:2:17","statements":[]},"documentation":{"id":10009,"nodeType":"StructuredDocumentation","src":"28311:636:17","text":" @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."},"id":10021,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfers","nameLocation":"28961:20:17","nodeType":"FunctionDefinition","parameters":{"id":10018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10011,"mutability":"mutable","name":"from","nameLocation":"28999:4:17","nodeType":"VariableDeclaration","scope":10021,"src":"28991:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10010,"name":"address","nodeType":"ElementaryTypeName","src":"28991:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10013,"mutability":"mutable","name":"to","nameLocation":"29021:2:17","nodeType":"VariableDeclaration","scope":10021,"src":"29013:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10012,"name":"address","nodeType":"ElementaryTypeName","src":"29013:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10015,"mutability":"mutable","name":"startTokenId","nameLocation":"29041:12:17","nodeType":"VariableDeclaration","scope":10021,"src":"29033:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10014,"name":"uint256","nodeType":"ElementaryTypeName","src":"29033:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10017,"mutability":"mutable","name":"quantity","nameLocation":"29071:8:17","nodeType":"VariableDeclaration","scope":10021,"src":"29063:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10016,"name":"uint256","nodeType":"ElementaryTypeName","src":"29063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28981:104:17"},"returnParameters":{"id":10019,"nodeType":"ParameterList","parameters":[],"src":"29103:0:17"},"scope":10949,"src":"28952:153:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10076,"nodeType":"Block","src":"29697:509:17","statements":[{"clauses":[{"block":{"id":10056,"nodeType":"Block","src":"29846:96:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10048,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10046,"src":"29867:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"arguments":[{"id":10050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"29902:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10049,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"29877:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$8867_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29877:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$8867","typeString":"contract ERC721A__IERC721Receiver"}},"id":10052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29906:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":8866,"src":"29877:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29923:8:17","memberName":"selector","nodeType":"MemberAccess","src":"29877:54:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"29867:64:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10034,"id":10055,"nodeType":"Return","src":"29860:71:17"}]},"errorName":"","id":10057,"nodeType":"TryCatchClause","parameters":{"id":10047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10046,"mutability":"mutable","name":"retval","nameLocation":"29829:6:17","nodeType":"VariableDeclaration","scope":10057,"src":"29822:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10045,"name":"bytes4","nodeType":"ElementaryTypeName","src":"29822:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"29808:37:17"},"src":"29800:142:17"},{"block":{"id":10073,"nodeType":"Block","src":"29971:229:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10061,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10059,"src":"29989:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29996:6:17","memberName":"length","nodeType":"MemberAccess","src":"29989:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29989:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10071,"nodeType":"IfStatement","src":"29985:113:17","trueBody":{"id":10070,"nodeType":"Block","src":"30009:89:17","statements":[{"expression":{"arguments":[{"expression":{"id":10066,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10979,"src":"30035:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30074:8:17","memberName":"selector","nodeType":"MemberAccess","src":"30035:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10065,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"30027:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30027:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10069,"nodeType":"ExpressionStatement","src":"30027:56:17"}]}},{"AST":{"nativeSrc":"30120:70:17","nodeType":"YulBlock","src":"30120:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"30149:2:17","nodeType":"YulLiteral","src":"30149:2:17","type":"","value":"32"},{"name":"reason","nativeSrc":"30153:6:17","nodeType":"YulIdentifier","src":"30153:6:17"}],"functionName":{"name":"add","nativeSrc":"30145:3:17","nodeType":"YulIdentifier","src":"30145:3:17"},"nativeSrc":"30145:15:17","nodeType":"YulFunctionCall","src":"30145:15:17"},{"arguments":[{"name":"reason","nativeSrc":"30168:6:17","nodeType":"YulIdentifier","src":"30168:6:17"}],"functionName":{"name":"mload","nativeSrc":"30162:5:17","nodeType":"YulIdentifier","src":"30162:5:17"},"nativeSrc":"30162:13:17","nodeType":"YulFunctionCall","src":"30162:13:17"}],"functionName":{"name":"revert","nativeSrc":"30138:6:17","nodeType":"YulIdentifier","src":"30138:6:17"},"nativeSrc":"30138:38:17","nodeType":"YulFunctionCall","src":"30138:38:17"},"nativeSrc":"30138:38:17","nodeType":"YulExpressionStatement","src":"30138:38:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10059,"isOffset":false,"isSlot":false,"src":"30153:6:17","valueSize":1},{"declaration":10059,"isOffset":false,"isSlot":false,"src":"30168:6:17","valueSize":1}],"id":10072,"nodeType":"InlineAssembly","src":"30111:79:17"}]},"errorName":"","id":10074,"nodeType":"TryCatchClause","parameters":{"id":10060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10059,"mutability":"mutable","name":"reason","nameLocation":"29963:6:17","nodeType":"VariableDeclaration","scope":10074,"src":"29950:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10058,"name":"bytes","nodeType":"ElementaryTypeName","src":"29950:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29949:21:17"},"src":"29943:257:17"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10039,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"29757:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29757:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10041,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"29778:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10042,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"29784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10043,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"29793:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":10036,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"29736:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10035,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"29711:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$8867_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":10037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$8867","typeString":"contract ERC721A__IERC721Receiver"}},"id":10038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29740:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":8866,"src":"29711:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":10044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:88:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":10075,"nodeType":"TryStatement","src":"29707:493:17"}]},"documentation":{"id":10022,"nodeType":"StructuredDocumentation","src":"29111:417:17","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."},"id":10077,"implemented":true,"kind":"function","modifiers":[],"name":"_checkContractOnERC721Received","nameLocation":"29542:30:17","nodeType":"FunctionDefinition","parameters":{"id":10031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10024,"mutability":"mutable","name":"from","nameLocation":"29590:4:17","nodeType":"VariableDeclaration","scope":10077,"src":"29582:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10023,"name":"address","nodeType":"ElementaryTypeName","src":"29582:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10026,"mutability":"mutable","name":"to","nameLocation":"29612:2:17","nodeType":"VariableDeclaration","scope":10077,"src":"29604:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10025,"name":"address","nodeType":"ElementaryTypeName","src":"29604:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10028,"mutability":"mutable","name":"tokenId","nameLocation":"29632:7:17","nodeType":"VariableDeclaration","scope":10077,"src":"29624:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10027,"name":"uint256","nodeType":"ElementaryTypeName","src":"29624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10030,"mutability":"mutable","name":"_data","nameLocation":"29662:5:17","nodeType":"VariableDeclaration","scope":10077,"src":"29649:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10029,"name":"bytes","nodeType":"ElementaryTypeName","src":"29649:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29572:101:17"},"returnParameters":{"id":10034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10077,"src":"29691:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10032,"name":"bool","nodeType":"ElementaryTypeName","src":"29691:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29690:6:17"},"scope":10949,"src":"29533:673:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10207,"nodeType":"Block","src":"30714:2281:17","statements":[{"assignments":[10086],"declarations":[{"constant":false,"id":10086,"mutability":"mutable","name":"startTokenId","nameLocation":"30732:12:17","nodeType":"VariableDeclaration","scope":10207,"src":"30724:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10085,"name":"uint256","nodeType":"ElementaryTypeName","src":"30724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10088,"initialValue":{"id":10087,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"30747:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30724:36:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10089,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"30774:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30774:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10097,"nodeType":"IfStatement","src":"30770:53:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10093,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10967,"src":"30797:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30814:8:17","memberName":"selector","nodeType":"MemberAccess","src":"30797:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10092,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"30789:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30789:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10096,"nodeType":"ExpressionStatement","src":"30789:34:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30864:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30856:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10099,"name":"address","nodeType":"ElementaryTypeName","src":"30856:7:17","typeDescriptions":{}}},"id":10102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30856:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"30868:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10104,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"30872:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10105,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"30886:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10098,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"30834:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30834:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10107,"nodeType":"ExpressionStatement","src":"30834:61:17"},{"id":10196,"nodeType":"UncheckedBlock","src":"31078:1841:17","statements":[{"expression":{"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10108,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"31323:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10110,"indexExpression":{"id":10109,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"31341:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31323:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"31393:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10114,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"31434:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10113,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"31413:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31413:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10117,"name":"address","nodeType":"ElementaryTypeName","src":"31461:7:17","typeDescriptions":{}}},"id":10120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"31473:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":10122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31477:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10116,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10920,"src":"31446:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31446:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31413:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10111,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"31357:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31357:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31323:170:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10127,"nodeType":"ExpressionStatement","src":"31323:170:17"},{"expression":{"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10128,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"31704:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10130,"indexExpression":{"id":10129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"31723:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31704:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10131,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"31730:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31743:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10133,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"31748:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31743:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31742:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31773:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"31742:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31741:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31730:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31704:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10141,"nodeType":"ExpressionStatement","src":"31704:71:17"},{"assignments":[10143],"declarations":[{"constant":false,"id":10143,"mutability":"mutable","name":"toMasked","nameLocation":"31891:8:17","nodeType":"VariableDeclaration","scope":10196,"src":"31883:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10142,"name":"uint256","nodeType":"ElementaryTypeName","src":"31883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10153,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10148,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"31918:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31910:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10146,"name":"uint160","nodeType":"ElementaryTypeName","src":"31910:7:17","typeDescriptions":{}}},"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31910:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31902:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10144,"name":"uint256","nodeType":"ElementaryTypeName","src":"31902:7:17","typeDescriptions":{}}},"id":10150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31902:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10151,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"31925:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31902:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31883:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10154,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"31960:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31972:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31960:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10162,"nodeType":"IfStatement","src":"31956:54:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10158,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10964,"src":"31983:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32001:8:17","memberName":"selector","nodeType":"MemberAccess","src":"31983:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10157,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"31975:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31975:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10161,"nodeType":"ExpressionStatement","src":"31975:35:17"}},{"assignments":[10164],"declarations":[{"constant":false,"id":10164,"mutability":"mutable","name":"end","nameLocation":"32033:3:17","nodeType":"VariableDeclaration","scope":10196,"src":"32025:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10163,"name":"uint256","nodeType":"ElementaryTypeName","src":"32025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10168,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10165,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"32039:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10166,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"32054:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32039:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32025:37:17"},{"assignments":[10170],"declarations":[{"constant":false,"id":10170,"mutability":"mutable","name":"tokenId","nameLocation":"32084:7:17","nodeType":"VariableDeclaration","scope":10196,"src":"32076:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10169,"name":"uint256","nodeType":"ElementaryTypeName","src":"32076:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10172,"initialValue":{"id":10171,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"32094:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32076:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10173,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10164,"src":"32125:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32131:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10176,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"32135:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32135:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32125:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10184,"nodeType":"IfStatement","src":"32121:77:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10180,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10997,"src":"32162:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32189:8:17","memberName":"selector","nodeType":"MemberAccess","src":"32162:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10179,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"32154:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32154:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10183,"nodeType":"ExpressionStatement","src":"32154:44:17"}},{"body":{"id":10186,"nodeType":"Block","src":"32216:633:17","statements":[{"AST":{"nativeSrc":"32243:441:17","nodeType":"YulBlock","src":"32243:441:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32345:1:17","nodeType":"YulLiteral","src":"32345:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"32409:1:17","nodeType":"YulLiteral","src":"32409:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"32471:25:17","nodeType":"YulIdentifier","src":"32471:25:17"},{"kind":"number","nativeSrc":"32536:1:17","nodeType":"YulLiteral","src":"32536:1:17","type":"","value":"0"},{"name":"toMasked","nativeSrc":"32580:8:17","nodeType":"YulIdentifier","src":"32580:8:17"},{"name":"tokenId","nativeSrc":"32623:7:17","nodeType":"YulIdentifier","src":"32623:7:17"}],"functionName":{"name":"log4","nativeSrc":"32315:4:17","nodeType":"YulIdentifier","src":"32315:4:17"},"nativeSrc":"32315:351:17","nodeType":"YulFunctionCall","src":"32315:351:17"},"nativeSrc":"32315:351:17","nodeType":"YulExpressionStatement","src":"32315:351:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8939,"isOffset":false,"isSlot":false,"src":"32471:25:17","valueSize":1},{"declaration":10143,"isOffset":false,"isSlot":false,"src":"32580:8:17","valueSize":1},{"declaration":10170,"isOffset":false,"isSlot":false,"src":"32623:7:17","valueSize":1}],"id":10185,"nodeType":"InlineAssembly","src":"32234:450:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"32857:9:17","subExpression":{"id":10187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"32859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10189,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10164,"src":"32870:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32857:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10191,"nodeType":"DoWhileStatement","src":"32213:662:17"},{"expression":{"id":10194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10192,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"32889:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10193,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10164,"src":"32905:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32889:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10195,"nodeType":"ExpressionStatement","src":"32889:19:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32957:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32949:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10198,"name":"address","nodeType":"ElementaryTypeName","src":"32949:7:17","typeDescriptions":{}}},"id":10201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32949:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"32961:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10203,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10086,"src":"32965:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10204,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10082,"src":"32979:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10197,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"32928:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32928:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10206,"nodeType":"ExpressionStatement","src":"32928:60:17"}]},"documentation":{"id":10078,"nodeType":"StructuredDocumentation","src":"30397:250:17","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."},"id":10208,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"30661:5:17","nodeType":"FunctionDefinition","parameters":{"id":10083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10080,"mutability":"mutable","name":"to","nameLocation":"30675:2:17","nodeType":"VariableDeclaration","scope":10208,"src":"30667:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10079,"name":"address","nodeType":"ElementaryTypeName","src":"30667:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10082,"mutability":"mutable","name":"quantity","nameLocation":"30687:8:17","nodeType":"VariableDeclaration","scope":10208,"src":"30679:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10081,"name":"uint256","nodeType":"ElementaryTypeName","src":"30679:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30666:30:17"},"returnParameters":{"id":10084,"nodeType":"ParameterList","parameters":[],"src":"30714:0:17"},"scope":10949,"src":"30652:2343:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10339,"nodeType":"Block","src":"33904:1513:17","statements":[{"assignments":[10217],"declarations":[{"constant":false,"id":10217,"mutability":"mutable","name":"startTokenId","nameLocation":"33922:12:17","nodeType":"VariableDeclaration","scope":10339,"src":"33914:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10216,"name":"uint256","nodeType":"ElementaryTypeName","src":"33914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10219,"initialValue":{"id":10218,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"33937:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33914:36:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"33964:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33978:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10221,"name":"address","nodeType":"ElementaryTypeName","src":"33970:7:17","typeDescriptions":{}}},"id":10224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33970:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33964:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10231,"nodeType":"IfStatement","src":"33960:57:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10227,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10964,"src":"33990:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34008:8:17","memberName":"selector","nodeType":"MemberAccess","src":"33990:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10226,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"33982:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33982:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10230,"nodeType":"ExpressionStatement","src":"33982:35:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10232,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"34031:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34031:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10240,"nodeType":"IfStatement","src":"34027:53:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10236,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10967,"src":"34054:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34071:8:17","memberName":"selector","nodeType":"MemberAccess","src":"34054:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10235,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"34046:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34046:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10239,"nodeType":"ExpressionStatement","src":"34046:34:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10241,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"34094:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10242,"name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"34105:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34094:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10249,"nodeType":"IfStatement","src":"34090:98:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10245,"name":"MintERC2309QuantityExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10988,"src":"34147:31:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34179:8:17","memberName":"selector","nodeType":"MemberAccess","src":"34147:40:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10244,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"34139:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34139:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10248,"nodeType":"ExpressionStatement","src":"34139:49:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34221:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10251,"name":"address","nodeType":"ElementaryTypeName","src":"34221:7:17","typeDescriptions":{}}},"id":10254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34221:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"34233:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10256,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"34237:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10257,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"34251:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10250,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"34199:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34199:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10259,"nodeType":"ExpressionStatement","src":"34199:61:17"},{"id":10328,"nodeType":"UncheckedBlock","src":"34369:972:17","statements":[{"expression":{"id":10272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10260,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"34589:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10262,"indexExpression":{"id":10261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"34608:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34589:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10263,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"34615:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10265,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"34633:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34628:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34627:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"34627:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34626:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34615:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34589:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10273,"nodeType":"ExpressionStatement","src":"34589:71:17"},{"expression":{"id":10292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10274,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"34896:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10276,"indexExpression":{"id":10275,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"34914:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34896:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"34966:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10280,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"35007:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10279,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"34986:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34986:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35034:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10283,"name":"address","nodeType":"ElementaryTypeName","src":"35034:7:17","typeDescriptions":{}}},"id":10286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35034:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"35046:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":10288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35050:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10282,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10920,"src":"35019:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35019:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34986:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10277,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"34930:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34930:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34896:170:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10293,"nodeType":"ExpressionStatement","src":"34896:170:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10294,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"35085:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10295,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"35100:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35085:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10299,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"35115:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35115:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10307,"nodeType":"IfStatement","src":"35081:97:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10303,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10997,"src":"35142:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35169:8:17","memberName":"selector","nodeType":"MemberAccess","src":"35142:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10302,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"35134:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35134:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10306,"nodeType":"ExpressionStatement","src":"35134:44:17"}},{"eventCall":{"arguments":[{"id":10309,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"35218:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10310,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"35232:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10311,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"35247:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35232:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35232:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":10317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35269:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35261:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10315,"name":"address","nodeType":"ElementaryTypeName","src":"35261:7:17","typeDescriptions":{}}},"id":10318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35261:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10319,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"35273:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10308,"name":"ConsecutiveTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11169,"src":"35198:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35198:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10321,"nodeType":"EmitStatement","src":"35193:83:17"},{"expression":{"id":10326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10322,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"35291:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10323,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"35307:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10324,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"35322:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35307:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35291:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10327,"nodeType":"ExpressionStatement","src":"35291:39:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35379:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10330,"name":"address","nodeType":"ElementaryTypeName","src":"35371:7:17","typeDescriptions":{}}},"id":10333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35371:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10211,"src":"35383:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10335,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"35387:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10336,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"35401:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10329,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"35350:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35350:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10338,"nodeType":"ExpressionStatement","src":"35350:60:17"}]},"documentation":{"id":10209,"nodeType":"StructuredDocumentation","src":"33001:829:17","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."},"id":10340,"implemented":true,"kind":"function","modifiers":[],"name":"_mintERC2309","nameLocation":"33844:12:17","nodeType":"FunctionDefinition","parameters":{"id":10214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10211,"mutability":"mutable","name":"to","nameLocation":"33865:2:17","nodeType":"VariableDeclaration","scope":10340,"src":"33857:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10210,"name":"address","nodeType":"ElementaryTypeName","src":"33857:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10213,"mutability":"mutable","name":"quantity","nameLocation":"33877:8:17","nodeType":"VariableDeclaration","scope":10340,"src":"33869:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10212,"name":"uint256","nodeType":"ElementaryTypeName","src":"33869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33856:30:17"},"returnParameters":{"id":10215,"nodeType":"ParameterList","parameters":[],"src":"33904:0:17"},"scope":10949,"src":"33835:1582:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10403,"nodeType":"Block","src":"35932:650:17","statements":[{"expression":{"arguments":[{"id":10351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10343,"src":"35948:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10352,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10345,"src":"35952:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10350,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10208,"src":"35942:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35942:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10354,"nodeType":"ExpressionStatement","src":"35942:19:17"},{"id":10402,"nodeType":"UncheckedBlock","src":"35972:604:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10343,"src":"36000:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36003:4:17","memberName":"code","nodeType":"MemberAccess","src":"36000:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36008:6:17","memberName":"length","nodeType":"MemberAccess","src":"36000:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36018:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36000:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10401,"nodeType":"IfStatement","src":"35996:570:17","trueBody":{"id":10400,"nodeType":"Block","src":"36021:545:17","statements":[{"assignments":[10361],"declarations":[{"constant":false,"id":10361,"mutability":"mutable","name":"end","nameLocation":"36047:3:17","nodeType":"VariableDeclaration","scope":10400,"src":"36039:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10360,"name":"uint256","nodeType":"ElementaryTypeName","src":"36039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10363,"initialValue":{"id":10362,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"36053:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36039:27:17"},{"assignments":[10365],"declarations":[{"constant":false,"id":10365,"mutability":"mutable","name":"index","nameLocation":"36092:5:17","nodeType":"VariableDeclaration","scope":10400,"src":"36084:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10364,"name":"uint256","nodeType":"ElementaryTypeName","src":"36084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10369,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10366,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"36100:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10367,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10345,"src":"36106:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36100:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36084:30:17"},{"body":{"id":10388,"nodeType":"Block","src":"36135:214:17","statements":[{"condition":{"id":10380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"36161:63:17","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36201:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36193:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10371,"name":"address","nodeType":"ElementaryTypeName","src":"36193:7:17","typeDescriptions":{}}},"id":10374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36193:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10375,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10343,"src":"36205:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"36209:7:17","subExpression":{"id":10376,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"36209:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10378,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10347,"src":"36218:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10370,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"36162:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36162:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10387,"nodeType":"IfStatement","src":"36157:174:17","trueBody":{"id":10386,"nodeType":"Block","src":"36226:105:17","statements":[{"expression":{"arguments":[{"expression":{"id":10382,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10979,"src":"36260:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36299:8:17","memberName":"selector","nodeType":"MemberAccess","src":"36260:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10381,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"36252:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36252:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10385,"nodeType":"ExpressionStatement","src":"36252:56:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10389,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"36357:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10390,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"36365:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36357:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10392,"nodeType":"DoWhileStatement","src":"36132:238:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10393,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"36521:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"36538:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36521:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10399,"nodeType":"IfStatement","src":"36517:34:17","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10396,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"36543:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36543:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10398,"nodeType":"ExpressionStatement","src":"36543:8:17"}}]}}]}]},"documentation":{"id":10341,"nodeType":"StructuredDocumentation","src":"35423:388:17","text":" @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."},"id":10404,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"35825:9:17","nodeType":"FunctionDefinition","parameters":{"id":10348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10343,"mutability":"mutable","name":"to","nameLocation":"35852:2:17","nodeType":"VariableDeclaration","scope":10404,"src":"35844:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10342,"name":"address","nodeType":"ElementaryTypeName","src":"35844:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10345,"mutability":"mutable","name":"quantity","nameLocation":"35872:8:17","nodeType":"VariableDeclaration","scope":10404,"src":"35864:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10344,"name":"uint256","nodeType":"ElementaryTypeName","src":"35864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10347,"mutability":"mutable","name":"_data","nameLocation":"35903:5:17","nodeType":"VariableDeclaration","scope":10404,"src":"35890:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10346,"name":"bytes","nodeType":"ElementaryTypeName","src":"35890:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35834:80:17"},"returnParameters":{"id":10349,"nodeType":"ParameterList","parameters":[],"src":"35932:0:17"},"scope":10949,"src":"35816:766:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10418,"nodeType":"Block","src":"36727:44:17","statements":[{"expression":{"arguments":[{"id":10413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10407,"src":"36747:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10414,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10409,"src":"36751:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36761:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10412,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[10404,10419],"referencedDeclaration":10404,"src":"36737:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36737:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10417,"nodeType":"ExpressionStatement","src":"36737:27:17"}]},"documentation":{"id":10405,"nodeType":"StructuredDocumentation","src":"36588:68:17","text":" @dev Equivalent to `_safeMint(to, quantity, '')`."},"id":10419,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"36670:9:17","nodeType":"FunctionDefinition","parameters":{"id":10410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10407,"mutability":"mutable","name":"to","nameLocation":"36688:2:17","nodeType":"VariableDeclaration","scope":10419,"src":"36680:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10406,"name":"address","nodeType":"ElementaryTypeName","src":"36680:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10409,"mutability":"mutable","name":"quantity","nameLocation":"36700:8:17","nodeType":"VariableDeclaration","scope":10419,"src":"36692:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10408,"name":"uint256","nodeType":"ElementaryTypeName","src":"36692:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36679:30:17"},"returnParameters":{"id":10411,"nodeType":"ParameterList","parameters":[],"src":"36727:0:17"},"scope":10949,"src":"36661:110:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10529,"nodeType":"Block","src":"37221:1992:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10427,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"37235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10428,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"37246:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37246:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37235:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10436,"nodeType":"IfStatement","src":"37231:75:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10432,"name":"SpotMintTokenIdTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11000,"src":"37273:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37297:8:17","memberName":"selector","nodeType":"MemberAccess","src":"37273:32:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10431,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"37265:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37265:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10435,"nodeType":"ExpressionStatement","src":"37265:41:17"}},{"assignments":[10438],"declarations":[{"constant":false,"id":10438,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"37324:19:17","nodeType":"VariableDeclaration","scope":10529,"src":"37316:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10437,"name":"uint256","nodeType":"ElementaryTypeName","src":"37316:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10442,"initialValue":{"baseExpression":{"id":10439,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"37346:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10441,"indexExpression":{"id":10440,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"37364:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37346:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37316:56:17"},{"condition":{"arguments":[{"id":10444,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10438,"src":"37409:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10443,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"37386:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":10445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37386:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10451,"nodeType":"IfStatement","src":"37382:85:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10447,"name":"TokenAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11003,"src":"37439:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37458:8:17","memberName":"selector","nodeType":"MemberAccess","src":"37439:27:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10446,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"37431:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37431:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10450,"nodeType":"ExpressionStatement","src":"37431:36:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37508:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37500:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10453,"name":"address","nodeType":"ElementaryTypeName","src":"37500:7:17","typeDescriptions":{}}},"id":10456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37500:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10457,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"37512:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"37516:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10452,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"37478:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37478:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10461,"nodeType":"ExpressionStatement","src":"37478:49:17"},{"id":10518,"nodeType":"UncheckedBlock","src":"37762:1386:17","statements":[{"expression":{"id":10480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10462,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"38019:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10464,"indexExpression":{"id":10463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"38037:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38019:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"38084:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31","id":10468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38125:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10467,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"38104:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38104:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38145:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10471,"name":"address","nodeType":"ElementaryTypeName","src":"38145:7:17","typeDescriptions":{}}},"id":10474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38145:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"38157:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10476,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10438,"src":"38161:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10470,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10920,"src":"38130:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38130:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38104:77:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10465,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"38048:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38048:147:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38019:176:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10481,"nodeType":"ExpressionStatement","src":"38019:176:17"},{"expression":{"id":10491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10482,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"38392:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10484,"indexExpression":{"id":10483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"38411:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38392:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38419:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10486,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"38424:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38419:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38418:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38449:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"38418:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38392:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10492,"nodeType":"ExpressionStatement","src":"38392:58:17"},{"assignments":[10494],"declarations":[{"constant":false,"id":10494,"mutability":"mutable","name":"toMasked","nameLocation":"38566:8:17","nodeType":"VariableDeclaration","scope":10518,"src":"38558:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10493,"name":"uint256","nodeType":"ElementaryTypeName","src":"38558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10504,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"38593:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38585:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10497,"name":"uint160","nodeType":"ElementaryTypeName","src":"38585:7:17","typeDescriptions":{}}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38585:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38577:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10495,"name":"uint256","nodeType":"ElementaryTypeName","src":"38577:7:17","typeDescriptions":{}}},"id":10501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38577:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10502,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"38600:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38577:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"38558:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10505,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10494,"src":"38635:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"38635:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10513,"nodeType":"IfStatement","src":"38631:54:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10509,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10964,"src":"38658:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38676:8:17","memberName":"selector","nodeType":"MemberAccess","src":"38658:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10508,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"38650:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38650:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10512,"nodeType":"ExpressionStatement","src":"38650:35:17"}},{"AST":{"nativeSrc":"38709:401:17","nodeType":"YulBlock","src":"38709:401:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"38799:1:17","nodeType":"YulLiteral","src":"38799:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"38859:1:17","nodeType":"YulLiteral","src":"38859:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"38917:25:17","nodeType":"YulIdentifier","src":"38917:25:17"},{"kind":"number","nativeSrc":"38978:1:17","nodeType":"YulLiteral","src":"38978:1:17","type":"","value":"0"},{"name":"toMasked","nativeSrc":"39018:8:17","nodeType":"YulIdentifier","src":"39018:8:17"},{"name":"tokenId","nativeSrc":"39057:7:17","nodeType":"YulIdentifier","src":"39057:7:17"}],"functionName":{"name":"log4","nativeSrc":"38773:4:17","nodeType":"YulIdentifier","src":"38773:4:17"},"nativeSrc":"38773:323:17","nodeType":"YulFunctionCall","src":"38773:323:17"},"nativeSrc":"38773:323:17","nodeType":"YulExpressionStatement","src":"38773:323:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8939,"isOffset":false,"isSlot":false,"src":"38917:25:17","valueSize":1},{"declaration":10494,"isOffset":false,"isSlot":false,"src":"39018:8:17","valueSize":1},{"declaration":10424,"isOffset":false,"isSlot":false,"src":"39057:7:17","valueSize":1}],"id":10514,"nodeType":"InlineAssembly","src":"38700:410:17"},{"expression":{"id":10516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"39124:13:17","subExpression":{"id":10515,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"39126:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10517,"nodeType":"ExpressionStatement","src":"39124:13:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39187:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39179:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10520,"name":"address","nodeType":"ElementaryTypeName","src":"39179:7:17","typeDescriptions":{}}},"id":10523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39179:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"39191:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10525,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"39195:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39204:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10519,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"39158:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39158:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10528,"nodeType":"ExpressionStatement","src":"39158:48:17"}]},"documentation":{"id":10420,"nodeType":"StructuredDocumentation","src":"36777:374:17","text":" @dev Mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n Emits a {Transfer} event for each mint."},"id":10530,"implemented":true,"kind":"function","modifiers":[],"name":"_mintSpot","nameLocation":"37165:9:17","nodeType":"FunctionDefinition","parameters":{"id":10425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10422,"mutability":"mutable","name":"to","nameLocation":"37183:2:17","nodeType":"VariableDeclaration","scope":10530,"src":"37175:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10421,"name":"address","nodeType":"ElementaryTypeName","src":"37175:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10424,"mutability":"mutable","name":"tokenId","nameLocation":"37195:7:17","nodeType":"VariableDeclaration","scope":10530,"src":"37187:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10423,"name":"uint256","nodeType":"ElementaryTypeName","src":"37187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37174:29:17"},"returnParameters":{"id":10426,"nodeType":"ParameterList","parameters":[],"src":"37221:0:17"},"scope":10949,"src":"37156:2057:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10581,"nodeType":"Block","src":"39798:557:17","statements":[{"expression":{"arguments":[{"id":10541,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"39818:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10535,"src":"39822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10540,"name":"_mintSpot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10530,"src":"39808:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39808:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10544,"nodeType":"ExpressionStatement","src":"39808:22:17"},{"id":10580,"nodeType":"UncheckedBlock","src":"39841:508:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"39869:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39872:4:17","memberName":"code","nodeType":"MemberAccess","src":"39869:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39877:6:17","memberName":"length","nodeType":"MemberAccess","src":"39869:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39887:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39869:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10579,"nodeType":"IfStatement","src":"39865:474:17","trueBody":{"id":10578,"nodeType":"Block","src":"39890:449:17","statements":[{"assignments":[10551],"declarations":[{"constant":false,"id":10551,"mutability":"mutable","name":"currentSpotMinted","nameLocation":"39916:17:17","nodeType":"VariableDeclaration","scope":10578,"src":"39908:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10550,"name":"uint256","nodeType":"ElementaryTypeName","src":"39908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10553,"initialValue":{"id":10552,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"39936:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39908:39:17"},{"condition":{"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"39969:63:17","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40009:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40001:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10555,"name":"address","nodeType":"ElementaryTypeName","src":"40001:7:17","typeDescriptions":{}}},"id":10558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40001:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"40013:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10535,"src":"40017:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10561,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10537,"src":"40026:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10554,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"39970:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39970:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10570,"nodeType":"IfStatement","src":"39965:166:17","trueBody":{"id":10569,"nodeType":"Block","src":"40034:97:17","statements":[{"expression":{"arguments":[{"expression":{"id":10565,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10979,"src":"40064:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40103:8:17","memberName":"selector","nodeType":"MemberAccess","src":"40064:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10564,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"40056:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40056:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10568,"nodeType":"ExpressionStatement","src":"40056:56:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10571,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"40282:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10572,"name":"currentSpotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"40297:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40282:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10577,"nodeType":"IfStatement","src":"40278:46:17","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10574,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"40316:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40316:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10576,"nodeType":"ExpressionStatement","src":"40316:8:17"}}]}}]}]},"documentation":{"id":10531,"nodeType":"StructuredDocumentation","src":"39219:455:17","text":" @dev Safely mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n See {_mintSpot}.\n Emits a {Transfer} event."},"id":10582,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"39688:13:17","nodeType":"FunctionDefinition","parameters":{"id":10538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10533,"mutability":"mutable","name":"to","nameLocation":"39719:2:17","nodeType":"VariableDeclaration","scope":10582,"src":"39711:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10532,"name":"address","nodeType":"ElementaryTypeName","src":"39711:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10535,"mutability":"mutable","name":"tokenId","nameLocation":"39739:7:17","nodeType":"VariableDeclaration","scope":10582,"src":"39731:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10534,"name":"uint256","nodeType":"ElementaryTypeName","src":"39731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10537,"mutability":"mutable","name":"_data","nameLocation":"39769:5:17","nodeType":"VariableDeclaration","scope":10582,"src":"39756:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10536,"name":"bytes","nodeType":"ElementaryTypeName","src":"39756:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39701:79:17"},"returnParameters":{"id":10539,"nodeType":"ParameterList","parameters":[],"src":"39798:0:17"},"scope":10949,"src":"39679:676:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10596,"nodeType":"Block","src":"40506:47:17","statements":[{"expression":{"arguments":[{"id":10591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10585,"src":"40530:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10592,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10587,"src":"40534:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40543:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10590,"name":"_safeMintSpot","nodeType":"Identifier","overloadedDeclarations":[10582,10597],"referencedDeclaration":10582,"src":"40516:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":10594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40516:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10595,"nodeType":"ExpressionStatement","src":"40516:30:17"}]},"documentation":{"id":10583,"nodeType":"StructuredDocumentation","src":"40361:71:17","text":" @dev Equivalent to `_safeMintSpot(to, tokenId, '')`."},"id":10597,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"40446:13:17","nodeType":"FunctionDefinition","parameters":{"id":10588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10585,"mutability":"mutable","name":"to","nameLocation":"40468:2:17","nodeType":"VariableDeclaration","scope":10597,"src":"40460:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10584,"name":"address","nodeType":"ElementaryTypeName","src":"40460:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10587,"mutability":"mutable","name":"tokenId","nameLocation":"40480:7:17","nodeType":"VariableDeclaration","scope":10597,"src":"40472:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10586,"name":"uint256","nodeType":"ElementaryTypeName","src":"40472:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40459:29:17"},"returnParameters":{"id":10589,"nodeType":"ParameterList","parameters":[],"src":"40506:0:17"},"scope":10949,"src":"40437:116:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10611,"nodeType":"Block","src":"40885:45:17","statements":[{"expression":{"arguments":[{"id":10606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"40904:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10602,"src":"40908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"40917:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10605,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10612,10662],"referencedDeclaration":10662,"src":"40895:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":10609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40895:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10610,"nodeType":"ExpressionStatement","src":"40895:28:17"}]},"documentation":{"id":10598,"nodeType":"StructuredDocumentation","src":"40747:69:17","text":" @dev Equivalent to `_approve(to, tokenId, false)`."},"id":10612,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"40830:8:17","nodeType":"FunctionDefinition","parameters":{"id":10603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10600,"mutability":"mutable","name":"to","nameLocation":"40847:2:17","nodeType":"VariableDeclaration","scope":10612,"src":"40839:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10599,"name":"address","nodeType":"ElementaryTypeName","src":"40839:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10602,"mutability":"mutable","name":"tokenId","nameLocation":"40859:7:17","nodeType":"VariableDeclaration","scope":10612,"src":"40851:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10601,"name":"uint256","nodeType":"ElementaryTypeName","src":"40851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40838:29:17"},"returnParameters":{"id":10604,"nodeType":"ParameterList","parameters":[],"src":"40885:0:17"},"scope":10949,"src":"40821:109:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10661,"nodeType":"Block","src":"41447:346:17","statements":[{"assignments":[10623],"declarations":[{"constant":false,"id":10623,"mutability":"mutable","name":"owner","nameLocation":"41465:5:17","nodeType":"VariableDeclaration","scope":10661,"src":"41457:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10622,"name":"address","nodeType":"ElementaryTypeName","src":"41457:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10627,"initialValue":{"arguments":[{"id":10625,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"41481:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10624,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"41473:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41473:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"41457:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10628,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10619,"src":"41504:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10629,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"41521:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41521:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10631,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"41544:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41521:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41504:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10647,"nodeType":"IfStatement","src":"41500:198:17","trueBody":{"condition":{"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"41567:45:17","subExpression":{"arguments":[{"id":10635,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"41585:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10636,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"41592:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41592:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10634,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"41568:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41568:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10646,"nodeType":"IfStatement","src":"41563:135:17","trueBody":{"id":10645,"nodeType":"Block","src":"41614:84:17","statements":[{"expression":{"arguments":[{"expression":{"id":10641,"name":"ApprovalCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10955,"src":"41640:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41674:8:17","memberName":"selector","nodeType":"MemberAccess","src":"41640:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10640,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"41632:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41632:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10644,"nodeType":"ExpressionStatement","src":"41632:51:17"}]}}},{"expression":{"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":10648,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"41708:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8873_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":10650,"indexExpression":{"id":10649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"41724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41708:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8873_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":10651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"41733:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":8872,"src":"41708:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10615,"src":"41741:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41708:35:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10654,"nodeType":"ExpressionStatement","src":"41708:35:17"},{"eventCall":{"arguments":[{"id":10656,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"41767:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10615,"src":"41774:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"41778:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10655,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11047,"src":"41758:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41758:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10660,"nodeType":"EmitStatement","src":"41753:33:17"}]},"documentation":{"id":10613,"nodeType":"StructuredDocumentation","src":"40936:392:17","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."},"id":10662,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"41342:8:17","nodeType":"FunctionDefinition","parameters":{"id":10620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10615,"mutability":"mutable","name":"to","nameLocation":"41368:2:17","nodeType":"VariableDeclaration","scope":10662,"src":"41360:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10614,"name":"address","nodeType":"ElementaryTypeName","src":"41360:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10617,"mutability":"mutable","name":"tokenId","nameLocation":"41388:7:17","nodeType":"VariableDeclaration","scope":10662,"src":"41380:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10616,"name":"uint256","nodeType":"ElementaryTypeName","src":"41380:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10619,"mutability":"mutable","name":"approvalCheck","nameLocation":"41410:13:17","nodeType":"VariableDeclaration","scope":10662,"src":"41405:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10618,"name":"bool","nodeType":"ElementaryTypeName","src":"41405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41350:79:17"},"returnParameters":{"id":10621,"nodeType":"ParameterList","parameters":[],"src":"41447:0:17"},"scope":10949,"src":"41333:460:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10673,"nodeType":"Block","src":"42100:38:17","statements":[{"expression":{"arguments":[{"id":10669,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10665,"src":"42116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"42125:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10668,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[10674,10828],"referencedDeclaration":10828,"src":"42110:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":10671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42110:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10672,"nodeType":"ExpressionStatement","src":"42110:21:17"}]},"documentation":{"id":10663,"nodeType":"StructuredDocumentation","src":"41984:62:17","text":" @dev Equivalent to `_burn(tokenId, false)`."},"id":10674,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42060:5:17","nodeType":"FunctionDefinition","parameters":{"id":10666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10665,"mutability":"mutable","name":"tokenId","nameLocation":"42074:7:17","nodeType":"VariableDeclaration","scope":10674,"src":"42066:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10664,"name":"uint256","nodeType":"ElementaryTypeName","src":"42066:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42065:17:17"},"returnParameters":{"id":10667,"nodeType":"ParameterList","parameters":[],"src":"42100:0:17"},"scope":10949,"src":"42051:87:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10827,"nodeType":"Block","src":"42424:2973:17","statements":[{"assignments":[10683],"declarations":[{"constant":false,"id":10683,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"42442:19:17","nodeType":"VariableDeclaration","scope":10827,"src":"42434:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10682,"name":"uint256","nodeType":"ElementaryTypeName","src":"42434:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10687,"initialValue":{"arguments":[{"id":10685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"42483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10684,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9505,"src":"42464:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":10686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42464:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"42434:57:17"},{"assignments":[10689],"declarations":[{"constant":false,"id":10689,"mutability":"mutable","name":"from","nameLocation":"42510:4:17","nodeType":"VariableDeclaration","scope":10827,"src":"42502:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10688,"name":"address","nodeType":"ElementaryTypeName","src":"42502:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10697,"initialValue":{"arguments":[{"arguments":[{"id":10694,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10683,"src":"42533:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42525:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10692,"name":"uint160","nodeType":"ElementaryTypeName","src":"42525:7:17","typeDescriptions":{}}},"id":10695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42525:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42517:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10690,"name":"address","nodeType":"ElementaryTypeName","src":"42517:7:17","typeDescriptions":{}}},"id":10696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42517:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"42502:52:17"},{"assignments":[10699,10701],"declarations":[{"constant":false,"id":10699,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"42574:19:17","nodeType":"VariableDeclaration","scope":10827,"src":"42566:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10698,"name":"uint256","nodeType":"ElementaryTypeName","src":"42566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10701,"mutability":"mutable","name":"approvedAddress","nameLocation":"42603:15:17","nodeType":"VariableDeclaration","scope":10827,"src":"42595:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10700,"name":"address","nodeType":"ElementaryTypeName","src":"42595:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10705,"initialValue":{"arguments":[{"id":10703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"42649:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10702,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"42622:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":10704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42622:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"42565:92:17"},{"condition":{"id":10706,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10679,"src":"42672:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10728,"nodeType":"IfStatement","src":"42668:321:17","trueBody":{"id":10727,"nodeType":"Block","src":"42687:302:17","statements":[{"condition":{"id":10713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42790:69:17","subExpression":{"arguments":[{"id":10708,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10701,"src":"42816:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"42833:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10710,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"42839:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42839:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10707,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9744,"src":"42791:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":10712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42791:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10726,"nodeType":"IfStatement","src":"42786:192:17","trueBody":{"condition":{"id":10719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42881:44:17","subExpression":{"arguments":[{"id":10715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"42899:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10716,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10930,"src":"42905:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42905:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10714,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"42882:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42882:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10725,"nodeType":"IfStatement","src":"42877:101:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10721,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10973,"src":"42935:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42969:8:17","memberName":"selector","nodeType":"MemberAccess","src":"42935:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10720,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"42927:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42927:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10724,"nodeType":"ExpressionStatement","src":"42927:51:17"}}}]}},{"expression":{"arguments":[{"id":10730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"43021:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43035:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43027:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10731,"name":"address","nodeType":"ElementaryTypeName","src":"43027:7:17","typeDescriptions":{}}},"id":10734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43027:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"43039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10729,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"42999:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42999:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10738,"nodeType":"ExpressionStatement","src":"42999:51:17"},{"AST":{"nativeSrc":"43122:181:17","nodeType":"YulBlock","src":"43122:181:17","statements":[{"body":{"nativeSrc":"43155:138:17","nodeType":"YulBlock","src":"43155:138:17","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"43256:19:17","nodeType":"YulIdentifier","src":"43256:19:17"},{"kind":"number","nativeSrc":"43277:1:17","nodeType":"YulLiteral","src":"43277:1:17","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"43249:6:17","nodeType":"YulIdentifier","src":"43249:6:17"},"nativeSrc":"43249:30:17","nodeType":"YulFunctionCall","src":"43249:30:17"},"nativeSrc":"43249:30:17","nodeType":"YulExpressionStatement","src":"43249:30:17"}]},"condition":{"name":"approvedAddress","nativeSrc":"43139:15:17","nodeType":"YulIdentifier","src":"43139:15:17"},"nativeSrc":"43136:157:17","nodeType":"YulIf","src":"43136:157:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10701,"isOffset":false,"isSlot":false,"src":"43139:15:17","valueSize":1},{"declaration":10699,"isOffset":false,"isSlot":false,"src":"43256:19:17","valueSize":1}],"id":10739,"nodeType":"InlineAssembly","src":"43113:190:17"},{"id":10803,"nodeType":"UncheckedBlock","src":"43570:1545:17","statements":[{"expression":{"id":10749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10740,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"43882:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10742,"indexExpression":{"id":10741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"43901:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43882:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43911:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10744,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"43916:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43911:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"43910:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43941:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"43910:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43882:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10750,"nodeType":"ExpressionStatement","src":"43882:60:17"},{"expression":{"id":10770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10751,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"44173:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10753,"indexExpression":{"id":10752,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"44191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44173:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"44238:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":10756,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"44261:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":10757,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"44279:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44261:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"44260:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":10761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"44323:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44337:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44329:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10762,"name":"address","nodeType":"ElementaryTypeName","src":"44329:7:17","typeDescriptions":{}}},"id":10765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44329:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10766,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10683,"src":"44341:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10760,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10920,"src":"44308:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44308:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44260:101:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10754,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"44202:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44202:173:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44173:202:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10771,"nodeType":"ExpressionStatement","src":"44173:202:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10772,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10683,"src":"44492:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10773,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"44514:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44492:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44543:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44492:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10802,"nodeType":"IfStatement","src":"44488:617:17","trueBody":{"id":10801,"nodeType":"Block","src":"44546:559:17","statements":[{"assignments":[10778],"declarations":[{"constant":false,"id":10778,"mutability":"mutable","name":"nextTokenId","nameLocation":"44572:11:17","nodeType":"VariableDeclaration","scope":10801,"src":"44564:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10777,"name":"uint256","nodeType":"ElementaryTypeName","src":"44564:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10782,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"44586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"44586:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"44564:33:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10783,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"44717:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10785,"indexExpression":{"id":10784,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"44735:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"44717:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44751:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44717:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10800,"nodeType":"IfStatement","src":"44713:378:17","trueBody":{"id":10799,"nodeType":"Block","src":"44754:337:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10788,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"44838:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10789,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"44853:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44838:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10798,"nodeType":"IfStatement","src":"44834:239:17","trueBody":{"id":10797,"nodeType":"Block","src":"44868:205:17","statements":[{"expression":{"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10791,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"44998:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10793,"indexExpression":{"id":10792,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"45016:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44998:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10794,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10683,"src":"45031:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44998:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10796,"nodeType":"ExpressionStatement","src":"44998:52:17"}]}}]}}]}}]},{"eventCall":{"arguments":[{"id":10805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"45139:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45145:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10806,"name":"address","nodeType":"ElementaryTypeName","src":"45145:7:17","typeDescriptions":{}}},"id":10809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45145:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"45157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10804,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11038,"src":"45130:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45130:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10812,"nodeType":"EmitStatement","src":"45125:40:17"},{"expression":{"arguments":[{"id":10814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10689,"src":"45196:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45210:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45202:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10815,"name":"address","nodeType":"ElementaryTypeName","src":"45202:7:17","typeDescriptions":{}}},"id":10818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45202:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10677,"src":"45214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45223:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10813,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10021,"src":"45175:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45175:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10822,"nodeType":"ExpressionStatement","src":"45175:50:17"},{"id":10826,"nodeType":"UncheckedBlock","src":"45342:49:17","statements":[{"expression":{"id":10824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"45366:14:17","subExpression":{"id":10823,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"45366:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10825,"nodeType":"ExpressionStatement","src":"45366:14:17"}]}]},"documentation":{"id":10675,"nodeType":"StructuredDocumentation","src":"42144:206:17","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":10828,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42364:5:17","nodeType":"FunctionDefinition","parameters":{"id":10680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10677,"mutability":"mutable","name":"tokenId","nameLocation":"42378:7:17","nodeType":"VariableDeclaration","scope":10828,"src":"42370:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10676,"name":"uint256","nodeType":"ElementaryTypeName","src":"42370:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10679,"mutability":"mutable","name":"approvalCheck","nameLocation":"42392:13:17","nodeType":"VariableDeclaration","scope":10828,"src":"42387:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10678,"name":"bool","nodeType":"ElementaryTypeName","src":"42387:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42369:37:17"},"returnParameters":{"id":10681,"nodeType":"ParameterList","parameters":[],"src":"42424:0:17"},"scope":10949,"src":"42355:3042:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10873,"nodeType":"Block","src":"45755:456:17","statements":[{"assignments":[10837],"declarations":[{"constant":false,"id":10837,"mutability":"mutable","name":"packed","nameLocation":"45773:6:17","nodeType":"VariableDeclaration","scope":10873,"src":"45765:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10836,"name":"uint256","nodeType":"ElementaryTypeName","src":"45765:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10841,"initialValue":{"baseExpression":{"id":10838,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"45782:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10840,"indexExpression":{"id":10839,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10831,"src":"45800:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45782:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"45765:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10842,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10837,"src":"45820:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45830:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45820:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10850,"nodeType":"IfStatement","src":"45816:70:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10846,"name":"OwnershipNotInitializedForExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10991,"src":"45841:35:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45877:8:17","memberName":"selector","nodeType":"MemberAccess","src":"45841:44:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10845,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"45833:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45833:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10849,"nodeType":"ExpressionStatement","src":"45833:53:17"}},{"assignments":[10852],"declarations":[{"constant":false,"id":10852,"mutability":"mutable","name":"extraDataCasted","nameLocation":"45904:15:17","nodeType":"VariableDeclaration","scope":10873,"src":"45896:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10851,"name":"uint256","nodeType":"ElementaryTypeName","src":"45896:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10853,"nodeType":"VariableDeclarationStatement","src":"45896:23:17"},{"AST":{"nativeSrc":"46008:52:17","nodeType":"YulBlock","src":"46008:52:17","statements":[{"nativeSrc":"46022:28:17","nodeType":"YulAssignment","src":"46022:28:17","value":{"name":"extraData","nativeSrc":"46041:9:17","nodeType":"YulIdentifier","src":"46041:9:17"},"variableNames":[{"name":"extraDataCasted","nativeSrc":"46022:15:17","nodeType":"YulIdentifier","src":"46022:15:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10833,"isOffset":false,"isSlot":false,"src":"46041:9:17","valueSize":1},{"declaration":10852,"isOffset":false,"isSlot":false,"src":"46022:15:17","valueSize":1}],"id":10854,"nodeType":"InlineAssembly","src":"45999:61:17"},{"expression":{"id":10865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10855,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10837,"src":"46069:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10856,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10837,"src":"46079:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10857,"name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"46088:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46079:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46078:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10860,"name":"extraDataCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10852,"src":"46123:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10861,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"46142:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46123:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46122:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46078:83:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46069:92:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10866,"nodeType":"ExpressionStatement","src":"46069:92:17"},{"expression":{"id":10871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10867,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"46171:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10869,"indexExpression":{"id":10868,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10831,"src":"46189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"46171:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10870,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10837,"src":"46198:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46171:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10872,"nodeType":"ExpressionStatement","src":"46171:33:17"}]},"documentation":{"id":10829,"nodeType":"StructuredDocumentation","src":"45591:84:17","text":" @dev Directly sets the extra data for the ownership data `index`."},"id":10874,"implemented":true,"kind":"function","modifiers":[],"name":"_setExtraDataAt","nameLocation":"45689:15:17","nodeType":"FunctionDefinition","parameters":{"id":10834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10831,"mutability":"mutable","name":"index","nameLocation":"45713:5:17","nodeType":"VariableDeclaration","scope":10874,"src":"45705:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10830,"name":"uint256","nodeType":"ElementaryTypeName","src":"45705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10833,"mutability":"mutable","name":"extraData","nameLocation":"45727:9:17","nodeType":"VariableDeclaration","scope":10874,"src":"45720:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10832,"name":"uint24","nodeType":"ElementaryTypeName","src":"45720:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"45704:33:17"},"returnParameters":{"id":10835,"nodeType":"ParameterList","parameters":[],"src":"45755:0:17"},"scope":10949,"src":"45680:531:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10886,"nodeType":"Block","src":"46912:2:17","statements":[]},"documentation":{"id":10875,"nodeType":"StructuredDocumentation","src":"46217:549:17","text":" @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":10887,"implemented":true,"kind":"function","modifiers":[],"name":"_extraData","nameLocation":"46780:10:17","nodeType":"FunctionDefinition","parameters":{"id":10882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10877,"mutability":"mutable","name":"from","nameLocation":"46808:4:17","nodeType":"VariableDeclaration","scope":10887,"src":"46800:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10876,"name":"address","nodeType":"ElementaryTypeName","src":"46800:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10879,"mutability":"mutable","name":"to","nameLocation":"46830:2:17","nodeType":"VariableDeclaration","scope":10887,"src":"46822:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10878,"name":"address","nodeType":"ElementaryTypeName","src":"46822:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10881,"mutability":"mutable","name":"previousExtraData","nameLocation":"46849:17:17","nodeType":"VariableDeclaration","scope":10887,"src":"46842:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10880,"name":"uint24","nodeType":"ElementaryTypeName","src":"46842:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46790:82:17"},"returnParameters":{"id":10885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10887,"src":"46904:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10883,"name":"uint24","nodeType":"ElementaryTypeName","src":"46904:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46903:8:17"},"scope":10949,"src":"46771:143:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":10919,"nodeType":"Block","src":"47200:164:17","statements":[{"assignments":[10900],"declarations":[{"constant":false,"id":10900,"mutability":"mutable","name":"extraData","nameLocation":"47217:9:17","nodeType":"VariableDeclaration","scope":10919,"src":"47210:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10899,"name":"uint24","nodeType":"ElementaryTypeName","src":"47210:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":10907,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10903,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10894,"src":"47236:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":10904,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"47259:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47236:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47229:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":10901,"name":"uint24","nodeType":"ElementaryTypeName","src":"47229:6:17","typeDescriptions":{}}},"id":10906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47229:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"47210:68:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10911,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10890,"src":"47314:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10892,"src":"47320:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10913,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10900,"src":"47324:9:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":10910,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"47303:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$","typeString":"function (address,address,uint24) view returns (uint24)"}},"id":10914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47303:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":10909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47295:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10908,"name":"uint256","nodeType":"ElementaryTypeName","src":"47295:7:17","typeDescriptions":{}}},"id":10915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47295:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10916,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"47339:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47295:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10898,"id":10918,"nodeType":"Return","src":"47288:69:17"}]},"documentation":{"id":10888,"nodeType":"StructuredDocumentation","src":"46920:135:17","text":" @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."},"id":10920,"implemented":true,"kind":"function","modifiers":[],"name":"_nextExtraData","nameLocation":"47069:14:17","nodeType":"FunctionDefinition","parameters":{"id":10895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10890,"mutability":"mutable","name":"from","nameLocation":"47101:4:17","nodeType":"VariableDeclaration","scope":10920,"src":"47093:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10889,"name":"address","nodeType":"ElementaryTypeName","src":"47093:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10892,"mutability":"mutable","name":"to","nameLocation":"47123:2:17","nodeType":"VariableDeclaration","scope":10920,"src":"47115:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10891,"name":"address","nodeType":"ElementaryTypeName","src":"47115:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10894,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"47143:19:17","nodeType":"VariableDeclaration","scope":10920,"src":"47135:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10893,"name":"uint256","nodeType":"ElementaryTypeName","src":"47135:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47083:85:17"},"returnParameters":{"id":10898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10920,"src":"47191:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10896,"name":"uint256","nodeType":"ElementaryTypeName","src":"47191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47190:9:17"},"scope":10949,"src":"47060:304:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10929,"nodeType":"Block","src":"47802:34:17","statements":[{"expression":{"expression":{"id":10926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"47819:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47823:6:17","memberName":"sender","nodeType":"MemberAccess","src":"47819:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10925,"id":10928,"nodeType":"Return","src":"47812:17:17"}]},"documentation":{"id":10921,"nodeType":"StructuredDocumentation","src":"47555:173:17","text":" @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."},"id":10930,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSenderERC721A","nameLocation":"47742:17:17","nodeType":"FunctionDefinition","parameters":{"id":10922,"nodeType":"ParameterList","parameters":[],"src":"47759:2:17"},"returnParameters":{"id":10925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10930,"src":"47793:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10923,"name":"address","nodeType":"ElementaryTypeName","src":"47793:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47792:9:17"},"scope":10949,"src":"47733:103:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":10939,"nodeType":"Block","src":"48017:1624:17","statements":[{"AST":{"nativeSrc":"48036:1599:17","nodeType":"YulBlock","src":"48036:1599:17","statements":[{"nativeSrc":"48400:31:17","nodeType":"YulVariableDeclaration","src":"48400:31:17","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"48419:4:17","nodeType":"YulLiteral","src":"48419:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"48413:5:17","nodeType":"YulIdentifier","src":"48413:5:17"},"nativeSrc":"48413:11:17","nodeType":"YulFunctionCall","src":"48413:11:17"},{"kind":"number","nativeSrc":"48426:4:17","nodeType":"YulLiteral","src":"48426:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"48409:3:17","nodeType":"YulIdentifier","src":"48409:3:17"},"nativeSrc":"48409:22:17","nodeType":"YulFunctionCall","src":"48409:22:17"},"variables":[{"name":"m","nativeSrc":"48404:1:17","nodeType":"YulTypedName","src":"48404:1:17","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"48510:4:17","nodeType":"YulLiteral","src":"48510:4:17","type":"","value":"0x40"},{"name":"m","nativeSrc":"48516:1:17","nodeType":"YulIdentifier","src":"48516:1:17"}],"functionName":{"name":"mstore","nativeSrc":"48503:6:17","nodeType":"YulIdentifier","src":"48503:6:17"},"nativeSrc":"48503:15:17","nodeType":"YulFunctionCall","src":"48503:15:17"},"nativeSrc":"48503:15:17","nodeType":"YulExpressionStatement","src":"48503:15:17"},{"nativeSrc":"48575:19:17","nodeType":"YulAssignment","src":"48575:19:17","value":{"arguments":[{"name":"m","nativeSrc":"48586:1:17","nodeType":"YulIdentifier","src":"48586:1:17"},{"kind":"number","nativeSrc":"48589:4:17","nodeType":"YulLiteral","src":"48589:4:17","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"48582:3:17","nodeType":"YulIdentifier","src":"48582:3:17"},"nativeSrc":"48582:12:17","nodeType":"YulFunctionCall","src":"48582:12:17"},"variableNames":[{"name":"str","nativeSrc":"48575:3:17","nodeType":"YulIdentifier","src":"48575:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"48664:3:17","nodeType":"YulIdentifier","src":"48664:3:17"},{"kind":"number","nativeSrc":"48669:1:17","nodeType":"YulLiteral","src":"48669:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"48657:6:17","nodeType":"YulIdentifier","src":"48657:6:17"},"nativeSrc":"48657:14:17","nodeType":"YulFunctionCall","src":"48657:14:17"},"nativeSrc":"48657:14:17","nodeType":"YulExpressionStatement","src":"48657:14:17"},{"nativeSrc":"48759:14:17","nodeType":"YulVariableDeclaration","src":"48759:14:17","value":{"name":"str","nativeSrc":"48770:3:17","nodeType":"YulIdentifier","src":"48770:3:17"},"variables":[{"name":"end","nativeSrc":"48763:3:17","nodeType":"YulTypedName","src":"48763:3:17","type":""}]},{"body":{"nativeSrc":"49017:388:17","nodeType":"YulBlock","src":"49017:388:17","statements":[{"nativeSrc":"49035:18:17","nodeType":"YulAssignment","src":"49035:18:17","value":{"arguments":[{"name":"str","nativeSrc":"49046:3:17","nodeType":"YulIdentifier","src":"49046:3:17"},{"kind":"number","nativeSrc":"49051:1:17","nodeType":"YulLiteral","src":"49051:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"49042:3:17","nodeType":"YulIdentifier","src":"49042:3:17"},"nativeSrc":"49042:11:17","nodeType":"YulFunctionCall","src":"49042:11:17"},"variableNames":[{"name":"str","nativeSrc":"49035:3:17","nodeType":"YulIdentifier","src":"49035:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49196:3:17","nodeType":"YulIdentifier","src":"49196:3:17"},{"arguments":[{"kind":"number","nativeSrc":"49205:2:17","nodeType":"YulLiteral","src":"49205:2:17","type":"","value":"48"},{"arguments":[{"name":"temp","nativeSrc":"49213:4:17","nodeType":"YulIdentifier","src":"49213:4:17"},{"kind":"number","nativeSrc":"49219:2:17","nodeType":"YulLiteral","src":"49219:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"49209:3:17","nodeType":"YulIdentifier","src":"49209:3:17"},"nativeSrc":"49209:13:17","nodeType":"YulFunctionCall","src":"49209:13:17"}],"functionName":{"name":"add","nativeSrc":"49201:3:17","nodeType":"YulIdentifier","src":"49201:3:17"},"nativeSrc":"49201:22:17","nodeType":"YulFunctionCall","src":"49201:22:17"}],"functionName":{"name":"mstore8","nativeSrc":"49188:7:17","nodeType":"YulIdentifier","src":"49188:7:17"},"nativeSrc":"49188:36:17","nodeType":"YulFunctionCall","src":"49188:36:17"},"nativeSrc":"49188:36:17","nodeType":"YulExpressionStatement","src":"49188:36:17"},{"nativeSrc":"49293:21:17","nodeType":"YulAssignment","src":"49293:21:17","value":{"arguments":[{"name":"temp","nativeSrc":"49305:4:17","nodeType":"YulIdentifier","src":"49305:4:17"},{"kind":"number","nativeSrc":"49311:2:17","nodeType":"YulLiteral","src":"49311:2:17","type":"","value":"10"}],"functionName":{"name":"div","nativeSrc":"49301:3:17","nodeType":"YulIdentifier","src":"49301:3:17"},"nativeSrc":"49301:13:17","nodeType":"YulFunctionCall","src":"49301:13:17"},"variableNames":[{"name":"temp","nativeSrc":"49293:4:17","nodeType":"YulIdentifier","src":"49293:4:17"}]},{"body":{"nativeSrc":"49382:9:17","nodeType":"YulBlock","src":"49382:9:17","statements":[{"nativeSrc":"49384:5:17","nodeType":"YulBreak","src":"49384:5:17"}]},"condition":{"arguments":[{"name":"temp","nativeSrc":"49376:4:17","nodeType":"YulIdentifier","src":"49376:4:17"}],"functionName":{"name":"iszero","nativeSrc":"49369:6:17","nodeType":"YulIdentifier","src":"49369:6:17"},"nativeSrc":"49369:12:17","nodeType":"YulFunctionCall","src":"49369:12:17"},"nativeSrc":"49366:25:17","nodeType":"YulIf","src":"49366:25:17"}]},"condition":{"kind":"number","nativeSrc":"49012:1:17","nodeType":"YulLiteral","src":"49012:1:17","type":"","value":"1"},"nativeSrc":"48986:419:17","nodeType":"YulForLoop","post":{"nativeSrc":"49014:2:17","nodeType":"YulBlock","src":"49014:2:17","statements":[]},"pre":{"nativeSrc":"48990:21:17","nodeType":"YulBlock","src":"48990:21:17","statements":[{"nativeSrc":"48992:17:17","nodeType":"YulVariableDeclaration","src":"48992:17:17","value":{"name":"value","nativeSrc":"49004:5:17","nodeType":"YulIdentifier","src":"49004:5:17"},"variables":[{"name":"temp","nativeSrc":"48996:4:17","nodeType":"YulTypedName","src":"48996:4:17","type":""}]}]},"src":"48986:419:17"},{"nativeSrc":"49419:27:17","nodeType":"YulVariableDeclaration","src":"49419:27:17","value":{"arguments":[{"name":"end","nativeSrc":"49437:3:17","nodeType":"YulIdentifier","src":"49437:3:17"},{"name":"str","nativeSrc":"49442:3:17","nodeType":"YulIdentifier","src":"49442:3:17"}],"functionName":{"name":"sub","nativeSrc":"49433:3:17","nodeType":"YulIdentifier","src":"49433:3:17"},"nativeSrc":"49433:13:17","nodeType":"YulFunctionCall","src":"49433:13:17"},"variables":[{"name":"length","nativeSrc":"49423:6:17","nodeType":"YulTypedName","src":"49423:6:17","type":""}]},{"nativeSrc":"49539:21:17","nodeType":"YulAssignment","src":"49539:21:17","value":{"arguments":[{"name":"str","nativeSrc":"49550:3:17","nodeType":"YulIdentifier","src":"49550:3:17"},{"kind":"number","nativeSrc":"49555:4:17","nodeType":"YulLiteral","src":"49555:4:17","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"49546:3:17","nodeType":"YulIdentifier","src":"49546:3:17"},"nativeSrc":"49546:14:17","nodeType":"YulFunctionCall","src":"49546:14:17"},"variableNames":[{"name":"str","nativeSrc":"49539:3:17","nodeType":"YulIdentifier","src":"49539:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49613:3:17","nodeType":"YulIdentifier","src":"49613:3:17"},{"name":"length","nativeSrc":"49618:6:17","nodeType":"YulIdentifier","src":"49618:6:17"}],"functionName":{"name":"mstore","nativeSrc":"49606:6:17","nodeType":"YulIdentifier","src":"49606:6:17"},"nativeSrc":"49606:19:17","nodeType":"YulFunctionCall","src":"49606:19:17"},"nativeSrc":"49606:19:17","nodeType":"YulExpressionStatement","src":"49606:19:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10936,"isOffset":false,"isSlot":false,"src":"48575:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"48664:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"48770:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49035:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49046:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49196:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49442:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49539:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49550:3:17","valueSize":1},{"declaration":10936,"isOffset":false,"isSlot":false,"src":"49613:3:17","valueSize":1},{"declaration":10933,"isOffset":false,"isSlot":false,"src":"49004:5:17","valueSize":1}],"id":10938,"nodeType":"InlineAssembly","src":"48027:1608:17"}]},"documentation":{"id":10931,"nodeType":"StructuredDocumentation","src":"47842:86:17","text":" @dev Converts a uint256 to its ASCII string decimal representation."},"id":10940,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"47942:9:17","nodeType":"FunctionDefinition","parameters":{"id":10934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10933,"mutability":"mutable","name":"value","nameLocation":"47960:5:17","nodeType":"VariableDeclaration","scope":10940,"src":"47952:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10932,"name":"uint256","nodeType":"ElementaryTypeName","src":"47952:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47951:15:17"},"returnParameters":{"id":10937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10936,"mutability":"mutable","name":"str","nameLocation":"48012:3:17","nodeType":"VariableDeclaration","scope":10940,"src":"47998:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10935,"name":"string","nodeType":"ElementaryTypeName","src":"47998:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47997:19:17"},"scope":10949,"src":"47933:1708:17","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":10947,"nodeType":"Block","src":"49756:107:17","statements":[{"AST":{"nativeSrc":"49775:82:17","nodeType":"YulBlock","src":"49775:82:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"49796:4:17","nodeType":"YulLiteral","src":"49796:4:17","type":"","value":"0x00"},{"name":"errorSelector","nativeSrc":"49802:13:17","nodeType":"YulIdentifier","src":"49802:13:17"}],"functionName":{"name":"mstore","nativeSrc":"49789:6:17","nodeType":"YulIdentifier","src":"49789:6:17"},"nativeSrc":"49789:27:17","nodeType":"YulFunctionCall","src":"49789:27:17"},"nativeSrc":"49789:27:17","nodeType":"YulExpressionStatement","src":"49789:27:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"49836:4:17","nodeType":"YulLiteral","src":"49836:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"49842:4:17","nodeType":"YulLiteral","src":"49842:4:17","type":"","value":"0x04"}],"functionName":{"name":"revert","nativeSrc":"49829:6:17","nodeType":"YulIdentifier","src":"49829:6:17"},"nativeSrc":"49829:18:17","nodeType":"YulFunctionCall","src":"49829:18:17"},"nativeSrc":"49829:18:17","nodeType":"YulExpressionStatement","src":"49829:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10943,"isOffset":false,"isSlot":false,"src":"49802:13:17","valueSize":1}],"id":10946,"nodeType":"InlineAssembly","src":"49766:91:17"}]},"documentation":{"id":10941,"nodeType":"StructuredDocumentation","src":"49647:51:17","text":" @dev For more efficient reverts."},"id":10948,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"49712:7:17","nodeType":"FunctionDefinition","parameters":{"id":10944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10943,"mutability":"mutable","name":"errorSelector","nameLocation":"49727:13:17","nodeType":"VariableDeclaration","scope":10948,"src":"49720:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10942,"name":"bytes4","nodeType":"ElementaryTypeName","src":"49720:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"49719:22:17"},"returnParameters":{"id":10945,"nodeType":"ParameterList","parameters":[],"src":"49756:0:17"},"scope":10949,"src":"49703:160:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10950,"src":"1053:48812:17","usedErrors":[10955,10958,10961,10964,10967,10970,10973,10976,10979,10982,10985,10988,10991,10994,10997,11000,11003,11006],"usedEvents":[11038,11047,11056,11169]}],"src":"84:49782:17"},"id":17},"erc721a/contracts/IERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/IERC721A.sol","exportedSymbols":{"IERC721A":[11170]},"id":11171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10951,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721A","contractDependencies":[],"contractKind":"interface","documentation":{"id":10952,"nodeType":"StructuredDocumentation","src":"109:37:18","text":" @dev Interface of ERC721A."},"fullyImplemented":false,"id":11170,"linearizedBaseContracts":[11170],"name":"IERC721A","nameLocation":"157:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":10953,"nodeType":"StructuredDocumentation","src":"172:76:18","text":" The caller must own the token or be an approved operator."},"errorSelector":"cfb3b942","id":10955,"name":"ApprovalCallerNotOwnerNorApproved","nameLocation":"259:33:18","nodeType":"ErrorDefinition","parameters":{"id":10954,"nodeType":"ParameterList","parameters":[],"src":"292:2:18"},"src":"253:42:18"},{"documentation":{"id":10956,"nodeType":"StructuredDocumentation","src":"301:44:18","text":" The token does not exist."},"errorSelector":"cf4700e4","id":10958,"name":"ApprovalQueryForNonexistentToken","nameLocation":"356:32:18","nodeType":"ErrorDefinition","parameters":{"id":10957,"nodeType":"ParameterList","parameters":[],"src":"388:2:18"},"src":"350:41:18"},{"documentation":{"id":10959,"nodeType":"StructuredDocumentation","src":"397:65:18","text":" Cannot query the balance for the zero address."},"errorSelector":"8f4eb604","id":10961,"name":"BalanceQueryForZeroAddress","nameLocation":"473:26:18","nodeType":"ErrorDefinition","parameters":{"id":10960,"nodeType":"ParameterList","parameters":[],"src":"499:2:18"},"src":"467:35:18"},{"documentation":{"id":10962,"nodeType":"StructuredDocumentation","src":"508:51:18","text":" Cannot mint to the zero address."},"errorSelector":"2e076300","id":10964,"name":"MintToZeroAddress","nameLocation":"570:17:18","nodeType":"ErrorDefinition","parameters":{"id":10963,"nodeType":"ParameterList","parameters":[],"src":"587:2:18"},"src":"564:26:18"},{"documentation":{"id":10965,"nodeType":"StructuredDocumentation","src":"596:72:18","text":" The quantity of tokens minted must be more than zero."},"errorSelector":"b562e8dd","id":10967,"name":"MintZeroQuantity","nameLocation":"679:16:18","nodeType":"ErrorDefinition","parameters":{"id":10966,"nodeType":"ParameterList","parameters":[],"src":"695:2:18"},"src":"673:25:18"},{"documentation":{"id":10968,"nodeType":"StructuredDocumentation","src":"704:44:18","text":" The token does not exist."},"errorSelector":"df2d9b42","id":10970,"name":"OwnerQueryForNonexistentToken","nameLocation":"759:29:18","nodeType":"ErrorDefinition","parameters":{"id":10969,"nodeType":"ParameterList","parameters":[],"src":"788:2:18"},"src":"753:38:18"},{"documentation":{"id":10971,"nodeType":"StructuredDocumentation","src":"797:76:18","text":" The caller must own the token or be an approved operator."},"errorSelector":"59c896be","id":10973,"name":"TransferCallerNotOwnerNorApproved","nameLocation":"884:33:18","nodeType":"ErrorDefinition","parameters":{"id":10972,"nodeType":"ParameterList","parameters":[],"src":"917:2:18"},"src":"878:42:18"},{"documentation":{"id":10974,"nodeType":"StructuredDocumentation","src":"926:53:18","text":" The token must be owned by `from`."},"errorSelector":"a1148100","id":10976,"name":"TransferFromIncorrectOwner","nameLocation":"990:26:18","nodeType":"ErrorDefinition","parameters":{"id":10975,"nodeType":"ParameterList","parameters":[],"src":"1016:2:18"},"src":"984:35:18"},{"documentation":{"id":10977,"nodeType":"StructuredDocumentation","src":"1025:116:18","text":" Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."},"errorSelector":"d1a57ed6","id":10979,"name":"TransferToNonERC721ReceiverImplementer","nameLocation":"1152:38:18","nodeType":"ErrorDefinition","parameters":{"id":10978,"nodeType":"ParameterList","parameters":[],"src":"1190:2:18"},"src":"1146:47:18"},{"documentation":{"id":10980,"nodeType":"StructuredDocumentation","src":"1199:55:18","text":" Cannot transfer to the zero address."},"errorSelector":"ea553b34","id":10982,"name":"TransferToZeroAddress","nameLocation":"1265:21:18","nodeType":"ErrorDefinition","parameters":{"id":10981,"nodeType":"ParameterList","parameters":[],"src":"1286:2:18"},"src":"1259:30:18"},{"documentation":{"id":10983,"nodeType":"StructuredDocumentation","src":"1295:44:18","text":" The token does not exist."},"errorSelector":"a14c4b50","id":10985,"name":"URIQueryForNonexistentToken","nameLocation":"1350:27:18","nodeType":"ErrorDefinition","parameters":{"id":10984,"nodeType":"ParameterList","parameters":[],"src":"1377:2:18"},"src":"1344:36:18"},{"documentation":{"id":10986,"nodeType":"StructuredDocumentation","src":"1386:79:18","text":" The `quantity` minted with ERC2309 exceeds the safety limit."},"errorSelector":"3db1f9af","id":10988,"name":"MintERC2309QuantityExceedsLimit","nameLocation":"1476:31:18","nodeType":"ErrorDefinition","parameters":{"id":10987,"nodeType":"ParameterList","parameters":[],"src":"1507:2:18"},"src":"1470:40:18"},{"documentation":{"id":10989,"nodeType":"StructuredDocumentation","src":"1516:83:18","text":" The `extraData` cannot be set on an unintialized ownership slot."},"errorSelector":"00d58153","id":10991,"name":"OwnershipNotInitializedForExtraData","nameLocation":"1610:35:18","nodeType":"ErrorDefinition","parameters":{"id":10990,"nodeType":"ParameterList","parameters":[],"src":"1645:2:18"},"src":"1604:44:18"},{"documentation":{"id":10992,"nodeType":"StructuredDocumentation","src":"1654:78:18","text":" `_sequentialUpTo()` must be greater than `_startTokenId()`."},"errorSelector":"fed8210f","id":10994,"name":"SequentialUpToTooSmall","nameLocation":"1743:22:18","nodeType":"ErrorDefinition","parameters":{"id":10993,"nodeType":"ParameterList","parameters":[],"src":"1765:2:18"},"src":"1737:31:18"},{"documentation":{"id":10995,"nodeType":"StructuredDocumentation","src":"1774:82:18","text":" The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."},"errorSelector":"81647e3a","id":10997,"name":"SequentialMintExceedsLimit","nameLocation":"1867:26:18","nodeType":"ErrorDefinition","parameters":{"id":10996,"nodeType":"ParameterList","parameters":[],"src":"1893:2:18"},"src":"1861:35:18"},{"documentation":{"id":10998,"nodeType":"StructuredDocumentation","src":"1902:86:18","text":" Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."},"errorSelector":"524a12cc","id":11000,"name":"SpotMintTokenIdTooSmall","nameLocation":"1999:23:18","nodeType":"ErrorDefinition","parameters":{"id":10999,"nodeType":"ParameterList","parameters":[],"src":"2022:2:18"},"src":"1993:32:18"},{"documentation":{"id":11001,"nodeType":"StructuredDocumentation","src":"2031:64:18","text":" Cannot mint over a token that already exists."},"errorSelector":"c991cbb1","id":11003,"name":"TokenAlreadyExists","nameLocation":"2106:18:18","nodeType":"ErrorDefinition","parameters":{"id":11002,"nodeType":"ParameterList","parameters":[],"src":"2124:2:18"},"src":"2100:27:18"},{"documentation":{"id":11004,"nodeType":"StructuredDocumentation","src":"2133:65:18","text":" The feature is not compatible with spot mints."},"errorSelector":"bdba09d7","id":11006,"name":"NotCompatibleWithSpotMints","nameLocation":"2209:26:18","nodeType":"ErrorDefinition","parameters":{"id":11005,"nodeType":"ParameterList","parameters":[],"src":"2235:2:18"},"src":"2203:35:18"},{"canonicalName":"IERC721A.TokenOwnership","id":11015,"members":[{"constant":false,"id":11008,"mutability":"mutable","name":"addr","nameLocation":"2502:4:18","nodeType":"VariableDeclaration","scope":11015,"src":"2494:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11007,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11010,"mutability":"mutable","name":"startTimestamp","nameLocation":"2607:14:18","nodeType":"VariableDeclaration","scope":11015,"src":"2600:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11009,"name":"uint64","nodeType":"ElementaryTypeName","src":"2600:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11012,"mutability":"mutable","name":"burned","nameLocation":"2682:6:18","nodeType":"VariableDeclaration","scope":11015,"src":"2677:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11011,"name":"bool","nodeType":"ElementaryTypeName","src":"2677:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11014,"mutability":"mutable","name":"extraData","nameLocation":"2793:9:18","nodeType":"VariableDeclaration","scope":11015,"src":"2786:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11013,"name":"uint24","nodeType":"ElementaryTypeName","src":"2786:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"TokenOwnership","nameLocation":"2432:14:18","nodeType":"StructDefinition","scope":11170,"src":"2425:384:18","visibility":"public"},{"documentation":{"id":11016,"nodeType":"StructuredDocumentation","src":"3000:192:18","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":11021,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3206:11:18","nodeType":"FunctionDefinition","parameters":{"id":11017,"nodeType":"ParameterList","parameters":[],"src":"3217:2:18"},"returnParameters":{"id":11020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11021,"src":"3243:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3242:9:18"},"scope":11170,"src":"3197:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11022,"nodeType":"StructuredDocumentation","src":"3439:341:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":11029,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3794:17:18","nodeType":"FunctionDefinition","parameters":{"id":11025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11024,"mutability":"mutable","name":"interfaceId","nameLocation":"3819:11:18","nodeType":"VariableDeclaration","scope":11029,"src":"3812:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":11023,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3812:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3811:20:18"},"returnParameters":{"id":11028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11029,"src":"3855:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11026,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:18"},"scope":11170,"src":"3785:76:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":11030,"nodeType":"StructuredDocumentation","src":"4048:88:18","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11038,"name":"Transfer","nameLocation":"4147:8:18","nodeType":"EventDefinition","parameters":{"id":11037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11032,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"4172:4:18","nodeType":"VariableDeclaration","scope":11038,"src":"4156:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11031,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11034,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4194:2:18","nodeType":"VariableDeclaration","scope":11038,"src":"4178:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11033,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11036,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4214:7:18","nodeType":"VariableDeclaration","scope":11038,"src":"4198:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4155:67:18"},"src":"4141:82:18"},{"anonymous":false,"documentation":{"id":11039,"nodeType":"StructuredDocumentation","src":"4229:94:18","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":11047,"name":"Approval","nameLocation":"4334:8:18","nodeType":"EventDefinition","parameters":{"id":11046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11041,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4359:5:18","nodeType":"VariableDeclaration","scope":11047,"src":"4343:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11040,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11043,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"4382:8:18","nodeType":"VariableDeclaration","scope":11047,"src":"4366:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11042,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11045,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4408:7:18","nodeType":"VariableDeclaration","scope":11047,"src":"4392:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4392:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:74:18"},"src":"4328:89:18"},{"anonymous":false,"documentation":{"id":11048,"nodeType":"StructuredDocumentation","src":"4423:124:18","text":" @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":11056,"name":"ApprovalForAll","nameLocation":"4558:14:18","nodeType":"EventDefinition","parameters":{"id":11055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11050,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4589:5:18","nodeType":"VariableDeclaration","scope":11056,"src":"4573:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11049,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11052,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"4612:8:18","nodeType":"VariableDeclaration","scope":11056,"src":"4596:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11051,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11054,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"4627:8:18","nodeType":"VariableDeclaration","scope":11056,"src":"4622:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11053,"name":"bool","nodeType":"ElementaryTypeName","src":"4622:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4572:64:18"},"src":"4552:85:18"},{"documentation":{"id":11057,"nodeType":"StructuredDocumentation","src":"4643:74:18","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":11064,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4731:9:18","nodeType":"FunctionDefinition","parameters":{"id":11060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11059,"mutability":"mutable","name":"owner","nameLocation":"4749:5:18","nodeType":"VariableDeclaration","scope":11064,"src":"4741:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11058,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4740:15:18"},"returnParameters":{"id":11063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11062,"mutability":"mutable","name":"balance","nameLocation":"4787:7:18","nodeType":"VariableDeclaration","scope":11064,"src":"4779:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11061,"name":"uint256","nodeType":"ElementaryTypeName","src":"4779:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:17:18"},"scope":11170,"src":"4722:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11065,"nodeType":"StructuredDocumentation","src":"4802:131:18","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":11072,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"4947:7:18","nodeType":"FunctionDefinition","parameters":{"id":11068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11067,"mutability":"mutable","name":"tokenId","nameLocation":"4963:7:18","nodeType":"VariableDeclaration","scope":11072,"src":"4955:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4954:17:18"},"returnParameters":{"id":11071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11070,"mutability":"mutable","name":"owner","nameLocation":"5003:5:18","nodeType":"VariableDeclaration","scope":11072,"src":"4995:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11069,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4994:15:18"},"scope":11170,"src":"4938:72:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11073,"nodeType":"StructuredDocumentation","src":"5016:711:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":11084,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5741:16:18","nodeType":"FunctionDefinition","parameters":{"id":11082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11075,"mutability":"mutable","name":"from","nameLocation":"5775:4:18","nodeType":"VariableDeclaration","scope":11084,"src":"5767:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11074,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11077,"mutability":"mutable","name":"to","nameLocation":"5797:2:18","nodeType":"VariableDeclaration","scope":11084,"src":"5789:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11076,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11079,"mutability":"mutable","name":"tokenId","nameLocation":"5817:7:18","nodeType":"VariableDeclaration","scope":11084,"src":"5809:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11078,"name":"uint256","nodeType":"ElementaryTypeName","src":"5809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11081,"mutability":"mutable","name":"data","nameLocation":"5849:4:18","nodeType":"VariableDeclaration","scope":11084,"src":"5834:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11080,"name":"bytes","nodeType":"ElementaryTypeName","src":"5834:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5757:102:18"},"returnParameters":{"id":11083,"nodeType":"ParameterList","parameters":[],"src":"5876:0:18"},"scope":11170,"src":"5732:145:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11085,"nodeType":"StructuredDocumentation","src":"5883:80:18","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":11094,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5977:16:18","nodeType":"FunctionDefinition","parameters":{"id":11092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11087,"mutability":"mutable","name":"from","nameLocation":"6011:4:18","nodeType":"VariableDeclaration","scope":11094,"src":"6003:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11086,"name":"address","nodeType":"ElementaryTypeName","src":"6003:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11089,"mutability":"mutable","name":"to","nameLocation":"6033:2:18","nodeType":"VariableDeclaration","scope":11094,"src":"6025:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11088,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11091,"mutability":"mutable","name":"tokenId","nameLocation":"6053:7:18","nodeType":"VariableDeclaration","scope":11094,"src":"6045:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11090,"name":"uint256","nodeType":"ElementaryTypeName","src":"6045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5993:73:18"},"returnParameters":{"id":11093,"nodeType":"ParameterList","parameters":[],"src":"6083:0:18"},"scope":11170,"src":"5968:116:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11095,"nodeType":"StructuredDocumentation","src":"6090:512:18","text":" @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":11104,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6616:12:18","nodeType":"FunctionDefinition","parameters":{"id":11102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11097,"mutability":"mutable","name":"from","nameLocation":"6646:4:18","nodeType":"VariableDeclaration","scope":11104,"src":"6638:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11096,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11099,"mutability":"mutable","name":"to","nameLocation":"6668:2:18","nodeType":"VariableDeclaration","scope":11104,"src":"6660:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11098,"name":"address","nodeType":"ElementaryTypeName","src":"6660:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11101,"mutability":"mutable","name":"tokenId","nameLocation":"6688:7:18","nodeType":"VariableDeclaration","scope":11104,"src":"6680:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6680:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6628:73:18"},"returnParameters":{"id":11103,"nodeType":"ParameterList","parameters":[],"src":"6718:0:18"},"scope":11170,"src":"6607:112:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11105,"nodeType":"StructuredDocumentation","src":"6725:459:18","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":11112,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"7198:7:18","nodeType":"FunctionDefinition","parameters":{"id":11110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11107,"mutability":"mutable","name":"to","nameLocation":"7214:2:18","nodeType":"VariableDeclaration","scope":11112,"src":"7206:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11106,"name":"address","nodeType":"ElementaryTypeName","src":"7206:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11109,"mutability":"mutable","name":"tokenId","nameLocation":"7226:7:18","nodeType":"VariableDeclaration","scope":11112,"src":"7218:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11108,"name":"uint256","nodeType":"ElementaryTypeName","src":"7218:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7205:29:18"},"returnParameters":{"id":11111,"nodeType":"ParameterList","parameters":[],"src":"7251:0:18"},"scope":11170,"src":"7189:63:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11113,"nodeType":"StructuredDocumentation","src":"7258:316:18","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":11120,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"7588:17:18","nodeType":"FunctionDefinition","parameters":{"id":11118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11115,"mutability":"mutable","name":"operator","nameLocation":"7614:8:18","nodeType":"VariableDeclaration","scope":11120,"src":"7606:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11114,"name":"address","nodeType":"ElementaryTypeName","src":"7606:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11117,"mutability":"mutable","name":"_approved","nameLocation":"7629:9:18","nodeType":"VariableDeclaration","scope":11120,"src":"7624:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11116,"name":"bool","nodeType":"ElementaryTypeName","src":"7624:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7605:34:18"},"returnParameters":{"id":11119,"nodeType":"ParameterList","parameters":[],"src":"7648:0:18"},"scope":11170,"src":"7579:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11121,"nodeType":"StructuredDocumentation","src":"7655:139:18","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":11128,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"7808:11:18","nodeType":"FunctionDefinition","parameters":{"id":11124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11123,"mutability":"mutable","name":"tokenId","nameLocation":"7828:7:18","nodeType":"VariableDeclaration","scope":11128,"src":"7820:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11122,"name":"uint256","nodeType":"ElementaryTypeName","src":"7820:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7819:17:18"},"returnParameters":{"id":11127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11126,"mutability":"mutable","name":"operator","nameLocation":"7868:8:18","nodeType":"VariableDeclaration","scope":11128,"src":"7860:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11125,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7859:18:18"},"scope":11170,"src":"7799:79:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11129,"nodeType":"StructuredDocumentation","src":"7884:139:18","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":11138,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"8037:16:18","nodeType":"FunctionDefinition","parameters":{"id":11134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11131,"mutability":"mutable","name":"owner","nameLocation":"8062:5:18","nodeType":"VariableDeclaration","scope":11138,"src":"8054:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11130,"name":"address","nodeType":"ElementaryTypeName","src":"8054:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11133,"mutability":"mutable","name":"operator","nameLocation":"8077:8:18","nodeType":"VariableDeclaration","scope":11138,"src":"8069:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11132,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8053:33:18"},"returnParameters":{"id":11137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11138,"src":"8110:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11135,"name":"bool","nodeType":"ElementaryTypeName","src":"8110:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8109:6:18"},"scope":11170,"src":"8028:88:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11139,"nodeType":"StructuredDocumentation","src":"8307:58:18","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":11144,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"8379:4:18","nodeType":"FunctionDefinition","parameters":{"id":11140,"nodeType":"ParameterList","parameters":[],"src":"8383:2:18"},"returnParameters":{"id":11143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11144,"src":"8409:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11141,"name":"string","nodeType":"ElementaryTypeName","src":"8409:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8408:15:18"},"scope":11170,"src":"8370:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11145,"nodeType":"StructuredDocumentation","src":"8430:60:18","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":11150,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"8504:6:18","nodeType":"FunctionDefinition","parameters":{"id":11146,"nodeType":"ParameterList","parameters":[],"src":"8510:2:18"},"returnParameters":{"id":11149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11150,"src":"8536:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11147,"name":"string","nodeType":"ElementaryTypeName","src":"8536:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8535:15:18"},"scope":11170,"src":"8495:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11151,"nodeType":"StructuredDocumentation","src":"8557:90:18","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":11158,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8661:8:18","nodeType":"FunctionDefinition","parameters":{"id":11154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11153,"mutability":"mutable","name":"tokenId","nameLocation":"8678:7:18","nodeType":"VariableDeclaration","scope":11158,"src":"8670:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8669:17:18"},"returnParameters":{"id":11157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11158,"src":"8710:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11155,"name":"string","nodeType":"ElementaryTypeName","src":"8710:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8709:15:18"},"scope":11170,"src":"8652:73:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":11159,"nodeType":"StructuredDocumentation","src":"8912:267:18","text":" @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."},"eventSelector":"deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d","id":11169,"name":"ConsecutiveTransfer","nameLocation":"9190:19:18","nodeType":"EventDefinition","parameters":{"id":11168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11161,"indexed":true,"mutability":"mutable","name":"fromTokenId","nameLocation":"9226:11:18","nodeType":"VariableDeclaration","scope":11169,"src":"9210:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11163,"indexed":false,"mutability":"mutable","name":"toTokenId","nameLocation":"9247:9:18","nodeType":"VariableDeclaration","scope":11169,"src":"9239:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11165,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"9274:4:18","nodeType":"VariableDeclaration","scope":11169,"src":"9258:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11164,"name":"address","nodeType":"ElementaryTypeName","src":"9258:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11167,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"9296:2:18","nodeType":"VariableDeclaration","scope":11169,"src":"9280:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11166,"name":"address","nodeType":"ElementaryTypeName","src":"9280:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9209:90:18"},"src":"9184:116:18"}],"scope":11171,"src":"147:9155:18","usedErrors":[10955,10958,10961,10964,10967,10970,10973,10976,10979,10982,10985,10988,10991,10994,10997,11000,11003,11006],"usedEvents":[11038,11047,11056,11169]}],"src":"84:9219:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":387,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xbc10927da9f47d87e6cd46a3218526b7718716a717d07722791eb7de6befc2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d838bc5e79732a20acc5578a4fa0dd88ba484c906346ad4daea2654ecb922a94\",\"dweb:/ipfs/QmaXqkJiniK3xSi5MEaCrYnFDa9AXd6FvByHMMKaWEEEK7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":566,"contract":"@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981","label":"_defaultRoyaltyInfo","offset":0,"slot":"0","type":"t_struct(RoyaltyInfo)563_storage"},{"astId":571,"contract":"@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981","label":"_tokenRoyaltyInfo","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_struct(RoyaltyInfo)563_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(RoyaltyInfo)563_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC2981.RoyaltyInfo)","numberOfBytes":"32","value":"t_struct(RoyaltyInfo)563_storage"},"t_struct(RoyaltyInfo)563_storage":{"encoding":"inplace","label":"struct ERC2981.RoyaltyInfo","members":[{"astId":560,"contract":"@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981","label":"receiver","offset":0,"slot":"0","type":"t_address"},{"astId":562,"contract":"@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981","label":"royaltyFraction","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212204395f18dfdd8ca2567e34c8c6c3e2e22acc42dcd5af5072fc6b685afe45adfa964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP6 CALL DUP14 REVERT 0xD8 0xCA 0x25 PUSH8 0xE34C8C6C3E2E22AC 0xC4 0x2D 0xCD GAS CREATE2 SMOD 0x2F 0xC6 0xB6 DUP6 0xAF 0xE4 GAS 0xDF 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212204395f18dfdd8ca2567e34c8c6c3e2e22acc42dcd5af5072fc6b685afe45adfa964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SWAP6 CALL DUP14 REVERT 0xD8 0xCA 0x25 PUSH8 0xE34C8C6C3E2E22AC 0xC4 0x2D 0xCD GAS CREATE2 SMOD 0x2F 0xC6 0xB6 DUP6 0xAF 0xE4 GAS 0xDF 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":904,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1014,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220b530a5c27f2c611eb9906b9b978cceefd998b15da12aec1f37d13eacd329187764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 ADDRESS 0xA5 0xC2 PUSH32 0x2C611EB9906B9B978CCEEFD998B15DA12AEC1F37D13EACD329187764736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:9:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b530a5c27f2c611eb9906b9b978cceefd998b15da12aec1f37d13eacd329187764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 ADDRESS 0xA5 0xC2 PUSH32 0x2C611EB9906B9B978CCEEFD998B15DA12AEC1F37D13EACD329187764736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18980:9:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212209e7ecd88916364eaa129c58d05e031fc69c6bff2993516d0b7f1d585c3c3b2da64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH31 0xCD88916364EAA129C58D05E031FC69C6BFF2993516D0B7F1D585C3C3B2DA64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212209e7ecd88916364eaa129c58d05e031fc69c6bff2993516d0b7f1d585c3c3b2da64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH31 0xCD88916364EAA129C58D05E031FC69C6BFF2993516D0B7F1D585C3C3B2DA64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212203f5d8537a001c67f3e061896cfd745fb40e7c2699b3c922cdb05e72a99b5056764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH TSTORE DUP6 CALLDATACOPY LOG0 ADD 0xC6 PUSH32 0x3E061896CFD745FB40E7C2699B3C922CDB05E72A99B5056764736F6C63430008 SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212203f5d8537a001c67f3e061896cfd745fb40e7c2699b3c922cdb05e72a99b5056764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH TSTORE DUP6 CALLDATACOPY LOG0 ADD 0xC6 PUSH32 0x3E061896CFD745FB40E7C2699B3C922CDB05E72A99B5056764736F6C63430008 SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220ff7a21ad2cb7ec1268b6da2e85d7cf153c9138adc20302e4e9c9263a669e367e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH27 0x21AD2CB7EC1268B6DA2E85D7CF153C9138ADC20302E4E9C9263A66 SWAP15 CALLDATASIZE PUSH31 0x64736F6C634300081C00330000000000000000000000000000000000000000 ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220ff7a21ad2cb7ec1268b6da2e85d7cf153c9138adc20302e4e9c9263a669e367e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH27 0x21AD2CB7EC1268B6DA2E85D7CF153C9138ADC20302E4E9C9263A66 SWAP15 CALLDATASIZE PUSH31 0x64736F6C634300081C00330000000000000000000000000000000000000000 ","sourceMap":"258:2354:14:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Collection.sol":{"Collection":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"initialMintPrice","type":"uint256"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldBlockTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBlockTime","type":"uint256"}],"name":"AverageBlockTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"baseURI","type":"string"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"estimatedTime","type":"uint256"}],"name":"BatchMintGasInfo","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasPrice","type":"uint256"}],"name":"BatchMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"contractURI","type":"string"}],"name":"ContractURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"escrow","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasPrice","type":"uint256"}],"name":"EscrowBatchMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"EscrowRoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"EscrowRoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasPrice","type":"uint256"}],"name":"EscrowTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"period","type":"uint256"}],"name":"GlobalLockupPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"MintPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"MintingStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"RewardActivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rewardId","type":"uint256"},{"indexed":true,"internalType":"string","name":"rewardType","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"},{"indexed":false,"internalType":"string","name":"functionAbi","type":"string"},{"indexed":false,"internalType":"uint256","name":"activeAt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactiveAt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimableStakedTime","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rewardId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimedAt","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"RewardDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rewardId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"uint256","name":"revokedAt","type":"uint256"}],"name":"RewardRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint96","name":"basisPoints","type":"uint96"}],"name":"RoyaltyInfoUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"TokenBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockedAt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockScheduledAt","type":"uint256"}],"name":"TokenLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakedAt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeScheduledAt","type":"uint256"}],"name":"TokenStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockedAt","type":"uint256"}],"name":"TokenUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"unstakedAt","type":"uint256"}],"name":"TokenUnstaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ESCROW_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"activateReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"rewardType","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"functionAbi","type":"string"},{"internalType":"uint256","name":"activeAt","type":"uint256"},{"internalType":"uint256","name":"deactiveAt","type":"uint256"},{"internalType":"uint256","name":"claimableStakedTime","type":"uint256"}],"name":"addReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"averageBlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"gasFee","type":"uint256"}],"name":"batchMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"claimReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"claimedRewards","outputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"claimedAt","type":"uint256"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"bool","name":"isRevoked","type":"bool"},{"internalType":"uint256","name":"revokedAt","type":"uint256"},{"internalType":"string","name":"revokedReason","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"deactivateReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"gasFee","type":"uint256"}],"name":"escrowTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"forceUnlockToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"forceUnlockTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"forceUnstakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"forceUnstakeTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"getClaimedReward","outputs":[{"components":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"claimedAt","type":"uint256"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"bool","name":"isRevoked","type":"bool"},{"internalType":"uint256","name":"revokedAt","type":"uint256"},{"internalType":"string","name":"revokedReason","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Collection.ClaimedReward","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getClaimedRewards","outputs":[{"components":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"claimedAt","type":"uint256"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"bool","name":"isRevoked","type":"bool"},{"internalType":"uint256","name":"revokedAt","type":"uint256"},{"internalType":"string","name":"revokedReason","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Collection.ClaimedReward[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"}],"name":"getReward","outputs":[{"components":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"string","name":"rewardType","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"activeAt","type":"uint256"},{"internalType":"uint256","name":"deactiveAt","type":"uint256"},{"internalType":"uint256","name":"claimableStakedTime","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"functionAbi","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Collection.Reward","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getStakingStatus","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"unstakeScheduledAt","type":"uint256"},{"internalType":"uint256","name":"unstakedAt","type":"uint256"},{"internalType":"bool","name":"isStaked","type":"bool"}],"internalType":"struct Collection.StakedToken","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"getStakingStatusBatch","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"unstakeScheduledAt","type":"uint256"},{"internalType":"uint256","name":"unstakedAt","type":"uint256"},{"internalType":"bool","name":"isStaked","type":"bool"}],"internalType":"struct Collection.StakedToken[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalLockupPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantEscrowRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isTokenLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lockedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextRewardId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"revokeClaimedReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"revokeEscrowRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"rewardId","type":"uint256"},{"internalType":"string","name":"rewardType","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"activeAt","type":"uint256"},{"internalType":"uint256","name":"deactiveAt","type":"uint256"},{"internalType":"uint256","name":"claimableStakedTime","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"functionAbi","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockTime","type":"uint256"}],"name":"setAverageBlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"contractURI_","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"basisPoints","type":"uint96"}],"name":"setDefaultRoyalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"unlockScheduledTime","type":"uint256"}],"name":"setLockToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256","name":"unlockScheduledTime","type":"uint256"}],"name":"setLockTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setMintingEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"basisPoints","type":"uint96"}],"name":"setTokenRoyalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"setUnlockToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"setUnlockTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"unstakeScheduledTime","type":"uint256"}],"name":"stakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256","name":"unstakeScheduledTime","type":"uint256"}],"name":"stakeTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakedTokens","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"stakedAt","type":"uint256"},{"internalType":"uint256","name":"unstakeScheduledAt","type":"uint256"},{"internalType":"uint256","name":"unstakedAt","type":"uint256"},{"internalType":"bool","name":"isStaked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"unlockScheduledAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"unlockedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"unstakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"unstakeTokenBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":199,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_addresst_uint256t_uint256t_stringt_string_fromMemory":{"entryPoint":337,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_uint256_fromMemory":{"entryPoint":324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_bytes32_uint256_address":{"entryPoint":1195,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint96":{"entryPoint":2072,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint96_uint256":{"entryPoint":2081,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":114,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":1104,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_RoyaltyInfo_storage_ptr":{"entryPoint":2112,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":765,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":734,"id":null,"parameterSlots":2,"returnSlots":0},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":1094,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ESCROW_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":1648,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_AccessControl":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_Collection":{"entryPoint":1306,"id":6304,"parameterSlots":7,"returnSlots":0},"constructor_Context":{"entryPoint":1806,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC165":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_ERC2981":{"entryPoint":1629,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_ERC721A":{"entryPoint":null,"id":9000,"parameterSlots":2,"returnSlots":0},"constructor_IAccessControl":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_IERC165":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_IERC2981":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_Ownable":{"entryPoint":1720,"id":429,"parameterSlots":3,"returnSlots":0},"constructor_Pausable":{"entryPoint":1687,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":1658,"id":1025,"parameterSlots":3,"returnSlots":0},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_Collection_to_address":{"entryPoint":1182,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1711,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1698,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_c89e_to_bytes":{"entryPoint":1145,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint96":{"entryPoint":1281,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1173,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":573,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint96_to_uint256":{"entryPoint":2054,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint96_to_uint96":{"entryPoint":2179,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_Collection":{"entryPoint":518,"id":null,"parameterSlots":0,"returnSlots":7},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":842,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":1122,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":164,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_RoyaltyInfo_to_struct_RoyaltyInfo":{"entryPoint":2222,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":2480,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":76,"id":null,"parameterSlots":2,"returnSlots":0},"fun_feeDenominator":{"entryPoint":2625,"id":694,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":1914,"id":256,"parameterSlots":2,"returnSlots":1},"fun_hasRole":{"entryPoint":2589,"id":80,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":825,"parameterSlots":0,"returnSlots":1},"fun_revert":{"entryPoint":2580,"id":10948,"parameterSlots":1,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":9022,"parameterSlots":0,"returnSlots":1},"fun_setDefaultRoyalty":{"entryPoint":2289,"id":740,"parameterSlots":2,"returnSlots":0},"fun_startTokenId":{"entryPoint":null,"id":9009,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":2499,"id":525,"parameterSlots":1,"returnSlots":0},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":1904,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":1888,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":54,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":2489,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_1_shift":{"entryPoint":1062,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":2122,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":677,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2160,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":557,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":2137,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":1071,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":1267,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_RoyaltyInfo_to_struct_RoyaltyInfo":{"entryPoint":2279,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":586,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint96_to_uint96":{"entryPoint":2199,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":697,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":287,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":318,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint96":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x31 JUMPI PUSH2 0x20 PUSH2 0x14 PUSH2 0x206 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6601 PUSH2 0xA4D DUP3 CODECOPY PUSH2 0x6601 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x36 JUMP JUMPDEST SWAP1 PUSH2 0x86 PUSH2 0x7F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xDC PUSH2 0xD7 DUP3 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x31 JUMPI PUSH2 0x86 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xA4 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x31 JUMPI DUP2 MLOAD PUSH2 0x110 SWAP3 PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH2 0x12A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x31 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP2 PUSH2 0x178 SWAP2 DUP5 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP3 PUSH2 0x19A SWAP2 DUP6 ADD PUSH2 0xF6 JUMP JUMPDEST SWAP3 PUSH2 0x1A8 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x131 JUMP JUMPDEST SWAP3 PUSH2 0x1B6 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x144 JUMP JUMPDEST SWAP3 PUSH2 0x1C4 DUP3 PUSH1 0x80 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP4 PUSH2 0x1E6 SWAP2 DUP4 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI PUSH2 0x110 SWAP3 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x704E DUP1 CODESIZE SUB DUP1 PUSH2 0x219 DUP2 PUSH2 0x72 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x151 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x23D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x22D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x28B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2CA PUSH2 0x110 PUSH2 0x261 SWAP4 PUSH2 0x23D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2B9 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2E9 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x2F7 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x2D2 JUMP JUMPDEST ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x30C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x31E PUSH2 0x86 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x340 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2DE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST SWAP1 PUSH2 0x353 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6D JUMPI PUSH2 0x376 DUP3 PUSH2 0x370 DUP6 SLOAD PUSH2 0x27B JUMP JUMPDEST DUP6 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3B1 JUMPI PUSH2 0x261 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3A6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C6 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x404 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3EB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3CA JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x34A JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x43F PUSH2 0x110 PUSH2 0x261 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x426 JUMP JUMPDEST PUSH2 0x110 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x45D PUSH2 0xD7 DUP4 PUSH2 0x88 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x46C PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x86 SWAP5 PUSH2 0x4DD PUSH2 0x4E4 SWAP3 PUSH2 0x4D6 PUSH1 0x80 SWAP7 PUSH2 0x4CF PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x50E PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP5 SWAP6 PUSH2 0x555 PUSH2 0x86 SWAP8 PUSH2 0x54E PUSH2 0x64D SWAP8 PUSH2 0x547 PUSH2 0x5BC SWAP9 PUSH2 0x540 PUSH2 0x55C SWAP9 DUP11 DUP15 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x13 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x14 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x10 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x11 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x568 PUSH1 0x0 PUSH1 0x12 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x57C PUSH2 0x575 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x16 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x58D DUP5 PUSH2 0x588 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST POP PUSH2 0x5B8 DUP5 PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F PUSH2 0x77A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x63A PUSH2 0x5DA PUSH2 0x479 JUMP JUMPDEST PUSH2 0x5E5 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x5F0 ADDRESS PUSH2 0x49E JUMP JUMPDEST SWAP3 PUSH2 0x62E PUSH2 0x5FD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 CHAINID SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP7 PUSH2 0x4AB JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x4C JUMP JUMPDEST PUSH2 0x645 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 PUSH2 0x501 JUMP JUMPDEST SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x86 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x110 PUSH1 0x1 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x685 SWAP3 SWAP2 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x690 PUSH2 0x670 JUMP JUMPDEST PUSH1 0xA PUSH2 0x24A JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST SWAP2 PUSH2 0x6C2 SWAP2 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD DUP2 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x6F1 JUMPI POP POP PUSH2 0x86 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x728 SWAP2 PUSH2 0x721 SWAP1 PUSH1 0x2 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x3 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x730 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH1 0x0 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x74C PUSH2 0x748 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x753 JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA14 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x762 SWAP1 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x78B PUSH2 0x787 DUP4 DUP4 PUSH2 0xA1D JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7B1 PUSH1 0x1 PUSH2 0x7AC DUP5 PUSH1 0x0 PUSH2 0x7A6 DUP7 PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST ADD PUSH2 0x770 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH2 0x7CB PUSH2 0x7C5 PUSH2 0x7BF CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x7F6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4A7 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x86 SWAP3 SWAP5 SWAP4 PUSH2 0x83C PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x818 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x110 PUSH1 0x40 PUSH2 0x72 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x869 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x49E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x233 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x50E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH2 0x8A7 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x883 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x8E1 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x8D3 PUSH2 0x8CD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x859 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x8AE JUMP JUMPDEST SWAP1 PUSH2 0x902 PUSH2 0x8FD PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST DUP1 PUSH2 0x90C DUP4 PUSH2 0x806 JUMP JUMPDEST GT PUSH2 0x991 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x91E DUP4 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x974 JUMPI POP PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x95D PUSH2 0x96D SWAP3 PUSH2 0x94C PUSH2 0x840 JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x9AB SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x821 JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x110 SWAP1 SLOAD PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x7C5 PUSH2 0x9D3 PUSH1 0x9 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x9DE DUP5 PUSH1 0x9 PUSH2 0x859 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA0E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP2 PUSH1 0x0 PUSH2 0x7A6 PUSH2 0xA3A SWAP4 PUSH2 0xA32 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x2710 PUSH2 0x501 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x14F93A49 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x17F82990 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x233DEDF1 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2474E2B2 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x2496DD51 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x276A28A3 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2A67C158 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x2A959B89 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x2CFB6688 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x3736D853 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x4EA3871A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x66CFD072 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x6CC232E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x6CE76F30 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6FC23DB4 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x7C33BD70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x80C47440 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x82666BC8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x86BB8F37 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x8AD7D9DE EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x9FD6DB12 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA3E37652 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xA5F10FE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA7B1190A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAE594865 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB5573847 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xBC577940 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xBD39E149 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBE707DB1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC0788555 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC4228AAA EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xC7A5156F EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xCCD40400 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xDCAE6754 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD4BA7E1 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xEABDC5B4 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF064997C EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF12E061B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x376 JUMPI PUSH4 0xFFAB4BD9 SUB PUSH2 0x4F2 JUMPI PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x50A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x5C6 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x59D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x4F2 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x609 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x63A PUSH2 0x643 PUSH1 0x20 SWAP4 PUSH2 0x64D SWAP4 PUSH2 0x62E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x619 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x68F JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x770 SWAP3 ADD PUSH2 0x71C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1E51 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x140 DUP1 PUSH2 0x884 PUSH2 0x870 PUSH2 0x823 PUSH2 0x802 PUSH2 0x160 DUP8 ADD PUSH1 0x20 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x80 DUP9 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP8 ADD MSTORE PUSH2 0x83E PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x85C PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7D2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x8B8 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0xF PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0x91A DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x938 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x2057 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2428 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2437 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x99E PUSH1 0x20 SWAP5 PUSH2 0x52D SWAP4 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x2533 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xA31 PUSH2 0xA2B CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH2 0x562 PUSH2 0xA3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xA7E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0xA90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xAD4 PUSH2 0xACF DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x4F2 JUMPI PUSH2 0x517 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 PUSH1 0x20 PUSH2 0x52D SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB32 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0xB40 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP4 PUSH2 0xB60 SWAP2 DUP5 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB80 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0xBA0 SWAP2 DUP4 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0x52D PUSH2 0xBB1 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x701 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xBD4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB09 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2E3F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xBFC DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC1F CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST SWAP2 PUSH2 0x3169 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC38 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3450 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST SWAP5 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3477 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC8C CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3481 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x359A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xCBA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0xCD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x35E5 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3649 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD2A CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x36D5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD67 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x371D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xD85 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x5C6 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDA8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6C JUMP JUMPDEST SWAP2 PUSH2 0x3793 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xDBE CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x37B4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0xDDF CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x37BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x389D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x14 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xE4A CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x38F4 JUMP JUMPDEST PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xE4F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xE73 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xEA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x3961 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEC5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x397B JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x39BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xEF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x39F2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x120 DUP1 PUSH2 0x884 PUSH2 0x140 DUP5 ADD PUSH2 0xF21 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH2 0xF43 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0xF52 PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0xF79 PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0xEFD JUMP JUMPDEST SWAP1 PUSH2 0xFAD PUSH2 0xFA3 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFBF PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFD3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xFF6 PUSH2 0xFEF DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xF8D JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x102F PUSH2 0x102A CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x16 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1057 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x103B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x1078 DUP2 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1086 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1094 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4F2 JUMPI PUSH1 0x80 PUSH2 0x701 DUP3 PUSH2 0x52D SWAP5 DUP8 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x10CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x3FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x10E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x3FF7 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4588 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x111A CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x45ED JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1130 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x6CB PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x115B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x45F8 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1174 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4657 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1189 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x12 PUSH2 0x11A3 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x11CA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x11E2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1204 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x11EC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x122B DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1245 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x466A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1278 PUSH2 0x1272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x12C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x12E1 DUP3 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH2 0x12EF DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1320 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST SWAP2 PUSH2 0x4802 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1339 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4871 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x517 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x136F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x137E PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x138D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x13C1 PUSH2 0x13BC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x48AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x13E2 DUP2 DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13F0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13FE DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x142A CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x48C6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1449 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x4917 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1462 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4A4D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x147A CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x14B9 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DB PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x5 PUSH2 0x14FA PUSH1 0x4 DUP6 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP4 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1547 PUSH2 0x154E SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1540 PUSH1 0xA0 SWAP7 PUSH2 0x1539 PUSH2 0x517 SWAP11 PUSH2 0x1529 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1571 PUSH2 0x156C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST SWAP3 PUSH2 0x1581 SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x15B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0x8 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x15B5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1601 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x15FC JUMPI JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x15F1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x1628 PUSH2 0x161E DUP4 PUSH2 0x15E1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x167A JUMPI POP PUSH1 0x1 EQ PUSH2 0x1641 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1666 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x16B3 SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x168F JUMP JUMPDEST SUB DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP1 PUSH2 0x16C9 PUSH2 0x16CE SWAP3 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16E5 PUSH1 0x1 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16FA PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1707 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1714 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1721 PUSH1 0x5 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x172E PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 PUSH2 0x173B PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x8 PUSH2 0x174D PUSH1 0x7 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x140 DUP10 ADD SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x17AE SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 SWAP1 SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x17D3 PUSH2 0x17CD CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP7 PUSH2 0x17E9 SWAP11 SWAP9 SWAP11 SWAP7 SWAP2 SWAP7 SWAP6 SWAP3 SWAP6 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP11 DUP12 PUSH2 0x1754 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x67D PUSH2 0x1808 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4BDD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1820 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1838 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x4C8A JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x13 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x185A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x188B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH2 0x64D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x133F JUMP JUMPDEST SWAP1 PUSH2 0x18BD PUSH2 0x18B6 PUSH2 0x18AC DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x18E8 PUSH2 0x18E1 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x191D PUSH2 0x1917 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18F0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x195B CALLDATASIZE PUSH1 0x4 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x4D4A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1974 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4DCC JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1989 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x1D PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x19B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1994 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19CE CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E2D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x19F6 SWAP1 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A0C PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A19 PUSH1 0x2 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A26 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A33 PUSH1 0x4 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x1A40 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A4D PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A5A PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A67 PUSH1 0x8 DUP3 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0xA PUSH2 0x174D PUSH1 0x9 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP3 PUSH2 0x1B12 SWAP8 PUSH1 0xC0 DUP15 PUSH2 0xA14 PUSH2 0x517 SWAP15 SWAP11 PUSH2 0x1AE7 PUSH2 0x1ADD PUSH2 0x140 SWAP16 SWAP9 SWAP8 PUSH2 0x1B03 SWAP14 SWAP13 PUSH2 0x1AD0 PUSH2 0x1AC8 PUSH2 0x1AEE SWAP12 PUSH2 0x1AF5 SWAP15 PUSH2 0x1ABB PUSH2 0x160 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP11 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP13 ADD MSTORE JUMP JUMPDEST DUP10 DUP3 SUB PUSH2 0x100 DUP12 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1B32 PUSH2 0x1B2D CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP8 PUSH2 0x1B48 SWAP12 SWAP10 SWAP12 SWAP8 SWAP2 SWAP8 SWAP7 SWAP3 SWAP7 SWAP6 SWAP4 SWAP6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A79 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1B64 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5165 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x518E JUMP JUMPDEST PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1BAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x566 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1C95 PUSH2 0x1C74 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP3 PUSH2 0x1C65 PUSH2 0x1C53 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND JUMPDEST GT ISZERO PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST SWAP3 PUSH2 0x1C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x1CC7 PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CE9 JUMPI PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x52D SWAP3 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x53A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D12 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D17 JUMP JUMPDEST CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x689 JUMP JUMPDEST ISZERO PUSH2 0x1D53 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x546F6B656E204944206F7574206F6620626F756E6473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D9E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1DD8 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1DEF SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1D42 JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x1DCE PUSH2 0x52D PUSH2 0x544F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1462 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E11 PUSH2 0x5459 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1E1E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1E3B PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1E4C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0xC38 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x160 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x1FB9 PUSH1 0xA PUSH2 0x1ED8 PUSH2 0x1E63 JUMP JUMPDEST SWAP5 PUSH2 0x1EE9 PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F15 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F43 PUSH2 0x1F3A PUSH1 0x4 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F59 PUSH2 0x1F52 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F6F PUSH2 0x1F68 PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F85 PUSH2 0x1F7E PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F94 PUSH1 0x8 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1FAB PUSH1 0x9 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x1FE1 PUSH2 0x52D SWAP2 PUSH2 0x1FD9 PUSH2 0x1EBF JUMP JUMPDEST POP PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x203F PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x201F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2074 PUSH2 0x206F PUSH2 0x2069 DUP5 PUSH2 0x5493 JUMP JUMPDEST SWAP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1FE6 JUMP JUMPDEST SWAP2 PUSH2 0x2090 PUSH2 0x208B PUSH2 0x2083 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 SWAP6 AND PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x1C0B JUMP JUMPDEST SWAP4 PUSH2 0x209D PUSH2 0x208B DUP5 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x227E JUMPI DUP5 SWAP3 PUSH2 0x20C8 DUP4 PUSH2 0x555D JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ DUP2 DUP6 EQ OR ISZERO PUSH2 0x224F JUMPI JUMPDEST POP PUSH2 0x1DCE SWAP6 SWAP5 SWAP4 PUSH2 0x21E4 SWAP8 SWAP4 PUSH2 0x21B8 SWAP4 PUSH2 0x206F SWAP4 PUSH2 0x20FF PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x210C DUP5 DUP11 DUP8 DUP14 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x2245 JUMPI JUMPDEST POP PUSH2 0x2139 PUSH2 0x2120 DUP10 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x212C DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x2147 DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x217F PUSH2 0x2169 DUP3 DUP6 PUSH2 0x2163 PUSH2 0x204A JUMP JUMPDEST SWAP12 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP11 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2195 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP11 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x21AA PUSH2 0x21A4 DUP12 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x21F8 JUMPI JUMPDEST POP POP POP PUSH2 0x1C0B JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x21EB JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST DUP8 ADD SWAP2 PUSH2 0x220D PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x2219 PUSH2 0x1DCE DUP12 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x21B0 JUMPI PUSH2 0x222A PUSH2 0x52D DUP11 PUSH2 0x1487 JUMP JUMPDEST DUP4 EQ PUSH2 0x21B0 JUMPI PUSH2 0x223D SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x2261 SWAP3 SWAP9 SWAP5 SWAP7 SWAP6 SWAP8 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI DUP7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP6 CODESIZE PUSH2 0x20E1 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x2299 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x232A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D6520686173206E6F7420706173736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x2384 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x2395 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x2407 JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x23C4 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH32 0x5114E731F472514591AA5A2E7254174B62963E757A427CF9E9B069666478B060 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0x241B PUSH2 0x52D PUSH2 0x2208 DUP5 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x228A JUMP JUMPDEST SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1FB3 PUSH2 0x52D SWAP3 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2461 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST ISZERO PUSH2 0x246D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x0 PUSH2 0x24C1 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x252B JUMPI DUP1 PUSH2 0x24DE PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x2526 SWAP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x250F PUSH2 0x24FD PUSH2 0x2208 PUSH1 0x19 PUSH2 0x24F7 PUSH2 0x1DBB DUP7 DUP12 DUP12 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2509 PUSH2 0x1DCE DUP7 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH2 0x2521 PUSH2 0x1DBB DUP5 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x24C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x254A PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x25DE JUMPI PUSH2 0x255C PUSH2 0x2208 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x256C PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x25DA JUMPI PUSH2 0x257F PUSH2 0x2208 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x258B PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x25DA JUMPI PUSH2 0x259E PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x25AA PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 PUSH2 0x25BE JUMPI JUMPDEST POP PUSH2 0x52D JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x25D1 SWAP2 POP PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO CODESIZE PUSH2 0x25B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2642 JUMPI JUMP JUMPDEST PUSH2 0x2619 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2667 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x2688 PUSH2 0x52D PUSH1 0x0 SWAP3 SWAP5 SWAP4 SWAP5 PUSH2 0x2680 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST ADD SWAP2 PUSH2 0x269B DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x26A5 DUP2 SWAP5 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH2 0x26B6 PUSH2 0x20AB PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST EQ PUSH2 0x26E8 JUMPI JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x26CC PUSH2 0x26D2 SWAP3 PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x265D JUMP JUMPDEST POP PUSH1 0xC SWAP3 POP PUSH2 0x52D SWAP1 PUSH2 0x26D2 SWAP1 PUSH2 0x26CC PUSH2 0x2712 PUSH2 0x270C DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH2 0x26BC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2732 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x2C8E JUMP JUMPDEST ISZERO PUSH2 0x273E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420747970652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x278A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65207374616B65642074696D65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2837 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163746976652074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x288D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D75737420626520696E2074686520667574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D7573742062652061667465722061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x76652074696D65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2642 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2972 PUSH2 0x52D PUSH2 0x2046 SWAP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x294D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2961 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2991 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x299F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x297A JUMP JUMPDEST ADD PUSH2 0x2986 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x29B4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x29C6 PUSH2 0x517 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x29E8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST SWAP1 PUSH2 0x29FB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA7E JUMPI PUSH2 0x2A1E DUP3 PUSH2 0x2A18 DUP6 SLOAD PUSH2 0x15E1 JUMP JUMPDEST DUP6 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A59 JUMPI PUSH2 0x2046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2A4E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2A6E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAC JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x2A93 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2A8A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x29F2 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x2AE7 PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2ACE JUMP JUMPDEST PUSH1 0xA PUSH2 0x2BE6 PUSH2 0x140 PUSH2 0x517 SWAP5 PUSH2 0x2B0E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x2B1C PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B3C PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B53 PUSH2 0x2B4A PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B6C PUSH2 0x2B63 PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2B83 PUSH2 0x2B7A PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B91 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BB1 PUSH2 0x2BA8 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x2BC0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x2BD8 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C0F SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2C09 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x2C37 SWAP1 PUSH2 0x2C2E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C18 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2C86 PUSH1 0xC0 SWAP6 PUSH2 0x2C78 PUSH2 0x1AE7 SWAP4 PUSH2 0x2C6A PUSH2 0x517 SWAP12 SWAP7 PUSH2 0xA14 SWAP9 SWAP15 SWAP14 SWAP12 SWAP15 PUSH2 0x1ABB PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST SWAP6 DUP6 DUP4 SWAP6 PUSH2 0x2DE7 PUSH2 0x2DE1 DUP11 PUSH2 0x23CB PUSH2 0x1DCE PUSH2 0x2DB9 DUP12 SWAP16 SWAP10 SWAP12 PUSH2 0x2D89 PUSH32 0x408E1E6B24C523DF52071026044644BC970ACE38BBA503FA10E7C6E4E9EE0661 SWAP16 SWAP13 PUSH2 0x1540 DUP16 PUSH2 0x2DFA SWAP16 DUP16 DUP16 SWAP1 PUSH2 0x2D2A SWAP1 PUSH2 0x2CFA PUSH2 0x2CE8 PUSH2 0x2949 DUP16 SWAP1 JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x0 SWAP14 DUP15 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2D18 DUP12 PUSH2 0x2D12 PUSH2 0x1DCE PUSH2 0x2D0C DUP12 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x1DCE DUP13 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x2D33 DUP10 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ ISZERO DUP1 PUSH2 0x2E2F JUMPI JUMPDEST PUSH2 0x2D45 DUP11 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SUB PUSH2 0x2DFF JUMPI JUMPDEST POP POP POP PUSH2 0x1539 PUSH2 0x2D5C PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST SWAP10 PUSH2 0x2D70 PUSH2 0x2D69 DUP13 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1D PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2D82 DUP12 PUSH2 0x2D7C PUSH2 0x1E63 JUMP JUMPDEST SWAP11 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D9B DUP10 PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DA6 DUP11 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DB1 DUP12 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DC5 DUP7 PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DD1 TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DDC DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST SWAP10 PUSH2 0x2C21 JUMP JUMPDEST SWAP10 PUSH2 0x2DF1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x2C3D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2E0A TIMESTAMP DUP4 GT PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x2E15 JUMPI JUMPDEST CODESIZE PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x1DCE PUSH2 0x2E28 SWAP4 SWAP1 JUMP JUMPDEST GT PUSH2 0x28DE JUMP JUMPDEST DUP13 DUP15 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x2E3A TIMESTAMP DUP5 GT PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2D3C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP3 SWAP2 PUSH2 0x2E5D PUSH2 0x577A JUMP JUMPDEST PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57BA JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E78 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST ISZERO PUSH2 0x2E84 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E2041444D494E206F7220455343524F57 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81A5CC81B9BDD08195B98589B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2F26 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FE4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617320666565206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3124 PUSH32 0x26F4C0C9DD9536441681C861E4C72684BBEC9E4E6D7E4492C2A90FF07CF35C6F SWAP3 PUSH2 0x3091 PUSH2 0x3078 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x3083 CALLER DUP1 SWAP3 PUSH2 0x45F8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3151 JUMPI JUMPDEST POP PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x30A3 PUSH2 0x309E PUSH1 0x12 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x30CE PUSH2 0x30B7 DUP5 PUSH2 0x30B2 PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x30C7 PUSH2 0x1DCE PUSH2 0x52D PUSH1 0x13 PUSH2 0x1487 JUMP JUMPDEST GT ISZERO PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x30EF PUSH2 0x30DE PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ ISZERO PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x30FC PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP5 GT PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3117 PUSH2 0x3110 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x2FDD JUMP JUMPDEST PUSH2 0x26CC PUSH4 0x3B9ACA00 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x1C95 PUSH2 0x313E PUSH2 0x3133 PUSH2 0x544F JUMP JUMPDEST SWAP3 PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x57D6 JUMP JUMPDEST SWAP5 PUSH2 0x3148 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x3163 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x45F8 JUMP JUMPDEST CODESIZE PUSH2 0x308B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3180 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3308 JUMP JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0xC0 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3250 PUSH1 0x5 PUSH2 0x31E2 PUSH2 0x31C7 JUMP JUMPDEST SWAP5 PUSH2 0x31EF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3216 PUSH2 0x3206 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3225 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x324A PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x31D1 JUMP JUMPDEST ISZERO PUSH2 0x3269 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20756E7374616B652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D6520686173206E6F74207061737365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3314 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x3338 PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x3355 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3259 JUMP JUMPDEST SWAP6 PUSH2 0x335E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x336D PUSH2 0x1CC3 CALLER JUMPDEST DUP1 SWAP4 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x341A JUMPI JUMPDEST POP PUSH1 0x60 DUP8 ADD DUP1 MLOAD PUSH2 0x3385 PUSH2 0x1DCE DUP9 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x33FE JUMPI JUMPDEST POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x4 TIMESTAMP SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x33B2 DUP7 PUSH2 0x4C66 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH32 0x8400AAD51EC7B4A6D1C58218EA03E51798A0485003BEAE9E5B76662E91D7058F PUSH2 0x33F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x340C PUSH2 0x52D PUSH2 0x3414 SWAP3 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x32BC JUMP JUMPDEST CODESIZE PUSH2 0x338B JUMP JUMPDEST PUSH2 0x344A SWAP1 PUSH2 0x3444 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x3262 JUMP JUMPDEST CODESIZE PUSH2 0x3372 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3174 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x346A PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x5942 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3459 JUMP JUMPDEST SWAP1 PUSH2 0x348B CALLER PUSH2 0x566 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x34A3 JUMPI PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34C7 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3535 JUMP JUMPDEST ISZERO PUSH2 0x34D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426C6F636B2074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH32 0xBE1531878CA10F11C57318847B09788B90ED4E6DD52B36836BE286097A74FF4F SWAP1 PUSH2 0x356B PUSH2 0x3564 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3575 PUSH1 0xF PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3580 DUP3 PUSH1 0xF PUSH2 0x202F JUMP JUMPDEST PUSH2 0x3595 PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x35AE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5A7C JUMP JUMPDEST PUSH2 0x517 PUSH2 0x35A3 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0xA97 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x35D3 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x517 SWAP3 PUSH2 0x35F3 PUSH2 0x35DD JUMP JUMPDEST SWAP3 PUSH2 0x48C6 JUMP JUMPDEST ISZERO PUSH2 0x3600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206E6F7220617070726F766564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 PUSH2 0x1C95 PUSH2 0x368C CALLER PUSH2 0x3683 PUSH2 0x367E DUP3 DUP8 PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x1C6F DUP6 PUSH2 0x5ADE JUMP JUMPDEST SWAP3 PUSH2 0x7C5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36A5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0xF62079051152E03BD87F33518B9CE4A5564414395B75AFEEF8A467E7CA4EE91B SWAP2 PUSH2 0x54F DUP2 PUSH1 0x12 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP2 PUSH2 0x67D DUP2 PUSH1 0x10 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36DE JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3737 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1C74 DUP3 PUSH2 0x1C6F DUP6 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP6 PUSH2 0x1C95 SWAP6 PUSH2 0x3782 PUSH2 0x3773 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x378E PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5B09 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3726 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x379E JUMP JUMPDEST PUSH2 0x52D PUSH1 0x9 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x208B PUSH2 0x37D6 PUSH2 0x52D SWAP3 PUSH2 0x37D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5493 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37EA PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x383B JUMP JUMPDEST ISZERO PUSH2 0x37F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C7265616479206163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x386C SWAP1 PUSH2 0x385A PUSH2 0x3855 PUSH2 0x1CC3 PUSH1 0x4 PUSH2 0x324A DUP6 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x1 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x77DF36C64E7C698035A47D2E97DA79AB1C3BCFDF6F82430581659CC4D2A969A PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38B5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x38CA SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x38C5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3477 JUMP JUMPDEST PUSH32 0x31C682DCD71348807B079D0CB25BF0C85C9E75F84A8B7B31111BA081E52817F3 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x390D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x391A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x3937 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x395C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x394B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x951 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x3988 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x39B1 JUMPI PUSH2 0x2208 PUSH2 0x39A5 SWAP2 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39AD PUSH2 0x396B JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH2 0x39CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39DD PUSH2 0x5BCF JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x39ED PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5C10 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x39D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0x39FA JUMP JUMPDEST PUSH2 0x52D PUSH2 0x140 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x3A31 PUSH2 0x3A1E JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x52D PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3A7F JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x3A8A PUSH2 0x3A68 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x3A73 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3AAA PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3A70 JUMP JUMPDEST SWAP1 PUSH2 0x3AC0 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3B91 PUSH1 0x8 PUSH2 0x3AE2 PUSH2 0x3A1E JUMP JUMPDEST SWAP5 PUSH2 0x3AEF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3AFE PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B25 PUSH2 0x3B15 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B34 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B43 PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B5B PUSH2 0x3B52 PUSH1 0x5 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B73 PUSH2 0x3B6A PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B82 PUSH2 0x1F7E PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1F94 PUSH1 0x7 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST SWAP1 PUSH2 0x3BAD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3BBC PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3BFE JUMPI PUSH2 0x3BD7 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP9 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3BE9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3BAF JUMP JUMPDEST PUSH2 0x3BAF JUMP JUMPDEST SWAP1 PUSH2 0x3BF6 PUSH2 0x3BE4 SWAP2 PUSH2 0x293A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x3BDC JUMP JUMPDEST POP PUSH2 0x3C08 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST PUSH2 0x3C22 PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C52 SWAP1 PUSH1 0x1C DUP4 DUP3 PUSH2 0x3C44 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP7 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3C57 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3C15 JUMP JUMPDEST PUSH2 0x16C9 PUSH2 0x3C67 SWAP3 PUSH2 0x3C8B SWAP5 PUSH2 0x1284 JUMP JUMPDEST SWAP7 PUSH2 0x3C7A PUSH2 0x3C74 DUP3 PUSH2 0x293A JUMP JUMPDEST SWAP9 PUSH2 0x3B99 JUMP JUMPDEST PUSH2 0x3C84 DUP3 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3AB7 JUMP JUMPDEST POP CODESIZE DUP4 DUP3 PUSH2 0x3C49 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CAB PUSH2 0x5459 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CBE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3DFC JUMP JUMPDEST ISZERO PUSH2 0x3CCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726F6D2061646472657373206973206E6F7420746865206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP4 SWAP3 PUSH2 0x3DB6 PUSH2 0x35CE PUSH2 0x64D SWAP5 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3DC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3FC1 PUSH2 0x3FC7 SWAP2 PUSH2 0x3F8B PUSH2 0x3F86 PUSH2 0x3E97 PUSH32 0xE37E962447C072D61E0164C30F30D2A3F4752DEA7A7224FFD42D5FC2586B02D5 SWAP8 SWAP10 SWAP9 SWAP7 SWAP9 PUSH2 0x3E3E PUSH2 0x237F DUP13 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x3E62 PUSH2 0x3E4A DUP13 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x3E5C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x20AB JUMP JUMPDEST EQ PUSH2 0x3CC3 JUMP JUMPDEST PUSH2 0x3E83 PUSH2 0x3E72 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND EQ ISZERO PUSH2 0x3D0F JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x3E92 PUSH2 0x1CC3 DUP14 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x3D5B JUMP JUMPDEST SWAP6 PUSH2 0x3F3A PUSH2 0x3F74 DUP12 PUSH2 0x3F46 DUP13 DUP9 PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x5845C8B965119358C29037DC6226E8F2195E0D03C7D2055C52FB161F57928741 SWAP1 PUSH2 0x3EE0 ADDRESS PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 CHAINID SWAP6 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3F58 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3F63 PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x3F7F PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 DUP5 PUSH2 0x5D29 JUMP JUMPDEST PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x3FAA PUSH2 0x3F99 DUP3 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x3FA5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x293A JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x0 DUP9 CALLER PUSH2 0x53A6 JUMP JUMPDEST PUSH2 0x1C6F DUP8 DUP8 DUP4 PUSH2 0x2057 JUMP JUMPDEST SWAP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 PUSH2 0x2DFA PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3C9B JUMP JUMPDEST PUSH2 0x3FEC PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5E3A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x3FE1 JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP2 PUSH2 0x400C PUSH2 0x577A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4019 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x435D JUMP JUMPDEST ISZERO PUSH2 0x4025 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4069 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x526577617264206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F7420616374697665207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F742061637469766520616E796D6F726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4151 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F74207374616B6564206C6F6E6720656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x419D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C726561647920636C61696D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x41E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20636C61696D20746865207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1DD85C99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x4259 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x1C14 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x423A JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x427D PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x2BE6 PUSH2 0x120 PUSH2 0x517 SWAP5 PUSH2 0x429E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AC PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x42D5 PUSH2 0x42CC PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x42EC PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x432D PUSH1 0x5 DUP7 ADD PUSH2 0x4320 PUSH2 0x431A PUSH1 0xA0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x426D JUMP JUMPDEST PUSH2 0x433B PUSH2 0x2B91 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x434A PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4284 JUMP JUMPDEST SWAP1 PUSH2 0x4367 DUP2 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4370 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x437B DUP3 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4384 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x4391 DUP4 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO PUSH2 0x439C SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH2 0x43A7 DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43B0 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH2 0x43BC DUP3 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43C5 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH2 0x43D5 SWAP1 PUSH2 0x4062 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x43E6 SWAP1 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x43F7 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x440A DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4414 SWAP1 TIMESTAMP PUSH2 0x413D JUMP JUMPDEST LT ISZERO PUSH2 0x441F SWAP1 PUSH2 0x414A JUMP JUMPDEST DUP6 PUSH2 0x442B DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x4435 SWAP2 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x5 ADD PUSH2 0x4441 SWAP1 PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0x444B SWAP1 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH2 0x4508 SWAP3 PUSH2 0x44DD SWAP2 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x447B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4575 JUMPI JUMPDEST POP PUSH2 0x41E2 JUMP JUMPDEST PUSH2 0x44B7 PUSH2 0x448F PUSH2 0x448A DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP6 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44B0 PUSH2 0x449A PUSH2 0x3A1E JUMP JUMPDEST SWAP7 PUSH2 0x44A5 DUP13 DUP7 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B15 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x44C2 TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x44E8 PUSH2 0x2DB1 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x44F4 TIMESTAMP PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4503 DUP6 PUSH2 0x16C9 DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4353 JUMP JUMPDEST PUSH32 0x7EF1954A47BCF45F29BBC3B53D86DF999B6F295782796AC65EA2DF0347116935 PUSH2 0x4570 PUSH2 0x455B PUSH2 0x4555 PUSH2 0x454F PUSH2 0x4549 PUSH1 0x40 PUSH2 0x4543 DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP5 PUSH2 0x4565 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x4582 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST CODESIZE PUSH2 0x4475 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3FFF JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x45A0 PUSH2 0x5459 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x45AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45E6 JUMPI DUP1 PUSH2 0x45CA PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x45E1 SWAP5 DUP8 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 DUP7 PUSH2 0x45DC PUSH2 0x1DBB DUP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x515B JUMP JUMPDEST PUSH2 0x45AD JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x0 PUSH2 0x460D PUSH2 0x4613 SWAP4 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4627 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x905D981207A7D0B6C62CC46AB0BE2A076D0298E4A86D0AB79882DBD01AC37378 SWAP2 PUSH2 0x67D DUP2 PUSH1 0x11 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4618 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x3 PUSH2 0x1CA4 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2DFA PUSH2 0x46B2 PUSH2 0x3FC1 CALLER PUSH2 0x1C6F DUP8 PUSH2 0x46AD DUP9 PUSH2 0x46A8 DUP6 PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST SWAP4 PUSH2 0x553 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x16C9 PUSH2 0x46D7 SWAP3 PUSH2 0x46CF PUSH2 0x3A68 JUMP JUMPDEST POP PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3B99 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4753 JUMP JUMPDEST ISZERO PUSH2 0x46F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C99081A5CC81B9BDD0818DB185A5B5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1B12 PUSH2 0x517 SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x4760 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x477C PUSH2 0x4777 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH2 0x16C9 DUP7 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x46F2 JUMP JUMPDEST PUSH32 0x7DE9B19A9A16075E228395248AD5311FFAB7748C0525BD16AB44912A968161C3 PUSH2 0x4570 PUSH2 0x47ED PUSH2 0x4555 PUSH2 0x454F PUSH2 0x47E7 PUSH1 0x40 PUSH2 0x47C0 PUSH2 0x46D7 DUP11 PUSH2 0x16C9 DUP12 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x47D2 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP11 PUSH2 0x100 DUP3 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x47F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x4736 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46DC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x481D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x482A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x4847 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x486C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x485B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1820 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x482A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x480D JUMP JUMPDEST PUSH2 0x4883 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x487B JUMP JUMPDEST PUSH2 0x3350 PUSH2 0x52D SWAP2 PUSH2 0x48BE PUSH2 0x48A7 JUMP JUMPDEST POP PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x48D5 DUP2 DUP6 DUP6 PUSH2 0x2057 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x48E4 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x48F0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD SWAP4 PUSH2 0x1CC3 SWAP4 PUSH2 0x5EDE JUMP JUMPDEST PUSH2 0x490A JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x48EA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP2 PUSH2 0x3F46 PUSH2 0x493D SWAP3 PUSH2 0x3F3A SWAP5 PUSH2 0x492B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x4948 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x495B PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x49C0 JUMP JUMPDEST ISZERO PUSH2 0x4967 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20666F72636520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A3432903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x49CC PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x49EB PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x4A03 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST SWAP6 PUSH2 0x4A0C PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4A18 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x4A2A JUMPI POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3414 SWAP1 PUSH2 0x4A47 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x494C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A66 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4B0D JUMP JUMPDEST ISZERO PUSH2 0x4A72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ABE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1C95 PUSH2 0x4B9B PUSH32 0xF25FD82F8BF40DF41B90B95A0159C55596F50B182D7B7DFF1D3E04A5A16AC7C4 SWAP3 PUSH2 0x4B41 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4B55 PUSH2 0x4B50 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x4B5F PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 SUB PUSH2 0x4BAF JUMPI JUMPDEST PUSH2 0x4B74 PUSH2 0x23C4 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4B83 DUP6 PUSH2 0x2190 DUP4 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23CB PUSH2 0x4B90 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x2190 DUP4 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP DUP4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x4BBA TIMESTAMP DUP7 GT PUSH2 0x4AB7 JUMP JUMPDEST PUSH2 0x4B66 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A56 JUMP JUMPDEST PUSH2 0x4BD7 SWAP1 PUSH2 0x52D SWAP4 SWAP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x4BE9 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4BF1 PUSH2 0x5FAB JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4C00 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x4C31 JUMPI PUSH2 0x52D PUSH2 0x3F3A SWAP2 PUSH2 0x4C19 PUSH2 0x52D SWAP5 PUSH2 0x5FDD JUMP JUMPDEST SWAP1 PUSH2 0x4C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x4BC9 JUMP JUMPDEST POP POP PUSH2 0x52D PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C4A PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x4C5A PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x23B6 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C3B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C80 PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4CA3 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x4CAE PUSH2 0x48A7 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x4C97 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x4CC8 PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4C94 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SWAP3 PUSH2 0x4CE2 DUP5 PUSH2 0x4CB8 JUMP JUMPDEST SWAP3 PUSH2 0x4CED PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x4D42 JUMPI PUSH2 0x4D3B DUP2 PUSH2 0x4D0E PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x4CEF SWAP6 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D1F PUSH2 0x13BC PUSH2 0x1DBB DUP4 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D29 DUP3 DUP10 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE PUSH2 0x4D34 DUP2 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CED JUMP JUMPDEST POP SWAP4 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x46A8 PUSH2 0x4613 SWAP3 PUSH2 0x4D5D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D74 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4DA2 SWAP1 PUSH2 0x4D90 PUSH2 0x4D8B PUSH1 0x4 PUSH2 0x324A DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x385EED96CA33F0DA03D900751711FF4392ADF11BE79222F4AA99F92E71A1DA4F PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DEE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4E03 SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x4DFE PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4C8A JUMP JUMPDEST PUSH32 0x4A84A984790B90CDC99ACB8CF998C3F36E0EFEFD6A3F5B47DCAF480F6A1862C2 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DDF JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E42 PUSH2 0x5BCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4D DUP2 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4E71 JUMPI POP POP PUSH2 0x517 SWAP1 PUSH2 0x5C10 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4EA4 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x501F JUMP JUMPDEST ISZERO PUSH2 0x4EB0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4EFC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E207374616B652074686520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4F54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D65206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7265 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH2 0x500E PUSH1 0xA0 PUSH2 0x517 SWAP5 PUSH2 0x4FBD PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FDD PUSH2 0x4FD4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x4FEB PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FF9 PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5007 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4FA4 JUMP JUMPDEST PUSH2 0x502B PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5046 PUSH2 0x5041 PUSH2 0x1CC3 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4EA9 JUMP JUMPDEST PUSH2 0x5055 PUSH2 0x3E92 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x505D PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x5069 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x513C JUMPI JUMPDEST POP PUSH32 0x30441850B15FD31A9413CD27711113D1430F46DD517499B60A5D8365FA375BF0 PUSH2 0x2DFA PUSH2 0x5122 PUSH2 0x3FC1 PUSH2 0x50A2 DUP6 PUSH2 0x37BE JUMP JUMPDEST SWAP5 PUSH2 0x50AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP8 SUB PUSH2 0x512C JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x50BF PUSH2 0x31C7 JUMP JUMPDEST PUSH2 0x50C7 DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x50E1 TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x50EC DUP10 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x511C PUSH2 0x50F9 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x5105 DUP4 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x5117 DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5015 JUMP JUMPDEST DUP3 PUSH2 0x4BBF JUMP JUMPDEST SWAP4 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5137 TIMESTAMP DUP9 GT PUSH2 0x4F4D JUMP JUMPDEST PUSH2 0x50B4 JUMP JUMPDEST PUSH2 0x5155 SWAP1 PUSH2 0x514F PUSH2 0x20AB PUSH2 0x3437 DUP6 PUSH2 0x37BE JUMP JUMPDEST EQ PUSH2 0x4EF5 JUMP JUMPDEST CODESIZE PUSH2 0x506E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4E97 JUMP JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5184 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x606A JUMP JUMPDEST PUSH2 0x517 SWAP1 CALLER SWAP1 PUSH2 0x6093 JUMP JUMPDEST PUSH2 0x530 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x517 SWAP3 SWAP5 SWAP4 PUSH2 0xA14 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5200 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x51DA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x51C7 JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH2 0x523A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x522C PUSH2 0x5226 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x4249 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x51F0 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x5207 JUMP JUMPDEST SWAP1 PUSH2 0x5256 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5260 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x52E5 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x5272 DUP4 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x52C8 JUMPI POP PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x52B1 PUSH2 0x52C1 SWAP3 PUSH2 0x52A0 PUSH2 0x51BD JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x51A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5326 PUSH2 0x11E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x5331 JUMPI POP POP JUMP JUMPDEST PUSH2 0x533E PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST DUP3 LT PUSH2 0x5348 JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x535B PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x536A PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x537E JUMPI PUSH2 0x5379 SWAP2 POP PUSH2 0x52FF JUMP JUMPDEST PUSH2 0x534D JUMP JUMPDEST POP PUSH2 0x5399 PUSH2 0x538A PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5394 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x53B0 DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x5434 JUMPI JUMPDEST PUSH2 0x5415 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 PUSH2 0x53E3 SWAP3 PUSH2 0x1C6F DUP7 PUSH1 0x0 PUSH2 0x53D7 DUP9 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD PUSH2 0x4249 JUMP JUMPDEST SWAP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x540E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4570 JUMP JUMPDEST PUSH2 0x5422 PUSH2 0x1CC3 CALLER DUP4 PUSH2 0x4D4A JUMP JUMPDEST ISZERO PUSH2 0x53BC JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST POP CALLER PUSH2 0x5448 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO PUSH2 0x53B7 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x5461 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x5467 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH2 0x5486 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x548E PUSH2 0x11E2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x549B PUSH2 0x11E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54B0 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x54C1 PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x54CE DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x54F2 JUMPI POP POP PUSH2 0x54EA PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x54A3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x5502 PUSH2 0x52D DUP5 PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54A3 JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x551F PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x5529 DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x5551 JUMPI POP POP PUSH2 0x553F PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST EQ PUSH2 0x52D JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x5511 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5574 SWAP2 PUSH2 0x556C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x5589 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x55EC JUMP JUMPDEST ISZERO PUSH2 0x5595 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x55FA PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST SWAP2 PUSH2 0x560D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 PUSH2 0x569F JUMPI JUMPDEST POP POP PUSH2 0x5620 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x562C PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x5699 JUMPI PUSH2 0x566A DUP2 PUSH2 0x5646 PUSH2 0x562E SWAP4 DUP8 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x564E PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x565D PUSH2 0x1CC3 CALLER DUP1 SWAP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x5671 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x562C JUMP JUMPDEST PUSH2 0x5692 SWAP2 DUP2 PUSH2 0x5688 PUSH2 0x3E92 PUSH2 0x1CC3 PUSH2 0x568D SWAP6 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x558E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x5662 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x56B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x557A JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE8 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x56E4 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x56F6 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5721 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x575B PUSH2 0x5760 SWAP2 PUSH2 0x52D SWAP5 SWAP4 PUSH2 0x573A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5755 PUSH2 0x5750 PUSH2 0x5749 PUSH2 0x56C9 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x56E9 JUMP JUMPDEST SWAP2 PUSH2 0x60C2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST PUSH2 0x5710 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x2710 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x5784 PUSH1 0xA PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x578C PUSH2 0x5770 JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x579E JUMPI PUSH2 0x517 SWAP1 PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57C5 PUSH2 0x57B0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x57E0 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x57ED DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ PUSH2 0x5935 JUMPI DUP1 PUSH2 0x5879 SWAP3 PUSH2 0x584F PUSH2 0x5844 PUSH2 0x5807 DUP8 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5813 DUP5 DUP11 DUP8 DUP5 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x582F PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL SWAP2 PUSH2 0x5827 DUP11 PUSH2 0x11D5 JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2190 DUP9 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5897 PUSH2 0x206F PUSH1 0x1 SWAP4 PUSH2 0x208B PUSH2 0x587F PUSH2 0x5866 PUSH2 0x57CC JUMP JUMPDEST PUSH2 0x5870 PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x5710 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x64D DUP4 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x589F PUSH2 0x1FF8 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x5929 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x58B8 PUSH1 0x0 NOT PUSH2 0x1DCE JUMP JUMPDEST GT PUSH2 0x591C JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x58D4 JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x202F JUMP JUMPDEST ISZERO PUSH2 0x590A JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x58C1 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x58DA JUMPI DUP1 PUSH2 0x58C6 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x594F PUSH2 0x1CC3 DUP4 DUP4 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x596A PUSH1 0x1 PUSH2 0x46AD DUP5 PUSH1 0x0 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x5978 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x59BD DUP3 DUP3 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x59D7 PUSH1 0x0 PUSH2 0x46AD DUP5 DUP3 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x59E5 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A18 PUSH2 0x60CD JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A46 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x5A3F PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5A20 JUMP JUMPDEST PUSH2 0x5A52 PUSH1 0x0 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A10 JUMP JUMPDEST SWAP1 PUSH2 0x5A8E DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP3 DUP4 ISZERO PUSH2 0x5ACA JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x5AB8 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5399 SWAP2 SWAP3 POP PUSH2 0x3437 PUSH2 0x20AB SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x5AD7 SWAP2 SWAP4 POP DUP3 SWAP1 PUSH2 0x4D4A JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5AAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 SWAP2 PUSH2 0x60FA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x5B16 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5B20 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x5BB5 JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x5B32 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x5B91 JUMPI POP SWAP2 PUSH2 0x5B85 PUSH2 0x5B8C SWAP3 PUSH2 0x5B75 PUSH2 0x517 SWAP7 SWAP6 PUSH2 0x5B64 PUSH2 0x51BD JUMP JUMPDEST SWAP7 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 REVERT JUMPDEST PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 PUSH2 0x34B3 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x5AE9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x5BE6 DUP3 PUSH2 0x20AB JUMP JUMPDEST SUB PUSH2 0x5BEE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5C33 PUSH2 0x33C0 PUSH2 0x5C28 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C6F DUP5 PUSH1 0x9 PUSH2 0x4249 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x5C5E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA JUMP JUMPDEST SWAP1 PUSH2 0x64D PUSH2 0x35CE PUSH1 0x20 SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x11D5 JUMP JUMPDEST ISZERO PUSH2 0x5CA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202773272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA14 PUSH2 0x517 SWAP5 PUSH2 0x5D16 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5D0C PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x5DB9 PUSH1 0x0 SWAP2 PUSH2 0x5D6C PUSH1 0x20 SWAP5 PUSH2 0x5D3E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5D5A PUSH2 0x5D4B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3F3A DUP10 DUP4 ADD SWAP2 DUP3 PUSH2 0x5C65 JUMP JUMPDEST PUSH2 0x5D65 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x6379 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5DAD PUSH2 0x5D7A DUP4 PUSH2 0x5C98 JUMP JUMPDEST PUSH2 0x5DA6 PUSH2 0x1DCE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x5CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CED JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x5DF4 JUMPI PUSH1 0x0 MLOAD PUSH2 0x5399 SWAP1 PUSH2 0x20AB SWAP1 SWAP3 PUSH2 0x566 PUSH2 0x5DE3 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x5D1D JUMP JUMPDEST PUSH2 0x5E01 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5E10 PUSH1 0x1 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5DF9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x5E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x52D SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5E8C SWAP1 PUSH2 0x5D16 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x5EB2 PUSH2 0x5EAC PUSH2 0x52D SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5ED9 JUMPI PUSH2 0x5ECE RETURNDATASIZE PUSH2 0x35C1 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5EF6 PUSH2 0x1C6F PUSH1 0x20 SWAP4 PUSH2 0x5EF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1C14 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x5F27 PUSH2 0x5F0B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x5F1C DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x5E63 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x5F7A JUMPI JUMPDEST POP PUSH2 0x5F5D JUMPI PUSH2 0x5F41 PUSH2 0x5EBF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5F50 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x490A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5F6C PUSH2 0x5EB2 PUSH2 0x5399 SWAP3 PUSH2 0x5E99 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5F9D SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FA4 JUMPI JUMPDEST PUSH2 0x5F95 DUP2 DUP4 PUSH2 0xA5D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5E4F JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5F34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F8B JUMP JUMPDEST PUSH2 0x52D PUSH1 0x10 PUSH2 0x1CA4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x5FD0 PUSH2 0x5FCA DUP5 PUSH2 0x35C1 JUMP JUMPDEST SWAP4 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x5FB5 JUMP JUMPDEST PUSH2 0x5FE6 DUP2 PUSH2 0x6419 JUMP JUMPDEST SWAP1 PUSH2 0x5FF7 PUSH1 0x1 SWAP3 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x6002 DUP5 PUSH2 0x5FBA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD DUP5 ADD SWAP1 JUMPDEST PUSH2 0x6015 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6065 JUMPI PUSH2 0x6049 SWAP1 PUSH1 0x0 NOT ADD SWAP3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP5 MSTORE8 PUSH2 0x26E2 PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x6058 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x6065 JUMPI SWAP1 SWAP2 DUP2 PUSH2 0x600A JUMP JUMPDEST PUSH2 0x600F JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x6089 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x65BB JUMP JUMPDEST SWAP1 PUSH2 0x60A1 PUSH2 0x1CC3 DUP3 DUP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x60A9 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST POP POP POP PUSH2 0x52D PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x60D8 PUSH2 0x1CC3 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x60DE JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x80 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6103 DUP2 PUSH2 0x5493 JUMP JUMPDEST SWAP1 PUSH2 0x6110 PUSH2 0x208B DUP4 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x6119 DUP3 PUSH2 0x555D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6286 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 DUP5 SWAP4 PUSH2 0x517 SWAP8 PUSH2 0x61F4 SWAP5 PUSH2 0x6151 SWAP9 SWAP8 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x6143 DUP3 PUSH2 0x25FA JUMP JUMPDEST SWAP11 PUSH2 0x615A DUP13 PUSH1 0x1 SWAP15 DUP16 PUSH2 0x11D5 JUMP JUMPDEST SWAP6 DUP7 SWAP2 DUP11 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x627E JUMPI JUMPDEST POP POP PUSH2 0x618B PUSH2 0x617D DUP3 PUSH2 0x6179 PUSH2 0x6173 PUSH2 0x60F0 JUMP JUMPDEST DUP3 PUSH2 0x5710 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP8 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x6193 PUSH2 0x530C JUMP JUMPDEST SWAP1 PUSH2 0x61C2 PUSH2 0x619F PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP4 OR PUSH2 0x61AD DUP6 DUP14 DUP10 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x61D3 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP13 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x61E5 PUSH2 0x61DF DUP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP6 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x622F JUMPI JUMPDEST POP POP POP POP PUSH2 0x1C14 JUMP JUMPDEST SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x621F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP9 ADD SWAP3 PUSH2 0x623F PUSH2 0x2208 DUP6 DUP5 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x624B PUSH2 0x1DCE DUP4 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x61EB JUMPI PUSH2 0x52D PUSH2 0x625C SWAP2 PUSH2 0x1487 JUMP JUMPDEST DUP4 SUB PUSH2 0x6269 JUMPI JUMPDEST DUP1 PUSH2 0x61EB JUMP JUMPDEST PUSH2 0x6276 SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x6263 JUMP JUMPDEST SSTORE DUP3 CODESIZE PUSH2 0x615F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 EQ DUP6 DUP3 EQ OR ISZERO PUSH2 0x62A3 JUMPI JUMPDEST POP PUSH2 0x6121 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x62B4 SWAP2 DUP5 SWAP4 SWAP7 SWAP6 SWAP5 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE PUSH2 0x629D JUMP JUMPDEST ISZERO PUSH2 0x62C8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6334 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202776272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6398 PUSH2 0x6385 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6392 PUSH2 0x1DCE PUSH1 0x41 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x62C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP2 PUSH2 0x63B6 PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND LT PUSH2 0x63FE JUMPI JUMPDEST PUSH2 0x63CA PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND EQ DUP1 ISZERO PUSH2 0x63E4 JUMPI JUMPDEST PUSH2 0x63DF SWAP1 PUSH2 0x632D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP PUSH2 0x63DF PUSH2 0x63F2 PUSH1 0x1C PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP6 AND EQ SWAP1 POP PUSH2 0x63D6 JUMP JUMPDEST SWAP2 PUSH2 0x6413 SWAP1 PUSH2 0x640D PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST SWAP1 PUSH2 0x631A JUMP JUMPDEST SWAP2 PUSH2 0x63C0 JUMP JUMPDEST PUSH2 0x6423 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 PUSH2 0x6449 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6599 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH2 0x646A DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6577 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 PUSH2 0x6484 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6555 JUMPI JUMPDEST POP PUSH4 0x5F5E100 PUSH2 0x649B DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6533 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x64B0 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6511 JUMPI JUMPDEST POP PUSH2 0x64C3 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x64EF JUMPI JUMPDEST PUSH2 0x64D8 PUSH2 0x1DCE PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST LT ISZERO PUSH2 0x64E1 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6500 PUSH2 0x650B SWAP2 PUSH2 0x26E2 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH2 0x64CB JUMP JUMPDEST PUSH2 0x652C SWAP2 PUSH2 0x26E2 PUSH2 0x6521 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64B8 JUMP JUMPDEST PUSH2 0x654E SWAP2 PUSH2 0x26E2 PUSH2 0x6543 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64A3 JUMP JUMPDEST PUSH2 0x6570 SWAP2 PUSH2 0x26E2 PUSH2 0x6565 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x10 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x648C JUMP JUMPDEST PUSH2 0x6592 SWAP2 PUSH2 0x26E2 PUSH2 0x6587 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x20 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6472 JUMP JUMPDEST PUSH2 0x65B4 SWAP2 PUSH2 0x26E2 PUSH2 0x65A9 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6451 JUMP JUMPDEST PUSH2 0x5399 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x5F6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x2C 0x21 STOP SWAP9 LOG4 PUSH28 0xBF27B9194CEAB9E7606AC7DA4D41D66802AD6E129D7B1882F264736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"548:34314:15:-:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;-1:-1:-1;;548:34314:15;;;:::o;:::-;;;;;;;;-1:-1:-1;;548:34314:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;548:34314:15;;:::o;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;-1:-1:-1;;548:34314:15;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;548:34314:15;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;-1:-1:-1;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;2187:49:0:-;2232:4;;;:::i;740:24:15:-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;740:24:15;;;;;548:34314::o;740:24::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;548:34314:15;740:24;548:34314;740:24;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;740:24;;;;;;;;;548:34314;;740:24;;;;;548:34314;;740:24;-1:-1:-1;;;;;740:24:15;;;3116:1193;;;;3486:23;4266:35;3116:1193;3447:28;3865:339;3116:1193;3414:22;4062:11;3116:1193;;3520:27;3116:1193;;;;:::i;:::-;3414:22;;:::i;:::-;3447:28;;:::i;:::-;3486:23;;:::i;:::-;3520:27;;:::i;:::-;3558:22;3575:5;3558:22;;:::i;:::-;3591;;3575:5;3591:22;:::i;:::-;;;:::i;:::-;3705:44;3716:18;;;:::i;:::-;3705:44;:::i;:::-;-1:-1:-1;3760:37:15;3771:11;740:24;3705:44;:::i;3760:37::-;;548:34314;;4062:11;4052:22;;;548:34314;;;4052:22;;740:24;;;;4052:22;;3909:284;4103:10;;:::i;:::-;4093:21;;;548:34314;;;4093:21;;4173:4;4165:13;4173:4;4165:13;:::i;:::-;3909:284;;;548:34314;;;;3909:284;;;;;;;4133:13;;3909:284;3938:95;3909:284;;:::i;:::-;;;;;;;;;:::i;:::-;3885:319;;;548:34314;;;3885:319;;3865:339;;:::i;:::-;4266:35;3575:5;4266:35;:::i;:::-;;;:::i;1106:4264:4:-;;;;;;;;;;;;;226:3116:1;:::i;1818:40:8:-;1857:1;;;:::i;2037:52::-;;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;615:2090:7:-;;;;;;:::i;548:34314:15:-;;;;;;;;;;;:::i;1225:187:2:-;;;;;:::i;:::-;1297:1;1289:10;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;1273:26:2;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:2;;-1:-1:-1;;;;;548:34314:15;1322:31:2;;;740:24:15;548:34314;;1322:31:2;624:338:5;;;5350:17:17;;5327:13;;;;:::i;:::-;5350:17;;:::i;:::-;5393:15;;:::i;:::-;5377:31;;;;:::i;:::-;5423:35;;-1:-1:-1;;5423:35:17;548:34314:15;;5423:35:17;;548:34314:15;;5423:35:17;;5419:81;;5261:246::o;5419:81::-;-1:-1:-1;;;5468:31:17;:::i;548:34314:15:-;;;;;;;;;;;:::o;:::-;;;;;:::i;6179:316:0:-;6276:23;6277:22;;;;:::i;:::-;6276:23;;548:34314:15;6276:23:0;6272:217;;;6315:36;6347:4;6315:29;:12;:20;:12;;:6;:12;:::i;:::-;:20;:29;:::i;:::-;:36;:::i;:::-;6370:40;;;735:10:5;6370:40:0;548:34314:15;;6370:40:0;;;:::i;:::-;;;:::i;:::-;;;;548:34314:15;;;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;6473:5;6466:12;:::o;548:34314:15:-;;;;;-1:-1:-1;;;;;740:24:15;548:34314;740:24;548:34314;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;740:24;;548:34314;;;;:::i;:::-;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;;548:34314:15;;;;;;;;;;-1:-1:-1;;;;;740:24:15;548:34314;740:24;548:34314;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;:::i;:::-;;;-1:-1:-1;;;;;740:24:15;548:34314;;;;;:::i;:::-;;;;;:::i;3666:507:4:-;;3760:39;3782:17;;:::i;:::-;3760:39;:::i;:::-;3813:26;;;;:::i;:::-;;3809:173;;4015:1;;4007:10;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;3995:22:4;3991:108;;4131:35;4109:57;4131:35;;;;;;;:::i;:::-;;;;548:34314:15;-1:-1:-1;;;;;548:34314:15;740:24;;;4131:35:4;-1:-1:-1;;;;;740:24:15;4131:35:4;;;740:24:15;;4131:35:4;4109:57;;:::i;3991:108::-;-1:-1:-1;;;4040:48:4;;-1:-1:-1;;;;;548:34314:15;4040:48:4;;;740:24:15;548:34314;4040:48:4;1322:31:2;3809:173:4;-1:-1:-1;;;3916:55:4;;;;;;;;;;:::i;:::-;;;;548:34314:15;;;;740:24;548:34314;;;;;:::i;2912:187:2:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;;548:34314:15;;;;3052:40:2;;;;2912:187::o;49703:160:17:-;49766:91;;;;;2854:136:0;2954:29;2854:136;2954:20;:12;:29;2854:136;2931:4;548:34314:15;;;2931:4:0;2954:12;:6;:12;:::i;:29::-;548:34314:15;;;;;3310:95:4;3386:12;3393:5;3386:12;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1515,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":6441,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":2305,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_bytes":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_addresst_addresst_uint256t_bytest_uint256":{"entryPoint":4194,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_addresst_bool":{"entryPoint":4623,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256":{"entryPoint":1765,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256t_uint256":{"entryPoint":3043,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_uint96":{"entryPoint":1450,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":1820,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn_calldata_ptr":{"entryPoint":1867,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn_calldatat_uint256":{"entryPoint":2417,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":2751,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":3331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_address":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes4":{"entryPoint":1305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":24130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":3375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_memory_ptr":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_uint256t_stringt_stringt_stringt_uint256t_uint256t_uint256":{"entryPoint":2825,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_t_bool":{"entryPoint":3318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":1290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":3619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_bytes4_fromMemory":{"entryPoint":24143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":1679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_addresst_uint96":{"entryPoint":3436,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256t_uint256":{"entryPoint":2523,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256t_uint256t_string":{"entryPoint":4812,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint96":{"entryPoint":1437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":5775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_ClaimedReward":{"entryPoint":3981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_StakedToken":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_bytes":{"entryPoint":24163,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":2551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_ClaimedReward_dyn":{"entryPoint":4099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_ClaimedReward_memory_ptr_dyn_memory_ptr":{"entryPoint":3991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_StakedToken_dyn":{"entryPoint":6384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_StakedToken_memory_ptr_dyn_memory_ptr":{"entryPoint":6301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_address_address_uint256_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_uint8_bytes32_bytes32":{"entryPoint":23789,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_string":{"entryPoint":11288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_string_string":{"entryPoint":19401,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_stringliteral_178a_bytes32":{"entryPoint":23653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_stringliteral_301a_bytes32_bytes32":{"entryPoint":15769,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":11255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr_to_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":5643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_uint256":{"entryPoint":18230,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_004c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_010d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_074e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_07de":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_09b0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1462":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_178a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_301a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_38ec":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_38ecd89afeedea203d4db2e72466d06be07086444823a8c71beae0d2f049c419":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_39ee":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_41c6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4c9e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4f2d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5136":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_547b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7065":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_71c5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_759b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_79fa":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_79fada3f5e1d0b5d490e9b700b2e9dafc65cb557074fb0d1b52195d859bcc6d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7b81":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7ed0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7ed0f15dfb64fb979a1cd1635c4724637aaba53e52d73f451c3f9abd68a7e532":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8319":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8acb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8b90":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8e19":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8f92":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9034":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9766":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a3fa":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a4a2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a4a27a2e2c82d8782cc0401b203bdf7659e1e61d1765c5fb525048693d8d859b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a5ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b1e5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b1e57e3ca654459218e44002e03f901f814d7054ebea87141d0bfcd9d990b3df":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bb38":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bb6e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bf4a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bf4a2b64c8834b64b6189cb7ee4330ec6c83a868ebec40c39af9040a519ce8fd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c155":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c176":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c1761b687ec402ab45018b4fc7d907dcbd8cc8c7218d81c8b9f46ed9d8bd0f99":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c36f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c52d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c652":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cf40":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d0e5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d51c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d51c9ba6c02dcfa58f540c16f573b090d0ef0ca395b66ef2a5123d3136c9c4dd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_da5e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_dde1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_dde1024abc3b759bd1437c752cadc5933d79b76037a6e5368f0bcceab7577632":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ecc3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ecc3cba37814dfc63104d0e1ea071ecd6ae3db1a6ac05168561f45f17cc78957":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f50d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_ClaimedReward":{"entryPoint":3837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Reward":{"entryPoint":2188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Reward_memory_ptr":{"entryPoint":2002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_StakedToken":{"entryPoint":4927,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_004c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_07de":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_09b0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_1462":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_41c6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_4791":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_5136":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_547b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_7065":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_71c5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_759b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_7b81":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8319":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8acb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8b90":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8e19":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8f92":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_a3fa":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_a5ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_bb38":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_c155":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_c36f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_c52d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_c652":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_cf40":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_da5e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_f50d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_struct_ClaimedReward":{"entryPoint":4683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_struct_StakedToken":{"entryPoint":5014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_address_uint256_uint256_uint256_bool":{"entryPoint":5377,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_uint256_string_string_string_uint256_uint256_uint256":{"entryPoint":11325,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_uint256_string_uint256_string_bool_uint256_uint256_uint256_string_string_uint256":{"entryPoint":6777,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":13602,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_address_uint256_uint256_bool_bool_uint256_string_uint256":{"entryPoint":5972,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":12329,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256_uint96_uint256":{"entryPoint":23273,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint96":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint96_to_uint256":{"entryPoint":20889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint96_to_uint96":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint96_uint256":{"entryPoint":20898,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_ClaimedReward_dyn":{"entryPoint":14996,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_StakedToken_dyn":{"entryPoint":19640,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":24506,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_ClaimedReward":{"entryPoint":14889,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Reward":{"entryPoint":7790,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_StakedToken":{"entryPoint":18555,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2691,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_ClaimedReward_dyn":{"entryPoint":14865,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_StakedToken_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":13761,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_ClaimedReward":{"entryPoint":14878,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_Reward":{"entryPoint":7779,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_RoyaltyInfo_storage_ptr":{"entryPoint":20925,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_StakedToken":{"entryPoint":12743,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_ClaimedReward_dyn":{"entryPoint":14842,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":2711,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_ClaimedReward_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_uint256_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_ClaimedReward_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":7469,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":12050,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint8":{"entryPoint":25370,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9821,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9775,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":16701,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":10661,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":1382,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint24":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":10630,"id":null,"parameterSlots":2,"returnSlots":0},"constant_BITMASK_ADDRESS":{"entryPoint":8184,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_ADDRESS_DATA_ENTRY":{"entryPoint":14699,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_BURNED":{"entryPoint":21260,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_NEXT_INITIALIZED":{"entryPoint":8266,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_EXTRA_DATA":{"entryPoint":22217,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_NUMBER_BURNED":{"entryPoint":24816,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_NUMBER_MINTED":{"entryPoint":22476,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":4578,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ENTERED":{"entryPoint":22384,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ESCROW_ROLE":{"entryPoint":3663,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":22448,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TYPE_HASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":7188,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_ERC721A_IERC721Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":7332,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":23704,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_100000000000000000000000000000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1000000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_100000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_10000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_100_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_10_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1461501637330902918203684832716283019655932542975_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_16_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_18446744073709551615_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_232_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_4_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_64_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_65_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_8_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":9722,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":4565,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":25357,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_c5d2_to_bytes":{"entryPoint":13789,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_ClaimedReward_storage_to_struct_ClaimedReward":{"entryPoint":15257,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Reward_storage_to_struct_Reward":{"entryPoint":8129,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_StakedToken_storage_to_struct_StakedToken":{"entryPoint":12889,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint96":{"entryPoint":7053,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":7179,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":7159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":8166,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint24_to_uint256":{"entryPoint":22270,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint160":{"entryPoint":8200,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint24":{"entryPoint":22249,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":24217,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint96_to_uint256":{"entryPoint":9731,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint96_to_uint96":{"entryPoint":20954,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5785,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":10738,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2739,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":13779,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1526,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_ClaimedReward_to_struct_ClaimedReward":{"entryPoint":17028,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Reward_to_struct_Reward":{"entryPoint":10990,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_RoyaltyInfo_to_struct_RoyaltyInfo":{"entryPoint":20999,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_StakedToken_to_struct_StakedToken":{"entryPoint":20388,"id":null,"parameterSlots":2,"returnSlots":0},"decrement_uint256":{"entryPoint":21247,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":4596,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ESCROW_ROLE":{"entryPoint":3707,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_activateReward":{"entryPoint":3556,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addReward":{"entryPoint":3009,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":1800,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_averageBlockTime":{"entryPoint":2278,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":3759,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_batchMint":{"entryPoint":3084,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":3286,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimReward":{"entryPoint":4334,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimedRewards":{"entryPoint":6071,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deactivateReward":{"entryPoint":6497,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_domainSeparator":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_escrowTransfer":{"entryPoint":4282,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_forceUnlockToken":{"entryPoint":6157,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_forceUnlockTokenBatch":{"entryPoint":4902,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_forceUnstakeToken":{"entryPoint":5199,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_forceUnstakeTokenBatch":{"entryPoint":1908,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":1712,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getClaimedReward":{"entryPoint":4700,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getClaimedRewards":{"entryPoint":4116,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDomainSeparator":{"entryPoint":6521,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMessageHash":{"entryPoint":5171,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getReward":{"entryPoint":2205,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":2390,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getStakingStatus":{"entryPoint":5030,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getStakingStatusBatch":{"entryPoint":6401,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_globalLockupPeriod":{"entryPoint":4167,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantEscrowRole":{"entryPoint":3639,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":3168,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":4421,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":6469,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isTokenLocked":{"entryPoint":2496,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lockedAt":{"entryPoint":6261,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxSupply":{"entryPoint":6218,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintPrice":{"entryPoint":3592,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintingEnabled":{"entryPoint":4538,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1634,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nextRewardId":{"entryPoint":6560,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nonce":{"entryPoint":3786,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":4384,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":3529,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":4310,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":3502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":3813,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":3193,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeClaimedReward":{"entryPoint":4877,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeEscrowRole":{"entryPoint":6587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":6181,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rewards":{"entryPoint":6935,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_royaltyInfo":{"entryPoint":2584,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":5148,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_9955":{"entryPoint":3266,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":4658,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAverageBlockTime":{"entryPoint":3218,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBaseURI":{"entryPoint":3412,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setContractURI":{"entryPoint":4449,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDefaultRoyalty":{"entryPoint":1485,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setLockToken":{"entryPoint":5223,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setLockTokenBatch":{"entryPoint":2471,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMintingEnabled":{"entryPoint":3351,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setTokenRoyalty":{"entryPoint":3477,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setUnlockToken":{"entryPoint":2366,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setUnlockTokenBatch":{"entryPoint":3734,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stakeToken":{"entryPoint":6993,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stakeTokenBatch":{"entryPoint":4359,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stakedTokens":{"entryPoint":5462,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":1332,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":4473,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":6130,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1958,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":2346,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":6611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unlockScheduledAt":{"entryPoint":4785,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unlockedAt":{"entryPoint":5530,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":3242,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unstakeToken":{"entryPoint":3109,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unstakeTokenBatch":{"entryPoint":1933,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5601,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":4500,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":2244,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_0_bool":{"entryPoint":5265,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":14238,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_bool":{"entryPoint":5557,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":5248,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint96":{"entryPoint":9700,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":24255,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2653,"id":null,"parameterSlots":2,"returnSlots":0},"fun__approve":{"entryPoint":21414,"id":10662,"parameterSlots":3,"returnSlots":0},"fun__burn":{"entryPoint":23262,"id":10674,"parameterSlots":1,"returnSlots":0},"fun__checkRole":{"entryPoint":20878,"id":93,"parameterSlots":1,"returnSlots":0},"fun__pause":{"entryPoint":24122,"id":986,"parameterSlots":0,"returnSlots":0},"fun__pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun__revokeRole":{"entryPoint":22963,"id":294,"parameterSlots":2,"returnSlots":1},"fun__setDefaultRoyalty":{"entryPoint":21066,"id":740,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":23568,"id":525,"parameterSlots":1,"returnSlots":0},"fun_activateReward":{"entryPoint":14493,"id":8292,"parameterSlots":1,"returnSlots":0},"fun_activateReward_inner":{"entryPoint":14395,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addReward":{"entryPoint":11839,"id":8262,"parameterSlots":8,"returnSlots":0},"fun_addReward_inner":{"entryPoint":11406,"id":null,"parameterSlots":8,"returnSlots":0},"fun_approve":{"entryPoint":7414,"id":9597,"parameterSlots":2,"returnSlots":0},"fun_balanceOf":{"entryPoint":14715,"id":9136,"parameterSlots":1,"returnSlots":1},"fun_baseURI":{"entryPoint":24491,"id":6626,"parameterSlots":0,"returnSlots":1},"fun_batchMint":{"entryPoint":12649,"id":6616,"parameterSlots":3,"returnSlots":0},"fun_batchMint_inner":{"entryPoint":12358,"id":null,"parameterSlots":3,"returnSlots":0},"fun_beforeTokenTransfers":{"entryPoint":22205,"id":6762,"parameterSlots":4,"returnSlots":0},"fun_beforeTokenTransfers_inner":{"entryPoint":21996,"id":null,"parameterSlots":4,"returnSlots":0},"fun_burn":{"entryPoint":13897,"id":6805,"parameterSlots":1,"returnSlots":0},"fun_burn_10828":{"entryPoint":24826,"id":10828,"parameterSlots":2,"returnSlots":0},"fun_checkContractOnERC721Received":{"entryPoint":24286,"id":10077,"parameterSlots":4,"returnSlots":1},"fun_checkOwner":{"entryPoint":23503,"id":463,"parameterSlots":0,"returnSlots":0},"fun_checkRole":{"entryPoint":24723,"id":114,"parameterSlots":2,"returnSlots":0},"fun_claimReward":{"entryPoint":17800,"id":8476,"parameterSlots":2,"returnSlots":0},"fun_claimReward_inner":{"entryPoint":17245,"id":null,"parameterSlots":2,"returnSlots":0},"fun_deactivateReward":{"entryPoint":19916,"id":8321,"parameterSlots":1,"returnSlots":0},"fun_deactivateReward_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_escrowTransfer":{"entryPoint":16340,"id":7109,"parameterSlots":5,"returnSlots":0},"fun_escrowTransfer_inner":{"entryPoint":15868,"id":null,"parameterSlots":5,"returnSlots":0},"fun_exists":{"entryPoint":21273,"id":9720,"parameterSlots":1,"returnSlots":1},"fun_extraData":{"entryPoint":24770,"id":10887,"parameterSlots":3,"returnSlots":1},"fun_feeDenominator":{"entryPoint":22373,"id":694,"parameterSlots":0,"returnSlots":1},"fun_forceUnlockToken":{"entryPoint":19558,"id":7471,"parameterSlots":1,"returnSlots":0},"fun_forceUnlockTokenBatch":{"entryPoint":18545,"id":7520,"parameterSlots":2,"returnSlots":0},"fun_forceUnlockTokenBatch_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_forceUnlockToken_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_forceUnstakeToken":{"entryPoint":19021,"id":7909,"parameterSlots":1,"returnSlots":0},"fun_forceUnstakeTokenBatch":{"entryPoint":7674,"id":7949,"parameterSlots":2,"returnSlots":0},"fun_forceUnstakeTokenBatch_inner":{"entryPoint":7569,"id":null,"parameterSlots":2,"returnSlots":0},"fun_forceUnstakeToken_inner":{"entryPoint":18880,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getApproved":{"entryPoint":7351,"id":9622,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":21853,"id":9763,"parameterSlots":1,"returnSlots":2},"fun_getClaimedReward":{"entryPoint":18108,"id":8563,"parameterSlots":2,"returnSlots":1},"fun_getClaimedRewards":{"entryPoint":15266,"id":8650,"parameterSlots":1,"returnSlots":1},"fun_getDomainSeparator":{"entryPoint":19925,"id":7118,"parameterSlots":0,"returnSlots":1},"fun_getMessageHash":{"entryPoint":18711,"id":6524,"parameterSlots":3,"returnSlots":1},"fun_getReward":{"entryPoint":8138,"id":8335,"parameterSlots":1,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":9271,"id":128,"parameterSlots":1,"returnSlots":1},"fun_getStakingStatus":{"entryPoint":18607,"id":7963,"parameterSlots":1,"returnSlots":1},"fun_getStakingStatusBatch":{"entryPoint":19669,"id":8023,"parameterSlots":2,"returnSlots":1},"fun_grantEscrowRole":{"entryPoint":14580,"id":6323,"parameterSlots":1,"returnSlots":0},"fun_grantEscrowRole_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":22850,"id":256,"parameterSlots":2,"returnSlots":1},"fun_grantRole_147":{"entryPoint":13431,"id":147,"parameterSlots":2,"returnSlots":0},"fun_grantRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":17912,"id":80,"parameterSlots":2,"returnSlots":1},"fun_isApprovedForAll":{"entryPoint":19786,"id":9666,"parameterSlots":2,"returnSlots":1},"fun_isApprovedOrOwner":{"entryPoint":23172,"id":7151,"parameterSlots":2,"returnSlots":1},"fun_isSenderApprovedOrOwner":{"entryPoint":null,"id":9744,"parameterSlots":3,"returnSlots":1},"fun_isTokenLocked":{"entryPoint":9534,"id":7204,"parameterSlots":1,"returnSlots":1},"fun_log10":{"entryPoint":25625,"id":3963,"parameterSlots":1,"returnSlots":1},"fun_mint":{"entryPoint":22486,"id":10208,"parameterSlots":2,"returnSlots":0},"fun_msgSenderERC721A":{"entryPoint":null,"id":10930,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":7341,"id":9259,"parameterSlots":0,"returnSlots":1},"fun_nextExtraData":{"entryPoint":22310,"id":10920,"parameterSlots":3,"returnSlots":1},"fun_nextInitializedFlag":{"entryPoint":null,"id":9581,"parameterSlots":1,"returnSlots":1},"fun_nextTokenId":{"entryPoint":21583,"id":9031,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":22458,"id":1060,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":22394,"id":1052,"parameterSlots":0,"returnSlots":0},"fun_nonce":{"entryPoint":14782,"id":6355,"parameterSlots":1,"returnSlots":1},"fun_owner":{"entryPoint":null,"id":446,"parameterSlots":0,"returnSlots":1},"fun_ownerOf":{"entryPoint":14270,"id":9343,"parameterSlots":1,"returnSlots":1},"fun_packOwnershipData":{"entryPoint":null,"id":9571,"parameterSlots":2,"returnSlots":1},"fun_packedOwnershipExists":{"entryPoint":null,"id":9730,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":21651,"id":9505,"parameterSlots":1,"returnSlots":1},"fun_pause":{"entryPoint":16375,"id":6932,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":14260,"id":945,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":14834,"id":477,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_renounceRole":{"entryPoint":13441,"id":189,"parameterSlots":2,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":21593,"id":957,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":24781,"id":970,"parameterSlots":0,"returnSlots":0},"fun_revert":{"entryPoint":21405,"id":10948,"parameterSlots":1,"returnSlots":0},"fun_revokeClaimedReward":{"entryPoint":18434,"id":8545,"parameterSlots":3,"returnSlots":0},"fun_revokeClaimedReward_inner":{"entryPoint":18259,"id":null,"parameterSlots":3,"returnSlots":0},"fun_revokeEscrowRole":{"entryPoint":20013,"id":6342,"parameterSlots":1,"returnSlots":0},"fun_revokeEscrowRole_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_revokeRole":{"entryPoint":19594,"id":166,"parameterSlots":2,"returnSlots":0},"fun_revokeRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_royaltyInfo":{"entryPoint":9836,"id":685,"parameterSlots":2,"returnSlots":2},"fun_safeTransferFrom":{"entryPoint":18630,"id":9995,"parameterSlots":4,"returnSlots":0},"fun_safeTransferFrom_9955":{"entryPoint":13797,"id":9955,"parameterSlots":3,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":9022,"parameterSlots":0,"returnSlots":1},"fun_setApprovalForAll":{"entryPoint":18026,"id":9648,"parameterSlots":2,"returnSlots":0},"fun_setAverageBlockTime":{"entryPoint":13722,"id":6972,"parameterSlots":1,"returnSlots":0},"fun_setAverageBlockTime_inner":{"entryPoint":13621,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setBaseURI":{"entryPoint":14109,"id":6888,"parameterSlots":1,"returnSlots":0},"fun_setBaseURI_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setContractURI":{"entryPoint":18007,"id":6905,"parameterSlots":1,"returnSlots":0},"fun_setContractURI_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setDefaultRoyalty":{"entryPoint":7322,"id":6833,"parameterSlots":2,"returnSlots":0},"fun_setDefaultRoyalty_inner":{"entryPoint":7197,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setLockToken":{"entryPoint":19391,"id":7272,"parameterSlots":2,"returnSlots":0},"fun_setLockTokenBatch":{"entryPoint":9523,"id":7326,"parameterSlots":3,"returnSlots":0},"fun_setLockTokenBatch_inner":{"entryPoint":9394,"id":null,"parameterSlots":3,"returnSlots":0},"fun_setLockToken_inner":{"entryPoint":19213,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setMintingEnabled":{"entryPoint":14037,"id":6922,"parameterSlots":1,"returnSlots":0},"fun_setMintingEnabled_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setTokenRoyalty":{"entryPoint":23305,"id":800,"parameterSlots":3,"returnSlots":0},"fun_setTokenRoyalty_6871":{"entryPoint":14227,"id":6871,"parameterSlots":3,"returnSlots":0},"fun_setTokenRoyalty_inner":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"fun_setUnlockToken":{"entryPoint":9256,"id":7382,"parameterSlots":1,"returnSlots":0},"fun_setUnlockTokenBatch":{"entryPoint":14689,"id":7431,"parameterSlots":2,"returnSlots":0},"fun_setUnlockTokenBatch_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setUnlockToken_inner":{"entryPoint":9071,"id":null,"parameterSlots":1,"returnSlots":0},"fun_splitSignature":{"entryPoint":25465,"id":6477,"parameterSlots":1,"returnSlots":3},"fun_stakeToken":{"entryPoint":20827,"id":7657,"parameterSlots":2,"returnSlots":0},"fun_stakeTokenBatch":{"entryPoint":17901,"id":7699,"parameterSlots":3,"returnSlots":0},"fun_stakeTokenBatch_inner":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"fun_stakeToken_inner":{"entryPoint":20511,"id":null,"parameterSlots":2,"returnSlots":0},"fun_startTokenId":{"entryPoint":null,"id":9009,"parameterSlots":0,"returnSlots":1},"fun_supportsInterface":{"entryPoint":24682,"id":62,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_2497":{"entryPoint":26043,"id":2497,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_623":{"entryPoint":20837,"id":623,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_6780":{"entryPoint":7018,"id":6780,"parameterSlots":1,"returnSlots":1},"fun_symbol":{"entryPoint":18016,"id":9269,"parameterSlots":0,"returnSlots":1},"fun_toString":{"entryPoint":24541,"id":1186,"parameterSlots":1,"returnSlots":1},"fun_tokenURI":{"entryPoint":19421,"id":6668,"parameterSlots":1,"returnSlots":1},"fun_totalMinted":{"entryPoint":21625,"id":9090,"parameterSlots":0,"returnSlots":1},"fun_totalSupply":{"entryPoint":7771,"id":6679,"parameterSlots":0,"returnSlots":1},"fun_transferFrom":{"entryPoint":8279,"id":9936,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":20110,"id":505,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_unpause":{"entryPoint":23164,"id":1002,"parameterSlots":0,"returnSlots":0},"fun_unpause_6942":{"entryPoint":13753,"id":6942,"parameterSlots":0,"returnSlots":0},"fun_unpause_6942_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":23110,"id":null,"parameterSlots":0,"returnSlots":0},"fun_unstakeToken":{"entryPoint":13392,"id":7791,"parameterSlots":1,"returnSlots":0},"fun_unstakeTokenBatch":{"entryPoint":7761,"id":7830,"parameterSlots":2,"returnSlots":0},"fun_unstakeTokenBatch_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_unstakeToken_inner":{"entryPoint":13064,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifySignature":{"entryPoint":23849,"id":6430,"parameterSlots":3,"returnSlots":1},"getter_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":4588,"id":29,"parameterSlots":0,"returnSlots":1},"getter_fun_ESCROW_ROLE":{"entryPoint":3699,"id":6070,"parameterSlots":0,"returnSlots":1},"getter_fun_averageBlockTime":{"entryPoint":2266,"id":6079,"parameterSlots":0,"returnSlots":1},"getter_fun_claimedRewards":{"entryPoint":5818,"id":8079,"parameterSlots":2,"returnSlots":10},"getter_fun_globalLockupPeriod":{"entryPoint":4155,"id":6171,"parameterSlots":0,"returnSlots":1},"getter_fun_lockedAt":{"entryPoint":6245,"id":6175,"parameterSlots":1,"returnSlots":1},"getter_fun_maxSupply":{"entryPoint":6206,"id":6087,"parameterSlots":0,"returnSlots":1},"getter_fun_mintPrice":{"entryPoint":3580,"id":6089,"parameterSlots":0,"returnSlots":1},"getter_fun_mintingEnabled":{"entryPoint":4526,"id":6085,"parameterSlots":0,"returnSlots":1},"getter_fun_nextRewardId":{"entryPoint":6548,"id":8081,"parameterSlots":0,"returnSlots":1},"getter_fun_rewards":{"entryPoint":6635,"id":8072,"parameterSlots":1,"returnSlots":11},"getter_fun_stakedTokens":{"entryPoint":5284,"id":7538,"parameterSlots":1,"returnSlots":6},"getter_fun_unlockScheduledAt":{"entryPoint":4764,"id":6179,"parameterSlots":1,"returnSlots":1},"getter_fun_unlockedAt":{"entryPoint":5514,"id":6183,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":10554,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":8213,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":9265,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256":{"entryPoint":4740,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_ClaimedReward_dyn":{"entryPoint":15031,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_StakedToken_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":11855,"id":1036,"parameterSlots":3,"returnSlots":0},"modifier_nonReentrant_8343":{"entryPoint":16383,"id":1036,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":20022,"id":437,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_467":{"entryPoint":14805,"id":437,"parameterSlots":0,"returnSlots":0},"modifier_onlyRole":{"entryPoint":18140,"id":40,"parameterSlots":3,"returnSlots":0},"modifier_onlyRole_139":{"entryPoint":13401,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_158":{"entryPoint":19567,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_6311":{"entryPoint":14502,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6330":{"entryPoint":19935,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6813":{"entryPoint":7027,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_6843":{"entryPoint":14118,"id":40,"parameterSlots":3,"returnSlots":0},"modifier_onlyRole_6877":{"entryPoint":14046,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6894":{"entryPoint":17944,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6911":{"entryPoint":13974,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6926":{"entryPoint":16353,"id":40,"parameterSlots":0,"returnSlots":0},"modifier_onlyRole_6936":{"entryPoint":13731,"id":40,"parameterSlots":0,"returnSlots":0},"modifier_onlyRole_6949":{"entryPoint":13496,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6989":{"entryPoint":null,"id":40,"parameterSlots":5,"returnSlots":0},"modifier_onlyRole_7213":{"entryPoint":19030,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7282":{"entryPoint":9296,"id":40,"parameterSlots":3,"returnSlots":0},"modifier_onlyRole_7333":{"entryPoint":8842,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7390":{"entryPoint":14589,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7438":{"entryPoint":19515,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7479":{"entryPoint":18445,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7837":{"entryPoint":18764,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7917":{"entryPoint":7426,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_8154":{"entryPoint":10012,"id":40,"parameterSlots":8,"returnSlots":0},"modifier_onlyRole_8269":{"entryPoint":14299,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_8299":{"entryPoint":19813,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused":{"entryPoint":null,"id":928,"parameterSlots":2,"returnSlots":0},"modifier_whenNotPaused_6536":{"entryPoint":11882,"id":928,"parameterSlots":3,"returnSlots":0},"modifier_whenNotPaused_6692":{"entryPoint":21882,"id":928,"parameterSlots":4,"returnSlots":0},"modifier_whenNotPaused_6986":{"entryPoint":15515,"id":928,"parameterSlots":5,"returnSlots":0},"modifier_whenNotPaused_7564":{"entryPoint":20119,"id":928,"parameterSlots":2,"returnSlots":0},"modifier_whenNotPaused_7666":{"entryPoint":17810,"id":928,"parameterSlots":3,"returnSlots":0},"modifier_whenNotPaused_7705":{"entryPoint":12660,"id":928,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused_7798":{"entryPoint":7684,"id":928,"parameterSlots":2,"returnSlots":0},"modifier_whenNotPaused_974":{"entryPoint":24057,"id":928,"parameterSlots":0,"returnSlots":0},"modifier_whenPaused":{"entryPoint":23056,"id":936,"parameterSlots":0,"returnSlots":0},"packed_hashed_string_to_string":{"entryPoint":11297,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9753,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9799,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5579,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7447,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2631,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_uint256":{"entryPoint":7490,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":10569,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_ClaimedReward":{"entryPoint":15057,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Reward":{"entryPoint":7879,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_StakedToken":{"entryPoint":12753,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":4515,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":2255,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_0_bool":{"entryPoint":5274,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":14250,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":5569,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":5255,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint96":{"entryPoint":9712,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12128,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_004c":{"entryPoint":16549,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_010d":{"entryPoint":16482,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_074e":{"entryPoint":11981,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_07de":{"entryPoint":12253,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_09b0":{"entryPoint":10462,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_38ec":{"entryPoint":11901,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_39ee":{"entryPoint":25389,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_41c6":{"entryPoint":20137,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4791":{"entryPoint":16714,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4c9e":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4f2d":{"entryPoint":15804,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5136":{"entryPoint":10115,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_547b":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7065":{"entryPoint":12190,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_71c5":{"entryPoint":9318,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_759b":{"entryPoint":19127,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_79fa":{"entryPoint":10288,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7b81":{"entryPoint":16414,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7ed0":{"entryPoint":20301,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8319":{"entryPoint":15555,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8acb":{"entryPoint":8929,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8b90":{"entryPoint":10039,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8e19":{"entryPoint":16625,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8f92":{"entryPoint":10191,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9034":{"entryPoint":7500,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9766":{"entryPoint":21902,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a3fa":{"entryPoint":16866,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a4a2":{"entryPoint":13516,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a5ef":{"entryPoint":8995,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b1e5":{"entryPoint":18162,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb38":{"entryPoint":18784,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb6e":{"entryPoint":15631,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bf4a":{"entryPoint":12988,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c155":{"entryPoint":15707,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c176":{"entryPoint":10374,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c36f":{"entryPoint":16790,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c52d":{"entryPoint":13817,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c652":{"entryPoint":19051,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cf40":{"entryPoint":12063,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d0e5":{"entryPoint":25281,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d51c":{"entryPoint":14319,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_da5e":{"entryPoint":23713,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_dde1":{"entryPoint":20213,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ecc3":{"entryPoint":12898,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f50d":{"entryPoint":12677,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":1266,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":23837,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_left_uint256_uint256":{"entryPoint":22288,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_8_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint256":{"entryPoint":22227,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":10618,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_004c0fbd326960ce29f4df95136da84859284ef8bbfa64745cc7c802e0e19246":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_010d7c36429a0936aa64c84497098c48b8a7295710a6e21a9efb67af890f0f26":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_07de7260ce0fce61391a54ab2faaa89075632badefdbb765c47f356421ad7685":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_09b020912eb521984d8a7220224fb9b2d43df5a9493013bf90695f813ffdde6b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_38ecd89afeedea203d4db2e72466d06be07086444823a8c71beae0d2f049c419":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_41c62d9bb555d05ea16c3d11232e48a7c828d1ab50943c553ef0ac7e39b7ebd8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4791eb8792cb87968622cd066eabf1adaaff23c4aa72697289ca224d0359e62f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4c9e717fe6aa251fe839c60a660aa04ddbc47fc0f16b6bb9e5955eee454ef8d5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_71c56afa06c9528dba646f498604ef29a30e64c6dd8ed0c6fe20b6fc7c8c1193":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_759b7a454c4cadab52208bd2966cc917b41a628c466c4f23a2e1d34b6a633433":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_79fada3f5e1d0b5d490e9b700b2e9dafc65cb557074fb0d1b52195d859bcc6d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7b8179326fadb1107959ee228467cf53bd098cb1b60ef3def4b4f83858242cb4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7ed0f15dfb64fb979a1cd1635c4724637aaba53e52d73f451c3f9abd68a7e532":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8319aeae59501de05041cb1f5b1b186c591092bd7f0bb220c7df139ae4452dd5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8acb4b53601b29327013480e918172c559b81e1f256f7cec09a37d8f5f4e8a66":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8b9091c54dea04ad826788ef1b88f72736e453cc8e0143b63bd11a8112fee855":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e193236b66e5c7edbedc85f7e92cadfaebb3b241ef9b538fcc50ee7d9f469ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8f92cc8de7276d47c85f2e672ced5c32aee5f2c444772cab989962a86bf7d109":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_90349c70f8229ef126f95d2e2a1978155ff15ef07db23f8f712878dea850a00e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97666216b72413d890c8517dc824cbf15efb1096a696f65f8c05dbd1c81acff6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a3fa6927abb8aa53d7a694318451edab40a04c3abf7bef6ec605ac322cc9ce2c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a4a27a2e2c82d8782cc0401b203bdf7659e1e61d1765c5fb525048693d8d859b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5ef5760e87b6b53d24aa4e34337c8b6abdd5c39ec4d0ee3a1562540f9ae8404":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b1e57e3ca654459218e44002e03f901f814d7054ebea87141d0bfcd9d990b3df":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb3833dd350efe0fffee02b74017db0659cb54aad9262593a280b96266c64e49":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bf4a2b64c8834b64b6189cb7ee4330ec6c83a868ebec40c39af9040a519ce8fd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c1761b687ec402ab45018b4fc7d907dcbd8cc8c7218d81c8b9f46ed9d8bd0f99":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c36f421ed86d258f14041e9aa3558400079a098daab72f201bd88d4d661b8242":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c52d8a267cca22510f5a5b23cfd13135d738a215ab145957a8742a2248da059d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6522f61249cd006741e70b982be43809220419afb4a762e5f791fd057664f2f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d51c9ba6c02dcfa58f540c16f573b090d0ef0ca395b66ef2a5123d3136c9c4dd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dde1024abc3b759bd1437c752cadc5933d79b76037a6e5368f0bcceab7577632":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ecc3cba37814dfc63104d0e1ea071ecd6ae3db1a6ac05168561f45f17cc78957":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_1_shift":{"entryPoint":10958,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":16954,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":10573,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":20935,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":8223,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":16992,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_20":{"entryPoint":23072,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_1_bool_to_bool":{"entryPoint":17005,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":16969,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":23087,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":10948,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_ClaimedReward_to_struct_ClaimedReward":{"entryPoint":17235,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_Reward_to_struct_Reward":{"entryPoint":11245,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_RoyaltyInfo_to_struct_RoyaltyInfo":{"entryPoint":21056,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_StakedToken_to_struct_StakedToken":{"entryPoint":20501,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":10967,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":8239,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint96_to_uint96":{"entryPoint":20976,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":10593,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":1394,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":3310,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint96":{"entryPoint":1422,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_mul_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint96":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_struct_ClaimedReward_dyn":{"entryPoint":14960,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_struct_StakedToken_dyn":{"entryPoint":19604,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes1":{"entryPoint":24501,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_Reward":{"entryPoint":7871,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_StakedToken":{"entryPoint":18599,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_struct_ClaimedReward":{"entryPoint":14952,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x14F93A49 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x17F82990 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x233DEDF1 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2474E2B2 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x2496DD51 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x276A28A3 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2A67C158 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x2A959B89 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x2CFB6688 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x3736D853 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x4EA3871A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x66CFD072 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x6CC232E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x6CE76F30 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6FC23DB4 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x7C33BD70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x80C47440 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x82666BC8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x86BB8F37 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x8AD7D9DE EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x9FD6DB12 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA3E37652 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xA5F10FE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA7B1190A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAE594865 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB5573847 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xBC577940 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xBD39E149 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBE707DB1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC0788555 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC4228AAA EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xC7A5156F EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xCCD40400 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xDCAE6754 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD4BA7E1 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xEABDC5B4 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF064997C EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF12E061B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x376 JUMPI PUSH4 0xFFAB4BD9 SUB PUSH2 0x4F2 JUMPI PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x50A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x5C6 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x59D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x4F2 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x609 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x63A PUSH2 0x643 PUSH1 0x20 SWAP4 PUSH2 0x64D SWAP4 PUSH2 0x62E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x619 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x68F JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x770 SWAP3 ADD PUSH2 0x71C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1E51 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x140 DUP1 PUSH2 0x884 PUSH2 0x870 PUSH2 0x823 PUSH2 0x802 PUSH2 0x160 DUP8 ADD PUSH1 0x20 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x80 DUP9 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP8 ADD MSTORE PUSH2 0x83E PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x85C PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7D2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x8B8 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0xF PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0x91A DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x938 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x2057 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2428 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2437 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x99E PUSH1 0x20 SWAP5 PUSH2 0x52D SWAP4 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x2533 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xA31 PUSH2 0xA2B CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH2 0x562 PUSH2 0xA3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xA7E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0xA90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xAD4 PUSH2 0xACF DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x4F2 JUMPI PUSH2 0x517 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 PUSH1 0x20 PUSH2 0x52D SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB32 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0xB40 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP4 PUSH2 0xB60 SWAP2 DUP5 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB80 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0xBA0 SWAP2 DUP4 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0x52D PUSH2 0xBB1 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x701 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xBD4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB09 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2E3F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xBFC DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC1F CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST SWAP2 PUSH2 0x3169 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC38 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3450 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST SWAP5 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3477 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC8C CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3481 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x359A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xCBA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0xCD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x35E5 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3649 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD2A CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x36D5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD67 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x371D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xD85 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x5C6 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDA8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6C JUMP JUMPDEST SWAP2 PUSH2 0x3793 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xDBE CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x37B4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0xDDF CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x37BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x389D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x14 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xE4A CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x38F4 JUMP JUMPDEST PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xE4F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xE73 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xEA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x3961 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEC5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x397B JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x39BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xEF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x39F2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x120 DUP1 PUSH2 0x884 PUSH2 0x140 DUP5 ADD PUSH2 0xF21 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH2 0xF43 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0xF52 PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0xF79 PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0xEFD JUMP JUMPDEST SWAP1 PUSH2 0xFAD PUSH2 0xFA3 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFBF PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFD3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xFF6 PUSH2 0xFEF DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xF8D JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x102F PUSH2 0x102A CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x16 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1057 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x103B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x1078 DUP2 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1086 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1094 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4F2 JUMPI PUSH1 0x80 PUSH2 0x701 DUP3 PUSH2 0x52D SWAP5 DUP8 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x10CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x3FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x10E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x3FF7 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4588 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x111A CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x45ED JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1130 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x6CB PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x115B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x45F8 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1174 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4657 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1189 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x12 PUSH2 0x11A3 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x11CA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x11E2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1204 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x11EC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x122B DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1245 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x466A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1278 PUSH2 0x1272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x12C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x12E1 DUP3 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH2 0x12EF DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1320 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST SWAP2 PUSH2 0x4802 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1339 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4871 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x517 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x136F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x137E PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x138D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x13C1 PUSH2 0x13BC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x48AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x13E2 DUP2 DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13F0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13FE DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x142A CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x48C6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1449 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x4917 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1462 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4A4D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x147A CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x14B9 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DB PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x5 PUSH2 0x14FA PUSH1 0x4 DUP6 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP4 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1547 PUSH2 0x154E SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1540 PUSH1 0xA0 SWAP7 PUSH2 0x1539 PUSH2 0x517 SWAP11 PUSH2 0x1529 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1571 PUSH2 0x156C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST SWAP3 PUSH2 0x1581 SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x15B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0x8 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x15B5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1601 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x15FC JUMPI JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x15F1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x1628 PUSH2 0x161E DUP4 PUSH2 0x15E1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x167A JUMPI POP PUSH1 0x1 EQ PUSH2 0x1641 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1666 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x16B3 SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x168F JUMP JUMPDEST SUB DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP1 PUSH2 0x16C9 PUSH2 0x16CE SWAP3 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16E5 PUSH1 0x1 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16FA PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1707 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1714 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1721 PUSH1 0x5 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x172E PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 PUSH2 0x173B PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x8 PUSH2 0x174D PUSH1 0x7 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x140 DUP10 ADD SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x17AE SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 SWAP1 SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x17D3 PUSH2 0x17CD CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP7 PUSH2 0x17E9 SWAP11 SWAP9 SWAP11 SWAP7 SWAP2 SWAP7 SWAP6 SWAP3 SWAP6 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP11 DUP12 PUSH2 0x1754 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x67D PUSH2 0x1808 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4BDD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1820 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1838 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x4C8A JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x13 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x185A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x188B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH2 0x64D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x133F JUMP JUMPDEST SWAP1 PUSH2 0x18BD PUSH2 0x18B6 PUSH2 0x18AC DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x18E8 PUSH2 0x18E1 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x191D PUSH2 0x1917 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18F0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x195B CALLDATASIZE PUSH1 0x4 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x4D4A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1974 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4DCC JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1989 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x1D PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x19B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1994 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19CE CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E2D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x19F6 SWAP1 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A0C PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A19 PUSH1 0x2 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A26 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A33 PUSH1 0x4 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x1A40 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A4D PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A5A PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A67 PUSH1 0x8 DUP3 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0xA PUSH2 0x174D PUSH1 0x9 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP3 PUSH2 0x1B12 SWAP8 PUSH1 0xC0 DUP15 PUSH2 0xA14 PUSH2 0x517 SWAP15 SWAP11 PUSH2 0x1AE7 PUSH2 0x1ADD PUSH2 0x140 SWAP16 SWAP9 SWAP8 PUSH2 0x1B03 SWAP14 SWAP13 PUSH2 0x1AD0 PUSH2 0x1AC8 PUSH2 0x1AEE SWAP12 PUSH2 0x1AF5 SWAP15 PUSH2 0x1ABB PUSH2 0x160 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP11 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP13 ADD MSTORE JUMP JUMPDEST DUP10 DUP3 SUB PUSH2 0x100 DUP12 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1B32 PUSH2 0x1B2D CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP8 PUSH2 0x1B48 SWAP12 SWAP10 SWAP12 SWAP8 SWAP2 SWAP8 SWAP7 SWAP3 SWAP7 SWAP6 SWAP4 SWAP6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A79 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1B64 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5165 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x518E JUMP JUMPDEST PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1BAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x566 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1C95 PUSH2 0x1C74 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP3 PUSH2 0x1C65 PUSH2 0x1C53 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND JUMPDEST GT ISZERO PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST SWAP3 PUSH2 0x1C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x1CC7 PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CE9 JUMPI PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x52D SWAP3 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x53A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D12 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D17 JUMP JUMPDEST CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x689 JUMP JUMPDEST ISZERO PUSH2 0x1D53 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x546F6B656E204944206F7574206F6620626F756E6473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D9E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1DD8 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1DEF SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1D42 JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x1DCE PUSH2 0x52D PUSH2 0x544F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1462 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E11 PUSH2 0x5459 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1E1E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1E3B PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1E4C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0xC38 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x160 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x1FB9 PUSH1 0xA PUSH2 0x1ED8 PUSH2 0x1E63 JUMP JUMPDEST SWAP5 PUSH2 0x1EE9 PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F15 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F43 PUSH2 0x1F3A PUSH1 0x4 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F59 PUSH2 0x1F52 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F6F PUSH2 0x1F68 PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F85 PUSH2 0x1F7E PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F94 PUSH1 0x8 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1FAB PUSH1 0x9 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x1FE1 PUSH2 0x52D SWAP2 PUSH2 0x1FD9 PUSH2 0x1EBF JUMP JUMPDEST POP PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x203F PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x201F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2074 PUSH2 0x206F PUSH2 0x2069 DUP5 PUSH2 0x5493 JUMP JUMPDEST SWAP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1FE6 JUMP JUMPDEST SWAP2 PUSH2 0x2090 PUSH2 0x208B PUSH2 0x2083 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 SWAP6 AND PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x1C0B JUMP JUMPDEST SWAP4 PUSH2 0x209D PUSH2 0x208B DUP5 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x227E JUMPI DUP5 SWAP3 PUSH2 0x20C8 DUP4 PUSH2 0x555D JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ DUP2 DUP6 EQ OR ISZERO PUSH2 0x224F JUMPI JUMPDEST POP PUSH2 0x1DCE SWAP6 SWAP5 SWAP4 PUSH2 0x21E4 SWAP8 SWAP4 PUSH2 0x21B8 SWAP4 PUSH2 0x206F SWAP4 PUSH2 0x20FF PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x210C DUP5 DUP11 DUP8 DUP14 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x2245 JUMPI JUMPDEST POP PUSH2 0x2139 PUSH2 0x2120 DUP10 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x212C DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x2147 DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x217F PUSH2 0x2169 DUP3 DUP6 PUSH2 0x2163 PUSH2 0x204A JUMP JUMPDEST SWAP12 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP11 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2195 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP11 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x21AA PUSH2 0x21A4 DUP12 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x21F8 JUMPI JUMPDEST POP POP POP PUSH2 0x1C0B JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x21EB JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST DUP8 ADD SWAP2 PUSH2 0x220D PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x2219 PUSH2 0x1DCE DUP12 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x21B0 JUMPI PUSH2 0x222A PUSH2 0x52D DUP11 PUSH2 0x1487 JUMP JUMPDEST DUP4 EQ PUSH2 0x21B0 JUMPI PUSH2 0x223D SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x2261 SWAP3 SWAP9 SWAP5 SWAP7 SWAP6 SWAP8 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI DUP7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP6 CODESIZE PUSH2 0x20E1 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x2299 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x232A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D6520686173206E6F7420706173736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x2384 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x2395 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x2407 JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x23C4 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH32 0x5114E731F472514591AA5A2E7254174B62963E757A427CF9E9B069666478B060 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0x241B PUSH2 0x52D PUSH2 0x2208 DUP5 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x228A JUMP JUMPDEST SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1FB3 PUSH2 0x52D SWAP3 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2461 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST ISZERO PUSH2 0x246D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x0 PUSH2 0x24C1 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x252B JUMPI DUP1 PUSH2 0x24DE PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x2526 SWAP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x250F PUSH2 0x24FD PUSH2 0x2208 PUSH1 0x19 PUSH2 0x24F7 PUSH2 0x1DBB DUP7 DUP12 DUP12 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2509 PUSH2 0x1DCE DUP7 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH2 0x2521 PUSH2 0x1DBB DUP5 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x24C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x254A PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x25DE JUMPI PUSH2 0x255C PUSH2 0x2208 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x256C PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x25DA JUMPI PUSH2 0x257F PUSH2 0x2208 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x258B PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x25DA JUMPI PUSH2 0x259E PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x25AA PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 PUSH2 0x25BE JUMPI JUMPDEST POP PUSH2 0x52D JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x25D1 SWAP2 POP PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO CODESIZE PUSH2 0x25B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2642 JUMPI JUMP JUMPDEST PUSH2 0x2619 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2667 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x2688 PUSH2 0x52D PUSH1 0x0 SWAP3 SWAP5 SWAP4 SWAP5 PUSH2 0x2680 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST ADD SWAP2 PUSH2 0x269B DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x26A5 DUP2 SWAP5 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH2 0x26B6 PUSH2 0x20AB PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST EQ PUSH2 0x26E8 JUMPI JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x26CC PUSH2 0x26D2 SWAP3 PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x265D JUMP JUMPDEST POP PUSH1 0xC SWAP3 POP PUSH2 0x52D SWAP1 PUSH2 0x26D2 SWAP1 PUSH2 0x26CC PUSH2 0x2712 PUSH2 0x270C DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH2 0x26BC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2732 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x2C8E JUMP JUMPDEST ISZERO PUSH2 0x273E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420747970652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x278A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65207374616B65642074696D65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2837 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163746976652074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x288D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D75737420626520696E2074686520667574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D7573742062652061667465722061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x76652074696D65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2642 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2972 PUSH2 0x52D PUSH2 0x2046 SWAP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x294D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2961 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2991 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x299F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x297A JUMP JUMPDEST ADD PUSH2 0x2986 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x29B4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x29C6 PUSH2 0x517 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x29E8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST SWAP1 PUSH2 0x29FB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA7E JUMPI PUSH2 0x2A1E DUP3 PUSH2 0x2A18 DUP6 SLOAD PUSH2 0x15E1 JUMP JUMPDEST DUP6 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A59 JUMPI PUSH2 0x2046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2A4E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2A6E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAC JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x2A93 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2A8A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x29F2 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x2AE7 PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2ACE JUMP JUMPDEST PUSH1 0xA PUSH2 0x2BE6 PUSH2 0x140 PUSH2 0x517 SWAP5 PUSH2 0x2B0E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x2B1C PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B3C PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B53 PUSH2 0x2B4A PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B6C PUSH2 0x2B63 PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2B83 PUSH2 0x2B7A PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B91 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BB1 PUSH2 0x2BA8 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x2BC0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x2BD8 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C0F SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2C09 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x2C37 SWAP1 PUSH2 0x2C2E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C18 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2C86 PUSH1 0xC0 SWAP6 PUSH2 0x2C78 PUSH2 0x1AE7 SWAP4 PUSH2 0x2C6A PUSH2 0x517 SWAP12 SWAP7 PUSH2 0xA14 SWAP9 SWAP15 SWAP14 SWAP12 SWAP15 PUSH2 0x1ABB PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST SWAP6 DUP6 DUP4 SWAP6 PUSH2 0x2DE7 PUSH2 0x2DE1 DUP11 PUSH2 0x23CB PUSH2 0x1DCE PUSH2 0x2DB9 DUP12 SWAP16 SWAP10 SWAP12 PUSH2 0x2D89 PUSH32 0x408E1E6B24C523DF52071026044644BC970ACE38BBA503FA10E7C6E4E9EE0661 SWAP16 SWAP13 PUSH2 0x1540 DUP16 PUSH2 0x2DFA SWAP16 DUP16 DUP16 SWAP1 PUSH2 0x2D2A SWAP1 PUSH2 0x2CFA PUSH2 0x2CE8 PUSH2 0x2949 DUP16 SWAP1 JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x0 SWAP14 DUP15 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2D18 DUP12 PUSH2 0x2D12 PUSH2 0x1DCE PUSH2 0x2D0C DUP12 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x1DCE DUP13 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x2D33 DUP10 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ ISZERO DUP1 PUSH2 0x2E2F JUMPI JUMPDEST PUSH2 0x2D45 DUP11 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SUB PUSH2 0x2DFF JUMPI JUMPDEST POP POP POP PUSH2 0x1539 PUSH2 0x2D5C PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST SWAP10 PUSH2 0x2D70 PUSH2 0x2D69 DUP13 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1D PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2D82 DUP12 PUSH2 0x2D7C PUSH2 0x1E63 JUMP JUMPDEST SWAP11 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D9B DUP10 PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DA6 DUP11 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DB1 DUP12 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DC5 DUP7 PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DD1 TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DDC DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST SWAP10 PUSH2 0x2C21 JUMP JUMPDEST SWAP10 PUSH2 0x2DF1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x2C3D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2E0A TIMESTAMP DUP4 GT PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x2E15 JUMPI JUMPDEST CODESIZE PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x1DCE PUSH2 0x2E28 SWAP4 SWAP1 JUMP JUMPDEST GT PUSH2 0x28DE JUMP JUMPDEST DUP13 DUP15 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x2E3A TIMESTAMP DUP5 GT PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2D3C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP3 SWAP2 PUSH2 0x2E5D PUSH2 0x577A JUMP JUMPDEST PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57BA JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E78 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST ISZERO PUSH2 0x2E84 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E2041444D494E206F7220455343524F57 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81A5CC81B9BDD08195B98589B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2F26 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FE4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617320666565206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3124 PUSH32 0x26F4C0C9DD9536441681C861E4C72684BBEC9E4E6D7E4492C2A90FF07CF35C6F SWAP3 PUSH2 0x3091 PUSH2 0x3078 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x3083 CALLER DUP1 SWAP3 PUSH2 0x45F8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3151 JUMPI JUMPDEST POP PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x30A3 PUSH2 0x309E PUSH1 0x12 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x30CE PUSH2 0x30B7 DUP5 PUSH2 0x30B2 PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x30C7 PUSH2 0x1DCE PUSH2 0x52D PUSH1 0x13 PUSH2 0x1487 JUMP JUMPDEST GT ISZERO PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x30EF PUSH2 0x30DE PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ ISZERO PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x30FC PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP5 GT PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3117 PUSH2 0x3110 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x2FDD JUMP JUMPDEST PUSH2 0x26CC PUSH4 0x3B9ACA00 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x1C95 PUSH2 0x313E PUSH2 0x3133 PUSH2 0x544F JUMP JUMPDEST SWAP3 PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x57D6 JUMP JUMPDEST SWAP5 PUSH2 0x3148 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x3163 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x45F8 JUMP JUMPDEST CODESIZE PUSH2 0x308B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3180 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3308 JUMP JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0xC0 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3250 PUSH1 0x5 PUSH2 0x31E2 PUSH2 0x31C7 JUMP JUMPDEST SWAP5 PUSH2 0x31EF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3216 PUSH2 0x3206 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3225 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x324A PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x31D1 JUMP JUMPDEST ISZERO PUSH2 0x3269 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20756E7374616B652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D6520686173206E6F74207061737365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3314 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x3338 PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x3355 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3259 JUMP JUMPDEST SWAP6 PUSH2 0x335E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x336D PUSH2 0x1CC3 CALLER JUMPDEST DUP1 SWAP4 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x341A JUMPI JUMPDEST POP PUSH1 0x60 DUP8 ADD DUP1 MLOAD PUSH2 0x3385 PUSH2 0x1DCE DUP9 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x33FE JUMPI JUMPDEST POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x4 TIMESTAMP SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x33B2 DUP7 PUSH2 0x4C66 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH32 0x8400AAD51EC7B4A6D1C58218EA03E51798A0485003BEAE9E5B76662E91D7058F PUSH2 0x33F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x340C PUSH2 0x52D PUSH2 0x3414 SWAP3 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x32BC JUMP JUMPDEST CODESIZE PUSH2 0x338B JUMP JUMPDEST PUSH2 0x344A SWAP1 PUSH2 0x3444 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x3262 JUMP JUMPDEST CODESIZE PUSH2 0x3372 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3174 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x346A PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x5942 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3459 JUMP JUMPDEST SWAP1 PUSH2 0x348B CALLER PUSH2 0x566 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x34A3 JUMPI PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34C7 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3535 JUMP JUMPDEST ISZERO PUSH2 0x34D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426C6F636B2074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH32 0xBE1531878CA10F11C57318847B09788B90ED4E6DD52B36836BE286097A74FF4F SWAP1 PUSH2 0x356B PUSH2 0x3564 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3575 PUSH1 0xF PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3580 DUP3 PUSH1 0xF PUSH2 0x202F JUMP JUMPDEST PUSH2 0x3595 PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x35AE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5A7C JUMP JUMPDEST PUSH2 0x517 PUSH2 0x35A3 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0xA97 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x35D3 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x517 SWAP3 PUSH2 0x35F3 PUSH2 0x35DD JUMP JUMPDEST SWAP3 PUSH2 0x48C6 JUMP JUMPDEST ISZERO PUSH2 0x3600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206E6F7220617070726F766564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 PUSH2 0x1C95 PUSH2 0x368C CALLER PUSH2 0x3683 PUSH2 0x367E DUP3 DUP8 PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x1C6F DUP6 PUSH2 0x5ADE JUMP JUMPDEST SWAP3 PUSH2 0x7C5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36A5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0xF62079051152E03BD87F33518B9CE4A5564414395B75AFEEF8A467E7CA4EE91B SWAP2 PUSH2 0x54F DUP2 PUSH1 0x12 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP2 PUSH2 0x67D DUP2 PUSH1 0x10 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36DE JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3737 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1C74 DUP3 PUSH2 0x1C6F DUP6 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP6 PUSH2 0x1C95 SWAP6 PUSH2 0x3782 PUSH2 0x3773 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x378E PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5B09 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3726 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x379E JUMP JUMPDEST PUSH2 0x52D PUSH1 0x9 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x208B PUSH2 0x37D6 PUSH2 0x52D SWAP3 PUSH2 0x37D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5493 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37EA PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x383B JUMP JUMPDEST ISZERO PUSH2 0x37F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C7265616479206163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x386C SWAP1 PUSH2 0x385A PUSH2 0x3855 PUSH2 0x1CC3 PUSH1 0x4 PUSH2 0x324A DUP6 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x1 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x77DF36C64E7C698035A47D2E97DA79AB1C3BCFDF6F82430581659CC4D2A969A PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38B5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x38CA SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x38C5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3477 JUMP JUMPDEST PUSH32 0x31C682DCD71348807B079D0CB25BF0C85C9E75F84A8B7B31111BA081E52817F3 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x390D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x391A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x3937 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x395C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x394B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x951 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x3988 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x39B1 JUMPI PUSH2 0x2208 PUSH2 0x39A5 SWAP2 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39AD PUSH2 0x396B JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH2 0x39CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39DD PUSH2 0x5BCF JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x39ED PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5C10 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x39D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0x39FA JUMP JUMPDEST PUSH2 0x52D PUSH2 0x140 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x3A31 PUSH2 0x3A1E JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x52D PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3A7F JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x3A8A PUSH2 0x3A68 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x3A73 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3AAA PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3A70 JUMP JUMPDEST SWAP1 PUSH2 0x3AC0 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3B91 PUSH1 0x8 PUSH2 0x3AE2 PUSH2 0x3A1E JUMP JUMPDEST SWAP5 PUSH2 0x3AEF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3AFE PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B25 PUSH2 0x3B15 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B34 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B43 PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B5B PUSH2 0x3B52 PUSH1 0x5 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B73 PUSH2 0x3B6A PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B82 PUSH2 0x1F7E PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1F94 PUSH1 0x7 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST SWAP1 PUSH2 0x3BAD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3BBC PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3BFE JUMPI PUSH2 0x3BD7 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP9 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3BE9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3BAF JUMP JUMPDEST PUSH2 0x3BAF JUMP JUMPDEST SWAP1 PUSH2 0x3BF6 PUSH2 0x3BE4 SWAP2 PUSH2 0x293A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x3BDC JUMP JUMPDEST POP PUSH2 0x3C08 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST PUSH2 0x3C22 PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C52 SWAP1 PUSH1 0x1C DUP4 DUP3 PUSH2 0x3C44 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP7 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3C57 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3C15 JUMP JUMPDEST PUSH2 0x16C9 PUSH2 0x3C67 SWAP3 PUSH2 0x3C8B SWAP5 PUSH2 0x1284 JUMP JUMPDEST SWAP7 PUSH2 0x3C7A PUSH2 0x3C74 DUP3 PUSH2 0x293A JUMP JUMPDEST SWAP9 PUSH2 0x3B99 JUMP JUMPDEST PUSH2 0x3C84 DUP3 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3AB7 JUMP JUMPDEST POP CODESIZE DUP4 DUP3 PUSH2 0x3C49 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CAB PUSH2 0x5459 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CBE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3DFC JUMP JUMPDEST ISZERO PUSH2 0x3CCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726F6D2061646472657373206973206E6F7420746865206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP4 SWAP3 PUSH2 0x3DB6 PUSH2 0x35CE PUSH2 0x64D SWAP5 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3DC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3FC1 PUSH2 0x3FC7 SWAP2 PUSH2 0x3F8B PUSH2 0x3F86 PUSH2 0x3E97 PUSH32 0xE37E962447C072D61E0164C30F30D2A3F4752DEA7A7224FFD42D5FC2586B02D5 SWAP8 SWAP10 SWAP9 SWAP7 SWAP9 PUSH2 0x3E3E PUSH2 0x237F DUP13 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x3E62 PUSH2 0x3E4A DUP13 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x3E5C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x20AB JUMP JUMPDEST EQ PUSH2 0x3CC3 JUMP JUMPDEST PUSH2 0x3E83 PUSH2 0x3E72 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND EQ ISZERO PUSH2 0x3D0F JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x3E92 PUSH2 0x1CC3 DUP14 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x3D5B JUMP JUMPDEST SWAP6 PUSH2 0x3F3A PUSH2 0x3F74 DUP12 PUSH2 0x3F46 DUP13 DUP9 PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x5845C8B965119358C29037DC6226E8F2195E0D03C7D2055C52FB161F57928741 SWAP1 PUSH2 0x3EE0 ADDRESS PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 CHAINID SWAP6 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3F58 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3F63 PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x3F7F PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 DUP5 PUSH2 0x5D29 JUMP JUMPDEST PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x3FAA PUSH2 0x3F99 DUP3 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x3FA5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x293A JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x0 DUP9 CALLER PUSH2 0x53A6 JUMP JUMPDEST PUSH2 0x1C6F DUP8 DUP8 DUP4 PUSH2 0x2057 JUMP JUMPDEST SWAP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 PUSH2 0x2DFA PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3C9B JUMP JUMPDEST PUSH2 0x3FEC PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5E3A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x3FE1 JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP2 PUSH2 0x400C PUSH2 0x577A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4019 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x435D JUMP JUMPDEST ISZERO PUSH2 0x4025 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4069 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x526577617264206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F7420616374697665207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F742061637469766520616E796D6F726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4151 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F74207374616B6564206C6F6E6720656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x419D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C726561647920636C61696D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x41E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20636C61696D20746865207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1DD85C99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x4259 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x1C14 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x423A JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x427D PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x2BE6 PUSH2 0x120 PUSH2 0x517 SWAP5 PUSH2 0x429E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AC PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x42D5 PUSH2 0x42CC PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x42EC PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x432D PUSH1 0x5 DUP7 ADD PUSH2 0x4320 PUSH2 0x431A PUSH1 0xA0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x426D JUMP JUMPDEST PUSH2 0x433B PUSH2 0x2B91 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x434A PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4284 JUMP JUMPDEST SWAP1 PUSH2 0x4367 DUP2 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4370 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x437B DUP3 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4384 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x4391 DUP4 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO PUSH2 0x439C SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH2 0x43A7 DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43B0 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH2 0x43BC DUP3 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43C5 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH2 0x43D5 SWAP1 PUSH2 0x4062 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x43E6 SWAP1 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x43F7 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x440A DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4414 SWAP1 TIMESTAMP PUSH2 0x413D JUMP JUMPDEST LT ISZERO PUSH2 0x441F SWAP1 PUSH2 0x414A JUMP JUMPDEST DUP6 PUSH2 0x442B DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x4435 SWAP2 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x5 ADD PUSH2 0x4441 SWAP1 PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0x444B SWAP1 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH2 0x4508 SWAP3 PUSH2 0x44DD SWAP2 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x447B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4575 JUMPI JUMPDEST POP PUSH2 0x41E2 JUMP JUMPDEST PUSH2 0x44B7 PUSH2 0x448F PUSH2 0x448A DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP6 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44B0 PUSH2 0x449A PUSH2 0x3A1E JUMP JUMPDEST SWAP7 PUSH2 0x44A5 DUP13 DUP7 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B15 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x44C2 TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x44E8 PUSH2 0x2DB1 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x44F4 TIMESTAMP PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4503 DUP6 PUSH2 0x16C9 DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4353 JUMP JUMPDEST PUSH32 0x7EF1954A47BCF45F29BBC3B53D86DF999B6F295782796AC65EA2DF0347116935 PUSH2 0x4570 PUSH2 0x455B PUSH2 0x4555 PUSH2 0x454F PUSH2 0x4549 PUSH1 0x40 PUSH2 0x4543 DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP5 PUSH2 0x4565 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x4582 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST CODESIZE PUSH2 0x4475 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3FFF JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x45A0 PUSH2 0x5459 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x45AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45E6 JUMPI DUP1 PUSH2 0x45CA PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x45E1 SWAP5 DUP8 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 DUP7 PUSH2 0x45DC PUSH2 0x1DBB DUP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x515B JUMP JUMPDEST PUSH2 0x45AD JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x0 PUSH2 0x460D PUSH2 0x4613 SWAP4 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4627 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x905D981207A7D0B6C62CC46AB0BE2A076D0298E4A86D0AB79882DBD01AC37378 SWAP2 PUSH2 0x67D DUP2 PUSH1 0x11 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4618 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x3 PUSH2 0x1CA4 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2DFA PUSH2 0x46B2 PUSH2 0x3FC1 CALLER PUSH2 0x1C6F DUP8 PUSH2 0x46AD DUP9 PUSH2 0x46A8 DUP6 PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST SWAP4 PUSH2 0x553 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x16C9 PUSH2 0x46D7 SWAP3 PUSH2 0x46CF PUSH2 0x3A68 JUMP JUMPDEST POP PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3B99 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4753 JUMP JUMPDEST ISZERO PUSH2 0x46F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C99081A5CC81B9BDD0818DB185A5B5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1B12 PUSH2 0x517 SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x4760 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x477C PUSH2 0x4777 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH2 0x16C9 DUP7 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x46F2 JUMP JUMPDEST PUSH32 0x7DE9B19A9A16075E228395248AD5311FFAB7748C0525BD16AB44912A968161C3 PUSH2 0x4570 PUSH2 0x47ED PUSH2 0x4555 PUSH2 0x454F PUSH2 0x47E7 PUSH1 0x40 PUSH2 0x47C0 PUSH2 0x46D7 DUP11 PUSH2 0x16C9 DUP12 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x47D2 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP11 PUSH2 0x100 DUP3 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x47F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x4736 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46DC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x481D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x482A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x4847 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x486C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x485B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1820 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x482A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x480D JUMP JUMPDEST PUSH2 0x4883 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x487B JUMP JUMPDEST PUSH2 0x3350 PUSH2 0x52D SWAP2 PUSH2 0x48BE PUSH2 0x48A7 JUMP JUMPDEST POP PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x48D5 DUP2 DUP6 DUP6 PUSH2 0x2057 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x48E4 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x48F0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD SWAP4 PUSH2 0x1CC3 SWAP4 PUSH2 0x5EDE JUMP JUMPDEST PUSH2 0x490A JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x48EA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP2 PUSH2 0x3F46 PUSH2 0x493D SWAP3 PUSH2 0x3F3A SWAP5 PUSH2 0x492B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x4948 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x495B PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x49C0 JUMP JUMPDEST ISZERO PUSH2 0x4967 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20666F72636520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A3432903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x49CC PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x49EB PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x4A03 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST SWAP6 PUSH2 0x4A0C PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4A18 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x4A2A JUMPI POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3414 SWAP1 PUSH2 0x4A47 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x494C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A66 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4B0D JUMP JUMPDEST ISZERO PUSH2 0x4A72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ABE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1C95 PUSH2 0x4B9B PUSH32 0xF25FD82F8BF40DF41B90B95A0159C55596F50B182D7B7DFF1D3E04A5A16AC7C4 SWAP3 PUSH2 0x4B41 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4B55 PUSH2 0x4B50 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x4B5F PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 SUB PUSH2 0x4BAF JUMPI JUMPDEST PUSH2 0x4B74 PUSH2 0x23C4 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4B83 DUP6 PUSH2 0x2190 DUP4 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23CB PUSH2 0x4B90 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x2190 DUP4 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP DUP4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x4BBA TIMESTAMP DUP7 GT PUSH2 0x4AB7 JUMP JUMPDEST PUSH2 0x4B66 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A56 JUMP JUMPDEST PUSH2 0x4BD7 SWAP1 PUSH2 0x52D SWAP4 SWAP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x4BE9 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4BF1 PUSH2 0x5FAB JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4C00 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x4C31 JUMPI PUSH2 0x52D PUSH2 0x3F3A SWAP2 PUSH2 0x4C19 PUSH2 0x52D SWAP5 PUSH2 0x5FDD JUMP JUMPDEST SWAP1 PUSH2 0x4C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x4BC9 JUMP JUMPDEST POP POP PUSH2 0x52D PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C4A PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x4C5A PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x23B6 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C3B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C80 PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4CA3 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x4CAE PUSH2 0x48A7 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x4C97 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x4CC8 PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4C94 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SWAP3 PUSH2 0x4CE2 DUP5 PUSH2 0x4CB8 JUMP JUMPDEST SWAP3 PUSH2 0x4CED PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x4D42 JUMPI PUSH2 0x4D3B DUP2 PUSH2 0x4D0E PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x4CEF SWAP6 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D1F PUSH2 0x13BC PUSH2 0x1DBB DUP4 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D29 DUP3 DUP10 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE PUSH2 0x4D34 DUP2 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CED JUMP JUMPDEST POP SWAP4 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x46A8 PUSH2 0x4613 SWAP3 PUSH2 0x4D5D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D74 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4DA2 SWAP1 PUSH2 0x4D90 PUSH2 0x4D8B PUSH1 0x4 PUSH2 0x324A DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x385EED96CA33F0DA03D900751711FF4392ADF11BE79222F4AA99F92E71A1DA4F PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DEE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4E03 SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x4DFE PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4C8A JUMP JUMPDEST PUSH32 0x4A84A984790B90CDC99ACB8CF998C3F36E0EFEFD6A3F5B47DCAF480F6A1862C2 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DDF JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E42 PUSH2 0x5BCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4D DUP2 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4E71 JUMPI POP POP PUSH2 0x517 SWAP1 PUSH2 0x5C10 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4EA4 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x501F JUMP JUMPDEST ISZERO PUSH2 0x4EB0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4EFC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E207374616B652074686520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4F54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D65206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7265 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH2 0x500E PUSH1 0xA0 PUSH2 0x517 SWAP5 PUSH2 0x4FBD PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FDD PUSH2 0x4FD4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x4FEB PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FF9 PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5007 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4FA4 JUMP JUMPDEST PUSH2 0x502B PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5046 PUSH2 0x5041 PUSH2 0x1CC3 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4EA9 JUMP JUMPDEST PUSH2 0x5055 PUSH2 0x3E92 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x505D PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x5069 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x513C JUMPI JUMPDEST POP PUSH32 0x30441850B15FD31A9413CD27711113D1430F46DD517499B60A5D8365FA375BF0 PUSH2 0x2DFA PUSH2 0x5122 PUSH2 0x3FC1 PUSH2 0x50A2 DUP6 PUSH2 0x37BE JUMP JUMPDEST SWAP5 PUSH2 0x50AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP8 SUB PUSH2 0x512C JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x50BF PUSH2 0x31C7 JUMP JUMPDEST PUSH2 0x50C7 DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x50E1 TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x50EC DUP10 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x511C PUSH2 0x50F9 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x5105 DUP4 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x5117 DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5015 JUMP JUMPDEST DUP3 PUSH2 0x4BBF JUMP JUMPDEST SWAP4 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5137 TIMESTAMP DUP9 GT PUSH2 0x4F4D JUMP JUMPDEST PUSH2 0x50B4 JUMP JUMPDEST PUSH2 0x5155 SWAP1 PUSH2 0x514F PUSH2 0x20AB PUSH2 0x3437 DUP6 PUSH2 0x37BE JUMP JUMPDEST EQ PUSH2 0x4EF5 JUMP JUMPDEST CODESIZE PUSH2 0x506E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4E97 JUMP JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5184 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x606A JUMP JUMPDEST PUSH2 0x517 SWAP1 CALLER SWAP1 PUSH2 0x6093 JUMP JUMPDEST PUSH2 0x530 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x517 SWAP3 SWAP5 SWAP4 PUSH2 0xA14 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5200 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x51DA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x51C7 JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH2 0x523A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x522C PUSH2 0x5226 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x4249 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x51F0 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x5207 JUMP JUMPDEST SWAP1 PUSH2 0x5256 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5260 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x52E5 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x5272 DUP4 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x52C8 JUMPI POP PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x52B1 PUSH2 0x52C1 SWAP3 PUSH2 0x52A0 PUSH2 0x51BD JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x51A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5326 PUSH2 0x11E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x5331 JUMPI POP POP JUMP JUMPDEST PUSH2 0x533E PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST DUP3 LT PUSH2 0x5348 JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x535B PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x536A PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x537E JUMPI PUSH2 0x5379 SWAP2 POP PUSH2 0x52FF JUMP JUMPDEST PUSH2 0x534D JUMP JUMPDEST POP PUSH2 0x5399 PUSH2 0x538A PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5394 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x53B0 DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x5434 JUMPI JUMPDEST PUSH2 0x5415 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 PUSH2 0x53E3 SWAP3 PUSH2 0x1C6F DUP7 PUSH1 0x0 PUSH2 0x53D7 DUP9 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD PUSH2 0x4249 JUMP JUMPDEST SWAP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x540E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4570 JUMP JUMPDEST PUSH2 0x5422 PUSH2 0x1CC3 CALLER DUP4 PUSH2 0x4D4A JUMP JUMPDEST ISZERO PUSH2 0x53BC JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST POP CALLER PUSH2 0x5448 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO PUSH2 0x53B7 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x5461 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x5467 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH2 0x5486 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x548E PUSH2 0x11E2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x549B PUSH2 0x11E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54B0 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x54C1 PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x54CE DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x54F2 JUMPI POP POP PUSH2 0x54EA PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x54A3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x5502 PUSH2 0x52D DUP5 PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54A3 JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x551F PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x5529 DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x5551 JUMPI POP POP PUSH2 0x553F PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST EQ PUSH2 0x52D JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x5511 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5574 SWAP2 PUSH2 0x556C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x5589 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x55EC JUMP JUMPDEST ISZERO PUSH2 0x5595 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x55FA PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST SWAP2 PUSH2 0x560D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 PUSH2 0x569F JUMPI JUMPDEST POP POP PUSH2 0x5620 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x562C PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x5699 JUMPI PUSH2 0x566A DUP2 PUSH2 0x5646 PUSH2 0x562E SWAP4 DUP8 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x564E PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x565D PUSH2 0x1CC3 CALLER DUP1 SWAP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x5671 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x562C JUMP JUMPDEST PUSH2 0x5692 SWAP2 DUP2 PUSH2 0x5688 PUSH2 0x3E92 PUSH2 0x1CC3 PUSH2 0x568D SWAP6 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x558E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x5662 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x56B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x557A JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE8 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x56E4 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x56F6 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5721 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x575B PUSH2 0x5760 SWAP2 PUSH2 0x52D SWAP5 SWAP4 PUSH2 0x573A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5755 PUSH2 0x5750 PUSH2 0x5749 PUSH2 0x56C9 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x56E9 JUMP JUMPDEST SWAP2 PUSH2 0x60C2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST PUSH2 0x5710 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x2710 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x5784 PUSH1 0xA PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x578C PUSH2 0x5770 JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x579E JUMPI PUSH2 0x517 SWAP1 PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57C5 PUSH2 0x57B0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x57E0 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x57ED DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ PUSH2 0x5935 JUMPI DUP1 PUSH2 0x5879 SWAP3 PUSH2 0x584F PUSH2 0x5844 PUSH2 0x5807 DUP8 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5813 DUP5 DUP11 DUP8 DUP5 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x582F PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL SWAP2 PUSH2 0x5827 DUP11 PUSH2 0x11D5 JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2190 DUP9 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5897 PUSH2 0x206F PUSH1 0x1 SWAP4 PUSH2 0x208B PUSH2 0x587F PUSH2 0x5866 PUSH2 0x57CC JUMP JUMPDEST PUSH2 0x5870 PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x5710 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x64D DUP4 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x589F PUSH2 0x1FF8 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x5929 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x58B8 PUSH1 0x0 NOT PUSH2 0x1DCE JUMP JUMPDEST GT PUSH2 0x591C JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x58D4 JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x202F JUMP JUMPDEST ISZERO PUSH2 0x590A JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x58C1 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x58DA JUMPI DUP1 PUSH2 0x58C6 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x594F PUSH2 0x1CC3 DUP4 DUP4 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x596A PUSH1 0x1 PUSH2 0x46AD DUP5 PUSH1 0x0 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x5978 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x59BD DUP3 DUP3 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x59D7 PUSH1 0x0 PUSH2 0x46AD DUP5 DUP3 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x59E5 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A18 PUSH2 0x60CD JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A46 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x5A3F PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5A20 JUMP JUMPDEST PUSH2 0x5A52 PUSH1 0x0 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A10 JUMP JUMPDEST SWAP1 PUSH2 0x5A8E DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP3 DUP4 ISZERO PUSH2 0x5ACA JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x5AB8 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5399 SWAP2 SWAP3 POP PUSH2 0x3437 PUSH2 0x20AB SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x5AD7 SWAP2 SWAP4 POP DUP3 SWAP1 PUSH2 0x4D4A JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5AAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 SWAP2 PUSH2 0x60FA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x5B16 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5B20 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x5BB5 JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x5B32 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x5B91 JUMPI POP SWAP2 PUSH2 0x5B85 PUSH2 0x5B8C SWAP3 PUSH2 0x5B75 PUSH2 0x517 SWAP7 SWAP6 PUSH2 0x5B64 PUSH2 0x51BD JUMP JUMPDEST SWAP7 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 REVERT JUMPDEST PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 PUSH2 0x34B3 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x5AE9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x5BE6 DUP3 PUSH2 0x20AB JUMP JUMPDEST SUB PUSH2 0x5BEE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5C33 PUSH2 0x33C0 PUSH2 0x5C28 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C6F DUP5 PUSH1 0x9 PUSH2 0x4249 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x5C5E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA JUMP JUMPDEST SWAP1 PUSH2 0x64D PUSH2 0x35CE PUSH1 0x20 SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x11D5 JUMP JUMPDEST ISZERO PUSH2 0x5CA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202773272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA14 PUSH2 0x517 SWAP5 PUSH2 0x5D16 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5D0C PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x5DB9 PUSH1 0x0 SWAP2 PUSH2 0x5D6C PUSH1 0x20 SWAP5 PUSH2 0x5D3E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5D5A PUSH2 0x5D4B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3F3A DUP10 DUP4 ADD SWAP2 DUP3 PUSH2 0x5C65 JUMP JUMPDEST PUSH2 0x5D65 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x6379 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5DAD PUSH2 0x5D7A DUP4 PUSH2 0x5C98 JUMP JUMPDEST PUSH2 0x5DA6 PUSH2 0x1DCE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x5CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CED JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x5DF4 JUMPI PUSH1 0x0 MLOAD PUSH2 0x5399 SWAP1 PUSH2 0x20AB SWAP1 SWAP3 PUSH2 0x566 PUSH2 0x5DE3 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x5D1D JUMP JUMPDEST PUSH2 0x5E01 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5E10 PUSH1 0x1 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5DF9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x5E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x52D SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5E8C SWAP1 PUSH2 0x5D16 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x5EB2 PUSH2 0x5EAC PUSH2 0x52D SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5ED9 JUMPI PUSH2 0x5ECE RETURNDATASIZE PUSH2 0x35C1 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5EF6 PUSH2 0x1C6F PUSH1 0x20 SWAP4 PUSH2 0x5EF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1C14 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x5F27 PUSH2 0x5F0B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x5F1C DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x5E63 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x5F7A JUMPI JUMPDEST POP PUSH2 0x5F5D JUMPI PUSH2 0x5F41 PUSH2 0x5EBF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5F50 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x490A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5F6C PUSH2 0x5EB2 PUSH2 0x5399 SWAP3 PUSH2 0x5E99 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5F9D SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FA4 JUMPI JUMPDEST PUSH2 0x5F95 DUP2 DUP4 PUSH2 0xA5D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5E4F JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5F34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F8B JUMP JUMPDEST PUSH2 0x52D PUSH1 0x10 PUSH2 0x1CA4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x5FD0 PUSH2 0x5FCA DUP5 PUSH2 0x35C1 JUMP JUMPDEST SWAP4 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x5FB5 JUMP JUMPDEST PUSH2 0x5FE6 DUP2 PUSH2 0x6419 JUMP JUMPDEST SWAP1 PUSH2 0x5FF7 PUSH1 0x1 SWAP3 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x6002 DUP5 PUSH2 0x5FBA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD DUP5 ADD SWAP1 JUMPDEST PUSH2 0x6015 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6065 JUMPI PUSH2 0x6049 SWAP1 PUSH1 0x0 NOT ADD SWAP3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP5 MSTORE8 PUSH2 0x26E2 PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x6058 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x6065 JUMPI SWAP1 SWAP2 DUP2 PUSH2 0x600A JUMP JUMPDEST PUSH2 0x600F JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x6089 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x65BB JUMP JUMPDEST SWAP1 PUSH2 0x60A1 PUSH2 0x1CC3 DUP3 DUP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x60A9 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST POP POP POP PUSH2 0x52D PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x60D8 PUSH2 0x1CC3 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x60DE JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x80 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6103 DUP2 PUSH2 0x5493 JUMP JUMPDEST SWAP1 PUSH2 0x6110 PUSH2 0x208B DUP4 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x6119 DUP3 PUSH2 0x555D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6286 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 DUP5 SWAP4 PUSH2 0x517 SWAP8 PUSH2 0x61F4 SWAP5 PUSH2 0x6151 SWAP9 SWAP8 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x6143 DUP3 PUSH2 0x25FA JUMP JUMPDEST SWAP11 PUSH2 0x615A DUP13 PUSH1 0x1 SWAP15 DUP16 PUSH2 0x11D5 JUMP JUMPDEST SWAP6 DUP7 SWAP2 DUP11 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x627E JUMPI JUMPDEST POP POP PUSH2 0x618B PUSH2 0x617D DUP3 PUSH2 0x6179 PUSH2 0x6173 PUSH2 0x60F0 JUMP JUMPDEST DUP3 PUSH2 0x5710 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP8 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x6193 PUSH2 0x530C JUMP JUMPDEST SWAP1 PUSH2 0x61C2 PUSH2 0x619F PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP4 OR PUSH2 0x61AD DUP6 DUP14 DUP10 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x61D3 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP13 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x61E5 PUSH2 0x61DF DUP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP6 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x622F JUMPI JUMPDEST POP POP POP POP PUSH2 0x1C14 JUMP JUMPDEST SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x621F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP9 ADD SWAP3 PUSH2 0x623F PUSH2 0x2208 DUP6 DUP5 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x624B PUSH2 0x1DCE DUP4 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x61EB JUMPI PUSH2 0x52D PUSH2 0x625C SWAP2 PUSH2 0x1487 JUMP JUMPDEST DUP4 SUB PUSH2 0x6269 JUMPI JUMPDEST DUP1 PUSH2 0x61EB JUMP JUMPDEST PUSH2 0x6276 SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x6263 JUMP JUMPDEST SSTORE DUP3 CODESIZE PUSH2 0x615F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 EQ DUP6 DUP3 EQ OR ISZERO PUSH2 0x62A3 JUMPI JUMPDEST POP PUSH2 0x6121 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x62B4 SWAP2 DUP5 SWAP4 SWAP7 SWAP6 SWAP5 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE PUSH2 0x629D JUMP JUMPDEST ISZERO PUSH2 0x62C8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6334 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202776272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6398 PUSH2 0x6385 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6392 PUSH2 0x1DCE PUSH1 0x41 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x62C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP2 PUSH2 0x63B6 PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND LT PUSH2 0x63FE JUMPI JUMPDEST PUSH2 0x63CA PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND EQ DUP1 ISZERO PUSH2 0x63E4 JUMPI JUMPDEST PUSH2 0x63DF SWAP1 PUSH2 0x632D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP PUSH2 0x63DF PUSH2 0x63F2 PUSH1 0x1C PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP6 AND EQ SWAP1 POP PUSH2 0x63D6 JUMP JUMPDEST SWAP2 PUSH2 0x6413 SWAP1 PUSH2 0x640D PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST SWAP1 PUSH2 0x631A JUMP JUMPDEST SWAP2 PUSH2 0x63C0 JUMP JUMPDEST PUSH2 0x6423 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 PUSH2 0x6449 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6599 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH2 0x646A DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6577 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 PUSH2 0x6484 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6555 JUMPI JUMPDEST POP PUSH4 0x5F5E100 PUSH2 0x649B DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6533 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x64B0 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6511 JUMPI JUMPDEST POP PUSH2 0x64C3 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x64EF JUMPI JUMPDEST PUSH2 0x64D8 PUSH2 0x1DCE PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST LT ISZERO PUSH2 0x64E1 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6500 PUSH2 0x650B SWAP2 PUSH2 0x26E2 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH2 0x64CB JUMP JUMPDEST PUSH2 0x652C SWAP2 PUSH2 0x26E2 PUSH2 0x6521 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64B8 JUMP JUMPDEST PUSH2 0x654E SWAP2 PUSH2 0x26E2 PUSH2 0x6543 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64A3 JUMP JUMPDEST PUSH2 0x6570 SWAP2 PUSH2 0x26E2 PUSH2 0x6565 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x10 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x648C JUMP JUMPDEST PUSH2 0x6592 SWAP2 PUSH2 0x26E2 PUSH2 0x6587 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x20 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6472 JUMP JUMPDEST PUSH2 0x65B4 SWAP2 PUSH2 0x26E2 PUSH2 0x65A9 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6451 JUMP JUMPDEST PUSH2 0x5399 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x5F6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x2C 0x21 STOP SWAP9 LOG4 PUSH28 0xBF27B9194CEAB9E7606AC7DA4D41D66802AD6E129D7B1882F264736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"548:34314:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;;548:34314:15;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;:::o;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;548:34314:15;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;548:34314:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;548:34314:15;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;1100:31::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;-1:-1:-1;;548:34314:15;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;1299:24::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;702:62::-;740:24;702:62;:::o;:::-;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2323:33::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;1710:6:2;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1235:26::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;2187:49:0;2232:4;;;:::i;2187:49::-;;;:::i;548:34314:15:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;2490:52::-;;;;;;;:::i;:::-;;:::i;548:34314::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;21241:51::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;548:34314;-1:-1:-1;;;;;548:34314:15;;;21241:51;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;548:34314::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;2610:45::-;;;;;;;:::i;548:34314::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;27510:75::-;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;548:34314;-1:-1:-1;;;;;548:34314:15;;;27510:75;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;548:34314::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;1268:24::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;2410:43::-;;;;;;;:::i;548:34314::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;27592:27::-;;;;;:::i;548:34314::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;27462:41::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;548:34314::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;11184:219::-;11359:36;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;11722:11:15;;:::i;:::-;2475:4:0;:::i;:::-;2490:1;:::i;548:34314:15:-;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;:::i;:::-;;;;:::i;11639:281::-;11871:41;;;11639:281;11746:57;11754:19;11769:4;11754:19;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;11754:19;;;11746:57;:::i;:::-;11843:11;;;;:::i;:::-;11871:41;:::i;:::-;;;548:34314;;;;11871:41;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;11871:41;;;;11639:281::o;:::-;;;;;:::i;548:34314::-;;;;:::i;11573:98:17:-;11652:12;11659:5;11652:12;:::i;18636:223::-;18735:17;18736:16;;;:::i;:::-;18735:17;;548:34314:15;18735:17:17;18731:73;;18822:30;:24;:30;:24;:15;:24;:::i;:::-;:30;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;18731:73:17;-1:-1:-1;;;18762:41:17;:::i;18364:122::-;18474:4;18364:122;18474:4;18364:122;18474:4;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;25724:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;25645:291;;;;25753:13;25765:1;25753:13;:::i;:::-;25772:15;25768:19;;;;;25817:11;25809:63;25817:11;;25789:3;25817:11;;;;:::i;:::-;;:::i;:::-;:28;;25831:14;;:::i;25817:28::-;;548:34314;;25817:28;;25809:63;:::i;:::-;25905:11;;;;;;;:::i;:::-;548:34314;;;;25789:3;25753:13;;25768:19;;;;;25645:291::o;:::-;;;;;:::i;1315:72:7:-;;1379:1;1315:72;;;:::i;:::-;24434:273:15;;;24529:13;24541:1;24529:13;:::i;:::-;24548:15;24544:19;;;;;24593:11;24585:63;24593:11;;24565:3;24593:11;;;;:::i;24585:63::-;24676:11;;;;;;;:::i;24565:3::-;24529:13;;24434:273;;;;;:::i;9827:102::-;9907:14;;:::i;548:34314::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:34314:15:o;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;31220:118::-;31313:17;31306:24;31220:118;31280:13;;:::i;:::-;31313:17;:7;:17;:::i;:::-;31306:24;:::i;548:34314::-;;;;;-1:-1:-1;;;;;548:34314:15;;;2899:58:17;2943:14;-1:-1:-1;;;;;2943:14:17;:::i;:::-;;;;;548:34314:15;;2943:14:17;;;;;:::i;:::-;;-1:-1:-1;;2943:14:17;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2497:61::-;2550:8;-1:-1:-1;;;2550:8:17;:::i;22796:3447::-;;;;23115:22;23123:13;22963:27;;;:::i;:::-;23123:13;;:::i;:::-;23115:22;:::i;:::-;23140:16;23099:59;23107:50;23140:16;;:::i;:::-;23115:41;;;23107:50;:::i;:::-;23099:59;:::i;:::-;23092:66;23173:37;23181:28;;;:::i;23173:37::-;:45;-1:-1:-1;;;;;548:34314:15;;23173:45:17;;-1:-1:-1;;;;;548:34314:15;;;23173:45:17;;23169:95;;23332:35;;;;;:::i;:::-;23512:19;;47819:10;-1:-1:-1;;;;;21135:472:17;;;;;;;;18735:17;23459:188;;22796:3447;23658:43;26129:13;23658:43;;;26129:13;23658:43;;25700:20;23658:43;25708:11;23658:43;;23699:1;23658:43;:::i;:::-;;;;;;;;:::i;:::-;23764:190;;22796:3447;24316:24;24314:26;24316:24;;:18;:24;:::i;:::-;24314:26;;;;:::i;:::-;-1:-1:-1;;2943:14:17;548:34314:15;;24314:26:17;;;:::i;:::-;24382:24;24384:22;;24316:18;24384:22;:::i;:::-;24382:24;;;;:::i;:::-;24699:143;24783:45;24755:25;;;;:::i;:::-;24783:45;;:::i;:::-;17192:331;548:34314:15;17192:331:17;24755:73;;;17192:331;-1:-1:-1;;;;;17192:331:17;;;;17086:443;24699:143;24670:17;:172;:17;:26;;;;;:::i;:::-;:172;:::i;:::-;25010:1;24959:52;;;;;:::i;:::-;:47;;;548:34314:15;;24959:52:17;;24955:617;;22796:3447;25708:11;;;;:::i;25700:20::-;:39;25749:367;;;;;;26129:13;:::i;:::-;;26125:58;;22796:3447::o;26125:58::-;-1:-1:-1;;;26152:30:17;:::i;24955:617::-;548:34314:15;;25184:30:17;;;;;;:::i;:::-;;:::i;:::-;:35;;;;:::i;:::-;;24955:617;25180:378;25305:28;25320:13;;;:::i;25305:28::-;;25301:239;24955:617;25301:239;25465:52;:30;;;;:::i;:52::-;25301:239;;;24955:617;;23764:190;;;;;;;23459:188;23551:43;;23550:44;23551:43;;;;;;;:::i;23550:44::-;23546:101;;23459:188;;;;;;;;;23546:101;-1:-1:-1;;;23604:42:17;:::i;23169:95::-;-1:-1:-1;;;23228:35:17;:::i;2422:76:0:-;2490:1;2422:76;2475:4;18946:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;18889:505;19351:35;18889:505;18970:49;18978:16;;;:::i;:::-;18970:49;:::i;:::-;19030:54;19038:22;;;:::i;:::-;19030:54;:::i;:::-;19150:26;;;:17;:26;:::i;:::-;:31;;19180:1;19150:31;:::i;:::-;;19147:143;;18889:505;19302:33;:19;;:10;:19;:::i;:::-;19119:15;19302:33;;:::i;:::-;19351:35;:::i;:::-;;;548:34314;;;;19351:35;19119:15;548:34314;;19119:15;548:34314;;;19351:35;548:34314;19147:143;19198:80;19206:41;19221:26;;;19150:17;19221:26;:::i;19206:41::-;19119:15;19206:41;;19198:80;:::i;:::-;19147:143;;18889:505;;;;:::i;548:34314::-;;;;3810:120:0;3901:22;:12;:22;3810:120;3875:7;548:34314:15;;;3875:7:0;3901:12;:6;:12;:::i;2422:76::-;;2490:1;2422:76;;2475:4;18479:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;18376:412;;;;18520:1;18508:13;18520:1;18508:13;:::i;:::-;18527:15;18523:19;;;;;18572:11;18564:63;18572:11;;18544:3;18572:11;;;;:::i;18564:63::-;18642:66;18650:23;;:10;18661:11;;;;;;:::i;:::-;18650:23;;:::i;:::-;:28;;;;:::i;:::-;;18642:66;:::i;:::-;18749:19;18736:11;;;;;;;:::i;:::-;18749:19;:::i;18544:3::-;18508:13;;18523:19;;;;;;;18376:412::o;:::-;;;;;;:::i;16616:711::-;16698:17;16699:16;;;:::i;16698:17::-;16694:62;;16823:19;;;:10;:19;:::i;:::-;16845:1;;16823:23;;;;;:::i;:::-;;16819:68;;16955:17;;;:8;:17;:::i;:::-;:22;;;;:::i;:::-;;16951:67;;17121:26;;;:17;:26;:::i;:::-;:31;;;;:::i;:::-;;;:80;;;;16616:711;17117:125;;;17308:11;17315:4;16616:711;:::o;17121:80::-;17156:45;17175:26;;;;;17121:17;17175:26;:::i;17156:45::-;:15;:45;;17121:80;;;16951:67;16994:12;;:::o;16694:62::-;16732:12;16739:5;16732:12;:::o;548:34314::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;2378:657:4:-;2530:61;2565:26;2627:21;2378:657;;;;2486:16;548:34314:15;;;2486:16:4;2565:26;:17;:26;:::i;2530:61::-;2627:21;;;;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;2627:21:4;2683:28;2601:47;2683:28;;:::i;:::-;2745:10;2726:29;;2745:10;2753:1;2745:10;:::i;2726:29::-;;2722:173;;2378:657;2929:49;2930:27;;;;;:::i;:::-;;;:::i;:::-;2929:49;2961:17;;:::i;:::-;2929:49;:::i;:::-;;;:::i;2722:173::-;-1:-1:-1;2789:19:4;;-1:-1:-1;2929:49:4;;2930:27;;;2849:35;2789:28;:19;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;2789:28:4;2849:35;;:::i;:::-;2722:173;;;;;;;2422:76:0;;2490:1;2422:76;;;;;;;2475:4;29040:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;;:::o;:::-;;;:::o;:::-;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;548:34314:15;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;-1:-1:-1;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;28737:1683;;;;;30292:120;;28737:1683;29810:464;29072:28;29830:444;28737:1683;;;;29830:444;30292:120;28737:1683;;29830:444;28737:1683;30292:120;28737:1683;;;;29223:80;28737:1683;29064:68;29072:24;:17;28737:1683;548:34314;;29072:24;:28;29099:1;29072:28;;;:::i;:::-;;29064:68;:::i;:::-;29143:69;29151:18;:29;;:25;:18;548:34314;;;29151:25;:29;;:::i;:::-;;29143:69;:::i;:::-;29231:23;;;;:::i;:::-;;29223:80;:::i;:::-;29371:13;;;:::i;:::-;;;;29367:114;;;28737:1683;29497:15;;;:::i;:::-;;;29493:261;;28737:1683;29785:14;;;29830:444;29785:14;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;29830:444;;;;:::i;:::-;;;;548:34314;;29830:444;;;;548:34314;;29830:444;30000:4;29830:444;;;548:34314;29830:444;;;;;548:34314;;29830:444;;;;;;548:34314;;29830:444;;;;;;548:34314;;29830:444;;;;548:34314;;29830:444;;;;;;548:34314;;29830:444;;29339:15;29830:444;;;548:34314;;29830:444;29810:17;;:7;:17;:::i;:::-;:464;:::i;30292:120::-;;;:::i;:::-;;;548:34314;;;;30292:120;;;;;;:::i;:::-;;;;28737:1683::o;29493:261::-;29529:72;29339:15;29537:24;;29529:72;:::i;:::-;29616:127;;29493:261;;;;29616:127;29662:21;;29654:73;29662:21;548:34314;;29662:21;;29654:73;:::i;:::-;29616:127;;;;29367:114;29401:68;29339:15;29409:22;;29401:68;:::i;:::-;29367:114;;28737:1683;;;;;;;;;;;:::i;2466:103:8:-;;2531:1;2466:103;;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;1315:72:7:-;;1379:1;1315:72;;;;:::i;:::-;1379:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8215:883;;;8915:12;9041:49;8215:883;8359:142;8375:18;;:::i;:::-;8367:41;47819:10:17;8367:41:15;;;:::i;:::-;:79;;;;;8215:883;8359:142;;:::i;:::-;8512:49;8520:14;;;:::i;:::-;8512:49;:::i;:::-;8572:69;8580:25;:14;;;:::i;:::-;:25;:::i;:::-;:38;;8609:9;;;:::i;8580:38::-;;;8572:69;:::i;:::-;8652:44;8660:16;8666:10;8674:1;8666:10;:::i;8660:16::-;-1:-1:-1;;;;;548:34314:15;;8660:16;;8652:44;:::i;:::-;8707:41;8715:12;8674:1;8715:12;:::i;:::-;;;8707:41;:::i;:::-;8759:53;8767:10;8674:1;8767:10;:::i;:::-;;;8759:53;:::i;:::-;8915:12;8924:3;8915:12;:::i;:::-;8971:14;9041:49;;8971:14;;:::i;:::-;9006:8;;;;;:::i;9041:49::-;;;548:34314;;;;9041:49;;;;;;:::i;8367:79::-;8412:34;8420:11;;;;:::i;:::-;8412:34;:::i;:::-;8367:79;;;8215:883;;;;;;:::i;1315:72:7:-;1379:1;1315:72;;;:::i;:::-;1379:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;23477:846;23548:49;23556:16;;;:::i;23548:49::-;24264:51;;24287:14;;23616:12;23608:62;23616:30;;:21;;;;:::i;:30::-;23608:62;:::i;:::-;24170:38;23990:1;24170:30;:21;23712;23683:50;23712:21;;;;:::i;:::-;23683:50;:::i;:::-;23759:11;;;:::i;:::-;23750:35;23751:34;47819:10:17;23772:12:15;23751:34;;;:::i;23750:35::-;23746:148;;23477:846;-1:-1:-1;23960:26:15;;;548:34314;;23960:31;;;;:::i;:::-;;23956:145;;23477:846;24113:21;:46;:21;;;;:::i;:::-;:32;23928:15;24113:32;;:46;:::i;24170:21::-;:30;:38;:::i;:::-;24238:7;;;:::i;:::-;24287:14;548:34314;-1:-1:-1;;;;;548:34314:15;;;24264:51;;;:::i;:::-;;;;548:34314;;;;24264:51;23928:15;548:34314;;23928:15;548:34314;;;24264:51;548:34314;23956:145;24016:41;24031:26;24008:81;24031:26;548:34314;;;24016:41;23928:15;24016:41;;24008:81;:::i;:::-;23956:145;;;23746:148;23802:80;23810:14;:30;;:14;;;;548:34314;-1:-1:-1;;;;;548:34314:15;;;23810:14;:30;-1:-1:-1;;;;;548:34314:15;;;23810:30;;23802:80;:::i;:::-;23746:148;;;23477:846;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;4300:18;;;:::i;2475:4::-;4226:136;4330:25;4226:136;4330:25;:::i;:::-;;4226:136::o;:::-;;;;;:::i;5328:245::-;;5421:34;47819:10:17;5443:12:0;47733:103:17;5421:34:0;-1:-1:-1;;;;;548:34314:15;;5421:34:0;5417:102;;5529:37;;;:::i;5417:102::-;-1:-1:-1;;;5478:30:0;;;;;;;;;2422:76;2490:1;2422:76;2475:4;13192:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;13126:310;13380:48;13126:310;13216:59;13224:13;13236:1;13224:13;:::i;:::-;;;13216:59;:::i;:::-;13309:16;;;:::i;:::-;13336:28;;;;:::i;:::-;13380:48;;548:34314;;;;13380:48;;;;;;:::i;:::-;;;;13126:310::o;:::-;;;;:::i;2422:76:0:-;2475:4;12964:11:15;;:::i;2475:4:0:-;2490:1;12927:79:15;;:::i;:::-;;;:::i;548:34314::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::i;26334:187:17:-;;;26475:39;26334:187;26475:39;;:::i;:::-;;;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;11411:220;11589:34;;;47819:10:17;11462:86:15;11470:41;;;;:::i;:::-;11462:86;:::i;:::-;11565:7;;;:::i;11589:34::-;;;548:34314;;;;2422:76:0;2490:1;2422:76;2475:4;12735:11:15;;:::i;2475:4:0:-;12799:29:15;;12676:160;12759:24;;;;:::i;12676:160::-;;;;:::i;2422:76:0:-;2490:1;2422:76;2475:4;12387:11:15;;:::i;2475:4:0:-;12451:24:15;;12325:158;12411:24;;;;:::i;12325:158::-;;;;:::i;2422:76:0:-;;2490:1;2422:76;;2475:4;12046:11:15;;:::i;2475:4:0:-;12268:41:15;11928:389;12240:11;11928:389;12268:41;11928:389;12268:41;11928:389;12076:57;12084:19;12099:4;12084:19;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;12084:19;548:34314;12076:57;12144:49;12152:16;;;:::i;12144:49::-;12240:11;:::i;11928:389::-;;;;;;:::i;548:34314::-;;;;;;;;;;;;:::i;1726:84:7:-;1796:7;;;:::i;12934:150:17:-;13040:36;13048:27;13032:45;12934:150;13006:7;548:34314:15;;;13006:7:17;13048:27;;:::i;:::-;13040:36;:::i;2422:76:0:-;2490:1;2422:76;2475:4;30571:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;30511:243;30721:25;30511:243;30595:64;30603:27;30604:26;;:17;;:7;:17;:::i;30603:27::-;30595:64;:::i;:::-;30672:33;30701:4;30672:26;:17;;30604:7;30672:17;:::i;30721:25::-;;;548:34314;;;;30721:25;;;;548:34314;30511:243;;;;:::i;2422:76:0:-;2490:1;2422:76;2475:4;4491:11:15;;:::i;2475:4:0:-;4562:26:15;4431:165;4538:7;4525:11;;;:::i;:::-;4538:7;:::i;4562:26::-;;;548:34314;;;;4431:165;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;19583:11:15;;:::i;2475:4:0:-;19507:358:15;;;19612:13;19624:1;19612:13;:::i;:::-;19631:15;19627:19;;;;;19676:11;19668:63;19676:11;;19648:3;19676:11;;;;:::i;19668:63::-;19746:58;19754:26;19768:11;;;;;;:::i;19746:58::-;19834:11;;;;;;;:::i;19648:3::-;19612:13;;19507:358;;;;;:::i;1463:68:17:-;1518:13;-1:-1:-1;;;;;1518:13:17;:::i;8570:239::-;8665:19;8674:10;8682:1;8674:10;:::i;8665:19::-;-1:-1:-1;;;;;548:34314:15;;8665:19:17;8661:69;;8747:25;;;:18;:25;:::i;:::-;8775:27;;:::i;:::-;8747:55;8570:239;:::o;8661:69::-;-1:-1:-1;;;8694:35:17;:::i;5042:100:15:-;5120:14;;5042:100;5093:7;548:34314;;;5093:7;5120:14;:7;:14;:::i;1500:62:2:-;;;:::i;:::-;1554:1;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;548:34314:15:-;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;548:34314:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;34165:616::-;;34267:17;34283:1;34267:17;:::i;:::-;34300:13;34333:3;34315:16;34319:12;;;:::i;34315:16::-;;;;;;34357:36;;:26;:14;:23;:14;;:23;:::i;:36::-;34353:84;;34333:3;548:34314;;34300:13;;34333:3;34300:13;;34353:84;34414:7;;34333:3;34414:7;;:::i;:::-;34353:84;;;;;34315:16;;34493:26;34315:16;34493:26;:::i;:::-;34530:17;34283:1;34530:17;:::i;:::-;34563:13;;34596:3;34578:16;34582:12;;;:::i;34578:16::-;;;;;;34596:3;34620:14;;:23;;:36;;:26;:23;;;;;:::i;:36::-;34616:122;;34596:3;;;;548:34314;;;;34596:3;34563:13;;34616:122;34696:23;:26;:23;34677:45;34696:23;;:::i;:26::-;34685:7;34677:45;34685:7;;;:::i;:::-;34677:45;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;34616:122:15;;;;;34578:16;-1:-1:-1;34578:16:15;;-1:-1:-1;;34165:616:15:o;1315:72:7:-;;1379:1;1315:72;;;;;;:::i;:::-;2422:76:0;2490:1;2422:76;;;;2475:4;14008:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;845:118;;;;;;;;;-1:-1:-1;;;845:118:15;;;548:34314;;;845:118;;548:34314;;;:::o;845:118::-;;;;:::o;:::-;548:34314;;-1:-1:-1;;;845:118:15;;;;;;;;;;;548:34314;-1:-1:-1;;;548:34314:15;;;845:118;548:34314;;;13817:1780;15543:46;;13817:1780;15075:75;15083:45;14458:12;15543:46;13817:1780;;;;;14032:49;14040:16;;;:::i;14032:49::-;14092:66;14100:16;;;:::i;:::-;:24;-1:-1:-1;;;;;548:34314:15;;14100:24;548:34314;14100:24;;14092:66;:::i;:::-;14169:60;14177:16;14183:10;14191:1;14183:10;:::i;14177:16::-;-1:-1:-1;;;;;548:34314:15;;14177:16;;14169:60;:::i;:::-;14240:51;14248:23;14249:22;;;:::i;14248:23::-;14240:51;:::i;14458:12::-;14542:13;14900:125;;14542:13;14611:219;14542:13;;14611:219;14542:13;;;:7;:13;:::i;:::-;845:118;14747:4;14739:13;14747:4;14739:13;:::i;:::-;548:34314;;14611:219;;;;;;14802:13;;14611:219;;548:34314;;;-1:-1:-1;;;;;548:34314:15;;;845:118;;;548:34314;845:118;;;;;;548:34314;;845:118;;;;-1:-1:-1;;;;;548:34314:15;845:118;;;548:34314;845:118;;;548:34314;-1:-1:-1;;;;;548:34314:15;845:118;;;548:34314;845:118;;;548:34314;845:118;;548:34314;;14611:219;;;;;;;;;:::i;:::-;14587:254;;;548:34314;;;14587:254;;548:34314;;;;14587:254;;14964:17;;;:::i;:::-;548:34314;;14900:125;;;;;;;;;:::i;:::-;14876:160;;;548:34314;;;14876:160;;15083:45;;:::i;:::-;15075:75;:::i;:::-;15188:15;:13;;14542:7;15188:13;:::i;:::-;:15;;;;:::i;:::-;;:::i;:::-;15330:5;14191:1;15307:12;47819:10:17;15330:5:15;:::i;:::-;15463:7;;;;;:::i;15543:46::-;;;:::i;:::-;;;;548:34314;;;;13817:1780;;;;;;;;:::i;2422:76:0:-;2475:4;12879:11:15;;:::i;2475:4:0:-;2490:1;12844:75:15;;:::i;:::-;;;:::i;2466:103:8:-;;2531:1;2466:103;;;:::i;:::-;1315:72:7;1379:1;1315:72;;;:::i;:::-;1379:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;31460:1484::-;;31571:16;;;:::i;:::-;31563:49;;;:::i;:::-;31631:17;;:7;:17;:::i;:::-;:26;;;:::i;:::-;31661:1;;31631:31;;;;:::i;:::-;;;31623:65;;;:::i;:::-;31724:17;;31631:7;31724:17;:::i;:::-;31701:40;;;:::i;:::-;31785:21;;;:12;:21;:::i;:::-;31752:54;;;:::i;:::-;31875:15;;;548:34314;;;31867:48;;;:::i;:::-;31934:15;;;548:34314;31839:15;-1:-1:-1;31934:30:15;31926:67;;;:::i;:::-;32012:17;;;548:34314;31839:15;-1:-1:-1;32012:32:15;32004:73;;;:::i;:::-;32096:26;;;548:34314;32140:20;;;;;;;548:34314;;;32140:20;32126:34;;31839:15;32126:34;:::i;:::-;-1:-1:-1;32096:64:15;32088:108;;;:::i;:::-;32218:23;;;:14;:23;:::i;:::-;:33;;;;:::i;:::-;:43;;;;;:::i;:::-;32217:44;32209:82;;;:::i;:::-;32310:18;;548:34314;32436:404;;32472:368;;;;32436:404;32302:121;;-1:-1:-1;;;;;548:34314:15;47819:10:17;32310:34:15;;;;:72;;;;31460:1484;32302:121;;:::i;:::-;32472:368;32614:20;32573:16;;;:::i;:::-;32614:20;548:34314;;;32614:20;32472:368;;;:::i;:::-;;;;;;;548:34314;;32472:368;;;;;;548:34314;;32472:368;;;;548:34314;;32472:368;;31839:15;32472:368;;;548:34314;;32472:368;32697:4;32472:368;;;548:34314;;;;32472:368;;;548:34314;19351:35;:::i;32472:368::-;;;;548:34314;;32472:368;;;;:::i;:::-;;31839:15;32472:368;;;548:34314;;32472:368;32436:33;:23;;;32218:14;32436:23;:::i;:33::-;:404;:::i;:::-;32858:78;;;;;32909:13;;32891:16;;;:::i;:::-;32909:13;;548:34314;;;32909:13;32858:78;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;548:34314;;;;32858:78;31839:15;;;;32858:78;;;:::i;:::-;;;;31460:1484::o;32310:72::-;32348:34;32356:11;;;;:::i;32348:34::-;32310:72;;;31460:1484;;;;;:::i;1315:72:7:-;;1379:1;1315:72;;;;:::i;:::-;23043:321:15;;;23166:13;23178:1;23166:13;:::i;:::-;23185:15;23181:19;;;;;23230:11;23222:63;23230:11;;23202:3;23230:11;;;;:::i;23222:63::-;23324:20;23311:11;;;;;;;:::i;:::-;23324:20;:::i;23202:3::-;23166:13;;23181:19;;;;;;23043:321::o;:::-;;;;;;:::i;2854:136:0:-;2954:29;2854:136;2954:20;:12;:29;2854:136;2931:4;548:34314:15;;;2954:12:0;:20;:29;:::i;:::-;;:::i;2422:76::-;2490:1;2422:76;2475:4;12561:11:15;;:::i;2475:4:0:-;12628:32:15;;12491:177;12585:27;;;;:::i;12491:177::-;;;;:::i;11742:102:17:-;11823:14;11830:7;11823:14;:::i;19186:231::-;19355:55;;;;47819:10;19280:60;:39;:49;:39;;;:18;:39;:::i;:::-;:49;:::i;:::-;:60;:::i;19355:55::-;;;548:34314:15;;;;33871:163;33986:40;33871:163;33993:23;:33;33871:163;33953:20;;:::i;:::-;33993:23;:14;:23;:::i;:33::-;33986:40;:::i;2422:76:0:-;;2490:1;2422:76;;2475:4;33214:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;33110:595::-;;33238:49;33246:16;;;:::i;33238:49::-;33298:77;33306:43;;:33;:23;;;:14;:23;:::i;:43::-;33298:77;:::i;:::-;33618:79;;;;;33651:20;;33388:70;33425:33;:23;;;33306:14;33425:23;:::i;33388:70::-;33497:4;33471:23;;;548:34314;33512:41;33538:15;33512:23;;;548:34314;;33512:41;33564:27;;;;:36;33651:20;548:34314;-1:-1:-1;;;;;548:34314:15;;;33651:20;33618:79;;:::i;:::-;;;548:34314;;;;33618:79;33538:15;;;;33618:79;;;:::i;33110:595::-;;;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;20521:11:15;;:::i;2475:4:0:-;20443:362:15;;;20550:13;20562:1;20550:13;:::i;:::-;20569:15;20565:19;;;;;20614:11;20606:63;20614:11;;20586:3;20614:11;;;;:::i;20606:63::-;20684:58;20692:26;20706:11;;;;;;:::i;20684:58::-;20774:11;;;;;;;:::i;20586:3::-;20550:13;;20443:362;;;;;:::i;548:34314::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;26091:131::-;26193:21;26186:28;26091:131;26155:18;;:::i;:::-;26193:21;:12;:21;:::i;27102:405:17:-;;;;;27294:7;;;;;:::i;:::-;27316:14;;:19;;27334:1;27316:19;:::i;:::-;;27312:189;;27102:405;;;;;:::o;27312:189::-;27353:57;27354:56;;;;:::i;27353:57::-;27349:152;;27312:189;;;;;;27349:152;-1:-1:-1;;;27438:47:17;:::i;7247:764:15:-;;7529:219;7867:125;7247:764;7867:125;7247:764;7371:7;548:34314;;;7371:7;7414:13;7529:219;7414:13;;;:7;:13;:::i;7867:125::-;7843:160;;;548:34314;;;7843:160;;7247:764;:::o;2422:76:0:-;2490:1;2422:76;2475:4;24879:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;24819:706;24903:49;24911:16;;;:::i;24903:49::-;25466:51;;25489:14;;24971:12;24963:62;24971:30;;:21;;;;:::i;24963:62::-;25372:38;25405:5;25372:30;:21;25067;25038:50;25067:21;;;;:::i;25038:50::-;25114:11;;;:::i;:::-;25105:35;25106:34;47819:10:17;25127:12:15;47733:103:17;25105:35:15;25101:154;;25315:21;:46;:21;;;;:::i;25101:154::-;25157:86;25165:14;:30;;:14;;;;548:34314;-1:-1:-1;;;;;548:34314:15;;;25165:30;;25157:86;:::i;24819:706::-;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;17611:11:15;;:::i;2475:4:0:-;2490:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;17527:641;18106:54;;;17527:641;17635:49;17643:16;;;:::i;17635:49::-;17695:59;17703:23;17704:22;;;:::i;17703:23::-;17695:59;:::i;:::-;17820:24;17843:1;17820:24;:::i;:::-;;;17817:135;;17527:641;17964:31;:17;;:8;:17;:::i;:31::-;18006:48;:26;;;:17;:26;:::i;:48::-;18065:23;;17843:1;18065:23;:::i;:::-;:19;;:10;:19;:::i;18106:54::-;;;548:34314;;;;18106:54;17789:15;;;;18106:54;;:::i;17817:135::-;17861:79;17789:15;17869:33;;17861:79;:::i;:::-;17817:135;;17527:641;;;;;:::i;548:34314::-;;;;;;;:::i;:::-;;;:::i;9430:299::-;9521:49;9529:16;;;:::i;9521:49::-;9607:10;;:::i;:::-;548:34314;;9635:25;;9659:1;9635:25;:::i;:::-;;:86;;;9670:45;;9696:18;;9663:53;9696:18;;:::i;:::-;9670:45;;548:34314;;;;9670:45;;;;;;;;;;:::i;9635:86::-;;;;;:::i;2422:76:0:-;2490:1;2422:76;2475:4;20034:11:15;;:::i;2475:4:0:-;20282:35:15;19975:350;20058:49;20066:16;;;:::i;20058:49::-;20118:54;20126:22;;;:::i;19975:350::-;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;4717:18;;;:::i;2475:4::-;4642:138;4747:26;4642:138;4747:26;:::i;4642:138::-;;;;;:::i;548:34314:15:-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;548:34314:15;;;;;:::i;26387:420::-;;;26553:15;26535:34;;;;:::i;:::-;26585:13;;26597:1;26585:13;:::i;:::-;26600:19;;;;;;;26621:3;26649:11;26641:63;26649:11;;26600:19;26649:11;;;;:::i;26641:63::-;26733:29;26750:11;;;;;;:::i;26733:29::-;26719:43;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;548:34314:15;;;;26621:3;26585:13;;;;26600:19;;;;;;26387:420;:::o;19567:162:17:-;19687:35;19567:162;19687:25;:35;19567:162;19664:4;548:34314:15;;;19664:4:17;19687:25;:18;:25;:::i;2422:76:0:-;2490:1;2422:76;2475:4;30914:11:15;;:::i;2475:4:0:-;31060:27:15;30852:243;30938:59;30946:26;;:17;;:7;:17;:::i;:26::-;30938:59;:::i;:::-;31010:34;31039:5;31010:26;:17;;30946:7;31010:17;:::i;31060:27::-;;;548:34314;;;;30852:243;;;;:::i;15707:103::-;15785:17;;;:::i;2422:76:0:-;2490:1;2422:76;2475:4;4779:11:15;;:::i;2475:4:0:-;4851:26:15;4718:167;4827:7;4814:11;;;:::i;:::-;4827:7;:::i;4851:26::-;;;548:34314;;;;4718:167;;;;:::i;1500:62:2:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;2627:22:2;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:2;;-1:-1:-1;;;;;548:34314:15;2672:31:2;;;548:34314:15;;;;2543:215:2;;;;:::i;1315:72:7:-;;1379:1;1315:72;;;:::i;:::-;1379:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;21740:1088::-;21839:49;21847:16;;;:::i;21839:49::-;21899:67;21907:31;21908:30;;:21;;:12;:21;:::i;21907:31::-;21899:67;:::i;:::-;21977:51;21985:23;21986:22;;;:::i;21977:51::-;22054:11;;:::i;:::-;22045:35;22046:34;47819:10:17;22067:12:15;47733:103:17;22045:35:15;22041:148;;21740:1088;22266:16;22757:63;;;;22266:16;;;:::i;:::-;22299:25;;22323:1;22299:25;:::i;:::-;;;22295:139;;21740:1088;22715:24;22470:232;;:::i;:::-;;;;548:34314;;22470:232;-1:-1:-1;;;;;548:34314:15;;22470:232;;;548:34314;22470:232;22223:15;22470:232;;;548:34314;;22470:232;;;;;;548:34314;;22470:232;22446:256;22470:232;22323:1;22470:232;:::i;:::-;;;;;;;548:34314;;22470:232;22686:4;22470:232;;;548:34314;22446:21;;21908:12;22446:21;:::i;:::-;:256;:::i;:::-;22715:24;;:::i;22757:63::-;;;548:34314;;;;22295:139;22341:81;22223:15;22349:34;;22341:81;:::i;:::-;22295:139;;22041:148;22097:80;22105:16;:32;;:16;;;:::i;:32::-;;22097:80;:::i;:::-;22041:148;;;21740:1088;;;;;:::i;2115:213:4:-;-1:-1:-1;;;;;;;;;548:34314:15;;2240:41:4;:81;;;;;2233:88;2115:213;:::o;2240:81::-;2285:36;;;;:::i;3199:103:0:-;3282:12;;47819:10:17;3282:12:0;;:::i;548:34314:15:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;;548:34314:15;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;548:34314:15;;;;;;:::i;:::-;;;-1:-1:-1;;;;;548:34314:15;;;;;;:::i;:::-;;;;;:::i;3666:507:4:-;;3760:39;3782:17;;:::i;3760:39::-;3813:26;;;;:::i;:::-;;3809:173;;4015:1;;4007:10;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;3995:22:4;3991:108;;4131:35;4109:57;4131:35;;;;;;;:::i;:::-;;;;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;;4131:35:4;-1:-1:-1;;;;;548:34314:15;4131:35:4;;;548:34314:15;;4131:35:4;4109:57;;:::i;3991:108::-;-1:-1:-1;;;4040:48:4;;-1:-1:-1;;;;;548:34314:15;4040:48:4;;;548:34314:15;;4040:48:4;548:34314:15;3809:173:4;-1:-1:-1;;;3916:55:4;;;;;;;;;;:::i;548:34314:15:-;;;;;-1:-1:-1;;548:34314:15;;:::o;2233:51:17:-;2276:8;-1:-1:-1;;;2276:8:17;:::i;19978:465::-;;548:34314:15;20043:11:17;;20070:15;;:::i;:::-;:26;-1:-1:-1;20070:26:17;20066:371;;19978:465;;:::o;20066:371::-;20221:23;20231:13;;;:::i;20221:23::-;;;20217:210;;19978:465;;:::o;20217:210::-;-1:-1:-1;20264:14:17;;-1:-1:-1;20296:60:17;20313:26;;:17;;:26;:::i;:::-;20304:35;;20303:42;;20344:1;20303:42;:::i;:::-;;;;20347:9;;;;:::i;:::-;20296:60;;20303:42;;20383:29;20392:15;;:::i;:::-;20383:29;20411:1;20383:29;:::i;:::-;:24;;548:34314:15;;20383:29:17;;20217:210;19978:465::o;49703:160::-;49766:91;;;;;41333:460;;41473:16;;;:::i;:::-;41504:45;;;;41333:460;41500:198;;41333:460;41758:28;;;41708:24;:35;:24;:30;:24;;:15;:24;:::i;:::-;:30;:35;:::i;41758:28::-;;;:::i;:::-;;;;548:34314:15;;;;41758:28:17;;;;548:34314:15;41500:198:17;41567:45;41568:44;47819:10;41568:44;;:::i;41567:45::-;41563:135;41500:198;41563:135;-1:-1:-1;;;41640:42:17;:::i;41504:45::-;-1:-1:-1;47819:10:17;41521:28;-1:-1:-1;;;;;548:34314:15;;41521:28:17;548:34314:15;41521:28:17;;;41504:45;;6586:101;6667:13;;;:::i;1878:128:7:-;1943:8;;:::i;:::-;1939:61;;1878:128::o;1939:61::-;-1:-1:-1;;;1974:15:7;;;;;;5478:30:0;7547:378:17;7798:31;:13;;;:::i;:::-;7814:15;;:::i;:::-;7798:31;548:34314:15;;;14380:2173:17;14477:15;;:::i;:::-;:26;-1:-1:-1;14477:26:17;14473:2017;;14380:2173;-1:-1:-1;;;16507:38:17;:::i;14473:2017::-;14528:17;:26;;;;:17;:26;:::i;:::-;14519:35;14857:1;14847:11;;;;:::i;:::-;;;14843:1270;;16444:15;;16435:29;;16444:15;;:::i;16435:29::-;:24;;;548:34314:15;;16435:29:17;;14473:2017;16431:48;16466:13;:::o;14843:1270::-;14893:13;;;;14882:24;14893:13;;;:::i;14882:24::-;;;;14878:77;;15502:597;;;-1:-1:-1;;2943:14:17;15596:9;;15578:28;;15596:9;15578:28;;:::i;:::-;15569:37;15654:11;;;:::i;:::-;;;15650:25;;15710:15;;15701:29;;15710:15;;:::i;15701:29::-;;15697:48;;-1:-1:-1;;;16041:38:17;:::i;15650:25::-;15667:8;;-1:-1:-1;;;2943:14:17;15596:9;548:34314:15;21721:474:17;21929:24;21888:65;21721:474;21820:27;548:34314:15;;;21820:27:17;21929:24;:15;:24;:::i;21888:65::-;22057:132;;;21721:474;:::o;1315:72:7:-;;1379:1;1315:72;;;;;:::i;:::-;1379:1;:::i;548:34314:15:-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:34314:15;;;;;;;10160:935;;;;;10496:10;10504:1;10496:10;:::i;:::-;10488:18;;-1:-1:-1;;;;;548:34314:15;;10488:18;548:34314;10488:18;;;:38;;;;10160:935;10484:604;;;;10160:935;;:::o;10484:604::-;10611:13;;;10504:1;10611:13;:::i;:::-;10626:12;;;;;;;10640:3;10682:16;;10626:12;10682:16;;;:::i;:::-;10822:11;;:::i;:::-;10835:12;10813:35;10814:34;47819:10:17;10814:34:15;;;:::i;10813:35::-;10809:253;;10640:3;;;548:34314;;;;10640:3;10611:13;;;;10809:253;10947:95;10882:22;;10873:51;10881:23;10882:22;10955:41;10882:22;;:::i;10873:51::-;10955:41;:::i;:::-;10947:95;:::i;:::-;10809:253;;;;10626:12;;;;;10160:935::o;10488:38::-;10510:16;;-1:-1:-1;10510:16:15;;-1:-1:-1;;;;;548:34314:15;10510:16;548:34314;10510:16;;;10488:38;;;;10160:935;;;;;;;:::i;2625:49:17:-;2671:3;;;:::i;:::-;;;;;;;548:34314:15;;2671:3:17;;548:34314:15;;;2671:3:17;;;;;548:34314:15;;2671:3:17;;;;;;;;;;;;;;;;;;;;;548:34314:15;;2671:3:17;;548:34314:15;;;47060:304:17;47303:31;47295:40;47060:304;47295:62;47060:304;;47191:7;548:34314:15;;;47191:7:17;47259:18;47229:49;47236:41;47259:18;;:::i;:::-;47236:41;;;:::i;:::-;47229:49;:::i;:::-;47303:31;;:::i;:::-;47295:40;:::i;:::-;:62;:::i;3310:95:4:-;3386:12;3393:5;3386:12;:::i;1864:36:8:-;1899:1;;;:::i;2575:307::-;2702:7;;;:::i;:::-;2713;;:::i;:::-;2702:18;;;2698:86;;2858:17;;;;:::i;2698:86::-;-1:-1:-1;;;2743:30:8;;;;;;5478::0;1818:40:8;1857:1;;;:::i;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;1604:51:17:-;1653:2;;;:::i;30652:2343::-;30747:13;;;:::i;:::-;30786:1;;30774:13;;;;:::i;:::-;;;30770:53;;30856:10;31743:26;30856:10;31323:170;31357:136;30856:10;;;:::i;:::-;30886:8;;;;;;:::i;:::-;31446:33;17787:151;;;;;31446:33;;;;:::i;:::-;;;;;:::i;:::-;17192:331;548:34314:15;17192:331:17;31413:66;;17192:331;-1:-1:-1;;;;;17192:331:17;;;;17086:443;31357:136;31323:31;;:17;:31;:::i;:170::-;31902:20;31910:11;31743:1;31748:21;31704:71;31730:45;31748:21;;:::i;:::-;31743:26;:1;:26;:::i;:::-;;;;;;:::i;:::-;31742:32;31730:45;1653:2;548:34314:15;;31730:45:17;31704:71;:22;;:18;:22;:::i;:::-;:71;;;;:::i;31902:20::-;31925:16;;:::i;:::-;31902:39;;;31960:13;31956:54;;548:34314:15;;;;;;32125:27:17;-1:-1:-1;;32125:27:17;548:34314:15:o;32125:27:17:-;;32121:77;;31743:1;32213:662;;;;;32889:19;;;;;;;;:::i;32213:662::-;;;;;32857:16;32234:450;;;;;;;;32213:662;;;;;32857:9;548:34314:15;;32857:9:17;:16;:9;:16;32213:662;32857:16;;;;32121:77;-1:-1:-1;;;32162:35:17;:::i;31956:54::-;-1:-1:-1;;;31983:26:17;:::i;30770:53::-;-1:-1:-1;;;30797:25:17;:::i;6179:316:0:-;6276:23;6277:22;;;;:::i;6276:23::-;6272:217;;;6315:36;6347:4;6315:29;:12;:20;:12;;:6;:12;:::i;:36::-;6370:40;;;47819:10:17;6370:40:0;548:34314:15;;6370:40:0;;;;548:34314:15;;;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;6473:5;6466:12;:::o;6732:317::-;6830:22;;;;:::i;:::-;6826:217;;;6868:37;6900:5;6868:29;:12;;;;:6;:12;:::i;:37::-;6924:40;;;47819:10:17;6370:40:0;548:34314:15;;6924:40:0;;;;548:34314:15;;;;1565:66:7;;;:::i;:::-;1623:1;;:::i;548:34314:15:-;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;:::i;2586:117:7:-;2644:15;2654:5;2644:15;;:::i;:::-;2674:22;;47819:10:17;2683:12:7;47733:103:17;2586:117:7;;;:::i;16008:249:15:-;;16126:16;;;:::i;:::-;16161;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;16161:16;:52;;;;;16008:249;16161:87;;;;;16153:96;;16008:249;:::o;16161:87::-;16217:31;:20;;;;:31;:20;;:::i;16161:52::-;16181:32;;;;;;;:::i;:::-;16161:52;;;;42051:87:17;42125:5;;42051:87;42125:5;:::i;548:34314:15:-;;;;;;;;;;;;;;;;;;;;;;:::i;4607:543:4:-;;;4716:39;4738:17;;:::i;4716:39::-;4769:26;;;;:::i;:::-;;4765:180;;4978:1;;4970:10;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;-1:-1:-1;;;;;548:34314:15;;4958:22:4;4954:115;;5108:35;;;5079:26;5108:35;;5079:64;5108:35;;;;:::i;:::-;;;;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;;5108:35:4;-1:-1:-1;;;;;548:34314:15;5108:35:4;;;548:34314:15;;5108:35:4;5079:17;:26;:::i;:::-;:64;:::i;4954:115::-;-1:-1:-1;;;5003:55:4;;;;;548:34314:15;;;-1:-1:-1;;;;;548:34314:15;;;;;;5003:55:4;548:34314:15;4765:180:4;-1:-1:-1;;;4872:62:4;;;;;;;;;;:::i;1796:162:2:-;1710:6;548:34314:15;-1:-1:-1;;;;;548:34314:15;47819:10:17;;1855:23:2;47819:10:17;1855:23:2;548:34314:15;1855:23:2;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:2;;;;-1:-1:-1;;;;;548:34314:15;;;1901:40:2;548:34314:15;;5478:30:0;;;2912:187:2;3052:40;;3004:6;;548:34314:15;-1:-1:-1;;;;;548:34314:15;;;3004:6:2;3020:17;;;;:::i;3052:40::-;;;;548:34314:15;;;;3052:40:2;;;;548:34314:15;;;;;;;;;;;;;;;;;19351:35;:::i;548:34314::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:807;;6217:40;;5573:807;5968:25;6217:40;5573:807;5716:4;548:34314;;;5716:4;5788:114;;;548:34314;;;;5788:114;;;;;;;;;;:::i;:::-;5764:149;;;548:34314;;;5764:149;;5968:25;;:::i;:::-;6062:10;;6054:120;6062:10;;;:::i;:::-;:80;;6076:66;6062:80;:::i;:::-;;;6054:120;:::i;:::-;548:34314;;6217:40;;;;;:::i;:::-;;;;;;;;;;;;;;6347:25;;;;6295:10;6268:59;6276:29;6295:10;6303:1;6295:10;:::i;6276:29::-;-1:-1:-1;;;;;548:34314:15;;6276:29;;6268:59;:::i;6217:40::-;;:::i;1315:72:7:-;;;:::i;:::-;1379:1;2398:14;2408:4;2398:14;;:::i;:::-;2427:20;;47819:10:17;2434:12:7;47733:103:17;2339:115:7;;;:::i;548:34314:15:-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;548:34314:15;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;29533:673:17:-;;29711:45;:28;:88;29533:673;29691:4;548:34314:15;;;29691:4:17;29711:28;;:::i;:45::-;;;:88;47819:10;29711:88;;548:34314:15;;;;29711:88:17;;;;;;;;;;548:34314:15;;;;29711:88:17;;;;;;;:::i;:::-;;;;;-1:-1:-1;;29711:88:17;;;29533:673;-1:-1:-1;29707:493:17;;29943:257;;:::i;:::-;548:34314:15;;29989:18:17;;30006:1;29989:18;:::i;:::-;;29985:113;;30111:79;;;;;;29707:493;29867:64;29877:54;29867:64;29877:54;;:::i;29867:64::-;;-1:-1:-1;;;;;;548:34314:15;;;29711:88:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;9194:106:15;9272:20;9279:13;9272:20;:::i;548:34314::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;548:34314:15;;;;;:::i;1308:632:9:-;1430:17;;;:::i;:::-;1450:1;1430:21;1450:1;1430:21;;1450:1;1430:21;:::i;:::-;1488:18;;;;;:::i;:::-;1520:11;1545:92;;;;1650:247;;;;;1910:13;;;1308:632;:::o;1650:247::-;1657:4;;;;1832:11;;-1:-1:-1;;2943:14:17;1681:5:9;-1:-1:-1;;;1704:111:9;;;;1681:5;1704:111;1832:11;1841:2;1832:11;:::i;:::-;;;1865:10;;1874:1;1865:10;:::i;:::-;;1861:21;;1650:247;;;;;1861:21;1877:5;;2565:202:0;-1:-1:-1;;;;;;;;;548:34314:15;;2673:47:0;:87;;;;;2666:94;2565:202;:::o;2673:87::-;2724:36;;;;:::i;3432:197::-;;3519:23;3520:22;;;;:::i;3519:23::-;3515:108;;3432:197;;:::o;3515:108::-;-1:-1:-1;;;3565:47:0;;;;;;;;;:::i;46771:143:17:-;;;;46904:6;548:34314:15;;;2078:126:7;2140:9;2141:8;;:::i;2140:9::-;2136:62;;2078:126::o;2136:62::-;-1:-1:-1;;;2172:15:7;;;;;;5478:30:0;1728:52:17;1777:3;;;:::i;42355:3042::-;42464:27;;;:::i;:::-;42525:28;42517:37;42525:28;;;:::i;42517:37::-;42622:35;;;:::i;:::-;42668:321;;;;;42355:3042;45130:35;;43035:1;;45366:14;43035:1;45130:35;43035:1;42999:51;43035:1;;;43027:10;;;;;:::i;:::-;43048:1;42999:51;43048:1;;42999:51;;;:::i;:::-;;;;;;:::i;:::-;43113:190;;42355:3042;43916:21;;43882:60;43910:32;43916:21;43911:26;43916:21;;:::i;:::-;43911:26;;:::i;:::-;548:34314:15;;;43910:32:17;43882:60;:24;;:18;:24;:::i;:60::-;44261:15;;:::i;:::-;44279:25;44202:173;44279:25;;:::i;:::-;44261:43;;;44308:53;;;;;:::i;:::-;17192:331;548:34314:15;17192:331:17;44260:101;;17192:331;-1:-1:-1;;;;;17192:331:17;;;;17086:443;44202:173;44173:17;:202;:17;:26;;;;;:::i;:202::-;44492:52;;;;:::i;:::-;:47;;;548:34314:15;;44492:52:17;;44488:617;;42355:3042;45130:35;;;;;:::i;:::-;;;;548:34314:15;;;;45130:35:17;;;;45366:14;;;;:::i;44488:617::-;548:34314:15;;44717:30:17;;;;;;:::i;:::-;:35;;;;:::i;:::-;;44488:617;44713:378;44853:13;44838:28;44853:13;;:::i;44838:28::-;;;44834:239;;44713:378;;44488:617;;44834:239;44998:52;:30;;;;:::i;:52::-;44834:239;;;;;43113:190;;;;;;42668:321;47819:10;-1:-1:-1;;;;;21135:472:17;;;;;;;;18735:17;42786:192;;42668:321;;;;42786:192;42882:43;42881:44;42882:43;;;;;;;:::i;42881:44::-;42877:101;;42786:192;;;;;;548:34314:15;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:34314:15;;;;;;;;;;;;;;;;;;;;6480:527;;6608:59;6616:16;;548:34314;;;6616:16;:22;;6636:2;6616:22;:::i;:::-;;6608:59;:::i;:::-;6680:162;;;;;;;;;;;;;;;6858:6;;6862:2;6858:6;:::i;:::-;548:34314;;;6858:6;6854:46;;6480:527;6920:7;6862:2;6920:7;:::i;:::-;548:34314;;;6920:7;:18;;;;6480:527;6912:58;;;:::i;:::-;6983:16;;6480:527;:::o;6920:18::-;6931:7;6912:58;6931:7;6936:2;6931:7;:::i;:::-;548:34314;;;6931:7;6920:18;;;;6854:46;6881:7;;;;6862:2;6881:7;:::i;:::-;;;:::i;:::-;6854:46;;;29154:916:12;29226:18;29243:1;29226:18;:::i;:::-;29291:8;;29282:17;;;:::i;:::-;;;;29278:103;;29154:916;29407:8;;29398:17;;;:::i;:::-;;;;29394:103;;29154:916;29523:8;;29514:17;;;:::i;:::-;;;;29510:103;;29154:916;29639:7;;29630:16;;;:::i;:::-;;;;29626:100;;29154:916;29752:7;;29743:16;;;:::i;:::-;;;;29739:100;;29154:916;29856:16;;29865:7;29856:16;:::i;:::-;;;;29852:100;;29154:916;29969:16;;29978:7;29969:16;:::i;:::-;;;29965:66;;29154:916;:::o;29965:66::-;30005:11;;;30015:1;30005:11;:::i;29852:100::-;29892:16;29926:11;29892:16;;29865:7;29892:16;:::i;:::-;29926:11;;29936:1;29926:11;:::i;:::-;29852:100;;;29739;29813:11;29779:16;;;;;:::i;:::-;29813:11;;29823:1;29813:11;:::i;:::-;29739:100;;;;29626;29700:11;29666:16;;;;;:::i;:::-;29700:11;;29710:1;29700:11;:::i;:::-;29626:100;;;;29510:103;29586:12;29551:17;;;;;:::i;:::-;29586:12;;29596:2;29586:12;:::i;:::-;29510:103;;;;29394;29470:12;29435:17;;;;;:::i;:::-;29470:12;;29480:2;29470:12;:::i;:::-;29394:103;;;;29278;29354:12;29319:17;;;;;:::i;:::-;29354:12;;29364:2;29354:12;:::i;:::-;29278:103;;;;763:146:10;862:40;-1:-1:-1;;;862:40:10;548:34314:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","ESCROW_ROLE()":"6ce76f30","activateReward(uint256)":"66cfd072","addReward(string,uint256,string,string,string,uint256,uint256,uint256)":"2a67c158","approve(address,uint256)":"095ea7b3","averageBlockTime()":"233dedf1","balanceOf(address)":"70a08231","batchMint(address,uint256,uint256)":"2a959b89","burn(uint256)":"42966c68","claimReward(uint256,uint256)":"86bb8f37","claimedRewards(uint256,uint256)":"c7a5156f","deactivateReward(uint256)":"eabdc5b4","domainSeparator()":"f698da25","escrowTransfer(address,address,uint256,bytes,uint256)":"82666bc8","forceUnlockToken(uint256)":"ccd40400","forceUnlockTokenBatch(uint256[])":"ae594865","forceUnstakeToken(uint256)":"bd39e149","forceUnstakeTokenBatch(uint256[])":"14f93a49","getApproved(uint256)":"081812fc","getClaimedReward(uint256,uint256)":"a3e37652","getClaimedRewards(uint256)":"7c33bd70","getDomainSeparator()":"ed24911d","getMessageHash(address,address,uint256)":"bc577940","getReward(uint256)":"1c4b774b","getRoleAdmin(bytes32)":"248a9ca3","getStakingStatus(uint256)":"b5573847","getStakingStatusBatch(uint256[])":"dd4ba7e1","globalLockupPeriod()":"80c47440","grantEscrowRole(address)":"6cc232e9","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","isTokenLocked(uint256)":"276a28a3","lockedAt(uint256)":"dcae6754","maxSupply()":"d5abeb01","mintPrice()":"6817c76c","mintingEnabled()":"9fd6db12","name()":"06fdde03","nextRewardId()":"f064997c","nonce(address)":"70ae92d2","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeClaimedReward(uint256,uint256,string)":"a7b1190a","revokeEscrowRole(address)":"f12e061b","revokeRole(bytes32,address)":"d547741f","rewards(uint256)":"f301af42","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setAverageBlockTime(uint256)":"3736d853","setBaseURI(string)":"55f804b3","setContractURI(string)":"938e3d7b","setDefaultRoyalty(address,uint96)":"04634d8d","setLockToken(uint256,uint256)":"be707db1","setLockTokenBatch(uint256[],uint256)":"2496dd51","setMintingEnabled(bool)":"4ea3871a","setTokenRoyalty(uint256,address,uint96)":"5944c753","setUnlockToken(uint256)":"2474e2b2","setUnlockTokenBatch(uint256[])":"6fc23db4","stakeToken(uint256,uint256)":"ffab4bd9","stakeTokenBatch(uint256[],uint256)":"8ad7d9de","stakedTokens(uint256)":"c0788555","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unlockScheduledAt(uint256)":"a5f10fe7","unlockedAt(uint256)":"c4228aaa","unpause()":"3f4ba83a","unstakeToken(uint256)":"2cfb6688","unstakeTokenBatch(uint256[])":"17f82990"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialMintPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBlockTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBlockTime\",\"type\":\"uint256\"}],\"name\":\"AverageBlockTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"estimatedTime\",\"type\":\"uint256\"}],\"name\":\"BatchMintGasInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"BatchMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"EscrowBatchMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"EscrowRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"EscrowRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"EscrowTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"GlobalLockupPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"MintPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"MintingStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"RewardActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"functionAbi\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactiveAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableStakedTime\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"RewardDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revokedAt\",\"type\":\"uint256\"}],\"name\":\"RewardRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"basisPoints\",\"type\":\"uint96\"}],\"name\":\"RoyaltyInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockScheduledAt\",\"type\":\"uint256\"}],\"name\":\"TokenLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeScheduledAt\",\"type\":\"uint256\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"TokenUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakedAt\",\"type\":\"uint256\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESCROW_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"activateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionAbi\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactiveAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableStakedTime\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"averageBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasFee\",\"type\":\"uint256\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"revokedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"revokedReason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"deactivateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasFee\",\"type\":\"uint256\"}],\"name\":\"escrowTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"forceUnlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"forceUnlockTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"forceUnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"forceUnstakeTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"getClaimedReward\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"revokedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"revokedReason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Collection.ClaimedReward\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getClaimedRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"revokedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"revokedReason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Collection.ClaimedReward[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactiveAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableStakedTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionAbi\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Collection.Reward\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getStakingStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeScheduledAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStaked\",\"type\":\"bool\"}],\"internalType\":\"struct Collection.StakedToken\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"getStakingStatusBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeScheduledAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStaked\",\"type\":\"bool\"}],\"internalType\":\"struct Collection.StakedToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalLockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantEscrowRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isTokenLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRewardId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeClaimedReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeEscrowRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactiveAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableStakedTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionAbi\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"setAverageBlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI_\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"basisPoints\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockScheduledTime\",\"type\":\"uint256\"}],\"name\":\"setLockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"unlockScheduledTime\",\"type\":\"uint256\"}],\"name\":\"setLockTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMintingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"basisPoints\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setUnlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"setUnlockTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeScheduledTime\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"unstakeScheduledTime\",\"type\":\"uint256\"}],\"name\":\"stakeTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeScheduledAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStaked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockScheduledAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"unstakeTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\ubc30\\uce58 \\ubbfc\\ud305 \\uae30\\ub2a5\\uc744 \\uad6c\\ud604\\ud55c NFT \\uceec\\ub809\\uc158 \\ucee8\\ud2b8\\ub799\\ud2b8\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"activateReward(uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\ud65c\\uc131\\ud654\",\"params\":{\"rewardId\":\": \\ubcf4\\uc0c1 ID\"}},\"addReward(string,uint256,string,string,string,uint256,uint256,uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\ucd94\\uac00\",\"params\":{\"activeAt\":\": \\ubcf4\\uc0c1 \\ud65c\\uc131\\ud654 \\uc2dc\\uac04 (0\\uc774\\uba74 \\uc989\\uc2dc \\ud65c\\uc131\\ud654)\",\"amount\":\": \\ubcf4\\uc0c1 \\uae08\\uc561\",\"claimableStakedTime\":\": \\ubcf4\\uc0c1\\uc744 \\ubc1b\\uae30 \\uc704\\ud55c \\ucd5c\\uc18c \\uc2a4\\ud14c\\uc774\\ud0b9 \\uc2dc\\uac04 (\\ucd08 \\ub2e8\\uc704)\",\"deactiveAt\":\": \\ubcf4\\uc0c1 \\ube44\\ud65c\\uc131\\ud654 \\uc2dc\\uac04 (0\\uc774\\uba74 \\ubb34\\uc81c\\ud55c)\",\"description\":\": \\ubcf4\\uc0c1 \\uc124\\uba85\",\"functionAbi\":\": \\ubcf4\\uc0c1 \\ud568\\uc218 ABI\",\"metadata\":\": \\ubcf4\\uc0c1 \\uba54\\ud0c0\\ub370\\uc774\\ud130\",\"rewardType\":\": \\ubcf4\\uc0c1 \\ud0c0\\uc785\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchMint(address,uint256,uint256)\":{\"details\":\"\\ubc30\\uce58 \\ubbfc\\ud305 NFTs\",\"params\":{\"gasFee\":\": \\ud2b8\\ub79c\\uc7ad\\uc158 \\uac00\\uc2a4\\ube44 (gwei \\ub2e8\\uc704)\",\"quantity\":\": \\ubbfc\\ud305\\ud560 \\ud1a0\\ud070 \\uc218\",\"to\":\": \\ubbfc\\ud305\\ud560 \\uc8fc\\uc18c\"}},\"claimReward(uint256,uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\uccad\\uad6c\",\"params\":{\"rewardId\":\": \\ubcf4\\uc0c1 ID\",\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"deactivateReward(uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\ube44\\ud65c\\uc131\\ud654\",\"params\":{\"rewardId\":\": \\ubcf4\\uc0c1 ID\"}},\"domainSeparator()\":{\"details\":\"\\ub3c4\\uba54\\uc778 \\ubd84\\ub9ac\\uc790 \\uc870\\ud68c\",\"returns\":{\"_0\":\"\\ub3c4\\uba54\\uc778 \\ubd84\\ub9ac\\uc790\"}},\"escrowTransfer(address,address,uint256,bytes,uint256)\":{\"details\":\"\\uc5d0\\uc2a4\\ud06c\\ub85c \\uc804\\uc1a1 (\\uc11c\\uba85 \\uae30\\ubc18)\",\"params\":{\"from\":\": \\ud1a0\\ud070 \\uc18c\\uc720\\uc790 \\uc8fc\\uc18c\",\"gasFee\":\": \\ud2b8\\ub79c\\uc7ad\\uc158 \\uac00\\uc2a4\\ube44 (gwei \\ub2e8\\uc704)\",\"signature\":\": \\uc18c\\uc720\\uc790\\uc758 \\uc11c\\uba85\",\"to\":\": \\ubc1b\\ub294 \\uc8fc\\uc18c\",\"tokenId\":\": \\uc804\\uc1a1\\ud560 \\ud1a0\\ud070 ID\"}},\"forceUnlockToken(uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\ub77d\\uc5c5 \\ud574\\uc81c (\\uac15\\uc81c)\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"forceUnlockTokenBatch(uint256[])\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\ub77d\\uc5c5 \\ud574\\uc81c (\\uac15\\uc81c)\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\"}},\"forceUnstakeToken(uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 (\\uac15\\uc81c)\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"forceUnstakeTokenBatch(uint256[])\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 (\\uac15\\uc81c)\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimedReward(uint256,uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\uccad\\uad6c \\uc815\\ubcf4 \\uc870\\ud68c\",\"params\":{\"rewardId\":\": \\ubcf4\\uc0c1 ID\",\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\uccad\\uad6c \\uc815\\ubcf4\"}},\"getClaimedRewards(uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\uccad\\uad6c \\uc815\\ubcf4 \\uc870\\ud68c\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\uccad\\uad6c \\uc815\\ubcf4\"}},\"getDomainSeparator()\":{\"details\":\"EIP-712 \\ub3c4\\uba54\\uc778 \\ubd84\\ub9ac\\uc790 \\uc870\\ud68c\",\"returns\":{\"_0\":\"\\ub3c4\\uba54\\uc778 \\ubd84\\ub9ac\\uc790\"}},\"getMessageHash(address,address,uint256)\":{\"details\":\"\\uba54\\uc2dc\\uc9c0 \\ud574\\uc2dc \\uc0dd\\uc131 (\\ud504\\ub860\\ud2b8\\uc5d4\\ub4dc \\uc11c\\uba85\\uc5d0 \\ud65c\\uc6a9)\",\"params\":{\"from\":\": \\ubcf4\\ub0b4\\ub294 \\uc8fc\\uc18c\",\"to\":\": \\ubc1b\\ub294 \\uc8fc\\uc18c\",\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\uba54\\uc2dc\\uc9c0 \\ud574\\uc2dc\"}},\"getReward(uint256)\":{\"details\":\"\\ubcf4\\uc0c1 \\uc815\\ubcf4 \\uc870\\ud68c\",\"params\":{\"rewardId\":\": \\ubcf4\\uc0c1 ID\"},\"returns\":{\"_0\":\"\\ubcf4\\uc0c1 \\uc815\\ubcf4\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getStakingStatus(uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\uc2a4\\ud14c\\uc774\\ud0b9 \\uc815\\ubcf4 \\uc870\\ud68c\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\uc2a4\\ud14c\\uc774\\ud0b9 \\uc815\\ubcf4 \"}},\"getStakingStatusBatch(uint256[])\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\uc2a4\\ud14c\\uc774\\ud0b9 \\uc815\\ubcf4 \\uc870\\ud68c\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\"},\"returns\":{\"_0\":\"\\uc2a4\\ud14c\\uc774\\ud0b9 \\uc815\\ubcf4 \\ubc30\\uc5f4\"}},\"grantEscrowRole(address)\":{\"details\":\"ESCROW \\uc5ed\\ud560 \\ubd80\\uc5ec\",\"params\":{\"account\":\": ESCROW \\uc5ed\\ud560\\uc744 \\ubd80\\uc5ec\\ud560 \\uacc4\\uc815\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"isTokenLocked(uint256)\":{\"details\":\"\\ud1a0\\ud070 \\ub77d\\uc5c5 \\uc0c1\\ud0dc \\ud655\\uc778\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\ub77d\\uc5c5 \\uc0c1\\ud0dc (true: \\ub77d\\uc5c5, false: \\ub77d\\uc5c5 \\ud574\\uc81c)\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nonce(address)\":{\"details\":\"\\uc0ac\\uc6a9\\uc790\\uc758 \\ud604\\uc7ac Nonce \\uc870\\ud68c\",\"params\":{\"owner\":\": \\uc0ac\\uc6a9\\uc790 \\uc8fc\\uc18c\"},\"returns\":{\"_0\":\"\\uc0ac\\uc6a9\\uc790\\uc758 \\ud604\\uc7ac Nonce\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeClaimedReward(uint256,uint256,string)\":{\"details\":\"\\ubcf4\\uc0c1 \\uccad\\uad6c \\ucde8\\uc18c\",\"params\":{\"reason\":\": \\ucde8\\uc18c \\uc774\\uc720\",\"rewardId\":\": \\ubcf4\\uc0c1 ID\",\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"revokeEscrowRole(address)\":{\"details\":\"ESCROW \\uc5ed\\ud560 \\ubc15\\ud0c8\",\"params\":{\"account\":\": ESCROW \\uc5ed\\ud560\\uc744 \\ubc15\\ud0c8\\ud560 \\uacc4\\uc815\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setAverageBlockTime(uint256)\":{\"details\":\"\\ud3c9\\uade0 \\ube14\\ub85d \\uc2dc\\uac04 \\uc124\\uc815\",\"params\":{\"blockTime\":\": \\ube14\\ub85d \\uc2dc\\uac04 (\\ucd08 \\ub2e8\\uc704)\"}},\"setLockToken(uint256,uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\ub77d\\uc5c5 \\uc124\\uc815\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\",\"unlockScheduledTime\":\": \\ub77d\\uc5c5 \\ud574\\uc81c \\uc608\\uc815 \\uc2dc\\uac04 (0\\uc774\\uba74 \\uc218\\ub3d9 \\uc5b8\\ub77d \\ud544\\uc694)\"}},\"setLockTokenBatch(uint256[],uint256)\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\ub77d\\uc5c5 \\uc124\\uc815\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\",\"unlockScheduledTime\":\": \\ub77d\\uc5c5 \\ud574\\uc81c \\uc608\\uc815 \\uc2dc\\uac04 (0\\uc774\\uba74 \\uc218\\ub3d9 \\uc5b8\\ub77d \\ud544\\uc694)\"}},\"setUnlockToken(uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\ub77d\\uc5c5 \\ud574\\uc81c\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"setUnlockTokenBatch(uint256[])\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\ub77d\\uc5c5 \\ud574\\uc81c\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\"}},\"stakeToken(uint256,uint256)\":{\"details\":\"\\ud1a0\\ud070 \\uc2a4\\ud14c\\uc774\\ud0b9\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\",\"unstakeScheduledTime\":\": \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 \\uc608\\uc815 \\uc2dc\\uac04 (0\\uc774\\uba74 \\uc218\\ub3d9 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 \\ud544\\uc694)\"}},\"stakeTokenBatch(uint256[],uint256)\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\uc2a4\\ud14c\\uc774\\ud0b9\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\",\"unstakeScheduledTime\":\": \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 \\uc608\\uc815 \\uc2dc\\uac04 (0\\uc774\\uba74 \\uc218\\ub3d9 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9 \\ud544\\uc694)\"}},\"supportsInterface(bytes4)\":{\"details\":\"\\uc778\\ud130\\ud398\\uc774\\uc2a4 \\uc9c0\\uc6d0 \\uc5ec\\ubd80 \\ud655\\uc778 (ERC165)\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"\\ud1a0\\ud070 URI \\uc870\\ud68c (\\uc0ac\\uc6a9\\uc790)\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"},\"returns\":{\"_0\":\"\\ud1a0\\ud070 URI\"}},\"totalSupply()\":{\"details\":\"\\ud604\\uc7ac \\ucd1d \\uacf5\\uae09\\ub7c9 \\uc870\\ud68c\",\"returns\":{\"_0\":\"\\ucd1d \\ud1a0\\ud070 \\uc218\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstakeToken(uint256)\":{\"details\":\"\\ud2b9\\uc815 \\ud1a0\\ud070 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9\",\"params\":{\"tokenId\":\": \\ud1a0\\ud070 ID\"}},\"unstakeTokenBatch(uint256[])\":{\"details\":\"\\uc5ec\\ub7ec \\ud1a0\\ud070 \\uc5b8\\uc2a4\\ud14c\\uc774\\ud0b9\",\"params\":{\"tokenIds\":\": \\ud1a0\\ud070 ID \\ubc30\\uc5f4\"}}},\"title\":\"Collection\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"escrowTransfer(address,address,uint256,bytes,uint256)\":{\"notice\":\"\\uac00\\uc2a4\\ube44\\ub97c ESCROW_ROLE\\uc774 \\ub300\\uc2e0 \\uc9c0\\ubd88\\ud558\\ub294 \\uc804\\uc1a1 \\ubc29\\uc2dd\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Collection.sol\":\"Collection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xbc10927da9f47d87e6cd46a3218526b7718716a717d07722791eb7de6befc2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d838bc5e79732a20acc5578a4fa0dd88ba484c906346ad4daea2654ecb922a94\",\"dweb:/ipfs/QmaXqkJiniK3xSi5MEaCrYnFDa9AXd6FvByHMMKaWEEEK7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Collection.sol\":{\"keccak256\":\"0x7a9c8fbf2596b77e7e00ba918b25f38fc5b8660aa095258a0a51eba9ac15647d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72666aa3ce1745cdf5bc76a0ba6705f542937945e4ba32c1e28e6c7bd9c2fb64\",\"dweb:/ipfs/QmYL2fTwEF3QH7biDT2DEq9xVLhzyAWMZFmgEvQTzsWn67\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8941,"contract":"contracts/Collection.sol:Collection","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":8943,"contract":"contracts/Collection.sol:Collection","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":8945,"contract":"contracts/Collection.sol:Collection","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8947,"contract":"contracts/Collection.sol:Collection","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":8951,"contract":"contracts/Collection.sol:Collection","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":8955,"contract":"contracts/Collection.sol:Collection","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":8960,"contract":"contracts/Collection.sol:Collection","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)8873_storage)"},{"astId":8966,"contract":"contracts/Collection.sol:Collection","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":8968,"contract":"contracts/Collection.sol:Collection","label":"_spotMinted","offset":0,"slot":"8","type":"t_uint256"},{"astId":387,"contract":"contracts/Collection.sol:Collection","label":"_owner","offset":0,"slot":"9","type":"t_address"},{"astId":904,"contract":"contracts/Collection.sol:Collection","label":"_paused","offset":20,"slot":"9","type":"t_bool"},{"astId":1014,"contract":"contracts/Collection.sol:Collection","label":"_status","offset":0,"slot":"10","type":"t_uint256"},{"astId":26,"contract":"contracts/Collection.sol:Collection","label":"_roles","offset":0,"slot":"11","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"},{"astId":566,"contract":"contracts/Collection.sol:Collection","label":"_defaultRoyaltyInfo","offset":0,"slot":"12","type":"t_struct(RoyaltyInfo)563_storage"},{"astId":571,"contract":"contracts/Collection.sol:Collection","label":"_tokenRoyaltyInfo","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(RoyaltyInfo)563_storage)"},{"astId":6077,"contract":"contracts/Collection.sol:Collection","label":"_DOMAIN_SEPARATOR","offset":0,"slot":"14","type":"t_bytes32"},{"astId":6079,"contract":"contracts/Collection.sol:Collection","label":"averageBlockTime","offset":0,"slot":"15","type":"t_uint256"},{"astId":6081,"contract":"contracts/Collection.sol:Collection","label":"_baseTokenURI","offset":0,"slot":"16","type":"t_string_storage"},{"astId":6083,"contract":"contracts/Collection.sol:Collection","label":"_contractURI","offset":0,"slot":"17","type":"t_string_storage"},{"astId":6085,"contract":"contracts/Collection.sol:Collection","label":"mintingEnabled","offset":0,"slot":"18","type":"t_bool"},{"astId":6087,"contract":"contracts/Collection.sol:Collection","label":"maxSupply","offset":0,"slot":"19","type":"t_uint256"},{"astId":6089,"contract":"contracts/Collection.sol:Collection","label":"mintPrice","offset":0,"slot":"20","type":"t_uint256"},{"astId":6093,"contract":"contracts/Collection.sol:Collection","label":"_nonces","offset":0,"slot":"21","type":"t_mapping(t_address,t_uint256)"},{"astId":6171,"contract":"contracts/Collection.sol:Collection","label":"globalLockupPeriod","offset":0,"slot":"22","type":"t_uint256"},{"astId":6175,"contract":"contracts/Collection.sol:Collection","label":"lockedAt","offset":0,"slot":"23","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6179,"contract":"contracts/Collection.sol:Collection","label":"unlockScheduledAt","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6183,"contract":"contracts/Collection.sol:Collection","label":"unlockedAt","offset":0,"slot":"25","type":"t_mapping(t_uint256,t_uint256)"},{"astId":7538,"contract":"contracts/Collection.sol:Collection","label":"stakedTokens","offset":0,"slot":"26","type":"t_mapping(t_uint256,t_struct(StakedToken)7533_storage)"},{"astId":8072,"contract":"contracts/Collection.sol:Collection","label":"rewards","offset":0,"slot":"27","type":"t_mapping(t_uint256,t_struct(Reward)8046_storage)"},{"astId":8079,"contract":"contracts/Collection.sol:Collection","label":"claimedRewards","offset":0,"slot":"28","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ClaimedReward)8067_storage))"},{"astId":8081,"contract":"contracts/Collection.sol:Collection","label":"nextRewardId","offset":0,"slot":"29","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ClaimedReward)8067_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Collection.ClaimedReward))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ClaimedReward)8067_storage)"},"t_mapping(t_uint256,t_struct(ClaimedReward)8067_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Collection.ClaimedReward)","numberOfBytes":"32","value":"t_struct(ClaimedReward)8067_storage"},"t_mapping(t_uint256,t_struct(Reward)8046_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Collection.Reward)","numberOfBytes":"32","value":"t_struct(Reward)8046_storage"},"t_mapping(t_uint256,t_struct(RoyaltyInfo)563_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC2981.RoyaltyInfo)","numberOfBytes":"32","value":"t_struct(RoyaltyInfo)563_storage"},"t_mapping(t_uint256,t_struct(StakedToken)7533_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Collection.StakedToken)","numberOfBytes":"32","value":"t_struct(StakedToken)7533_storage"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)8873_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)8873_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ClaimedReward)8067_storage":{"encoding":"inplace","label":"struct Collection.ClaimedReward","members":[{"astId":8048,"contract":"contracts/Collection.sol:Collection","label":"rewardId","offset":0,"slot":"0","type":"t_uint256"},{"astId":8050,"contract":"contracts/Collection.sol:Collection","label":"tokenId","offset":0,"slot":"1","type":"t_uint256"},{"astId":8052,"contract":"contracts/Collection.sol:Collection","label":"staker","offset":0,"slot":"2","type":"t_address"},{"astId":8054,"contract":"contracts/Collection.sol:Collection","label":"stakedAt","offset":0,"slot":"3","type":"t_uint256"},{"astId":8056,"contract":"contracts/Collection.sol:Collection","label":"claimedAt","offset":0,"slot":"4","type":"t_uint256"},{"astId":8058,"contract":"contracts/Collection.sol:Collection","label":"isClaimed","offset":0,"slot":"5","type":"t_bool"},{"astId":8060,"contract":"contracts/Collection.sol:Collection","label":"isRevoked","offset":1,"slot":"5","type":"t_bool"},{"astId":8062,"contract":"contracts/Collection.sol:Collection","label":"revokedAt","offset":0,"slot":"6","type":"t_uint256"},{"astId":8064,"contract":"contracts/Collection.sol:Collection","label":"revokedReason","offset":0,"slot":"7","type":"t_string_storage"},{"astId":8066,"contract":"contracts/Collection.sol:Collection","label":"createdAt","offset":0,"slot":"8","type":"t_uint256"}],"numberOfBytes":"288"},"t_struct(Reward)8046_storage":{"encoding":"inplace","label":"struct Collection.Reward","members":[{"astId":8025,"contract":"contracts/Collection.sol:Collection","label":"rewardId","offset":0,"slot":"0","type":"t_uint256"},{"astId":8027,"contract":"contracts/Collection.sol:Collection","label":"rewardType","offset":0,"slot":"1","type":"t_string_storage"},{"astId":8029,"contract":"contracts/Collection.sol:Collection","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":8031,"contract":"contracts/Collection.sol:Collection","label":"description","offset":0,"slot":"3","type":"t_string_storage"},{"astId":8033,"contract":"contracts/Collection.sol:Collection","label":"isActive","offset":0,"slot":"4","type":"t_bool"},{"astId":8035,"contract":"contracts/Collection.sol:Collection","label":"activeAt","offset":0,"slot":"5","type":"t_uint256"},{"astId":8037,"contract":"contracts/Collection.sol:Collection","label":"deactiveAt","offset":0,"slot":"6","type":"t_uint256"},{"astId":8039,"contract":"contracts/Collection.sol:Collection","label":"claimableStakedTime","offset":0,"slot":"7","type":"t_uint256"},{"astId":8041,"contract":"contracts/Collection.sol:Collection","label":"metadata","offset":0,"slot":"8","type":"t_string_storage"},{"astId":8043,"contract":"contracts/Collection.sol:Collection","label":"functionAbi","offset":0,"slot":"9","type":"t_string_storage"},{"astId":8045,"contract":"contracts/Collection.sol:Collection","label":"createdAt","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"contracts/Collection.sol:Collection","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"contracts/Collection.sol:Collection","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(RoyaltyInfo)563_storage":{"encoding":"inplace","label":"struct ERC2981.RoyaltyInfo","members":[{"astId":560,"contract":"contracts/Collection.sol:Collection","label":"receiver","offset":0,"slot":"0","type":"t_address"},{"astId":562,"contract":"contracts/Collection.sol:Collection","label":"royaltyFraction","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_struct(StakedToken)7533_storage":{"encoding":"inplace","label":"struct Collection.StakedToken","members":[{"astId":7522,"contract":"contracts/Collection.sol:Collection","label":"tokenId","offset":0,"slot":"0","type":"t_uint256"},{"astId":7524,"contract":"contracts/Collection.sol:Collection","label":"staker","offset":0,"slot":"1","type":"t_address"},{"astId":7526,"contract":"contracts/Collection.sol:Collection","label":"stakedAt","offset":0,"slot":"2","type":"t_uint256"},{"astId":7528,"contract":"contracts/Collection.sol:Collection","label":"unstakeScheduledAt","offset":0,"slot":"3","type":"t_uint256"},{"astId":7530,"contract":"contracts/Collection.sol:Collection","label":"unstakedAt","offset":0,"slot":"4","type":"t_uint256"},{"astId":7532,"contract":"contracts/Collection.sol:Collection","label":"isStaked","offset":0,"slot":"5","type":"t_bool"}],"numberOfBytes":"192"},"t_struct(TokenApprovalRef)8873_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":8872,"contract":"contracts/Collection.sol:Collection","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}}}},"contracts/Factory.sol":{"CollectionFactory":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collectionAddress","type":"address"}],"name":"CollectionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collectionAddress","type":"address"}],"name":"CollectionDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collections","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"mintPrice","type":"uint256"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI_","type":"string"}],"name":"createCollection","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collectionAddress","type":"address"}],"name":"deleteCollection","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCollections","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":255,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":107,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_CollectionFactory":{"entryPoint":224,"id":8685,"parameterSlots":1,"returnSlots":0},"constructor_Ownable":{"entryPoint":274,"id":429,"parameterSlots":1,"returnSlots":0},"convert_address_to_address":{"entryPoint":398,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":246,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":233,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":389,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":369,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_CollectionFactory":{"entryPoint":194,"id":null,"parameterSlots":0,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":350,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":69,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":455,"id":525,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":47,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":359,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":407,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":144,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xC2 JUMP JUMPDEST PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D79 PUSH2 0x21F DUP3 CODECOPY PUSH2 0x7D79 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST SWAP1 PUSH2 0x7F PUSH2 0x78 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x2A JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x7F DUP3 PUSH2 0x90 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2A JUMPI PUSH2 0x8D SWAP2 PUSH2 0xA1 JUMP JUMPDEST PUSH2 0x8D PUSH2 0x7F98 DUP1 CODESIZE SUB DUP1 PUSH2 0xD5 DUP2 PUSH2 0x6B JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xAE JUMP JUMPDEST PUSH2 0x7F SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH2 0x81 PUSH2 0x8D PUSH2 0x8D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D DUP2 PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x141 JUMPI POP POP PUSH2 0x7F SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x15A SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0xFF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x81 JUMP JUMPDEST PUSH2 0x8D SWAP1 SLOAD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x171 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x185 JUMP JUMPDEST SWAP1 PUSH2 0x1A7 PUSH2 0x8D PUSH2 0x1C3 SWAP3 PUSH2 0x18E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1ED PUSH2 0x1E7 PUSH2 0x1D7 PUSH1 0x0 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1E2 DUP5 PUSH1 0x0 PUSH2 0x197 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP2 PUSH2 0x18E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x218 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46E63586 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xA6BB6CAC EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD6A4448B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69 JUMPI PUSH4 0xFDBDA0EC SUB PUSH2 0x87 JUMPI PUSH2 0x429 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x87 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xCA PUSH2 0xC3 PUSH2 0xB9 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDB JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x101 PUSH2 0xFA PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xA3 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xAA JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x135 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x17F PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x87 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x199 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP2 PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x15D PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x22E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x1FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x273 PUSH2 0x26E DUP3 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x252 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 PUSH1 0x20 PUSH2 0xA3 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x87 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x2E3 SWAP2 DUP6 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x304 SWAP2 DUP4 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH2 0x312 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x2AE JUMP JUMPDEST SWAP3 PUSH2 0x320 DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x2AE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x341 SWAP2 DUP4 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP3 ADD PUSH2 0x28D JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x141 PUSH2 0x17F PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0xBCF JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x15D PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP2 PUSH2 0x2AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3DE PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH2 0xA3 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP2 SLOAD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x423 PUSH2 0xA3 SWAP2 PUSH1 0x1 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x400 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x141 PUSH2 0x17F PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA3 SWAP1 SLOAD PUSH2 0x444 JUMP JUMPDEST SWAP1 PUSH2 0x472 PUSH2 0x466 PUSH2 0xB9 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x483 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B0 PUSH2 0x4A9 PUSH1 0x1 SWAP3 PUSH2 0x498 DUP8 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP2 PUSH2 0x457 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x4DC SWAP3 PUSH2 0x4D3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x4B8 JUMP JUMPDEST SUB DUP4 PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0xA3 PUSH1 0x1 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x97 PUSH2 0xA3 PUSH2 0xA3 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x529 PUSH1 0x0 PUSH2 0x513 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0xA3 PUSH1 0x0 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x54C PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x565 JUMP JUMPDEST SWAP1 PUSH2 0x581 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xA3 SWAP1 SLOAD PUSH2 0x58F JUMP JUMPDEST ISZERO PUSH2 0x5A7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1393D517D193D55391 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA3 PUSH2 0xA3 PUSH2 0xA3 SWAP3 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x608 JUMPI JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x62B JUMP JUMPDEST SWAP3 SHL SWAP1 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x646 PUSH2 0xA3 PUSH2 0x64E SWAP4 PUSH2 0x56E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x60D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0x66C PUSH2 0xA3 PUSH2 0x64E SWAP3 PUSH2 0x5D8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x652 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x6B5 PUSH2 0x6AF DUP4 DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x689 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x62B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6E2 PUSH2 0xA3 PUSH2 0x64E SWAP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x709 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x729 PUSH2 0x26E DUP3 PUSH2 0x235 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 MLOAD PUSH2 0xA3 SWAP3 PUSH1 0x20 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP3 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x7A7 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x7A1 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x7C0 PUSH2 0xA6 SWAP2 PUSH1 0x20 SWAP5 SWAP4 PUSH2 0x78F JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x7B0 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x62B SWAP2 MUL SWAP2 PUSH2 0x626 PUSH1 0xFF DUP5 SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x80E PUSH2 0xA3 PUSH2 0x64E SWAP4 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x8AF PUSH1 0x0 PUSH2 0x8AA DUP4 PUSH1 0x3 PUSH2 0x8A5 PUSH2 0x8A0 PUSH2 0x845 PUSH2 0x840 DUP6 DUP6 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x879 PUSH2 0x858 PUSH2 0x423 DUP4 DUP6 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x873 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x893 PUSH2 0x884 DUP4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x88D DUP5 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 DUP2 DUP2 SUB PUSH2 0x95F JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x8BB DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x8CC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x95A JUMPI PUSH1 0x0 PUSH2 0x903 PUSH2 0x908 SWAP5 PUSH2 0x8BB SWAP4 DUP4 SWAP2 PUSH2 0x938 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST PUSH32 0x15DB1813F994E3207E1B7CD688154DCA03609984E865399CD2163D9EB3B0A63C PUSH2 0x932 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x954 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x94C DUP2 DUP4 PUSH2 0x1FA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x75D JUMP JUMPDEST CODESIZE PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x98C PUSH2 0x972 PUSH2 0x423 PUSH2 0xA3 SWAP5 DUP7 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x980 DUP6 DUP9 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x635 JUMP JUMPDEST DUP8 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x540 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x9AC PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST ISZERO PUSH2 0x9B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2720A6A2AFAA20A5A2A7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA0B PUSH2 0xA14 PUSH1 0x20 SWAP4 PUSH2 0xA6 SWAP4 PUSH2 0x9FF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 PUSH2 0xA74 PUSH2 0xA88 SWAP6 PUSH2 0xA6D PUSH2 0xA5B PUSH2 0xA3 SWAP12 SWAP10 PUSH2 0xA4D DUP13 PUSH2 0xA7B SWAP9 PUSH1 0xE0 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x21C JUMPI DUP3 PUSH2 0x980 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0xAD7 PUSH2 0xA3 PUSH2 0x64E SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xABE JUMP JUMPDEST SWAP6 SWAP2 SWAP3 SWAP4 SWAP5 SWAP1 SWAP6 POP PUSH2 0xB0A PUSH2 0xB05 PUSH2 0xB01 PUSH2 0xAFA DUP10 PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x704E DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x21C JUMPI DUP7 SWAP6 PUSH2 0xB3D SWAP6 PUSH2 0x704E PUSH2 0xCF6 DUP10 CODECOPY DUP10 CALLER SWAP3 PUSH2 0xA1E JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x95A JUMPI PUSH2 0xB8A PUSH2 0xB74 PUSH2 0xB79 PUSH2 0xB5D PUSH2 0xB95 SWAP5 PUSH2 0x56E JUMP JUMPDEST SWAP5 PUSH1 0x1 SWAP3 DUP4 SWAP2 PUSH2 0xB6D DUP9 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x88D PUSH2 0xB84 DUP3 SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x98C DUP4 PUSH1 0x3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0x56E JUMP JUMPDEST PUSH32 0x75432E2E509EFCAF947EFCC7A5A6B6B3562425B29E9725C7A4A5C652291AC35D PUSH2 0xBC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x99A JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0xBEB PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF6 DUP2 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xC1A JUMPI POP POP PUSH2 0x162 SWAP1 PUSH2 0xCA3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0xC48 PUSH2 0x536 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xC53 DUP3 PUSH2 0x866 JUMP JUMPDEST SUB PUSH2 0xC5B JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0xC9C PUSH2 0xA3 PUSH2 0x64E SWAP3 PUSH2 0x56E JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xCC4 PUSH2 0xCBE PUSH2 0xCB3 PUSH1 0x0 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x8BB DUP5 PUSH1 0x0 PUSH2 0xC8C JUMP JUMPDEST SWAP2 PUSH2 0x56E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x31 JUMPI PUSH2 0x20 PUSH2 0x14 PUSH2 0x206 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6601 PUSH2 0xA4D DUP3 CODECOPY PUSH2 0x6601 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x36 JUMP JUMPDEST SWAP1 PUSH2 0x86 PUSH2 0x7F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xDC PUSH2 0xD7 DUP3 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x31 JUMPI PUSH2 0x86 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xA4 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x31 JUMPI DUP2 MLOAD PUSH2 0x110 SWAP3 PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH2 0x12A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x31 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP2 PUSH2 0x178 SWAP2 DUP5 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP3 PUSH2 0x19A SWAP2 DUP6 ADD PUSH2 0xF6 JUMP JUMPDEST SWAP3 PUSH2 0x1A8 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x131 JUMP JUMPDEST SWAP3 PUSH2 0x1B6 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x144 JUMP JUMPDEST SWAP3 PUSH2 0x1C4 DUP3 PUSH1 0x80 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP4 PUSH2 0x1E6 SWAP2 DUP4 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI PUSH2 0x110 SWAP3 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x704E DUP1 CODESIZE SUB DUP1 PUSH2 0x219 DUP2 PUSH2 0x72 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x151 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x23D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x22D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x28B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2CA PUSH2 0x110 PUSH2 0x261 SWAP4 PUSH2 0x23D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2B9 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2E9 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x2F7 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x2D2 JUMP JUMPDEST ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x30C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x31E PUSH2 0x86 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x340 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2DE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST SWAP1 PUSH2 0x353 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6D JUMPI PUSH2 0x376 DUP3 PUSH2 0x370 DUP6 SLOAD PUSH2 0x27B JUMP JUMPDEST DUP6 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3B1 JUMPI PUSH2 0x261 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3A6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C6 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x404 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3EB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3CA JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x34A JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x43F PUSH2 0x110 PUSH2 0x261 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x426 JUMP JUMPDEST PUSH2 0x110 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x45D PUSH2 0xD7 DUP4 PUSH2 0x88 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x46C PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x86 SWAP5 PUSH2 0x4DD PUSH2 0x4E4 SWAP3 PUSH2 0x4D6 PUSH1 0x80 SWAP7 PUSH2 0x4CF PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x50E PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP5 SWAP6 PUSH2 0x555 PUSH2 0x86 SWAP8 PUSH2 0x54E PUSH2 0x64D SWAP8 PUSH2 0x547 PUSH2 0x5BC SWAP9 PUSH2 0x540 PUSH2 0x55C SWAP9 DUP11 DUP15 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x13 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x14 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x10 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x11 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x568 PUSH1 0x0 PUSH1 0x12 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x57C PUSH2 0x575 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x16 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x58D DUP5 PUSH2 0x588 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST POP PUSH2 0x5B8 DUP5 PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F PUSH2 0x77A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x63A PUSH2 0x5DA PUSH2 0x479 JUMP JUMPDEST PUSH2 0x5E5 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x5F0 ADDRESS PUSH2 0x49E JUMP JUMPDEST SWAP3 PUSH2 0x62E PUSH2 0x5FD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 CHAINID SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP7 PUSH2 0x4AB JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x4C JUMP JUMPDEST PUSH2 0x645 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 PUSH2 0x501 JUMP JUMPDEST SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x86 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x110 PUSH1 0x1 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x685 SWAP3 SWAP2 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x690 PUSH2 0x670 JUMP JUMPDEST PUSH1 0xA PUSH2 0x24A JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST SWAP2 PUSH2 0x6C2 SWAP2 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD DUP2 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x6F1 JUMPI POP POP PUSH2 0x86 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x728 SWAP2 PUSH2 0x721 SWAP1 PUSH1 0x2 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x3 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x730 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH1 0x0 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x74C PUSH2 0x748 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x753 JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA14 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x762 SWAP1 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x78B PUSH2 0x787 DUP4 DUP4 PUSH2 0xA1D JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7B1 PUSH1 0x1 PUSH2 0x7AC DUP5 PUSH1 0x0 PUSH2 0x7A6 DUP7 PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST ADD PUSH2 0x770 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH2 0x7CB PUSH2 0x7C5 PUSH2 0x7BF CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x7F6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4A7 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x86 SWAP3 SWAP5 SWAP4 PUSH2 0x83C PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x818 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x110 PUSH1 0x40 PUSH2 0x72 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x869 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x49E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x233 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x50E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH2 0x8A7 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x883 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x8E1 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x8D3 PUSH2 0x8CD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x859 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x8AE JUMP JUMPDEST SWAP1 PUSH2 0x902 PUSH2 0x8FD PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST DUP1 PUSH2 0x90C DUP4 PUSH2 0x806 JUMP JUMPDEST GT PUSH2 0x991 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x91E DUP4 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x974 JUMPI POP PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x95D PUSH2 0x96D SWAP3 PUSH2 0x94C PUSH2 0x840 JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x9AB SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x821 JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x110 SWAP1 SLOAD PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x7C5 PUSH2 0x9D3 PUSH1 0x9 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x9DE DUP5 PUSH1 0x9 PUSH2 0x859 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA0E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP2 PUSH1 0x0 PUSH2 0x7A6 PUSH2 0xA3A SWAP4 PUSH2 0xA32 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x2710 PUSH2 0x501 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x14F93A49 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x17F82990 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x233DEDF1 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2474E2B2 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x2496DD51 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x276A28A3 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2A67C158 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x2A959B89 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x2CFB6688 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x3736D853 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x4EA3871A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x66CFD072 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x6CC232E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x6CE76F30 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6FC23DB4 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x7C33BD70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x80C47440 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x82666BC8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x86BB8F37 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x8AD7D9DE EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x9FD6DB12 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA3E37652 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xA5F10FE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA7B1190A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAE594865 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB5573847 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xBC577940 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xBD39E149 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBE707DB1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC0788555 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC4228AAA EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xC7A5156F EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xCCD40400 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xDCAE6754 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD4BA7E1 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xEABDC5B4 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF064997C EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF12E061B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x376 JUMPI PUSH4 0xFFAB4BD9 SUB PUSH2 0x4F2 JUMPI PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x50A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x5C6 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x59D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x4F2 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x609 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x63A PUSH2 0x643 PUSH1 0x20 SWAP4 PUSH2 0x64D SWAP4 PUSH2 0x62E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x619 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x68F JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x770 SWAP3 ADD PUSH2 0x71C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1E51 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x140 DUP1 PUSH2 0x884 PUSH2 0x870 PUSH2 0x823 PUSH2 0x802 PUSH2 0x160 DUP8 ADD PUSH1 0x20 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x80 DUP9 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP8 ADD MSTORE PUSH2 0x83E PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x85C PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7D2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x8B8 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0xF PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0x91A DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x938 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x2057 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2428 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2437 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x99E PUSH1 0x20 SWAP5 PUSH2 0x52D SWAP4 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x2533 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xA31 PUSH2 0xA2B CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH2 0x562 PUSH2 0xA3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xA7E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0xA90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xAD4 PUSH2 0xACF DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x4F2 JUMPI PUSH2 0x517 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 PUSH1 0x20 PUSH2 0x52D SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB32 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0xB40 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP4 PUSH2 0xB60 SWAP2 DUP5 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB80 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0xBA0 SWAP2 DUP4 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0x52D PUSH2 0xBB1 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x701 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xBD4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB09 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2E3F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xBFC DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC1F CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST SWAP2 PUSH2 0x3169 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC38 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3450 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST SWAP5 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3477 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC8C CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3481 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x359A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xCBA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0xCD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x35E5 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3649 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD2A CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x36D5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD67 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x371D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xD85 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x5C6 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDA8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6C JUMP JUMPDEST SWAP2 PUSH2 0x3793 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xDBE CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x37B4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0xDDF CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x37BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x389D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x14 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xE4A CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x38F4 JUMP JUMPDEST PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xE4F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xE73 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xEA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x3961 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEC5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x397B JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x39BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xEF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x39F2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x120 DUP1 PUSH2 0x884 PUSH2 0x140 DUP5 ADD PUSH2 0xF21 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH2 0xF43 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0xF52 PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0xF79 PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0xEFD JUMP JUMPDEST SWAP1 PUSH2 0xFAD PUSH2 0xFA3 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFBF PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFD3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xFF6 PUSH2 0xFEF DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xF8D JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x102F PUSH2 0x102A CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x16 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1057 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x103B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x1078 DUP2 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1086 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1094 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4F2 JUMPI PUSH1 0x80 PUSH2 0x701 DUP3 PUSH2 0x52D SWAP5 DUP8 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x10CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x3FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x10E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x3FF7 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4588 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x111A CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x45ED JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1130 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x6CB PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x115B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x45F8 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1174 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4657 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1189 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x12 PUSH2 0x11A3 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x11CA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x11E2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1204 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x11EC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x122B DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1245 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x466A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1278 PUSH2 0x1272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x12C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x12E1 DUP3 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH2 0x12EF DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1320 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST SWAP2 PUSH2 0x4802 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1339 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4871 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x517 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x136F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x137E PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x138D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x13C1 PUSH2 0x13BC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x48AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x13E2 DUP2 DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13F0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13FE DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x142A CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x48C6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1449 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x4917 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1462 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4A4D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x147A CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x14B9 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DB PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x5 PUSH2 0x14FA PUSH1 0x4 DUP6 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP4 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1547 PUSH2 0x154E SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1540 PUSH1 0xA0 SWAP7 PUSH2 0x1539 PUSH2 0x517 SWAP11 PUSH2 0x1529 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1571 PUSH2 0x156C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST SWAP3 PUSH2 0x1581 SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x15B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0x8 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x15B5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1601 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x15FC JUMPI JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x15F1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x1628 PUSH2 0x161E DUP4 PUSH2 0x15E1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x167A JUMPI POP PUSH1 0x1 EQ PUSH2 0x1641 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1666 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x16B3 SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x168F JUMP JUMPDEST SUB DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP1 PUSH2 0x16C9 PUSH2 0x16CE SWAP3 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16E5 PUSH1 0x1 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16FA PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1707 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1714 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1721 PUSH1 0x5 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x172E PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 PUSH2 0x173B PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x8 PUSH2 0x174D PUSH1 0x7 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x140 DUP10 ADD SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x17AE SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 SWAP1 SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x17D3 PUSH2 0x17CD CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP7 PUSH2 0x17E9 SWAP11 SWAP9 SWAP11 SWAP7 SWAP2 SWAP7 SWAP6 SWAP3 SWAP6 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP11 DUP12 PUSH2 0x1754 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x67D PUSH2 0x1808 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4BDD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1820 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1838 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x4C8A JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x13 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x185A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x188B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH2 0x64D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x133F JUMP JUMPDEST SWAP1 PUSH2 0x18BD PUSH2 0x18B6 PUSH2 0x18AC DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x18E8 PUSH2 0x18E1 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x191D PUSH2 0x1917 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18F0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x195B CALLDATASIZE PUSH1 0x4 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x4D4A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1974 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4DCC JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1989 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x1D PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x19B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1994 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19CE CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E2D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x19F6 SWAP1 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A0C PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A19 PUSH1 0x2 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A26 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A33 PUSH1 0x4 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x1A40 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A4D PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A5A PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A67 PUSH1 0x8 DUP3 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0xA PUSH2 0x174D PUSH1 0x9 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP3 PUSH2 0x1B12 SWAP8 PUSH1 0xC0 DUP15 PUSH2 0xA14 PUSH2 0x517 SWAP15 SWAP11 PUSH2 0x1AE7 PUSH2 0x1ADD PUSH2 0x140 SWAP16 SWAP9 SWAP8 PUSH2 0x1B03 SWAP14 SWAP13 PUSH2 0x1AD0 PUSH2 0x1AC8 PUSH2 0x1AEE SWAP12 PUSH2 0x1AF5 SWAP15 PUSH2 0x1ABB PUSH2 0x160 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP11 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP13 ADD MSTORE JUMP JUMPDEST DUP10 DUP3 SUB PUSH2 0x100 DUP12 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1B32 PUSH2 0x1B2D CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP8 PUSH2 0x1B48 SWAP12 SWAP10 SWAP12 SWAP8 SWAP2 SWAP8 SWAP7 SWAP3 SWAP7 SWAP6 SWAP4 SWAP6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A79 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1B64 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5165 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x518E JUMP JUMPDEST PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1BAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x566 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1C95 PUSH2 0x1C74 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP3 PUSH2 0x1C65 PUSH2 0x1C53 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND JUMPDEST GT ISZERO PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST SWAP3 PUSH2 0x1C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x1CC7 PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CE9 JUMPI PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x52D SWAP3 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x53A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D12 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D17 JUMP JUMPDEST CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x689 JUMP JUMPDEST ISZERO PUSH2 0x1D53 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x546F6B656E204944206F7574206F6620626F756E6473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D9E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1DD8 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1DEF SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1D42 JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x1DCE PUSH2 0x52D PUSH2 0x544F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1462 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E11 PUSH2 0x5459 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1E1E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1E3B PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1E4C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0xC38 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x160 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x1FB9 PUSH1 0xA PUSH2 0x1ED8 PUSH2 0x1E63 JUMP JUMPDEST SWAP5 PUSH2 0x1EE9 PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F15 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F43 PUSH2 0x1F3A PUSH1 0x4 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F59 PUSH2 0x1F52 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F6F PUSH2 0x1F68 PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F85 PUSH2 0x1F7E PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F94 PUSH1 0x8 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1FAB PUSH1 0x9 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x1FE1 PUSH2 0x52D SWAP2 PUSH2 0x1FD9 PUSH2 0x1EBF JUMP JUMPDEST POP PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x203F PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x201F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2074 PUSH2 0x206F PUSH2 0x2069 DUP5 PUSH2 0x5493 JUMP JUMPDEST SWAP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1FE6 JUMP JUMPDEST SWAP2 PUSH2 0x2090 PUSH2 0x208B PUSH2 0x2083 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 SWAP6 AND PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x1C0B JUMP JUMPDEST SWAP4 PUSH2 0x209D PUSH2 0x208B DUP5 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x227E JUMPI DUP5 SWAP3 PUSH2 0x20C8 DUP4 PUSH2 0x555D JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ DUP2 DUP6 EQ OR ISZERO PUSH2 0x224F JUMPI JUMPDEST POP PUSH2 0x1DCE SWAP6 SWAP5 SWAP4 PUSH2 0x21E4 SWAP8 SWAP4 PUSH2 0x21B8 SWAP4 PUSH2 0x206F SWAP4 PUSH2 0x20FF PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x210C DUP5 DUP11 DUP8 DUP14 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x2245 JUMPI JUMPDEST POP PUSH2 0x2139 PUSH2 0x2120 DUP10 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x212C DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x2147 DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x217F PUSH2 0x2169 DUP3 DUP6 PUSH2 0x2163 PUSH2 0x204A JUMP JUMPDEST SWAP12 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP11 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2195 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP11 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x21AA PUSH2 0x21A4 DUP12 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x21F8 JUMPI JUMPDEST POP POP POP PUSH2 0x1C0B JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x21EB JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST DUP8 ADD SWAP2 PUSH2 0x220D PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x2219 PUSH2 0x1DCE DUP12 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x21B0 JUMPI PUSH2 0x222A PUSH2 0x52D DUP11 PUSH2 0x1487 JUMP JUMPDEST DUP4 EQ PUSH2 0x21B0 JUMPI PUSH2 0x223D SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x2261 SWAP3 SWAP9 SWAP5 SWAP7 SWAP6 SWAP8 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI DUP7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP6 CODESIZE PUSH2 0x20E1 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x2299 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x232A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D6520686173206E6F7420706173736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x2384 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x2395 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x2407 JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x23C4 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH32 0x5114E731F472514591AA5A2E7254174B62963E757A427CF9E9B069666478B060 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0x241B PUSH2 0x52D PUSH2 0x2208 DUP5 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x228A JUMP JUMPDEST SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1FB3 PUSH2 0x52D SWAP3 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2461 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST ISZERO PUSH2 0x246D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x0 PUSH2 0x24C1 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x252B JUMPI DUP1 PUSH2 0x24DE PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x2526 SWAP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x250F PUSH2 0x24FD PUSH2 0x2208 PUSH1 0x19 PUSH2 0x24F7 PUSH2 0x1DBB DUP7 DUP12 DUP12 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2509 PUSH2 0x1DCE DUP7 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH2 0x2521 PUSH2 0x1DBB DUP5 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x24C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x254A PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x25DE JUMPI PUSH2 0x255C PUSH2 0x2208 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x256C PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x25DA JUMPI PUSH2 0x257F PUSH2 0x2208 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x258B PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x25DA JUMPI PUSH2 0x259E PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x25AA PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 PUSH2 0x25BE JUMPI JUMPDEST POP PUSH2 0x52D JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x25D1 SWAP2 POP PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO CODESIZE PUSH2 0x25B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2642 JUMPI JUMP JUMPDEST PUSH2 0x2619 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2667 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x2688 PUSH2 0x52D PUSH1 0x0 SWAP3 SWAP5 SWAP4 SWAP5 PUSH2 0x2680 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST ADD SWAP2 PUSH2 0x269B DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x26A5 DUP2 SWAP5 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH2 0x26B6 PUSH2 0x20AB PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST EQ PUSH2 0x26E8 JUMPI JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x26CC PUSH2 0x26D2 SWAP3 PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x265D JUMP JUMPDEST POP PUSH1 0xC SWAP3 POP PUSH2 0x52D SWAP1 PUSH2 0x26D2 SWAP1 PUSH2 0x26CC PUSH2 0x2712 PUSH2 0x270C DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH2 0x26BC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2732 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x2C8E JUMP JUMPDEST ISZERO PUSH2 0x273E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420747970652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x278A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65207374616B65642074696D65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2837 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163746976652074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x288D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D75737420626520696E2074686520667574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D7573742062652061667465722061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x76652074696D65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2642 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2972 PUSH2 0x52D PUSH2 0x2046 SWAP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x294D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2961 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2991 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x299F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x297A JUMP JUMPDEST ADD PUSH2 0x2986 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x29B4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x29C6 PUSH2 0x517 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x29E8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST SWAP1 PUSH2 0x29FB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA7E JUMPI PUSH2 0x2A1E DUP3 PUSH2 0x2A18 DUP6 SLOAD PUSH2 0x15E1 JUMP JUMPDEST DUP6 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A59 JUMPI PUSH2 0x2046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2A4E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2A6E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAC JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x2A93 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2A8A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x29F2 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x2AE7 PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2ACE JUMP JUMPDEST PUSH1 0xA PUSH2 0x2BE6 PUSH2 0x140 PUSH2 0x517 SWAP5 PUSH2 0x2B0E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x2B1C PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B3C PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B53 PUSH2 0x2B4A PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B6C PUSH2 0x2B63 PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2B83 PUSH2 0x2B7A PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B91 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BB1 PUSH2 0x2BA8 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x2BC0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x2BD8 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C0F SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2C09 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x2C37 SWAP1 PUSH2 0x2C2E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C18 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2C86 PUSH1 0xC0 SWAP6 PUSH2 0x2C78 PUSH2 0x1AE7 SWAP4 PUSH2 0x2C6A PUSH2 0x517 SWAP12 SWAP7 PUSH2 0xA14 SWAP9 SWAP15 SWAP14 SWAP12 SWAP15 PUSH2 0x1ABB PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST SWAP6 DUP6 DUP4 SWAP6 PUSH2 0x2DE7 PUSH2 0x2DE1 DUP11 PUSH2 0x23CB PUSH2 0x1DCE PUSH2 0x2DB9 DUP12 SWAP16 SWAP10 SWAP12 PUSH2 0x2D89 PUSH32 0x408E1E6B24C523DF52071026044644BC970ACE38BBA503FA10E7C6E4E9EE0661 SWAP16 SWAP13 PUSH2 0x1540 DUP16 PUSH2 0x2DFA SWAP16 DUP16 DUP16 SWAP1 PUSH2 0x2D2A SWAP1 PUSH2 0x2CFA PUSH2 0x2CE8 PUSH2 0x2949 DUP16 SWAP1 JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x0 SWAP14 DUP15 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2D18 DUP12 PUSH2 0x2D12 PUSH2 0x1DCE PUSH2 0x2D0C DUP12 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x1DCE DUP13 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x2D33 DUP10 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ ISZERO DUP1 PUSH2 0x2E2F JUMPI JUMPDEST PUSH2 0x2D45 DUP11 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SUB PUSH2 0x2DFF JUMPI JUMPDEST POP POP POP PUSH2 0x1539 PUSH2 0x2D5C PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST SWAP10 PUSH2 0x2D70 PUSH2 0x2D69 DUP13 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1D PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2D82 DUP12 PUSH2 0x2D7C PUSH2 0x1E63 JUMP JUMPDEST SWAP11 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D9B DUP10 PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DA6 DUP11 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DB1 DUP12 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DC5 DUP7 PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DD1 TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DDC DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST SWAP10 PUSH2 0x2C21 JUMP JUMPDEST SWAP10 PUSH2 0x2DF1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x2C3D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2E0A TIMESTAMP DUP4 GT PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x2E15 JUMPI JUMPDEST CODESIZE PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x1DCE PUSH2 0x2E28 SWAP4 SWAP1 JUMP JUMPDEST GT PUSH2 0x28DE JUMP JUMPDEST DUP13 DUP15 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x2E3A TIMESTAMP DUP5 GT PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2D3C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP3 SWAP2 PUSH2 0x2E5D PUSH2 0x577A JUMP JUMPDEST PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57BA JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E78 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST ISZERO PUSH2 0x2E84 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E2041444D494E206F7220455343524F57 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81A5CC81B9BDD08195B98589B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2F26 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FE4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617320666565206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3124 PUSH32 0x26F4C0C9DD9536441681C861E4C72684BBEC9E4E6D7E4492C2A90FF07CF35C6F SWAP3 PUSH2 0x3091 PUSH2 0x3078 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x3083 CALLER DUP1 SWAP3 PUSH2 0x45F8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3151 JUMPI JUMPDEST POP PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x30A3 PUSH2 0x309E PUSH1 0x12 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x30CE PUSH2 0x30B7 DUP5 PUSH2 0x30B2 PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x30C7 PUSH2 0x1DCE PUSH2 0x52D PUSH1 0x13 PUSH2 0x1487 JUMP JUMPDEST GT ISZERO PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x30EF PUSH2 0x30DE PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ ISZERO PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x30FC PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP5 GT PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3117 PUSH2 0x3110 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x2FDD JUMP JUMPDEST PUSH2 0x26CC PUSH4 0x3B9ACA00 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x1C95 PUSH2 0x313E PUSH2 0x3133 PUSH2 0x544F JUMP JUMPDEST SWAP3 PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x57D6 JUMP JUMPDEST SWAP5 PUSH2 0x3148 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x3163 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x45F8 JUMP JUMPDEST CODESIZE PUSH2 0x308B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3180 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3308 JUMP JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0xC0 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3250 PUSH1 0x5 PUSH2 0x31E2 PUSH2 0x31C7 JUMP JUMPDEST SWAP5 PUSH2 0x31EF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3216 PUSH2 0x3206 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3225 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x324A PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x31D1 JUMP JUMPDEST ISZERO PUSH2 0x3269 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20756E7374616B652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D6520686173206E6F74207061737365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3314 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x3338 PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x3355 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3259 JUMP JUMPDEST SWAP6 PUSH2 0x335E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x336D PUSH2 0x1CC3 CALLER JUMPDEST DUP1 SWAP4 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x341A JUMPI JUMPDEST POP PUSH1 0x60 DUP8 ADD DUP1 MLOAD PUSH2 0x3385 PUSH2 0x1DCE DUP9 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x33FE JUMPI JUMPDEST POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x4 TIMESTAMP SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x33B2 DUP7 PUSH2 0x4C66 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH32 0x8400AAD51EC7B4A6D1C58218EA03E51798A0485003BEAE9E5B76662E91D7058F PUSH2 0x33F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x340C PUSH2 0x52D PUSH2 0x3414 SWAP3 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x32BC JUMP JUMPDEST CODESIZE PUSH2 0x338B JUMP JUMPDEST PUSH2 0x344A SWAP1 PUSH2 0x3444 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x3262 JUMP JUMPDEST CODESIZE PUSH2 0x3372 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3174 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x346A PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x5942 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3459 JUMP JUMPDEST SWAP1 PUSH2 0x348B CALLER PUSH2 0x566 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x34A3 JUMPI PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34C7 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3535 JUMP JUMPDEST ISZERO PUSH2 0x34D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426C6F636B2074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH32 0xBE1531878CA10F11C57318847B09788B90ED4E6DD52B36836BE286097A74FF4F SWAP1 PUSH2 0x356B PUSH2 0x3564 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3575 PUSH1 0xF PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3580 DUP3 PUSH1 0xF PUSH2 0x202F JUMP JUMPDEST PUSH2 0x3595 PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x35AE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5A7C JUMP JUMPDEST PUSH2 0x517 PUSH2 0x35A3 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0xA97 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x35D3 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x517 SWAP3 PUSH2 0x35F3 PUSH2 0x35DD JUMP JUMPDEST SWAP3 PUSH2 0x48C6 JUMP JUMPDEST ISZERO PUSH2 0x3600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206E6F7220617070726F766564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 PUSH2 0x1C95 PUSH2 0x368C CALLER PUSH2 0x3683 PUSH2 0x367E DUP3 DUP8 PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x1C6F DUP6 PUSH2 0x5ADE JUMP JUMPDEST SWAP3 PUSH2 0x7C5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36A5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0xF62079051152E03BD87F33518B9CE4A5564414395B75AFEEF8A467E7CA4EE91B SWAP2 PUSH2 0x54F DUP2 PUSH1 0x12 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP2 PUSH2 0x67D DUP2 PUSH1 0x10 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36DE JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3737 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1C74 DUP3 PUSH2 0x1C6F DUP6 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP6 PUSH2 0x1C95 SWAP6 PUSH2 0x3782 PUSH2 0x3773 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x378E PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5B09 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3726 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x379E JUMP JUMPDEST PUSH2 0x52D PUSH1 0x9 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x208B PUSH2 0x37D6 PUSH2 0x52D SWAP3 PUSH2 0x37D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5493 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37EA PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x383B JUMP JUMPDEST ISZERO PUSH2 0x37F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C7265616479206163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x386C SWAP1 PUSH2 0x385A PUSH2 0x3855 PUSH2 0x1CC3 PUSH1 0x4 PUSH2 0x324A DUP6 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x1 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x77DF36C64E7C698035A47D2E97DA79AB1C3BCFDF6F82430581659CC4D2A969A PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38B5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x38CA SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x38C5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3477 JUMP JUMPDEST PUSH32 0x31C682DCD71348807B079D0CB25BF0C85C9E75F84A8B7B31111BA081E52817F3 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x390D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x391A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x3937 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x395C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x394B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x951 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x3988 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x39B1 JUMPI PUSH2 0x2208 PUSH2 0x39A5 SWAP2 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39AD PUSH2 0x396B JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH2 0x39CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39DD PUSH2 0x5BCF JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x39ED PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5C10 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x39D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0x39FA JUMP JUMPDEST PUSH2 0x52D PUSH2 0x140 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x3A31 PUSH2 0x3A1E JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x52D PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3A7F JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x3A8A PUSH2 0x3A68 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x3A73 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3AAA PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3A70 JUMP JUMPDEST SWAP1 PUSH2 0x3AC0 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3B91 PUSH1 0x8 PUSH2 0x3AE2 PUSH2 0x3A1E JUMP JUMPDEST SWAP5 PUSH2 0x3AEF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3AFE PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B25 PUSH2 0x3B15 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B34 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B43 PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B5B PUSH2 0x3B52 PUSH1 0x5 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B73 PUSH2 0x3B6A PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B82 PUSH2 0x1F7E PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1F94 PUSH1 0x7 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST SWAP1 PUSH2 0x3BAD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3BBC PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3BFE JUMPI PUSH2 0x3BD7 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP9 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3BE9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3BAF JUMP JUMPDEST PUSH2 0x3BAF JUMP JUMPDEST SWAP1 PUSH2 0x3BF6 PUSH2 0x3BE4 SWAP2 PUSH2 0x293A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x3BDC JUMP JUMPDEST POP PUSH2 0x3C08 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST PUSH2 0x3C22 PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C52 SWAP1 PUSH1 0x1C DUP4 DUP3 PUSH2 0x3C44 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP7 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3C57 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3C15 JUMP JUMPDEST PUSH2 0x16C9 PUSH2 0x3C67 SWAP3 PUSH2 0x3C8B SWAP5 PUSH2 0x1284 JUMP JUMPDEST SWAP7 PUSH2 0x3C7A PUSH2 0x3C74 DUP3 PUSH2 0x293A JUMP JUMPDEST SWAP9 PUSH2 0x3B99 JUMP JUMPDEST PUSH2 0x3C84 DUP3 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3AB7 JUMP JUMPDEST POP CODESIZE DUP4 DUP3 PUSH2 0x3C49 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CAB PUSH2 0x5459 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CBE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3DFC JUMP JUMPDEST ISZERO PUSH2 0x3CCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726F6D2061646472657373206973206E6F7420746865206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP4 SWAP3 PUSH2 0x3DB6 PUSH2 0x35CE PUSH2 0x64D SWAP5 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3DC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3FC1 PUSH2 0x3FC7 SWAP2 PUSH2 0x3F8B PUSH2 0x3F86 PUSH2 0x3E97 PUSH32 0xE37E962447C072D61E0164C30F30D2A3F4752DEA7A7224FFD42D5FC2586B02D5 SWAP8 SWAP10 SWAP9 SWAP7 SWAP9 PUSH2 0x3E3E PUSH2 0x237F DUP13 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x3E62 PUSH2 0x3E4A DUP13 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x3E5C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x20AB JUMP JUMPDEST EQ PUSH2 0x3CC3 JUMP JUMPDEST PUSH2 0x3E83 PUSH2 0x3E72 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND EQ ISZERO PUSH2 0x3D0F JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x3E92 PUSH2 0x1CC3 DUP14 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x3D5B JUMP JUMPDEST SWAP6 PUSH2 0x3F3A PUSH2 0x3F74 DUP12 PUSH2 0x3F46 DUP13 DUP9 PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x5845C8B965119358C29037DC6226E8F2195E0D03C7D2055C52FB161F57928741 SWAP1 PUSH2 0x3EE0 ADDRESS PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 CHAINID SWAP6 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3F58 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3F63 PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x3F7F PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 DUP5 PUSH2 0x5D29 JUMP JUMPDEST PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x3FAA PUSH2 0x3F99 DUP3 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x3FA5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x293A JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x0 DUP9 CALLER PUSH2 0x53A6 JUMP JUMPDEST PUSH2 0x1C6F DUP8 DUP8 DUP4 PUSH2 0x2057 JUMP JUMPDEST SWAP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 PUSH2 0x2DFA PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3C9B JUMP JUMPDEST PUSH2 0x3FEC PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5E3A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x3FE1 JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP2 PUSH2 0x400C PUSH2 0x577A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4019 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x435D JUMP JUMPDEST ISZERO PUSH2 0x4025 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4069 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x526577617264206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F7420616374697665207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F742061637469766520616E796D6F726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4151 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F74207374616B6564206C6F6E6720656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x419D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C726561647920636C61696D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x41E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20636C61696D20746865207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1DD85C99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x4259 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x1C14 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x423A JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x427D PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x2BE6 PUSH2 0x120 PUSH2 0x517 SWAP5 PUSH2 0x429E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AC PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x42D5 PUSH2 0x42CC PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x42EC PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x432D PUSH1 0x5 DUP7 ADD PUSH2 0x4320 PUSH2 0x431A PUSH1 0xA0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x426D JUMP JUMPDEST PUSH2 0x433B PUSH2 0x2B91 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x434A PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4284 JUMP JUMPDEST SWAP1 PUSH2 0x4367 DUP2 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4370 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x437B DUP3 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4384 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x4391 DUP4 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO PUSH2 0x439C SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH2 0x43A7 DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43B0 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH2 0x43BC DUP3 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43C5 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH2 0x43D5 SWAP1 PUSH2 0x4062 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x43E6 SWAP1 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x43F7 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x440A DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4414 SWAP1 TIMESTAMP PUSH2 0x413D JUMP JUMPDEST LT ISZERO PUSH2 0x441F SWAP1 PUSH2 0x414A JUMP JUMPDEST DUP6 PUSH2 0x442B DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x4435 SWAP2 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x5 ADD PUSH2 0x4441 SWAP1 PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0x444B SWAP1 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH2 0x4508 SWAP3 PUSH2 0x44DD SWAP2 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x447B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4575 JUMPI JUMPDEST POP PUSH2 0x41E2 JUMP JUMPDEST PUSH2 0x44B7 PUSH2 0x448F PUSH2 0x448A DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP6 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44B0 PUSH2 0x449A PUSH2 0x3A1E JUMP JUMPDEST SWAP7 PUSH2 0x44A5 DUP13 DUP7 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B15 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x44C2 TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x44E8 PUSH2 0x2DB1 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x44F4 TIMESTAMP PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4503 DUP6 PUSH2 0x16C9 DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4353 JUMP JUMPDEST PUSH32 0x7EF1954A47BCF45F29BBC3B53D86DF999B6F295782796AC65EA2DF0347116935 PUSH2 0x4570 PUSH2 0x455B PUSH2 0x4555 PUSH2 0x454F PUSH2 0x4549 PUSH1 0x40 PUSH2 0x4543 DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP5 PUSH2 0x4565 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x4582 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST CODESIZE PUSH2 0x4475 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3FFF JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x45A0 PUSH2 0x5459 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x45AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45E6 JUMPI DUP1 PUSH2 0x45CA PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x45E1 SWAP5 DUP8 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 DUP7 PUSH2 0x45DC PUSH2 0x1DBB DUP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x515B JUMP JUMPDEST PUSH2 0x45AD JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x0 PUSH2 0x460D PUSH2 0x4613 SWAP4 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4627 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x905D981207A7D0B6C62CC46AB0BE2A076D0298E4A86D0AB79882DBD01AC37378 SWAP2 PUSH2 0x67D DUP2 PUSH1 0x11 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4618 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x3 PUSH2 0x1CA4 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2DFA PUSH2 0x46B2 PUSH2 0x3FC1 CALLER PUSH2 0x1C6F DUP8 PUSH2 0x46AD DUP9 PUSH2 0x46A8 DUP6 PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST SWAP4 PUSH2 0x553 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x16C9 PUSH2 0x46D7 SWAP3 PUSH2 0x46CF PUSH2 0x3A68 JUMP JUMPDEST POP PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3B99 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4753 JUMP JUMPDEST ISZERO PUSH2 0x46F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C99081A5CC81B9BDD0818DB185A5B5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1B12 PUSH2 0x517 SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x4760 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x477C PUSH2 0x4777 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH2 0x16C9 DUP7 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x46F2 JUMP JUMPDEST PUSH32 0x7DE9B19A9A16075E228395248AD5311FFAB7748C0525BD16AB44912A968161C3 PUSH2 0x4570 PUSH2 0x47ED PUSH2 0x4555 PUSH2 0x454F PUSH2 0x47E7 PUSH1 0x40 PUSH2 0x47C0 PUSH2 0x46D7 DUP11 PUSH2 0x16C9 DUP12 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x47D2 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP11 PUSH2 0x100 DUP3 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x47F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x4736 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46DC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x481D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x482A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x4847 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x486C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x485B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1820 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x482A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x480D JUMP JUMPDEST PUSH2 0x4883 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x487B JUMP JUMPDEST PUSH2 0x3350 PUSH2 0x52D SWAP2 PUSH2 0x48BE PUSH2 0x48A7 JUMP JUMPDEST POP PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x48D5 DUP2 DUP6 DUP6 PUSH2 0x2057 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x48E4 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x48F0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD SWAP4 PUSH2 0x1CC3 SWAP4 PUSH2 0x5EDE JUMP JUMPDEST PUSH2 0x490A JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x48EA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP2 PUSH2 0x3F46 PUSH2 0x493D SWAP3 PUSH2 0x3F3A SWAP5 PUSH2 0x492B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x4948 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x495B PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x49C0 JUMP JUMPDEST ISZERO PUSH2 0x4967 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20666F72636520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A3432903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x49CC PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x49EB PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x4A03 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST SWAP6 PUSH2 0x4A0C PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4A18 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x4A2A JUMPI POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3414 SWAP1 PUSH2 0x4A47 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x494C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A66 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4B0D JUMP JUMPDEST ISZERO PUSH2 0x4A72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ABE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1C95 PUSH2 0x4B9B PUSH32 0xF25FD82F8BF40DF41B90B95A0159C55596F50B182D7B7DFF1D3E04A5A16AC7C4 SWAP3 PUSH2 0x4B41 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4B55 PUSH2 0x4B50 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x4B5F PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 SUB PUSH2 0x4BAF JUMPI JUMPDEST PUSH2 0x4B74 PUSH2 0x23C4 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4B83 DUP6 PUSH2 0x2190 DUP4 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23CB PUSH2 0x4B90 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x2190 DUP4 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP DUP4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x4BBA TIMESTAMP DUP7 GT PUSH2 0x4AB7 JUMP JUMPDEST PUSH2 0x4B66 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A56 JUMP JUMPDEST PUSH2 0x4BD7 SWAP1 PUSH2 0x52D SWAP4 SWAP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x4BE9 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4BF1 PUSH2 0x5FAB JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4C00 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x4C31 JUMPI PUSH2 0x52D PUSH2 0x3F3A SWAP2 PUSH2 0x4C19 PUSH2 0x52D SWAP5 PUSH2 0x5FDD JUMP JUMPDEST SWAP1 PUSH2 0x4C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x4BC9 JUMP JUMPDEST POP POP PUSH2 0x52D PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C4A PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x4C5A PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x23B6 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C3B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C80 PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4CA3 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x4CAE PUSH2 0x48A7 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x4C97 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x4CC8 PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4C94 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SWAP3 PUSH2 0x4CE2 DUP5 PUSH2 0x4CB8 JUMP JUMPDEST SWAP3 PUSH2 0x4CED PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x4D42 JUMPI PUSH2 0x4D3B DUP2 PUSH2 0x4D0E PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x4CEF SWAP6 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D1F PUSH2 0x13BC PUSH2 0x1DBB DUP4 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D29 DUP3 DUP10 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE PUSH2 0x4D34 DUP2 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CED JUMP JUMPDEST POP SWAP4 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x46A8 PUSH2 0x4613 SWAP3 PUSH2 0x4D5D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D74 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4DA2 SWAP1 PUSH2 0x4D90 PUSH2 0x4D8B PUSH1 0x4 PUSH2 0x324A DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x385EED96CA33F0DA03D900751711FF4392ADF11BE79222F4AA99F92E71A1DA4F PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DEE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4E03 SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x4DFE PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4C8A JUMP JUMPDEST PUSH32 0x4A84A984790B90CDC99ACB8CF998C3F36E0EFEFD6A3F5B47DCAF480F6A1862C2 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DDF JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E42 PUSH2 0x5BCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4D DUP2 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4E71 JUMPI POP POP PUSH2 0x517 SWAP1 PUSH2 0x5C10 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4EA4 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x501F JUMP JUMPDEST ISZERO PUSH2 0x4EB0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4EFC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E207374616B652074686520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4F54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D65206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7265 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH2 0x500E PUSH1 0xA0 PUSH2 0x517 SWAP5 PUSH2 0x4FBD PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FDD PUSH2 0x4FD4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x4FEB PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FF9 PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5007 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4FA4 JUMP JUMPDEST PUSH2 0x502B PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5046 PUSH2 0x5041 PUSH2 0x1CC3 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4EA9 JUMP JUMPDEST PUSH2 0x5055 PUSH2 0x3E92 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x505D PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x5069 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x513C JUMPI JUMPDEST POP PUSH32 0x30441850B15FD31A9413CD27711113D1430F46DD517499B60A5D8365FA375BF0 PUSH2 0x2DFA PUSH2 0x5122 PUSH2 0x3FC1 PUSH2 0x50A2 DUP6 PUSH2 0x37BE JUMP JUMPDEST SWAP5 PUSH2 0x50AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP8 SUB PUSH2 0x512C JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x50BF PUSH2 0x31C7 JUMP JUMPDEST PUSH2 0x50C7 DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x50E1 TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x50EC DUP10 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x511C PUSH2 0x50F9 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x5105 DUP4 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x5117 DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5015 JUMP JUMPDEST DUP3 PUSH2 0x4BBF JUMP JUMPDEST SWAP4 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5137 TIMESTAMP DUP9 GT PUSH2 0x4F4D JUMP JUMPDEST PUSH2 0x50B4 JUMP JUMPDEST PUSH2 0x5155 SWAP1 PUSH2 0x514F PUSH2 0x20AB PUSH2 0x3437 DUP6 PUSH2 0x37BE JUMP JUMPDEST EQ PUSH2 0x4EF5 JUMP JUMPDEST CODESIZE PUSH2 0x506E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4E97 JUMP JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5184 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x606A JUMP JUMPDEST PUSH2 0x517 SWAP1 CALLER SWAP1 PUSH2 0x6093 JUMP JUMPDEST PUSH2 0x530 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x517 SWAP3 SWAP5 SWAP4 PUSH2 0xA14 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5200 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x51DA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x51C7 JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH2 0x523A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x522C PUSH2 0x5226 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x4249 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x51F0 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x5207 JUMP JUMPDEST SWAP1 PUSH2 0x5256 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5260 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x52E5 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x5272 DUP4 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x52C8 JUMPI POP PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x52B1 PUSH2 0x52C1 SWAP3 PUSH2 0x52A0 PUSH2 0x51BD JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x51A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5326 PUSH2 0x11E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x5331 JUMPI POP POP JUMP JUMPDEST PUSH2 0x533E PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST DUP3 LT PUSH2 0x5348 JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x535B PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x536A PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x537E JUMPI PUSH2 0x5379 SWAP2 POP PUSH2 0x52FF JUMP JUMPDEST PUSH2 0x534D JUMP JUMPDEST POP PUSH2 0x5399 PUSH2 0x538A PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5394 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x53B0 DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x5434 JUMPI JUMPDEST PUSH2 0x5415 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 PUSH2 0x53E3 SWAP3 PUSH2 0x1C6F DUP7 PUSH1 0x0 PUSH2 0x53D7 DUP9 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD PUSH2 0x4249 JUMP JUMPDEST SWAP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x540E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4570 JUMP JUMPDEST PUSH2 0x5422 PUSH2 0x1CC3 CALLER DUP4 PUSH2 0x4D4A JUMP JUMPDEST ISZERO PUSH2 0x53BC JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST POP CALLER PUSH2 0x5448 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO PUSH2 0x53B7 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x5461 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x5467 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH2 0x5486 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x548E PUSH2 0x11E2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x549B PUSH2 0x11E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54B0 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x54C1 PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x54CE DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x54F2 JUMPI POP POP PUSH2 0x54EA PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x54A3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x5502 PUSH2 0x52D DUP5 PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54A3 JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x551F PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x5529 DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x5551 JUMPI POP POP PUSH2 0x553F PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST EQ PUSH2 0x52D JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x5511 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5574 SWAP2 PUSH2 0x556C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x5589 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x55EC JUMP JUMPDEST ISZERO PUSH2 0x5595 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x55FA PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST SWAP2 PUSH2 0x560D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 PUSH2 0x569F JUMPI JUMPDEST POP POP PUSH2 0x5620 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x562C PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x5699 JUMPI PUSH2 0x566A DUP2 PUSH2 0x5646 PUSH2 0x562E SWAP4 DUP8 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x564E PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x565D PUSH2 0x1CC3 CALLER DUP1 SWAP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x5671 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x562C JUMP JUMPDEST PUSH2 0x5692 SWAP2 DUP2 PUSH2 0x5688 PUSH2 0x3E92 PUSH2 0x1CC3 PUSH2 0x568D SWAP6 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x558E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x5662 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x56B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x557A JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE8 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x56E4 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x56F6 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5721 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x575B PUSH2 0x5760 SWAP2 PUSH2 0x52D SWAP5 SWAP4 PUSH2 0x573A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5755 PUSH2 0x5750 PUSH2 0x5749 PUSH2 0x56C9 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x56E9 JUMP JUMPDEST SWAP2 PUSH2 0x60C2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST PUSH2 0x5710 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x2710 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x5784 PUSH1 0xA PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x578C PUSH2 0x5770 JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x579E JUMPI PUSH2 0x517 SWAP1 PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57C5 PUSH2 0x57B0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x57E0 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x57ED DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ PUSH2 0x5935 JUMPI DUP1 PUSH2 0x5879 SWAP3 PUSH2 0x584F PUSH2 0x5844 PUSH2 0x5807 DUP8 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5813 DUP5 DUP11 DUP8 DUP5 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x582F PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL SWAP2 PUSH2 0x5827 DUP11 PUSH2 0x11D5 JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2190 DUP9 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5897 PUSH2 0x206F PUSH1 0x1 SWAP4 PUSH2 0x208B PUSH2 0x587F PUSH2 0x5866 PUSH2 0x57CC JUMP JUMPDEST PUSH2 0x5870 PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x5710 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x64D DUP4 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x589F PUSH2 0x1FF8 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x5929 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x58B8 PUSH1 0x0 NOT PUSH2 0x1DCE JUMP JUMPDEST GT PUSH2 0x591C JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x58D4 JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x202F JUMP JUMPDEST ISZERO PUSH2 0x590A JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x58C1 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x58DA JUMPI DUP1 PUSH2 0x58C6 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x594F PUSH2 0x1CC3 DUP4 DUP4 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x596A PUSH1 0x1 PUSH2 0x46AD DUP5 PUSH1 0x0 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x5978 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x59BD DUP3 DUP3 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x59D7 PUSH1 0x0 PUSH2 0x46AD DUP5 DUP3 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x59E5 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A18 PUSH2 0x60CD JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A46 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x5A3F PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5A20 JUMP JUMPDEST PUSH2 0x5A52 PUSH1 0x0 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A10 JUMP JUMPDEST SWAP1 PUSH2 0x5A8E DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP3 DUP4 ISZERO PUSH2 0x5ACA JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x5AB8 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5399 SWAP2 SWAP3 POP PUSH2 0x3437 PUSH2 0x20AB SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x5AD7 SWAP2 SWAP4 POP DUP3 SWAP1 PUSH2 0x4D4A JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5AAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 SWAP2 PUSH2 0x60FA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x5B16 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5B20 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x5BB5 JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x5B32 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x5B91 JUMPI POP SWAP2 PUSH2 0x5B85 PUSH2 0x5B8C SWAP3 PUSH2 0x5B75 PUSH2 0x517 SWAP7 SWAP6 PUSH2 0x5B64 PUSH2 0x51BD JUMP JUMPDEST SWAP7 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 REVERT JUMPDEST PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 PUSH2 0x34B3 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x5AE9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x5BE6 DUP3 PUSH2 0x20AB JUMP JUMPDEST SUB PUSH2 0x5BEE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5C33 PUSH2 0x33C0 PUSH2 0x5C28 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C6F DUP5 PUSH1 0x9 PUSH2 0x4249 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x5C5E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA JUMP JUMPDEST SWAP1 PUSH2 0x64D PUSH2 0x35CE PUSH1 0x20 SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x11D5 JUMP JUMPDEST ISZERO PUSH2 0x5CA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202773272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA14 PUSH2 0x517 SWAP5 PUSH2 0x5D16 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5D0C PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x5DB9 PUSH1 0x0 SWAP2 PUSH2 0x5D6C PUSH1 0x20 SWAP5 PUSH2 0x5D3E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5D5A PUSH2 0x5D4B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3F3A DUP10 DUP4 ADD SWAP2 DUP3 PUSH2 0x5C65 JUMP JUMPDEST PUSH2 0x5D65 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x6379 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5DAD PUSH2 0x5D7A DUP4 PUSH2 0x5C98 JUMP JUMPDEST PUSH2 0x5DA6 PUSH2 0x1DCE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x5CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CED JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x5DF4 JUMPI PUSH1 0x0 MLOAD PUSH2 0x5399 SWAP1 PUSH2 0x20AB SWAP1 SWAP3 PUSH2 0x566 PUSH2 0x5DE3 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x5D1D JUMP JUMPDEST PUSH2 0x5E01 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5E10 PUSH1 0x1 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5DF9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x5E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x52D SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5E8C SWAP1 PUSH2 0x5D16 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x5EB2 PUSH2 0x5EAC PUSH2 0x52D SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5ED9 JUMPI PUSH2 0x5ECE RETURNDATASIZE PUSH2 0x35C1 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5EF6 PUSH2 0x1C6F PUSH1 0x20 SWAP4 PUSH2 0x5EF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1C14 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x5F27 PUSH2 0x5F0B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x5F1C DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x5E63 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x5F7A JUMPI JUMPDEST POP PUSH2 0x5F5D JUMPI PUSH2 0x5F41 PUSH2 0x5EBF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5F50 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x490A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5F6C PUSH2 0x5EB2 PUSH2 0x5399 SWAP3 PUSH2 0x5E99 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5F9D SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FA4 JUMPI JUMPDEST PUSH2 0x5F95 DUP2 DUP4 PUSH2 0xA5D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5E4F JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5F34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F8B JUMP JUMPDEST PUSH2 0x52D PUSH1 0x10 PUSH2 0x1CA4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x5FD0 PUSH2 0x5FCA DUP5 PUSH2 0x35C1 JUMP JUMPDEST SWAP4 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x5FB5 JUMP JUMPDEST PUSH2 0x5FE6 DUP2 PUSH2 0x6419 JUMP JUMPDEST SWAP1 PUSH2 0x5FF7 PUSH1 0x1 SWAP3 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x6002 DUP5 PUSH2 0x5FBA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD DUP5 ADD SWAP1 JUMPDEST PUSH2 0x6015 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6065 JUMPI PUSH2 0x6049 SWAP1 PUSH1 0x0 NOT ADD SWAP3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP5 MSTORE8 PUSH2 0x26E2 PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x6058 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x6065 JUMPI SWAP1 SWAP2 DUP2 PUSH2 0x600A JUMP JUMPDEST PUSH2 0x600F JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x6089 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x65BB JUMP JUMPDEST SWAP1 PUSH2 0x60A1 PUSH2 0x1CC3 DUP3 DUP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x60A9 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST POP POP POP PUSH2 0x52D PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x60D8 PUSH2 0x1CC3 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x60DE JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x80 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6103 DUP2 PUSH2 0x5493 JUMP JUMPDEST SWAP1 PUSH2 0x6110 PUSH2 0x208B DUP4 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x6119 DUP3 PUSH2 0x555D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6286 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 DUP5 SWAP4 PUSH2 0x517 SWAP8 PUSH2 0x61F4 SWAP5 PUSH2 0x6151 SWAP9 SWAP8 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x6143 DUP3 PUSH2 0x25FA JUMP JUMPDEST SWAP11 PUSH2 0x615A DUP13 PUSH1 0x1 SWAP15 DUP16 PUSH2 0x11D5 JUMP JUMPDEST SWAP6 DUP7 SWAP2 DUP11 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x627E JUMPI JUMPDEST POP POP PUSH2 0x618B PUSH2 0x617D DUP3 PUSH2 0x6179 PUSH2 0x6173 PUSH2 0x60F0 JUMP JUMPDEST DUP3 PUSH2 0x5710 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP8 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x6193 PUSH2 0x530C JUMP JUMPDEST SWAP1 PUSH2 0x61C2 PUSH2 0x619F PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP4 OR PUSH2 0x61AD DUP6 DUP14 DUP10 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x61D3 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP13 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x61E5 PUSH2 0x61DF DUP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP6 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x622F JUMPI JUMPDEST POP POP POP POP PUSH2 0x1C14 JUMP JUMPDEST SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x621F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP9 ADD SWAP3 PUSH2 0x623F PUSH2 0x2208 DUP6 DUP5 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x624B PUSH2 0x1DCE DUP4 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x61EB JUMPI PUSH2 0x52D PUSH2 0x625C SWAP2 PUSH2 0x1487 JUMP JUMPDEST DUP4 SUB PUSH2 0x6269 JUMPI JUMPDEST DUP1 PUSH2 0x61EB JUMP JUMPDEST PUSH2 0x6276 SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x6263 JUMP JUMPDEST SSTORE DUP3 CODESIZE PUSH2 0x615F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 EQ DUP6 DUP3 EQ OR ISZERO PUSH2 0x62A3 JUMPI JUMPDEST POP PUSH2 0x6121 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x62B4 SWAP2 DUP5 SWAP4 SWAP7 SWAP6 SWAP5 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE PUSH2 0x629D JUMP JUMPDEST ISZERO PUSH2 0x62C8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6334 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202776272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6398 PUSH2 0x6385 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6392 PUSH2 0x1DCE PUSH1 0x41 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x62C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP2 PUSH2 0x63B6 PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND LT PUSH2 0x63FE JUMPI JUMPDEST PUSH2 0x63CA PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND EQ DUP1 ISZERO PUSH2 0x63E4 JUMPI JUMPDEST PUSH2 0x63DF SWAP1 PUSH2 0x632D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP PUSH2 0x63DF PUSH2 0x63F2 PUSH1 0x1C PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP6 AND EQ SWAP1 POP PUSH2 0x63D6 JUMP JUMPDEST SWAP2 PUSH2 0x6413 SWAP1 PUSH2 0x640D PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST SWAP1 PUSH2 0x631A JUMP JUMPDEST SWAP2 PUSH2 0x63C0 JUMP JUMPDEST PUSH2 0x6423 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 PUSH2 0x6449 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6599 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH2 0x646A DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6577 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 PUSH2 0x6484 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6555 JUMPI JUMPDEST POP PUSH4 0x5F5E100 PUSH2 0x649B DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6533 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x64B0 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6511 JUMPI JUMPDEST POP PUSH2 0x64C3 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x64EF JUMPI JUMPDEST PUSH2 0x64D8 PUSH2 0x1DCE PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST LT ISZERO PUSH2 0x64E1 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6500 PUSH2 0x650B SWAP2 PUSH2 0x26E2 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH2 0x64CB JUMP JUMPDEST PUSH2 0x652C SWAP2 PUSH2 0x26E2 PUSH2 0x6521 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64B8 JUMP JUMPDEST PUSH2 0x654E SWAP2 PUSH2 0x26E2 PUSH2 0x6543 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64A3 JUMP JUMPDEST PUSH2 0x6570 SWAP2 PUSH2 0x26E2 PUSH2 0x6565 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x10 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x648C JUMP JUMPDEST PUSH2 0x6592 SWAP2 PUSH2 0x26E2 PUSH2 0x6587 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x20 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6472 JUMP JUMPDEST PUSH2 0x65B4 SWAP2 PUSH2 0x26E2 PUSH2 0x65A9 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6451 JUMP JUMPDEST PUSH2 0x5399 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x5F6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x2C 0x21 STOP SWAP9 LOG4 PUSH28 0xBF27B9194CEAB9E7606AC7DA4D41D66802AD6E129D7B1882F264736F PUSH13 0x634300081C0033A26469706673 PC 0x22 SLT KECCAK256 PREVRANDAO LOG3 0x2B SWAP6 0x1F 0xEC 0xE9 0xC5 BLOBHASH CALL CODESIZE RETURN 0xDE DUP11 0xB9 DUP3 0xD8 GASLIMIT PUSH14 0x9BEFF404E9C8CD94DE82ACFE9D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"145:2040:16:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;145:2040:16;;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;145:2040:16;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;145:2040:16;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;467:58::-;;;;:::i;145:2040::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;145:2040:16;;;;;;;;:::o;1225:187:2:-;1297:1;1289:10;;;:::i;:::-;-1:-1:-1;;;;;145:2040:16;;-1:-1:-1;;;;;145:2040:16;;1273:26:2;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:2;;;;;;;;;;:::i;:::-;;;;145:2040:16;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;145:2040:16;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;:::o;2912:187:2:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;145:2040:16;;;;3052:40:2;;;;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":140,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":606,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":1817,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":1885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_memory_ptr_fromMemory":{"entryPoint":1859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_uint256t_uint256t_stringt_string":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_address":{"entryPoint":440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_address_dyn_storage":{"entryPoint":1208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_memory_ptr":{"entryPoint":265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":1111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_string_uint256":{"entryPoint":1968,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":1935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_address_uint256_uint256_string_string":{"entryPoint":2590,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_stringliteral_4c40":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7baf":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_4c40":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":545,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":565,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_address_dyn_storage_ptr":{"entryPoint":1685,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":2710,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":151,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":1390,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_Collection":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1299,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1286,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":1496,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1361,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_address_dyn":{"entryPoint":1218,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":594,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1782,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_collections":{"entryPoint":1065,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createCollection":{"entryPoint":864,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deleteCollection":{"entryPoint":460,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCollections":{"entryPoint":282,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":356,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":325,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":898,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":1004,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":1092,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":1423,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":506,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":3235,"id":525,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":3136,"id":463,"parameterSlots":0,"returnSlots":0},"fun_createCollection":{"entryPoint":3023,"id":8763,"parameterSlots":6,"returnSlots":1},"fun_createCollection_inner":{"entryPoint":2782,"id":null,"parameterSlots":7,"returnSlots":1},"fun_deleteCollection":{"entryPoint":2449,"id":8839,"parameterSlots":1,"returnSlots":0},"fun_deleteCollection_inner":{"entryPoint":2082,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getCollections":{"entryPoint":1260,"id":8848,"parameterSlots":0,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":825,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":1334,"id":446,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1326,"id":477,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1308,"id":null,"parameterSlots":0,"returnSlots":0},"fun_transferOwnership":{"entryPoint":3127,"id":505,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"getter_fun_collections":{"entryPoint":1035,"id":8660,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":1399,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_string_bool_of_string":{"entryPoint":2016,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":1344,"id":437,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_467":{"entryPoint":1270,"id":437,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_483":{"entryPoint":3039,"id":437,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8700":{"entryPoint":2458,"id":437,"parameterSlots":7,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint":{"entryPoint":1989,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1509,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":1651,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":942,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":484,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_offset_address":{"entryPoint":1101,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":1024,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1430,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_4c40":{"entryPoint":2481,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7baf":{"entryPoint":1440,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":135,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":1923,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":964,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_address_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_address":{"entryPoint":1673,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_bool":{"entryPoint":2070,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":1770,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4c40cf522ea2be8d229693c3d73544484ef6dd050756d8814389b3c91022e412":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7bafae6429a8b3ef0db181af7c5834a6f2b1af33146a1a9ae02e833d27f2431b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":3197,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic1":{"entryPoint":2025,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":1549,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":1725,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1618,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2750,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":1589,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_bool_to_bool":{"entryPoint":2045,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":3212,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":2759,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":1628,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":1745,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806346e6358614610082578063715018a61461007d5780638da5cb5b14610078578063a6bb6cac14610073578063d6a4448b1461006e578063f2fde38b146100695763fdbda0ec0361008757610429565b610382565b610360565b6101cc565b610164565b610145565b61011a565b600080fd5b600091031261008757565b6001600160a01b031690565b90565b0190565b906100ca6100c36100b9845190565b8084529260200190565b9260200190565b9060005b8181106100db5750505090565b9091926101016100fa60019286516001600160a01b0316815260200190565b9460200190565b9291016100ce565b60208082526100a3929101906100aa565b346100875761012a36600461008c565b6101416101356104ec565b60405191829182610109565b0390f35b346100875761015536600461008c565b61015d61052e565b604051005b565b346100875761017436600461008c565b61014161017f610536565b604051918291826001600160a01b03909116815260200190565b6001600160a01b0381165b0361008757565b9050359061016282610199565b90602082820312610087576100a3916101ab565b346100875761015d6101df3660046101b8565b610991565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761021c57604052565b6101e4565b9061016261022e60405190565b92836101fa565b67ffffffffffffffff811161021c57602090601f01601f19160190565b90826000939282370152565b9092919261027361026e82610235565b610221565b938185528183011161008757610162916020850190610252565b9080601f83011215610087578160206100a39335910161025e565b806101a4565b90503590610162826102a8565b9160c08383031261008757823567ffffffffffffffff811161008757826102e391850161028d565b92602081013567ffffffffffffffff8111610087578361030491830161028d565b9261031281604084016102ae565b9261032082606085016102ae565b92608081013567ffffffffffffffff8111610087578361034191830161028d565b9260a082013567ffffffffffffffff8111610087576100a3920161028d565b346100875761014161017f6103763660046102bb565b94939093929192610bcf565b346100875761015d6103953660046101b8565b610c37565b90602082820312610087576100a3916102ae565b634e487b7160e01b600052603260045260246000fd5b80548210156103e7576103de600191600052602060002090565b91020190600090565b6103ae565b6100a3916008021c6001600160a01b031690565b906100a391546103ec565b600154811015610087576104236100a39160016103c4565b90610400565b346100875761014161017f61043f36600461039a565b61040b565b6100a390610097565b6100a39054610444565b906104726104666100b9845490565b92600052602060002090565b9060005b8181106104835750505090565b9091926104b06104a96001926104988761044d565b6001600160a01b0316815260200190565b9460010190565b929101610476565b906100a391610457565b906101626104dc926104d360405190565b938480926104b8565b03836101fa565b6100a3906104c2565b6100a360016104e3565b6104fe610c40565b61016261051c565b6100976100a36100a39290565b6100a390610506565b6101626105296000610513565b610ca3565b6101626104f6565b6100a3600061044d565b6101629061054c610c40565b610822565b6100a390610097906001600160a01b031682565b6100a390610551565b6100a390610565565b906105819061056e565b600052602052604060002090565b6100a39081565b6100a3905461058f565b156105a757565b60405162461bcd60e51b81526020600482015260096024820152681393d517d193d5539160ba1b6044820152606490fd5b6100a36100a36100a39290565b634e487b7160e01b600052601160045260246000fd5b9190820391821161060857565b6105e5565b916001600160a01b0360089290920291821b911b61062b565b921b90565b9181191691161790565b91906106466100a361064e9361056e565b90835461060d565b9055565b906000199061062b565b9061066c6100a361064e926105d8565b8254610652565b634e487b7160e01b600052603160045260246000fd5b61016291600091610635565b805480156106b85760001901906106b56106af83836103c4565b90610689565b55565b610673565b9160001960089290920291821b911b61062b565b91906106e26100a361064e936105d8565b9083546106bd565b610162916000916106d1565b60005b8381106107095750506000910152565b81810151838201526020016106f9565b9092919261072961026e82610235565b9381855281830111610087576101629160208501906106f6565b9080601f830112156100875781516100a392602001610719565b9060208282031261008757815167ffffffffffffffff8111610087576100a39201610743565b6040513d6000823e3d90fd5b6100a66107a7926020926107a1815190565b94859290565b938491016106f6565b6107c06100a6916020949361078f565b918252565b6107da6107d160405190565b928392836107b0565b03902090565b6100a3916107c5565b9190600861062b91029161062660ff841b90565b919061080e6100a361064e93151590565b9083546107e9565b610162916000916107fd565b6108af60006108aa8360036108a56108a06108456108408585610577565b610596565b60019061087961085861042383856103c4565b6108736001600160a01b0389165b916001600160a01b031690565b146105a0565b610893610884835490565b61088d846105d8565b906105fb565b9081810361095f57505090565b610695565b610577565b6106ea565b6108c06108bb8261056e565b61056e565b9060006108cc60405190565b6306fdde0360e01b815292839060049082905afa91821561095a576000610903610908946108bb938391610938575b5060026107e0565b610816565b7f15db1813f994e3207e1b7cd688154dca03609984e865399cd2163d9eb3b0a63c61093260405190565b600090a2565b61095491503d8085833e61094c81836101fa565b81019061075d565b386108fb565b610783565b61098c6109726104236100a394866103c4565b6109868161098085886103c4565b90610635565b87610577565b61065c565b61016290610540565b906100a39695949392916109ac610c40565b610ade565b156109b857565b60405162461bcd60e51b815260206004820152600a6024820152692720a6a2afaa20a5a2a760b11b6044820152606490fd5b610a0b610a146020936100a6936109ff815190565b80835293849260200190565b958691016106f6565b601f01601f191690565b959194610a74610a8895610a6d610a5b6100a39b99610a4d8c610a7b9860e082019160008184039101526109ea565b8c810360208e0152906109ea565b6001600160a01b0390971660408b0152565b6060890152565b6080870152565b84820360a08601526109ea565b9160c08184039101526109ea565b908154916801000000000000000083101561021c5782610980916001610162950181556103c4565b9060ff9061062b565b90610ad76100a361064e92151590565b8254610abe565b9591929394909550610b0a610b05610b01610afa8960026107e0565b5460ff1690565b1590565b6109b1565b6040519461704e86019486861067ffffffffffffffff87111761021c578695610b3d9561704e610cf68939893392610a1e565b03906000f0801561095a57610b8a610b74610b79610b5d610b959461056e565b946001928391610b6d8884610a96565b60026107e0565b610ac7565b61088d610b84825490565b916105d8565b61098c836003610577565b610b9e8161056e565b7f75432e2e509efcaf947efcc7a5a6b6b3562425b29e9725c7a4a5c652291ac35d610bc860405190565b600090a290565b6100a3959493929190600061099a565b61016290610beb610c40565b6000610bf681610513565b6001600160a01b0381166001600160a01b03841614610c1a57505061016290610ca3565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b61016290610bdf565b610c48610536565b3390610c5382610866565b03610c5b5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b906001600160a01b039061062b565b90610c9c6100a361064e9261056e565b8254610c7d565b610cc4610cbe610cb3600061044d565b6108bb846000610c8c565b9161056e565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610cef60405190565b600090a356fe60806040523461003157610020610014610206565b9594909493919361051a565b604051616601610a4d823961660190f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006d57604052565b610036565b9061008661007f60405190565b928361004c565b565b6001600160401b03811161006d57602090601f01601f19160190565b60005b8381106100b75750506000910152565b81810151838201526020016100a7565b909291926100dc6100d782610088565b610072565b9381855281830111610031576100869160208501906100a4565b9080601f83011215610031578151610110926020016100c7565b90565b6001600160a01b031690565b6001600160a01b0381165b0361003157565b905051906100868261011f565b8061012a565b905051906100868261013e565b9060e0828203126100315781516001600160401b03811161003157816101789184016100f6565b60208301519093906001600160401b038111610031578261019a9185016100f6565b926101a88360408301610131565b926101b68160608401610144565b926101c48260808501610144565b60a08401519093906001600160401b03811161003157836101e69183016100f6565b60c08201519093906001600160401b0381116100315761011092016100f6565b61022461704e8038038061021981610072565b928339810190610151565b90919293949596565b90600019905b9181191691161790565b6101106101106101109290565b9061025a6101106102619261023d565b825461022d565b9055565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561029b575b602083101461029657565b610265565b91607f169161028b565b9160001960089290920291821b911b610233565b91906102ca6101106102619361023d565b9083546102a5565b610086916000916102b9565b8181106102e9575050565b806102f760006001936102d2565b016102de565b9190601f811161030c57505050565b61031e61008693600052602060002090565b906020601f840181900483019310610340575b6020601f9091010401906102de565b9091508190610331565b90610353815190565b906001600160401b03821161006d5761037682610370855461027b565b856102fd565b602090601f83116001146103b1576102619291600091836103a6575b5050600019600883021c1916906002021790565b015190503880610392565b601f198316916103c685600052602060002090565b9260005b818110610404575091600293918560019694106103eb575b50505002019055565b01516000196008601f8516021c191690553880806103e2565b919360206001819287870151815501950192016103ca565b906100869161034a565b9060ff90610233565b9061043f61011061026192151590565b8254610426565b610110600061023d565b9061045d6100d783610088565b918252565b61046c6001610450565b603160f81b602082015290565b610110610462565b61011090610113906001600160a01b031682565b61011090610481565b61011090610495565b9052565b90959492610086946104dd6104e4926104d66080966104cf60a088019c6000890152565b6020870152565b6040850152565b6060830152565b01906001600160a01b03169052565b9061025a6101106102619290565b61050e6101106101109290565b6001600160601b031690565b9194956105556100869761054e61064d976105476105bc9861054061055c988a8e61065d565b601361024a565b601461024a565b601061041c565b601161041c565b6105686000601261042f565b61057c610575600061023d565b601661024a565b61058d84610588610446565b61077a565b506105b8847f2fdac322ee704ce09f0773f7f3f92eb98d5e7c836ee9c056cccd5f61041e5e3f61077a565b5090565b6105ce6105c7825190565b9160200190565b2061063a6105da610479565b6105e56105c7825190565b20916105f03061049e565b9261062e6105fd60405190565b948593602085019346917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f866104ab565b9081038252038261004c565b6106456105c7825190565b20600e6104f3565b6106576000610501565b906108f1565b610086928392839283928392839261067a565b610110600161023d565b906106859291610697565b610086610690610670565b600a61024a565b9061008692916106b8565b6101136101106101109290565b610110906106a2565b916106c29161070e565b60006106cd816106af565b6001600160a01b0381166001600160a01b038416146106f1575050610086906109c3565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b610086916107289161072190600261041c565b600361041c565b610730610446565b61073b81600061024a565b61074c6107486000199290565b9190565b1061075357565b63fed8210f60e01b610a14565b905b600052602052604060002090565b906107629061049e565b61078b6107878383610a1d565b1590565b156107ff576107b160016107ac8460006107a686600b610760565b01610770565b61042f565b6107cb6107c56107bf339390565b9361049e565b9161049e565b917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d6107f660405190565b600090a4600190565b5050600090565b6101109081906001600160601b031681565b6104a790610806565b91602061008692949361083c60408201966000830190610818565b0152565b6101106040610072565b906001600160a01b0390610233565b906108696101106102619261049e565b825461084a565b906001600160a01b03199060a01b610233565b6101109061050e906001600160601b031682565b906108a761011061026192610883565b8254610870565b610086916108e1906020906108d36108cd82516001600160a01b031690565b85610859565b01516001600160601b031690565b90610897565b90610086916108ae565b906109026108fd610a41565b610806565b8061090c83610806565b11610991575060009161091e836106af565b6001600160a01b0381166001600160a01b038316146109745750610086929161095d61096d9261094c610840565b948501906001600160a01b03169052565b6001600160601b03166020830152565b600c6108e7565b635b6cc80560e11b84526001600160a01b03166004840152602483fd5b636f483d0960e01b6000908152916109ab91906004610821565b036000fd5b61011090610113565b61011090546109b0565b6109e36107c56109d360096109b9565b6109de846009610859565b61049e565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610a0e60405190565b600090a3565b60005260046000fd5b6101109160006107a6610a3a93610a32600090565b50600b610760565b5460ff1690565b61011061271061050156fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146104ed57806304634d8d146104e857806306fdde03146104e3578063081812fc146104de578063095ea7b3146104d957806314f93a49146104d457806317f82990146104cf57806318160ddd146104ca5780631c4b774b146104c5578063233dedf1146104c057806323b872dd146104bb5780632474e2b2146104b6578063248a9ca3146104b15780632496dd51146104ac578063276a28a3146104a75780632a55205a146104a25780632a67c1581461049d5780632a959b89146104985780632cfb6688146104935780632f2ff15d1461048e57806336568abe146104895780633736d853146104845780633f4ba83a1461047f57806342842e0e1461047a57806342966c68146104755780634ea3871a1461047057806355f804b31461046b5780635944c753146104665780635c975abb146104615780636352211e1461045c57806366cfd072146104575780636817c76c146104525780636cc232e91461044d5780636ce76f30146104485780636fc23db41461044357806370a082311461043e57806370ae92d214610439578063715018a6146104345780637c33bd701461042f57806380c474401461042a57806382666bc8146104255780638456cb591461042057806386bb8f371461041b5780638ad7d9de146104165780638da5cb5b1461041157806391d148541461040c578063938e3d7b1461040757806395d89b41146104025780639fd6db12146103fd578063a217fddf146103f8578063a22cb465146103f3578063a3e37652146103ee578063a5f10fe7146103e9578063a7b1190a146103e4578063ae594865146103df578063b5573847146103da578063b88d4fde146103d5578063bc577940146103d0578063bd39e149146103cb578063be707db1146103c6578063c0788555146103c1578063c4228aaa146103bc578063c7a5156f146103b7578063c87b56dd146103b2578063ccd40400146103ad578063d547741f146103a8578063d5abeb01146103a3578063dcae67541461039e578063dd4ba7e114610399578063e985e9c514610394578063eabdc5b41461038f578063ed24911d14610376578063f064997c1461038a578063f12e061b14610385578063f2fde38b14610380578063f301af421461037b578063f698da25146103765763ffab4bd9036104f257611b51565b611979565b611b17565b6119d3565b6119bb565b6119a0565b611961565b611945565b611901565b611875565b61184a565b611825565b61180d565b6117f2565b6117b7565b61159a565b611556565b611467565b61144f565b611433565b61141c565b6113a6565b611326565b61130d565b6112b1565b61125c565b611232565b6111f4565b6111ba565b611179565b611161565b611145565b611120565b611107565b6110ee565b6110d6565b6110ba565b611047565b611014565b610ee5565b610eca565b610eaf565b610e96565b610e7b565b610e37565b610e08565b610de4565b610dc9565b610dae565b610d95565b610d54565b610d17565b610cd6565b610cc2565b610caa565b610c92565b610c79565b610c60565b610c25565b610c0c565b610bc1565b610a18565b6109c0565b6109a7565b610956565b61093e565b61092a565b6108e6565b61089d565b6107a6565b61078d565b610774565b610708565b6106b0565b610662565b6105cd565b610534565b600080fd5b6001600160e01b031981165b036104f257565b90503590610517826104f7565b565b906020828203126104f25761052d9161050a565b90565b9052565b346104f25761056261054f61054a366004610519565b611b6a565b6040515b91829182901515815260200190565b0390f35b6001600160a01b031690565b6001600160a01b038116610503565b9050359061051782610572565b6001600160601b038116610503565b905035906105178261058e565b91906040838203126104f25761052d9060206105c68286610581565b940161059d565b346104f2576105e66105e03660046105aa565b90611c9a565b604051005b60009103126104f257565b60005b8381106106095750506000910152565b81810151838201526020016105f9565b61063a61064360209361064d9361062e815190565b80835293849260200190565b958691016105f6565b601f01601f191690565b0190565b602080825261052d92910190610619565b346104f2576106723660046105eb565b61056261067d611cad565b60405191829182610651565b80610503565b9050359061051782610689565b906020828203126104f25761052d9161068f565b346104f2576105626106cb6106c636600461069c565b611cb7565b604051918291826001600160a01b03909116815260200190565b91906040838203126104f25761052d9060206107018286610581565b940161068f565b6105e66107163660046106e5565b90611cf6565b909182601f830112156104f2578135916001600160401b0383116104f25760200192602083028401116104f257565b906020828203126104f25781356001600160401b0381116104f257610770920161071c565b9091565b346104f2576105e661078736600461074b565b90611dfa565b346104f2576105e66107a036600461074b565b90611e51565b346104f2576107b63660046105eb565b6105626107c1611e5b565b6040515b9182918290815260200190565b805182529061052d9061014080610884610870610823610802610160870160208a015188820360208a0152610619565b61081160408a01516040890152565b60608901518782036060890152610619565b60808881015115159087015261083e60a089015160a0880152565b61084d60c089015160c0880152565b61085c60e089015160e0880152565b610100880151868203610100880152610619565b610120870151858203610120870152610619565b940151910152565b602080825261052d929101906107d2565b346104f2576105626108b86108b336600461069c565b611fca565b6040519182918261088c565b61052d916008021c81565b9061052d91546108c4565b61052d6000600f6108cf565b346104f2576108f63660046105eb565b6105626107c16108da565b90916060828403126104f25761052d61091a8484610581565b9360406107018260208701610581565b6105e6610938366004610901565b91612057565b346104f2576105e661095136600461069c565b612428565b346104f2576105626107c161096c36600461069c565b612437565b916040838303126104f25782356001600160401b0381116104f2578261099e60209461052d93870161071c565b9490950161068f565b346104f2576105e66109ba366004610971565b91612533565b346104f25761056261054f6109d636600461069c565b61253e565b91906040838203126104f25761052d906020610701828661068f565b6001600160a01b0390911681526040810192916105179160200152565b0152565b346104f257610a31610a2b3660046109db565b9061266c565b90610562610a3e60405190565b928392836109f7565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117610a7e57604052565b610a47565b90610517610a9060405190565b9283610a5d565b6001600160401b038111610a7e57602090601f01601f19160190565b90826000939282370152565b90929192610ad4610acf82610a97565b610a83565b93818552818301116104f257610517916020850190610ab3565b9080601f830112156104f25781602061052d93359101610abf565b9190610100838203126104f25782356001600160401b0381116104f25781610b32918501610aee565b92610b40826020830161068f565b9260408201356001600160401b0381116104f25783610b60918401610aee565b9260608301356001600160401b0381116104f25781610b80918501610aee565b9260808101356001600160401b0381116104f25782610ba0918301610aee565b9261052d610bb18460a0850161068f565b9360e06107018260c0870161068f565b346104f2576105e6610bd4366004610b09565b96959095949194939293612e3f565b90916060828403126104f25761052d610bfc8484610581565b936040610701826020870161068f565b346104f2576105e6610c1f366004610be3565b91613169565b346104f2576105e6610c3836600461069c565b613450565b91906040838203126104f25761052d906020610c59828661068f565b9401610581565b346104f2576105e6610c73366004610c3d565b90613477565b346104f2576105e6610c8c366004610c3d565b90613481565b346104f2576105e6610ca536600461069c565b61359a565b346104f257610cba3660046105eb565b6105e66135b9565b6105e6610cd0366004610901565b916135e5565b346104f2576105e6610ce936600461069c565b613649565b801515610503565b9050359061051782610cee565b906020828203126104f25761052d91610cf6565b346104f2576105e6610d2a366004610d03565b6136d5565b906020828203126104f25781356001600160401b0381116104f25761052d9201610aee565b346104f2576105e6610d67366004610d2f565b61371d565b90916060828403126104f25761052d610d85848461068f565b9360406105c68260208701610581565b346104f2576105e6610da8366004610d6c565b91613793565b346104f257610dbe3660046105eb565b61056261054f6137b4565b346104f2576105626106cb610ddf36600461069c565b6137be565b346104f2576105e6610df736600461069c565b61389d565b61052d600060146108cf565b346104f257610e183660046105eb565b6105626107c1610dfc565b906020828203126104f25761052d91610581565b346104f2576105e6610e4a366004610e23565b6138f4565b7f2fdac322ee704ce09f0773f7f3f92eb98d5e7c836ee9c056cccd5f61041e5e3f90565b61052d610e4f565b346104f257610e8b3660046105eb565b6105626107c1610e73565b346104f2576105e6610ea936600461074b565b90613961565b346104f2576105626107c1610ec5366004610e23565b61397b565b346104f2576105626107c1610ee0366004610e23565b6139be565b346104f257610ef53660046105eb565b6105e66139f2565b805182529061052d90610120806108846101408401610f2160208801516020870152565b6040878101516001600160a01b031690860152610f4360608801516060870152565b610f5260808801516080870152565b60a08781015115159086015260c087810151151590860152610f7960e088015160e0870152565b610100870151858203610100870152610619565b9061052d91610efd565b90610fad610fa3835190565b8083529160200190565b9081610fbf6020830284019460200190565b926000915b838310610fd357505050505090565b90919293946020610ff6610fef83856001950387528951610f8d565b9760200190565b9301930191939290610fc4565b602080825261052d92910190610f97565b346104f25761056261102f61102a36600461069c565b613ba2565b60405191829182611003565b61052d600060166108cf565b346104f2576110573660046105eb565b6105626107c161103b565b919060a0838203126104f2576110788184610581565b926110868260208301610581565b92611094836040840161068f565b926060830135906001600160401b0382116104f25760806107018261052d948701610aee565b346104f2576105e66110cd366004611062565b93929092613fd4565b346104f2576110e63660046105eb565b6105e6613ff7565b346104f2576105e66111013660046109db565b90614588565b346104f2576105e661111a366004610971565b916145ed565b346104f2576111303660046105eb565b6105626106cb6009546001600160a01b031690565b346104f25761056261054f61115b366004610c3d565b906145f8565b346104f2576105e6611174366004610d2f565b614657565b346104f2576111893660046105eb565b61056261067d614660565b61052d916008021c5b60ff1690565b9061052d9154611194565b61052d600060126111a3565b346104f2576111ca3660046105eb565b61056261054f6111ae565b61052d61052d61052d9290565b61052d60006111d5565b61052d6111e2565b346104f2576112043660046105eb565b6105626107c16111ec565b91906040838203126104f25761052d90602061122b8286610581565b9401610cf6565b346104f2576105e661124536600461120f565b9061466a565b602080825261052d92910190610efd565b346104f2576105626112786112723660046109db565b906146bc565b6040519182918261124b565b9061128e906111d5565b600052602052604060002090565b60006112ac61052d926018611284565b6108cf565b346104f2576105626107c16112c736600461069c565b61129c565b916060838303126104f2576112e1828461068f565b926112ef836020830161068f565b9260408201356001600160401b0381116104f25761052d9201610aee565b346104f2576105e66113203660046112cc565b91614802565b346104f2576105e661133936600461074b565b90614871565b805182526020808201516001600160a01b031690830152610517919060a090819061136f60408201516040860152565b61137e60608201516060860152565b61138d60808201516080860152565b01511515910152565b60c081019291610517919061133f565b346104f2576105626113c16113bc36600461069c565b6148af565b60405191829182611396565b906080828203126104f2576113e28183610581565b926113f08260208501610581565b926113fe836040830161068f565b9260608201356001600160401b0381116104f25761052d9201610aee565b6105e661142a3660046113cd565b929190916148c6565b346104f2576105626107c1611449366004610901565b91614917565b346104f2576105e661146236600461069c565b614a4d565b346104f2576105e661147a3660046109db565b90614bbf565b61052d9081565b61052d9054611480565b61052d9061119d565b61052d9054611491565b6114af90601a611284565b906114b982611487565b916114ce60018201546001600160a01b031690565b916114db60028301611487565b916114e860038201611487565b9161052d60056114fa60048501611487565b930161149a565b919461154761154e9298979561154060a0966115396105179a61152960c08a019e60008b0152565b6001600160a01b03166020890152565b6040870152565b6060850152565b6080830152565b019015159052565b346104f25761056261157161156c36600461069c565b6114a4565b9261158196949692919260405190565b96879687611501565b60006112ac61052d926019611284565b346104f2576105626107c16115b036600461069c565b61158a565b61052d9060081c61119d565b61052d90546115b5565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611601575b60208310146115fc57565b6115cb565b91607f16916115f1565b8054600093929161162861161e836115e1565b8085529360200190565b916001811690811561167a575060011461164157505050565b6116549192939450600052602060002090565b916000925b8184106116665750500190565b805484840152602090930192600101611659565b92949550505060ff1916825215156020020190565b9061052d9161160b565b906105176116b3926116aa60405190565b9384809261168f565b0383610a5d565b906116c96116ce92601c611284565b611284565b906116d882611487565b916116e560018201611487565b916116fa60028301546001600160a01b031690565b9161170760038201611487565b9161171460048301611487565b916117216005820161149a565b9161172e600583016115c1565b9161173b60068201611487565b9161052d600861174d60078501611699565b9301611487565b90815260208101919091526001600160a01b0390911660408201529796959461014089019490939092909160608a01526080890152151560a0880152151560c087015260e08601528481036101008601526117ae91610619565b61012090930152565b346104f2576105626117d36117cd3660046109db565b906116ba565b966117e99a989a96919695929594939460405190565b9a8b9a8b611754565b346104f25761056261067d61180836600461069c565b614bdd565b346104f2576105e661182036600461069c565b614c66565b346104f2576105e6611838366004610c3d565b90614c8a565b61052d600060136108cf565b346104f25761185a3660046105eb565b6105626107c161183e565b60006112ac61052d926017611284565b346104f2576105626107c161188b36600461069c565b611865565b9061064d8160c09361133f565b906118bd6118b66118ac845190565b8084529260200190565b9260200190565b9060005b8181106118ce5750505090565b9091926118e86118e16001928651611890565b9460200190565b9291016118c1565b602080825261052d9291019061189d565b346104f25761056261191d61191736600461074b565b90614cd5565b604051918291826118f0565b91906040838203126104f25761052d906020610c598286610581565b346104f25761056261054f61195b366004611929565b90614d4a565b346104f2576105e661197436600461069c565b614dcc565b346104f2576119893660046105eb565b6105626107c1614dd5565b61052d6000601d6108cf565b346104f2576119b03660046105eb565b6105626107c1611994565b346104f2576105e66119ce366004610e23565b614e2d565b346104f2576105e66119e6366004610e23565b614e8e565b6119f690601b611284565b6119ff81611487565b91611a0c60018301611699565b91611a1960028201611487565b91611a2660038301611699565b91611a336004820161149a565b91611a4060058301611487565b91611a4d60068201611487565b91611a5a60078301611487565b91611a6760088201611699565b9161052d600a61174d60098501611699565b9b9a9892611b129760c08e610a146105179e9a611ae7611add6101409f9897611b039d9c611ad0611ac8611aee9b611af59e611abb6101608c019260008d0152565b8a820360208c0152610619565b926040890152565b8682036060880152610619565b9a15156080850152565b60a0830152565b60e08c0152565b8982036101008b0152610619565b90878203610120890152610619565b940152565b346104f257610562611b32611b2d36600461069c565b6119eb565b97611b489b999b97919796929695939560405190565b9b8c9b8c611a79565b346104f2576105e6611b643660046109db565b9061515b565b61052d90615165565b9061051791611b88611b83610e4f565b61518e565b611c1d565b611b9a61052d61052d9290565b6001600160601b031690565b15611bad57565b60405162461bcd60e51b815260206004820152601960248201527f526f79616c74792063616e6e6f74206578636565642031302500000000000000604482015280606481015b0390fd5b61052d90610566906001600160a01b031682565b61052d90611bf7565b61052d90611c0b565b611c95611c747fae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c6292611c65611c536103e8611b8d565b6001600160601b0387165b1115611ba6565b611c6f858261524a565b611c14565b92611c7e60405190565b918291826001600160601b03909116815260200190565b0390a2565b9061051791611b73565b61052d90611699565b61052d6002611ca4565b611cc7611cc382615319565b1590565b611ce9576000611cdb61052d926006611284565b01546001600160a01b031690565b6333d1c03960e21b61539d565b610517916001916153a6565b9061051791611d12611b83610e4f565b611d91565b634e487b7160e01b600052603260045260246000fd5b9190811015611d3d576020020190565b611d17565b3561052d81610689565b15611d5357565b60405162461bcd60e51b8152602060048201526016602482015275546f6b656e204944206f7574206f6620626f756e647360501b6044820152606490fd5b919091611d9e60006111d5565b83811015611df45780611dd8611dc0611dbb611def948887611d2d565b611d42565b611dd2611dce61052d61544f565b9190565b10611d4c565b611de9611462611dbb838887611d2d565b60010190565b611d9e565b50509050565b9061051791611d02565b9061051791611e11615459565b919091611e1e60006111d5565b83811015611df45780611e3b611dc0611dbb611e4c948887611d2d565b611de9610c38611dbb838887611d2d565b611e1e565b9061051791611e04565b61052d615479565b61052d610160610a83565b611e76611e63565b90600082526020808080808080808080808c01606081520160008152016060815201600081520160008152016000815201600081520160605b81520160605b8152016000905250565b61052d611e6e565b90610517611fb9600a611ed8611e63565b94611ee9611ee582611487565b8752565b611eff611ef860018301611699565b6020880152565b611f15611f0e60028301611487565b6040880152565b611f2b611f2460038301611699565b6060880152565b611f43611f3a6004830161149a565b15156080880152565b611f59611f5260058301611487565b60a0880152565b611f6f611f6860068301611487565b60c0880152565b611f85611f7e60078301611487565b60e0880152565b611f9c611f9460088301611699565b610100880152565b611fb3611fab60098301611699565b610120880152565b01611487565b610140840152565b61052d90611ec7565b611fe161052d91611fd9611ebf565b50601b611284565b611fc1565b61052d9081906001600160a01b031681565b61052d6001600160a01b036111d5565b61056661052d61052d9290565b9061128e90611c14565b90600019905b9181191691161790565b9061203f61052d612046926111d5565b825461201f565b9055565b61052d600160e11b6111d5565b91909161207461206f61206984615493565b92611c0b565b611fe6565b9161209061208b612083611ff8565b809516612008565b611c0b565b9361209d61208b84612008565b6120b86001600160a01b0387165b916001600160a01b031690565b0361227e5784926120c88361555d565b9190336001600160a01b0387168114818514171561224f575b50611dce9594936121e497936121b89361206f936120ff60016111d5565b9261210c848a878d6156bd565b612245575b50612139612120896005612015565b61213361212c82611487565b6000190190565b9061202f565b612153612147846005612015565b612133611de982611487565b61217f612169828561216361204a565b9b615726565b4260a01b908a17176001600160a01b0385161790565b916121956004936121908a86611284565b61202f565b6000986121aa6121a48b6111d5565b91841690565b146121f8575b505050611c0b565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a46111d5565b146121eb57565b633a954ecd60e21b61539d565b87019161220d6122088483611284565b611487565b612219611dce8b6111d5565b036121b05761222a61052d8a611487565b83146121b05761223d9261219091611284565b3880806121b0565b6000905538612111565b611cc390612261929894969597614d4a565b61227157869492939195386120e1565b632ce44b5f60e11b61539d565b62a1148160e81b61539d565b61051790612299611b83610e4f565b61236f565b156122a557565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b156122e857565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881a5cc81b9bdd081b1bd8dad959606a1b6044820152606490fd5b1561232a57565b60405162461bcd60e51b815260206004820152601a60248201527f556e6c6f636b2074696d6520686173206e6f74207061737365640000000000006044820152606490fd5b6123d09061238461237f82615319565b61229e565b6123956123908261253e565b6122e1565b6123a3612208826018611284565b6123b0611dce60006111d5565b03612407575b6123cb6123c4826019611284565b429061202f565b6111d5565b7f5114e731f472514591aa5a2e7254174b62963e757a427cf9e9b069666478b0606123fa60405190565b4281528060208101611c95565b61242361241b61052d612208846018611284565b421015612323565b6123b6565b6105179061228a565b9061128e565b6001611fb361052d92612448600090565b50600b612431565b906105179291612461611b83610e4f565b6124b2565b1561246d57565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b6564000000000000006044820152606490fd5b92919260006124c160006111d5565b8381101561252b57806124de611dc0611dbb612526948888611d2d565b61250f6124fd61220860196124f7611dbb868b8b611d2d565b90611284565b612509611dce866111d5565b14612466565b611de987612521611dbb848989611d2d565b614bbf565b6124c1565b505050509050565b906105179291612450565b61254a611cc382615319565b6125de5761255c612208826019611284565b9060009161256c611dce846111d5565b116125da5761257f612208826017611284565b61258b611dce846111d5565b146125da5761259e612208826018611284565b6125aa611dce846111d5565b141590816125be575b5061052d5750600190565b6125d1915061220861052d916018611284565b421015386125b3565b5090565b50600090565b61052d9060a01c611b9a565b61052d90546125e4565b61052d90612008565b61052d61052d61052d926001600160601b031690565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561264257565b612619565b634e487b7160e01b600052601260045260246000fd5b8115612667570490565b612647565b61268861052d600092949394612680600090565b50600d611284565b019161269b83546001600160a01b031690565b6126a581946125f0565b906126b66120ab61056660006125fa565b146126e8575b61052d916126cc6126d292612603565b9061262f565b6126e26126dd615765565b612603565b9061265d565b50600c925061052d906126d2906126cc61271261270c87546001600160a01b031690565b966125f0565b92505091506126bc565b9061051797969594939291612732611b83610e4f565b612c8e565b1561273e57565b60405162461bcd60e51b815260206004820152601b60248201527f52657761726420747970652063616e6e6f7420626520656d70747900000000006044820152606490fd5b1561278a57565b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b156127d657565b60405162461bcd60e51b815260206004820152602c60248201527f436c61696d61626c65207374616b65642074696d65206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608490fd5b1561283757565b60405162461bcd60e51b815260206004820152602160248201527f4163746976652074696d65206d75737420626520696e207468652066757475726044820152606560f81b6064820152608490fd5b1561288d57565b60405162461bcd60e51b815260206004820152602360248201527f44656163746976652074696d65206d75737420626520696e207468652066757460448201526275726560e81b6064820152608490fd5b156128e557565b60405162461bcd60e51b815260206004820152602760248201527f44656163746976652074696d65206d757374206265206166746572206163746960448201526676652074696d6560c81b6064820152608490fd5b60001981146126425760010190565b5190565b9160001960089290920291821b911b612025565b919061297261052d612046936111d5565b90835461294d565b61051791600091612961565b818110612991575050565b8061299f600060019361297a565b01612986565b9190601f81116129b457505050565b6129c661051793600052602060002090565b906020601f8401819004830193106129e8575b6020601f909101040190612986565b90915081906129d9565b906129fb815190565b906001600160401b038211610a7e57612a1e82612a1885546115e1565b856129a5565b602090601f8311600114612a5957612046929160009183612a4e575b5050600019600883021c1916906002021790565b015190503880612a3a565b601f19831691612a6e85600052602060002090565b9260005b818110612aac57509160029391856001969410612a93575b50505002019055565b01516000196008601f8516021c19169055388080612a8a565b91936020600181928787015181550195019201612a72565b90610517916129f2565b9060ff90612025565b90612ae761052d61204692151590565b8254612ace565b600a612be661014061051794612b0e612b08600083015190565b8661202f565b612b25612b1c602083015190565b60018701612ac4565b612b3c612b33604083015190565b6002870161202f565b612b53612b4a606083015190565b60038701612ac4565b612b6c612b636080830151151590565b60048701612ad7565b612b83612b7a60a083015190565b6005870161202f565b612b9a612b9160c083015190565b6006870161202f565b612bb1612ba860e083015190565b6007870161202f565b612bc9612bc061010083015190565b60088701612ac4565b612be1612bd861012083015190565b60098701612ac4565b015190565b910161202f565b9061051791612aee565b61064d612c0f92602092612c09815190565b94859290565b938491016105f6565b61052d91612bf7565b612c3790612c2e60405190565b91829182612c18565b03902090565b92612c8660c095612c78611ae793612c6a6105179b96610a14989e9d9b9e611abb60e08c019260008d0152565b9088820360408a0152610619565b908682036060880152610619565b986080850152565b95858395612de7612de18a6123cb611dce612db98b9f999b612d897f408e1e6b24c523df52071026044644bc970ace38bba503fa10e7c6e4e9ee06619f9c6115408f612dfa9f8f8f90612d2a90612cfa612ce86129498f90565b612cf460009d8e6111d5565b11612737565b612d188b612d12611dce612d0c8b5190565b926111d5565b11612783565b612d24611dce8c6111d5565b116127cf565b612d33896111d5565b82141580612e2f575b612d458a6111d5565b8203612dff575b505050611539612d5c601d611487565b99612d70612d698c61293a565b601d61202f565b612d828b612d7c611e63565b9a8b0152565b6020890152565b60016080840152612d9b8960a0850152565b612da68a60c0850152565b612db18b60e0850152565b610100830152565b612dc586610120830152565b612dd142610140830152565b612ddc83601b611284565b612bed565b99612c21565b99612df160405190565b97889788612c3d565b0390a3565b612e0a428311612886565b612e15575b38612d4c565b612e22611dce612e289390565b116128de565b8c8e612e0f565b612e3a428411612830565b612d3c565b906105179796959493929161271c565b90612e629291612e5d61577a565b612e6a565b6105176157ba565b906105179291612e78615459565b613046565b15612e8457565b60405162461bcd60e51b815280611bf3600482016020808252818101527f43616c6c6572206973206e6f7420616e2041444d494e206f7220455343524f57604082015260600190565b15612ed457565b60405162461bcd60e51b8152602060048201526016602482015275135a5b9d1a5b99c81a5cc81b9bdd08195b98589b195960521b6044820152606490fd5b9190820180921161264257565b15612f2657565b60405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b6044820152606490fd5b15612f6757565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b15612fa557565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606490fd5b15612fe457565b60405162461bcd60e51b815260206004820152601e60248201527f47617320666565206d7573742062652067726561746572207468616e203000006044820152606490fd5b908152606081019392610517929091604091610a14906020830152565b91906131247f26f4c0c9dd9536441681c861e4c72684bbec9e4e6d7e4492c2a90ff07cf35c6f926130916130786111e2565b6130833380926145f8565b908115613151575b50612e7d565b6130a361309e601261149a565b612ecd565b6130ce6130b7846130b2615479565b612f12565b6130c7611dce61052d6013611487565b1115612f1f565b6130ef6130de61056660006125fa565b6001600160a01b0387161415612f60565b6131036130fc60006111d5565b8411612f9e565b61311761311060006111d5565b8211612fdd565b6126cc633b9aca006111d5565b92611c9561313e61313361544f565b92611c6f85826157d6565b9461314860405190565b93849384613029565b613163915061315e610e4f565b6145f8565b3861308b565b906105179291612e4f565b61051790613180615459565b613308565b1561318c57565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881a5cc81b9bdd081cdd185ad959606a1b6044820152606490fd5b61052d60c0610a83565b9061051761325060056131e26131c7565b946131ef611ee582611487565b61321661320660018301546001600160a01b031690565b6001600160a01b03166020880152565b613225611f0e60028301611487565b613234611f2460038301611487565b61324a61324360048301611487565b6080880152565b0161149a565b151560a0840152565b61052d906131d1565b1561326957565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865207374616b65722063616e20756e7374616b6520746865206044820152643a37b5b2b760d91b6064820152608490fd5b156132c357565b60405162461bcd60e51b815260206004820152601b60248201527f556e7374616b652074696d6520686173206e6f742070617373656400000000006044820152606490fd5b61331461237f82615319565b6133c66133c0612d0c6020601a613338613333600561324a8985611284565b613185565b6133a9600060056133a3896133556133508288611284565b613259565b9561335e610e4f565b61336d611cc3335b80936145f8565b61341a575b50606087018051613385611dce886111d5565b036133fe575b506116c96133998383611284565b600442910161202f565b01612ad7565b6133b286614c66565b01516001600160a01b031690565b91611c14565b907f8400aad51ec7b4a6d1c58218ea03e51798a0485003beae9e5b76662e91d7058f6133f160405190565b4281528060208101612dfa565b61340c61052d613414925190565b4210156132bc565b3861338b565b61344a906134446120ab6134378c8c01516001600160a01b031690565b926001600160a01b031690565b14613262565b38613372565b61051790613174565b906105179161346a611b8382612437565b9061347491615942565b50565b9061051791613459565b9061348b33610566565b6001600160a01b038216036134a357613474916159b3565b63334bd91960e11b600090815260045b036000fd5b610517906134c7611b83610e4f565b613535565b156134d357565b60405162461bcd60e51b815260206004820152602160248201527f426c6f636b2074696d65206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b9081526040810192916105179160200152565b7fbe1531878ca10f11c57318847b09788b90ed4e6dd52b36836be286097a74ff4f9061356b61356460006111d5565b82116134cc565b613575600f611487565b61358082600f61202f565b61359561358c60405190565b92839283613522565b0390a1565b610517906134b8565b6135ae611b83610e4f565b610517610517615a7c565b6105176135a3565b906135ce610acf83610a97565b918252565b61052d60006135c1565b61052d6135d3565b9091610517926135f36135dd565b926148c6565b1561360057565b60405162461bcd60e51b815280611bf3600482016020808252818101527f43616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564604082015260600190565b7f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2611c9561368c3361368361367e8287615a84565b6135f9565b611c6f85615ade565b926107c560405190565b610517906136a5611b83610e4f565b6135957ff62079051152e03bd87f33518b9ce4a5564414395b75afeef8a467e7ca4ee91b9161054f816012612ad7565b61051790613696565b610517906136ed611b83610e4f565b6135957f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad9161067d816010612ac4565b610517906136de565b906105179291613737611b83610e4f565b611c7482611c6f857fae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c6295611c95956137826137736103e8611b8d565b6001600160601b038516611c5e565b61378e61237f82615319565b615b09565b906105179291613726565b61052d9060a01c61119d565b61052d905461379e565b61052d60096137aa565b61208b6137d661052d926137d0600090565b50615493565b612008565b610517906137ea611b83610e4f565b61383b565b156137f657565b60405162461bcd60e51b815260206004820152601860248201527f52657761726420697320616c72656164792061637469766500000000000000006044820152606490fd5b61386c9061385a613855611cc3600461324a85601b611284565b6137ef565b6123cb600160046133a384601b611284565b7f077df36c64e7c698035a47d2e97da79ab1c3bcfdf6f82430581659cc4d2a969a61389660405190565b8080611c95565b610517906137db565b610517906138b5611b83610e4f565b6138ca90611c6f816138c5610e4f565b613477565b7f31c682dcd71348807b079d0cb25bf0c85c9e75f84a8b7b31111ba081e52817f361389660405190565b610517906138a6565b906105179161390d611b83610e4f565b91909161391a60006111d5565b83811015611df45780613937611dc0611dbb61395c948887611d2d565b61394b6123906109d6611dbb848988611d2d565b611de9610951611dbb838887611d2d565b61391a565b90610517916138fd565b61052d6001600160401b036111d5565b61398861056660006125fa565b6001600160a01b038216146139b1576122086139a5916005612015565b6139ad61396b565b1690565b6323d3ad8160e21b61539d565b61220861052d916139cd600090565b506015612015565b6139dd615bcf565b6105176105176139ed60006125fa565b615c10565b6105176139d5565b6001600160401b038111610a7e5760208091020190565b906135ce610acf836139fa565b61052d610140610a83565b613a31613a1e565b906000825260208080808080808080808b016000815201600081520160008152016000815201600081520160008152016000611eaf565b61052d613a29565b60005b828110613a7f57505050565b602090613a8a613a68565b8184015201613a73565b90610517613aaa613aa484613a11565b936139fa565b601f190160208401613a70565b90613ac0825190565b811015611d3d576020809102010190565b90610517613b916008613ae2613a1e565b94613aef611ee582611487565b613afe611ef860018301611487565b613b25613b1560028301546001600160a01b031690565b6001600160a01b03166040880152565b613b34611f2460038301611487565b613b4361324360048301611487565b613b5b613b526005830161149a565b151560a0880152565b613b73613b6a600583016115c1565b151560c0880152565b613b82611f7e60068301611487565b611fb3611f9460078301611699565b610120840152565b61052d90613ad1565b90613bad60006111d5565b805b613bbc61052d601d611487565b811015613bfe57613bd7600561324a836116c988601c611284565b613be9575b600101613baf565b613baf565b90613bf6613be49161293a565b919050613bdc565b50613c0890613a94565b613c1260006111d5565b92835b613c2261052d601d611487565b811015613c9457613c5290601c8382613c44600561324a836116c98688611284565b613c57575b50505060010190565b613c15565b6116c9613c6792613c8b94611284565b96613c7a613c748261293a565b98613b99565b613c848288613ab7565b5285613ab7565b50388382613c49565b5090925050565b9061051794939291613cab615459565b9061051794939291613cbe611b83610e4f565b613dfc565b15613cca57565b60405162461bcd60e51b815260206004820152601d60248201527f46726f6d2061646472657373206973206e6f7420746865206f776e65720000006044820152606490fd5b15613d1657565b60405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f2061646472657373006044820152606490fd5b15613d6257565b60405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b6044820152606490fd5b6020809392613db66135ce61064d9461190160f01b815260020190565b01918252565b15613dc357565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b613fc1613fc791613f8b613f86613e977fe37e962447c072d61e0164c30f30d2a3f4752dea7a7224ffd42d5fc2586b02d59799989698613e3e61237f8c615319565b613e62613e4a8c6137be565b613e5c6001600160a01b0388166120ab565b14613cc3565b613e83613e7261056660006125fa565b6001600160a01b038c161415613d0f565b613103613e92611cc38d61253e565b613d5b565b95613f3a613f748b613f468c88613f3a613eb5612208836015612015565b7f5845c8b965119358c29037dc6226e8f2195e0d03c7d2055c52fb161f5792874190613ee030611c14565b60405197889660208801964695889081526001600160a01b03909116602082015260e081019695949093909290916001600160a01b0316604085015260608401526001600160a01b0316608083015260a082015260c00152565b90810382520382610a5d565b613f58613f51825190565b9160200190565b20613f63600e611487565b604051938492602084019283613d99565b613f7f613f51825190565b2084615d29565b613dbc565b613faa613f99826015612015565b612133613fa582611487565b61293a565b613fb6600088336153a6565b611c6f878783612057565b93611c14565b93612dfa61358c60405190565b9061051794939291613c9b565b613fec611b83610e4f565b610517610517615e3a565b610517613fe1565b90612e629161400c61577a565b9061051791614019615459565b61435d565b1561402557565b60405162461bcd60e51b815260206004820152601560248201527414995dd85c9908191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b1561406957565b60405162461bcd60e51b8152602060048201526014602482015273526577617264206973206e6f742061637469766560601b6044820152606490fd5b156140ac57565b60405162461bcd60e51b815260206004820152601860248201527f526577617264206973206e6f74206163746976652079657400000000000000006044820152606490fd5b156140f857565b60405162461bcd60e51b815260206004820152601c60248201527f526577617264206973206e6f742061637469766520616e796d6f7265000000006044820152606490fd5b9190820391821161264257565b1561415157565b60405162461bcd60e51b815260206004820152601f60248201527f546f6b656e206973206e6f74207374616b6564206c6f6e6720656e6f756768006044820152606490fd5b1561419d57565b60405162461bcd60e51b815260206004820152601960248201527f52657761726420697320616c726561647920636c61696d6564000000000000006044820152606490fd5b156141e957565b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920746865207374616b65722063616e20636c61696d207468652072656044820152631dd85c9960e21b6064820152608490fd5b906001600160a01b0390612025565b9061425961052d61204692611c14565b825461423a565b9061ff009060081b612025565b9061427d61052d61204692151590565b8254614260565b6008612be66101206105179461429e612b08600083015190565b6142b56142ac602083015190565b6001870161202f565b6142d56142cc60408301516001600160a01b031690565b60028701614249565b6142ec6142e3606083015190565b6003870161202f565b6143036142fa608083015190565b6004870161202f565b61432d6005860161432061431a60a0850151151590565b82612ad7565b60c083015115159061426d565b61433b612b9160e083015190565b612be161434a61010083015190565b60078701612ac4565b9061051791614284565b9061436781615319565b6143709061229e565b61437b82601b611284565b61438490611487565b90600091614391836111d5565b141561439c9061401e565b6143a783601b611284565b6143b090611fc1565b916143bc82601a611284565b6143c590613259565b608084015115156143d590614062565b60a08401514210156143e6906140a5565b60c08401514211156143f7906140f1565b60e084015190604081019161440a835190565b614414904261413d565b101561441f9061414a565b8561442b85601c611284565b9061443591611284565b6005016144419061149a565b1561444b90614196565b60200151614508926144dd916144d6919061447b906001600160a01b031633908114908115614575575b506141e2565b6144b761448f61448a886137be565b955190565b6144b061449a613a1e565b966144a58c868a0152565b613b158a60208a0152565b6060860152565b6144c2426080860152565b600160a085015280151560c08501526111d5565b60e0830152565b6144e8612db16135dd565b6144f442610120830152565b614503856116c985601c611284565b614353565b7f7ef1954a47bcf45f29bbc3b53d86df999b6f295782796ac65ea2df034711693561457061455b61455561454f6145496040614543886137be565b98015190565b976111d5565b946111d5565b94611c14565b9461456560405190565b918291429083613522565b0390a4565b614582915061315e610e4f565b38614475565b9061051791613fff565b9061051792916145a0615459565b9291926145ad60006111d5565b828110156145e657806145ca611dc0611dbb6145e1948787611d2d565b611de9866145dc611dbb848888611d2d565b61515b565b6145ad565b5050509050565b906105179291614592565b61052d91600061460d61461393612448600090565b01612015565b61149a565b61051790614627611b83610e4f565b6135957f905d981207a7d0b6c62cc46ab0be2a076d0298e4a86d0ab79882dbd01ac373789161067d816011612ac4565b61051790614618565b61052d6003611ca4565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31612dfa6146b2613fc133611c6f876146ad886146a8856007612015565b612015565b612ad7565b9361055360405190565b61052d916116c96146d7926146cf613a68565b50601c611284565b613b99565b9061051792916146ed611b83610e4f565b614753565b156146f957565b60405162461bcd60e51b815260206004820152601560248201527414995dd85c99081a5cc81b9bdd0818db185a5b5959605a1b6044820152606490fd5b92916020611b126105179360408701908782036000890152610619565b9061476061237f82615319565b61477c614777600561324a856116c986601c611284565b6146f2565b7f7de9b19a9a16075e228395248ad5311ffab7748c0525bd16ab44912a968161c36145706147ed61455561454f6147e760406147c06146d78a6116c98b601c611284565b600160c08201526147d24260e0830152565b8a61010082015201516001600160a01b031690565b966111d5565b946147f760405190565b918291429083614736565b9061051792916146dc565b906105179161481d611b83610e4f565b91909161482a60006111d5565b83811015611df45780614847611dc0611dbb61486c948887611d2d565b61485b6123906109d6611dbb848988611d2d565b611de9611820611dbb838887611d2d565b61482a565b906105179161480d565b6148836131c7565b90600082526020808080808087016000815201600081520160008152016000611eb5565b61052d61487b565b61335061052d916148be6148a7565b50601a611284565b919290926148d5818585612057565b833b6148e4611dce60006111d5565b036148f0575b50505050565b6148fd93611cc393615ede565b61490a57388080806148ea565b6368d2bf6b60e11b61539d565b91613f4661493d92613f3a9461492b600090565b50613f3a613eb5612208836015612015565b614948613f51825190565b2090565b6105179061495b611b83610e4f565b6149c0565b1561496757565b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920746865207374616b65722063616e20666f72636520756e7374616b60448201526a32903a3432903a37b5b2b760a91b6064820152608490fd5b6149cc61237f82615319565b6133c66133c0612d0c6020601a6149eb613333600561324a8985611284565b6133a9600060056133a389614a036133508288611284565b95614a0c610e4f565b614a18611cc333613366565b614a2a57506116c96133998383611284565b61341490614a476120ab6134378c8c01516001600160a01b031690565b14614960565b6105179061494c565b9061051791614a66611b83610e4f565b614b0d565b15614a7257565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b65640000000000000000006044820152606490fd5b15614abe57565b60405162461bcd60e51b815260206004820152602160248201527f556e6c6f636b2074696d65206d75737420626520696e207468652066757475726044820152606560f81b6064820152608490fd5b611c95614b9b7ff25fd82f8bf40df41b90b95a0159c55596f50b182d7b7dff1d3e04a5a16ac7c492614b4161237f82615319565b614b55614b50611cc38361253e565b614a6b565b614b5f60006111d5565b8503614baf575b614b746123c4826017611284565b614b8385612190836018611284565b6123cb614b9060006111d5565b612190836019611284565b92614ba560405190565b9182914283613522565b614bba428611614ab7565b614b66565b9061051791614a56565b614bd79061052d9392612bf7565b90612bf7565b614be961237f82615319565b614bf1615fab565b8051614c00611dce60006111d5565b1115614c315761052d613f3a91614c1961052d94615fdd565b90614c2360405190565b938492602084019283614bc9565b505061052d6135dd565b61051790614c4a611b83610e4f565b6123d090614c5a61237f82615319565b6123b66123908261253e565b61051790614c3b565b9061051791614c80611b8382612437565b90613474916159b3565b9061051791614c6f565b60005b828110614ca357505050565b602090614cae6148a7565b8184015201614c97565b90610517614cc8613aa484613a11565b601f190160208401614c94565b91908092614ce284614cb8565b92614ced60006111d5565b855b811015614d4257614d3b81614d0e611dc0611dbb614cef958989611d2d565b614d1f6113bc611dbb838989611d2d565b614d298289613ab7565b52614d348188613ab7565b5060010190565b9050614ced565b509350505090565b61052d916146a861461392614d5d600090565b506007612015565b61051790614d74611b83610e4f565b614da290614d90614d8b600461324a84601b611284565b614062565b6123cb600060046133a384601b611284565b7f385eed96ca33f0da03d900751711ff4392adf11be79222f4aa99f92e71a1da4f61389660405190565b61051790614d65565b61052d600e611487565b61051790614dee611b83610e4f565b614e0390611c6f81614dfe610e4f565b614c8a565b7f4a84a984790b90cdc99acb8cf998c3f36e0efefd6a3f5b47dcaf480f6a1862c261389660405190565b61051790614ddf565b61051790614e42615bcf565b6000614e4d816125fa565b6001600160a01b0381166001600160a01b03841614614e7157505061051790615c10565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b61051790614e36565b9061051791614ea4615459565b61501f565b15614eb057565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479207374616b65640000000000000000006044820152606490fd5b15614efc57565b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920746865207374616b65722063616e207374616b652074686520746f60448201526235b2b760e91b6064820152608490fd5b15614f5457565b60405162461bcd60e51b815260206004820152602260248201527f556e7374616b652074696d65206d75737420626520696e207468652066757475604482015261726560f01b6064820152608490fd5b600561500e60a061051794614fbd612b08600083015190565b614fdd614fd460208301516001600160a01b031690565b60018701614249565b614feb612b33604083015190565b614ff96142e3606083015190565b6150076142fa608083015190565b0151151590565b9101612ad7565b9061051791614fa4565b61502b61237f82615319565b615046615041611cc3600561324a85601a611284565b614ea9565b615055613e92611cc38361253e565b61505d610e4f565b615069611cc333613366565b61513c575b507f30441850b15fd31a9413cd27711113d1430f46dd517499b60a5d8365fa375bf0612dfa615122613fc16150a2856137be565b946150ad60006111d5565b870361512c575b6123cb6150bf6131c7565b6150c7838252565b6001600160a01b03881660208201526150e1426040830152565b6150ec896060830152565b61511c6150f960006111d5565b91615105836080830152565b600160a082015261511785601a611284565b615015565b82614bbf565b93614ba560405190565b615137428811614f4d565b6150b4565b6151559061514f6120ab613437856137be565b14614ef5565b3861506e565b9061051791614e97565b63152a902d60e11b6001600160e01b0319821614908115615184575090565b61052d915061606a565b610517903390616093565b61053090612603565b916020610517929493610a1460408201966000830190615199565b61052d6040610a83565b906001600160a01b03199060a01b612025565b611b9a61052d61052d926001600160601b031690565b9061520061052d612046926151da565b82546151c7565b6105179161523a9060209061522c61522682516001600160a01b031690565b85614249565b01516001600160601b031690565b906151f0565b9061051791615207565b906152566126dd615765565b8061526083612603565b116152e55750600091615272836125fa565b6001600160a01b0381166001600160a01b038316146152c8575061051792916152b16152c1926152a06151bd565b948501906001600160a01b03169052565b6001600160601b03166020830152565b600c615240565b635b6cc80560e11b84526001600160a01b03166004840152602483fd5b636f483d0960e01b6000908152916134b3919060046151a2565b8015612642576000190190565b61052d600160e01b6111d5565b90600091826153266111e2565b821015615331575050565b61533e61052d6000611487565b8210615348575050565b509091505b61535b612208826004611284565b908161536a611dce60006111d5565b0361537e5761537991506152ff565b61534d565b5061539961538a61530c565b61539460006111d5565b921690565b1490565b60005260046000fd5b916153b0826137be565b9080615434575b615415575b6153dd613fc16153e392611c6f8660006153d7886006611284565b01614249565b916111d5565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561540e60405190565b8080614570565b615422611cc33383614d4a565b156153bc576367d9dca160e11b61539d565b50336154486001600160a01b0383166120ab565b14156153b7565b61052d6000611487565b6154616137b4565b61546757565b63d93c066560e01b6000908152600490fd5b61052d6154866000611487565b61548e6111e2565b900390565b61549b6111e2565b8110156154b0575b636f96cda160e11b61539d565b6004906154c1612208826004611284565b916000916154ce836111d5565b84146154f25750506154ea6154e4612d0c61530c565b91831690565b036154a35790565b9091925061550261052d84611487565b8110156154a357909190600019015b9161551f6122088483611284565b92615529836111d5565b841461555157505061553f6154e4612d0c61530c565b1461052d57636f96cda160e11b61539d565b90925060001901615511565b61052d6155749161556c600090565b506006611284565b90815490565b90610517939291615589615459565b6155ec565b1561559557565b60405162461bcd60e51b815260206004820152602960248201527f5472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b909291926155fa60006125fa565b9161560d6001600160a01b0384166120ab565b1415918261569f575b5050615620575050565b909161562c60006111d5565b825b8110156156995761566a8161564661562e9387612f12565b61564e610e4f565b9061565d611cc33380946145f8565b615671575b505060010190565b905061562c565b6156929181615688613e92611cc361568d9561253e565b615a84565b61558e565b3880615662565b50915050565b9091506156b4906001600160a01b03166120ab565b14153880615616565b9061051793929161557a565b61052d60e86111d5565b61052d906156e4611dce61052d9490565b901c90565b6156f661052d61052d9290565b62ffffff1690565b61052d61052d61052d9262ffffff1690565b61052d90615721611dce61052d9490565b901b90565b61575b6157609161052d949361573a600090565b506157556157506157496156c9565b80976156d3565b6156e9565b916160c2565b6156fe565b615710565b61052d612710611b8d565b61052d60026111d5565b615784600a611487565b61578c615770565b90811461579e5761051790600a61202f565b633ee5aeb560e01b6000908152600490fd5b61052d60016111d5565b6105176157c56157b0565b600a61202f565b61052d60406111d5565b6157e06000611487565b916000916157ed836111d5565b821461593557806158799261584f615844615807876125fa565b615813848a87846156bd565b61582f6001851460e11b916158278a6111d5565b978891615726565b4260a01b9117176001600160a01b0385161790565b612190886004611284565b61589761206f60019361208b61587f6158666157cc565b61587060016111d5565b998a9182615710565b17860290565b61213361588d846005612015565b9161064d83611487565b61589f611ff8565b16928314615929578501949285036158b8600019611dce565b1161591c576001815b6158d4575b50505050906105179161202f565b1561590a575b83908383867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a490816158c1565b91600101918483036158da57806158c6565b6340b23f1d60e11b61539d565b622e076360e81b61539d565b63b562e8dd60e01b61539d565b61594f611cc383836145f8565b156159ac5761596a60016146ad84600061460d86600b612431565b6159786133c0613fc1339390565b917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d6159a360405190565b600090a4600190565b5050600090565b6159bd82826145f8565b156159ac576159d760006146ad848261460d86600b612431565b6159e56133c0613fc1339390565b917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b6159a360405190565b615a186160cd565b610517615a46565b9060ff60a01b9060a01b612025565b90615a3f61052d61204692151590565b8254615a20565b615a5260006009615a2f565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa613595336106cb565b610517615a10565b90615a8e826137be565b916001600160a01b0383166001600160a01b03831614928315615aca575b508215615ab857505090565b6153999192506134376120ab91611cb7565b615ad79193508290614d4a565b9138615aac565b6000610517916160fa565b908152606081019392610517929091604091610a14906020830190615199565b9091615b166126dd615765565b80615b2083612603565b11615bb55750600092615b32846125fa565b6001600160a01b0381166001600160a01b03831614615b91575091615b85615b8c92615b756105179695615b646151bd565b968701906001600160a01b03169052565b6001600160601b03166020850152565b600d611284565b615240565b634b4f842960e11b8552600485018490526001600160a01b03166024850152604484fd5b63dfd1fc1b60e01b6000908152926134b392906004615ae9565b6009546001600160a01b03163390615be6826120ab565b03615bee5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b615c336133c0615c286009546001600160a01b031690565b611c6f846009614249565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0615c5e60405190565b8080612dfa565b9061064d6135ce6020937f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0190565b61052d906111d5565b15615ca857565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207369676e6174757265202773272076616c756500000000006044820152606490fd5b610a1461051794615d16606094989795615d0c608086019a6000870152565b60ff166020850152565b6040830152565b6040513d6000823e3d90fd5b91615db9600091615d6c602094615d3e600090565b50615d5a615d4b60405190565b8092613f3a8983019182615c65565b615d65613f51825190565b2091616379565b9391615dad615d7a83615c98565b615da6611dce7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06111d5565b1115615ca1565b60405194859485615ced565b838052039060015afa15615df457600051615399906120ab9092610566615de361056660006125fa565b6001600160a01b0386161415613dbc565b615d1d565b615e01615459565b610517615e1060016009615a2f565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613595336106cb565b610517615df9565b90505190610517826104f7565b906020828203126104f25761052d91615e42565b6001600160a01b0391821681529116602082015261052d926080820192909190615e8c90615d16565b6060818403910152610619565b615eb2615eac61052d9263ffffffff1690565b60e01b90565b6001600160e01b03191690565b3d15615ed957615ece3d6135c1565b903d6000602084013e565b606090565b91615ef6611c6f602093615ef0600090565b50611c14565b63150b7a0293600033615f27615f0b60405190565b98899687958694615f1c8c60e01b90565b865260048601615e63565b03925af160009281615f7a575b50615f5d57615f41615ebf565b8051615f50611dce60006111d5565b1461490a57805190602001fd5b615f6c615eb261539992615e99565b916001600160e01b03191690565b615f9d91935060203d602011615fa4575b615f958183610a5d565b810190615e4f565b9138615f34565b503d615f8b565b61052d6010611ca4565b369037565b90610517615fd0615fca846135c1565b93610a97565b601f190160208401615fb5565b615fe681616419565b90615ff760019261064d60016111d5565b918061600284615fba565b936020018401905b616015575b50505090565b8115616065576160499060001901926f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a84536126e2600a6111d5565b9081616058611dce60006111d5565b146160655790918161600a565b61600f565b637965db0b60e01b6001600160e01b0319821614908115616089575090565b61052d91506165bb565b906160a1611cc382846145f8565b6160a9575050565b63e2517d3f60e01b6000908152916134b39160046109f7565b50505061052d600090565b6160d8611cc36137b4565b6160de57565b638dfc202b60e01b6000908152600490fd5b61052d60806111d5565b61610381615493565b9061611061208b83612008565b6161198261555d565b939094616286575b6153dd613fc18493610517976161f494616151989760008093616143826125fa565b9a61615a8c60019e8f6111d5565b9586918a6156bd565b61627e575b505061618b61617d826161796161736160f0565b82615710565b0390565b61213361588d876005612015565b61619361530c565b906161c261619f61204a565b8093176161ad858d89615726565b4260a01b9117176001600160a01b0387161790565b916161d36004936121908c86611284565b6161e56161df866111d5565b91851690565b1461622f575b50505050611c14565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61621f60405190565b600090a4612133611de982611487565b88019261623f6122088584611284565b61624b611dce836111d5565b036161eb5761052d61625c91611487565b8303616269575b806161eb565b6162769261219091611284565b388080616263565b55823861615f565b336001600160a01b038316811485821417156162a3575b50616121565b611cc36162b4918493969594614d4a565b612271579091923861629d565b156162c857565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606490fd5b61119d61052d61052d9290565b60ff9081169116019060ff821161264257565b1561633457565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207369676e6174757265202776272076616c756500000000006044820152606490fd5b90616398616385835190565b616392611dce60416111d5565b146162c1565b6020820151906060604084015193015160001a916163b6601b61630d565b60ff8416106163fe575b6163ca601b61630d565b60ff84161480156163e4575b6163df9061632d565b929190565b506163df6163f2601c61630d565b60ff85161490506163d6565b916164139061640d601b61630d565b9061631a565b916163c0565b61642360006111d5565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000616449816111d5565b821015616599575b506d04ee2d6d415b85acef810000000061646a816111d5565b821015616577575b50662386f26fc10000616484816111d5565b821015616555575b506305f5e10061649b816111d5565b821015616533575b506127106164b0816111d5565b821015616511575b506164c360646111d5565b8110156164ef575b6164d8611dce600a6111d5565b10156164e15790565b61052d9061064d60016111d5565b61650061650b916126e260646111d5565b9161064d60026111d5565b906164cb565b61652c916126e2616521926111d5565b9161064d60046111d5565b90386164b8565b61654e916126e2616543926111d5565b9161064d60086111d5565b90386164a3565b616570916126e2616565926111d5565b9161064d60106111d5565b903861648c565b616592916126e2616587926111d5565b9161064d60206111d5565b9038616472565b6165b4916126e26165a9926111d5565b9161064d60406111d5565b9038616451565b6153996301ffc9a760e01b615f6c56fea2646970667358221220302c210098a47bbf27b9194ceab9e7606ac7da4d41d66802ad6e129d7b1882f264736f6c634300081c0033a264697066735822122044a32b951fece9c549f138f3de8ab982d8456d9beff404e9c8cd94de82acfe9d64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46E63586 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xA6BB6CAC EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD6A4448B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69 JUMPI PUSH4 0xFDBDA0EC SUB PUSH2 0x87 JUMPI PUSH2 0x429 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x87 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xCA PUSH2 0xC3 PUSH2 0xB9 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xDB JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x101 PUSH2 0xFA PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xA3 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xAA JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x135 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x15D PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x17F PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x87 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x199 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP2 PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x15D PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x22E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x1FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x273 PUSH2 0x26E DUP3 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x252 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 PUSH1 0x20 PUSH2 0xA3 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x87 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x2E3 SWAP2 DUP6 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x304 SWAP2 DUP4 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH2 0x312 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x2AE JUMP JUMPDEST SWAP3 PUSH2 0x320 DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x2AE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x341 SWAP2 DUP4 ADD PUSH2 0x28D JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP3 ADD PUSH2 0x28D JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x141 PUSH2 0x17F PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0xBCF JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x15D PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP2 PUSH2 0x2AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3DE PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH2 0xA3 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP2 SLOAD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x423 PUSH2 0xA3 SWAP2 PUSH1 0x1 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x400 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x141 PUSH2 0x17F PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA3 SWAP1 SLOAD PUSH2 0x444 JUMP JUMPDEST SWAP1 PUSH2 0x472 PUSH2 0x466 PUSH2 0xB9 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x483 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B0 PUSH2 0x4A9 PUSH1 0x1 SWAP3 PUSH2 0x498 DUP8 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x476 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP2 PUSH2 0x457 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x4DC SWAP3 PUSH2 0x4D3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x4B8 JUMP JUMPDEST SUB DUP4 PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0xA3 PUSH1 0x1 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x97 PUSH2 0xA3 PUSH2 0xA3 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x529 PUSH1 0x0 PUSH2 0x513 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0xA3 PUSH1 0x0 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x54C PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH2 0xA3 SWAP1 PUSH2 0x565 JUMP JUMPDEST SWAP1 PUSH2 0x581 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xA3 SWAP1 SLOAD PUSH2 0x58F JUMP JUMPDEST ISZERO PUSH2 0x5A7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1393D517D193D55391 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA3 PUSH2 0xA3 PUSH2 0xA3 SWAP3 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x608 JUMPI JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x62B JUMP JUMPDEST SWAP3 SHL SWAP1 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x646 PUSH2 0xA3 PUSH2 0x64E SWAP4 PUSH2 0x56E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x60D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0x66C PUSH2 0xA3 PUSH2 0x64E SWAP3 PUSH2 0x5D8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x652 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x6B5 PUSH2 0x6AF DUP4 DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x689 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x62B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6E2 PUSH2 0xA3 PUSH2 0x64E SWAP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x709 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x729 PUSH2 0x26E DUP3 PUSH2 0x235 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 MLOAD PUSH2 0xA3 SWAP3 PUSH1 0x20 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0xA3 SWAP3 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x7A7 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x7A1 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x7C0 PUSH2 0xA6 SWAP2 PUSH1 0x20 SWAP5 SWAP4 PUSH2 0x78F JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x7B0 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x62B SWAP2 MUL SWAP2 PUSH2 0x626 PUSH1 0xFF DUP5 SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x80E PUSH2 0xA3 PUSH2 0x64E SWAP4 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x8AF PUSH1 0x0 PUSH2 0x8AA DUP4 PUSH1 0x3 PUSH2 0x8A5 PUSH2 0x8A0 PUSH2 0x845 PUSH2 0x840 DUP6 DUP6 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x879 PUSH2 0x858 PUSH2 0x423 DUP4 DUP6 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x873 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x893 PUSH2 0x884 DUP4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x88D DUP5 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 DUP2 DUP2 SUB PUSH2 0x95F JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x8BB DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x8CC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x95A JUMPI PUSH1 0x0 PUSH2 0x903 PUSH2 0x908 SWAP5 PUSH2 0x8BB SWAP4 DUP4 SWAP2 PUSH2 0x938 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST PUSH32 0x15DB1813F994E3207E1B7CD688154DCA03609984E865399CD2163D9EB3B0A63C PUSH2 0x932 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x954 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x94C DUP2 DUP4 PUSH2 0x1FA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x75D JUMP JUMPDEST CODESIZE PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x98C PUSH2 0x972 PUSH2 0x423 PUSH2 0xA3 SWAP5 DUP7 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x980 DUP6 DUP9 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH2 0x635 JUMP JUMPDEST DUP8 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x540 JUMP JUMPDEST SWAP1 PUSH2 0xA3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x9AC PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST ISZERO PUSH2 0x9B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2720A6A2AFAA20A5A2A7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA0B PUSH2 0xA14 PUSH1 0x20 SWAP4 PUSH2 0xA6 SWAP4 PUSH2 0x9FF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 PUSH2 0xA74 PUSH2 0xA88 SWAP6 PUSH2 0xA6D PUSH2 0xA5B PUSH2 0xA3 SWAP12 SWAP10 PUSH2 0xA4D DUP13 PUSH2 0xA7B SWAP9 PUSH1 0xE0 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9EA JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x21C JUMPI DUP3 PUSH2 0x980 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0x3C4 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0xAD7 PUSH2 0xA3 PUSH2 0x64E SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xABE JUMP JUMPDEST SWAP6 SWAP2 SWAP3 SWAP4 SWAP5 SWAP1 SWAP6 POP PUSH2 0xB0A PUSH2 0xB05 PUSH2 0xB01 PUSH2 0xAFA DUP10 PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x704E DUP7 ADD SWAP5 DUP7 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x21C JUMPI DUP7 SWAP6 PUSH2 0xB3D SWAP6 PUSH2 0x704E PUSH2 0xCF6 DUP10 CODECOPY DUP10 CALLER SWAP3 PUSH2 0xA1E JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x95A JUMPI PUSH2 0xB8A PUSH2 0xB74 PUSH2 0xB79 PUSH2 0xB5D PUSH2 0xB95 SWAP5 PUSH2 0x56E JUMP JUMPDEST SWAP5 PUSH1 0x1 SWAP3 DUP4 SWAP2 PUSH2 0xB6D DUP9 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x88D PUSH2 0xB84 DUP3 SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x98C DUP4 PUSH1 0x3 PUSH2 0x577 JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0x56E JUMP JUMPDEST PUSH32 0x75432E2E509EFCAF947EFCC7A5A6B6B3562425B29E9725C7A4A5C652291AC35D PUSH2 0xBC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0xA3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x99A JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0xBEB PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF6 DUP2 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xC1A JUMPI POP POP PUSH2 0x162 SWAP1 PUSH2 0xCA3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0xC48 PUSH2 0x536 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xC53 DUP3 PUSH2 0x866 JUMP JUMPDEST SUB PUSH2 0xC5B JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 PUSH2 0xC9C PUSH2 0xA3 PUSH2 0x64E SWAP3 PUSH2 0x56E JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xCC4 PUSH2 0xCBE PUSH2 0xCB3 PUSH1 0x0 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x8BB DUP5 PUSH1 0x0 PUSH2 0xC8C JUMP JUMPDEST SWAP2 PUSH2 0x56E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x31 JUMPI PUSH2 0x20 PUSH2 0x14 PUSH2 0x206 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6601 PUSH2 0xA4D DUP3 CODECOPY PUSH2 0x6601 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x36 JUMP JUMPDEST SWAP1 PUSH2 0x86 PUSH2 0x7F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xDC PUSH2 0xD7 DUP3 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x31 JUMPI PUSH2 0x86 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xA4 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x31 JUMPI DUP2 MLOAD PUSH2 0x110 SWAP3 PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH2 0x12A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x31 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP2 PUSH2 0x178 SWAP2 DUP5 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP3 PUSH2 0x19A SWAP2 DUP6 ADD PUSH2 0xF6 JUMP JUMPDEST SWAP3 PUSH2 0x1A8 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x131 JUMP JUMPDEST SWAP3 PUSH2 0x1B6 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x144 JUMP JUMPDEST SWAP3 PUSH2 0x1C4 DUP3 PUSH1 0x80 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI DUP4 PUSH2 0x1E6 SWAP2 DUP4 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x31 JUMPI PUSH2 0x110 SWAP3 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x704E DUP1 CODESIZE SUB DUP1 PUSH2 0x219 DUP2 PUSH2 0x72 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x151 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x23D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x22D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x28B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2CA PUSH2 0x110 PUSH2 0x261 SWAP4 PUSH2 0x23D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2B9 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2E9 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x2F7 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x2D2 JUMP JUMPDEST ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x30C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x31E PUSH2 0x86 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x340 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2DE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST SWAP1 PUSH2 0x353 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6D JUMPI PUSH2 0x376 DUP3 PUSH2 0x370 DUP6 SLOAD PUSH2 0x27B JUMP JUMPDEST DUP6 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3B1 JUMPI PUSH2 0x261 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3A6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C6 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x404 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3EB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3E2 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3CA JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x34A JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x43F PUSH2 0x110 PUSH2 0x261 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x426 JUMP JUMPDEST PUSH2 0x110 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x45D PUSH2 0xD7 DUP4 PUSH2 0x88 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x46C PUSH1 0x1 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x86 SWAP5 PUSH2 0x4DD PUSH2 0x4E4 SWAP3 PUSH2 0x4D6 PUSH1 0x80 SWAP7 PUSH2 0x4CF PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x25A PUSH2 0x110 PUSH2 0x261 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x50E PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP5 SWAP6 PUSH2 0x555 PUSH2 0x86 SWAP8 PUSH2 0x54E PUSH2 0x64D SWAP8 PUSH2 0x547 PUSH2 0x5BC SWAP9 PUSH2 0x540 PUSH2 0x55C SWAP9 DUP11 DUP15 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x13 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x14 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x10 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x11 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x568 PUSH1 0x0 PUSH1 0x12 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x57C PUSH2 0x575 PUSH1 0x0 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x16 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x58D DUP5 PUSH2 0x588 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST POP PUSH2 0x5B8 DUP5 PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F PUSH2 0x77A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x63A PUSH2 0x5DA PUSH2 0x479 JUMP JUMPDEST PUSH2 0x5E5 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x5F0 ADDRESS PUSH2 0x49E JUMP JUMPDEST SWAP3 PUSH2 0x62E PUSH2 0x5FD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 CHAINID SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP7 PUSH2 0x4AB JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x4C JUMP JUMPDEST PUSH2 0x645 PUSH2 0x5C7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 PUSH2 0x501 JUMP JUMPDEST SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x86 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x110 PUSH1 0x1 PUSH2 0x23D JUMP JUMPDEST SWAP1 PUSH2 0x685 SWAP3 SWAP2 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x690 PUSH2 0x670 JUMP JUMPDEST PUSH1 0xA PUSH2 0x24A JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x110 PUSH2 0x110 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST SWAP2 PUSH2 0x6C2 SWAP2 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD DUP2 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x6F1 JUMPI POP POP PUSH2 0x86 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x728 SWAP2 PUSH2 0x721 SWAP1 PUSH1 0x2 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x3 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x730 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH1 0x0 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x74C PUSH2 0x748 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x753 JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA14 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x762 SWAP1 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x78B PUSH2 0x787 DUP4 DUP4 PUSH2 0xA1D JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7B1 PUSH1 0x1 PUSH2 0x7AC DUP5 PUSH1 0x0 PUSH2 0x7A6 DUP7 PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST ADD PUSH2 0x770 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH2 0x7CB PUSH2 0x7C5 PUSH2 0x7BF CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH2 0x49E JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x7F6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x110 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4A7 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x86 SWAP3 SWAP5 SWAP4 PUSH2 0x83C PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x818 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x110 PUSH1 0x40 PUSH2 0x72 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0x869 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x49E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x233 JUMP JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x50E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH2 0x8A7 PUSH2 0x110 PUSH2 0x261 SWAP3 PUSH2 0x883 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x86 SWAP2 PUSH2 0x8E1 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x8D3 PUSH2 0x8CD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x859 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP1 PUSH2 0x86 SWAP2 PUSH2 0x8AE JUMP JUMPDEST SWAP1 PUSH2 0x902 PUSH2 0x8FD PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST DUP1 PUSH2 0x90C DUP4 PUSH2 0x806 JUMP JUMPDEST GT PUSH2 0x991 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x91E DUP4 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x974 JUMPI POP PUSH2 0x86 SWAP3 SWAP2 PUSH2 0x95D PUSH2 0x96D SWAP3 PUSH2 0x94C PUSH2 0x840 JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x9AB SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x821 JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x110 SWAP1 SLOAD PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x7C5 PUSH2 0x9D3 PUSH1 0x9 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x9DE DUP5 PUSH1 0x9 PUSH2 0x859 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA0E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x110 SWAP2 PUSH1 0x0 PUSH2 0x7A6 PUSH2 0xA3A SWAP4 PUSH2 0xA32 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x760 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x2710 PUSH2 0x501 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x14F93A49 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x17F82990 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x1C4B774B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x233DEDF1 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2474E2B2 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x2496DD51 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x276A28A3 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2A67C158 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x2A959B89 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x2CFB6688 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x3736D853 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x4EA3871A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x66CFD072 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x6CC232E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x6CE76F30 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6FC23DB4 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x7C33BD70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x80C47440 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x82666BC8 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x86BB8F37 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x8AD7D9DE EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x9FD6DB12 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA3E37652 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xA5F10FE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA7B1190A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xAE594865 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB5573847 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xBC577940 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xBD39E149 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBE707DB1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xC0788555 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC4228AAA EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xC7A5156F EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xCCD40400 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xDCAE6754 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD4BA7E1 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xEABDC5B4 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF064997C EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF12E061B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0x376 JUMPI PUSH4 0xFFAB4BD9 SUB PUSH2 0x4F2 JUMPI PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x50A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x5C6 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x59D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x4F2 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x609 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x63A PUSH2 0x643 PUSH1 0x20 SWAP4 PUSH2 0x64D SWAP4 PUSH2 0x62E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x619 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x651 JUMP JUMPDEST DUP1 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0x68F JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4F2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x770 SWAP3 ADD PUSH2 0x71C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x787 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x7A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x1E51 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x140 DUP1 PUSH2 0x884 PUSH2 0x870 PUSH2 0x823 PUSH2 0x802 PUSH2 0x160 DUP8 ADD PUSH1 0x20 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x80 DUP9 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP8 ADD MSTORE PUSH2 0x83E PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x85C PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7D2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x8B8 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0xF PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0x91A DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x938 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x2057 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2428 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2437 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x99E PUSH1 0x20 SWAP5 PUSH2 0x52D SWAP4 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x2533 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x701 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xA31 PUSH2 0xA2B CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x266C JUMP JUMPDEST SWAP1 PUSH2 0x562 PUSH2 0xA3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xA7E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0xA90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xAD4 PUSH2 0xACF DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x4F2 JUMPI PUSH2 0x517 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 PUSH1 0x20 PUSH2 0x52D SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB32 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0xB40 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP4 PUSH2 0xB60 SWAP2 DUP5 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP2 PUSH2 0xB80 SWAP2 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI DUP3 PUSH2 0xBA0 SWAP2 DUP4 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 PUSH2 0x52D PUSH2 0xBB1 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0xE0 PUSH2 0x701 DUP3 PUSH1 0xC0 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xBD4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB09 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2E3F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xBFC DUP5 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x701 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC1F CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST SWAP2 PUSH2 0x3169 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC38 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3450 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x68F JUMP JUMPDEST SWAP5 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3477 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xC8C CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x3481 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x359A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xCBA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0xCD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x35E5 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xCE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3649 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x503 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD2A CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x36D5 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xD67 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x371D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D PUSH2 0xD85 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x5C6 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDA8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6C JUMP JUMPDEST SWAP2 PUSH2 0x3793 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xDBE CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x37B4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x6CB PUSH2 0xDDF CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x37BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xDF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x389D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x14 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xE4A CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x38F4 JUMP JUMPDEST PUSH32 0x2FDAC322EE704CE09F0773F7F3F92EB98D5E7C836EE9C056CCCD5F61041E5E3F SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xE4F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xE8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xE73 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0xEA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x3961 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEC5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x397B JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0xEE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x39BE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0xEF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x39F2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x52D SWAP1 PUSH2 0x120 DUP1 PUSH2 0x884 PUSH2 0x140 DUP5 ADD PUSH2 0xF21 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH2 0xF43 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0xF52 PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0xF79 PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0xEFD JUMP JUMPDEST SWAP1 PUSH2 0xFAD PUSH2 0xFA3 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFBF PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xFD3 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xFF6 PUSH2 0xFEF DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xF8D JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x102F PUSH2 0x102A CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x16 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1057 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x103B JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x1078 DUP2 DUP5 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1086 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x1094 DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4F2 JUMPI PUSH1 0x80 PUSH2 0x701 DUP3 PUSH2 0x52D SWAP5 DUP8 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x10CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x3FD4 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x10E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x3FF7 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4588 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x111A CALLDATASIZE PUSH1 0x4 PUSH2 0x971 JUMP JUMPDEST SWAP2 PUSH2 0x45ED JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1130 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x6CB PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x115B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x45F8 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1174 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4657 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1189 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x67D PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 SLOAD PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x12 PUSH2 0x11A3 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x11CA CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x54F PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x11E2 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1204 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x11EC JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0x122B DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1245 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x466A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1278 PUSH2 0x1272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x12C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x12E1 DUP3 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH2 0x12EF DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1320 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST SWAP2 PUSH2 0x4802 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1339 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4871 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x517 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x136F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x137E PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x138D PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x13C1 PUSH2 0x13BC CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x48AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x13E2 DUP2 DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13F0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 PUSH2 0x13FE DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x68F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP3 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x142A CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x48C6 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1449 CALLDATASIZE PUSH1 0x4 PUSH2 0x901 JUMP JUMPDEST SWAP2 PUSH2 0x4917 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1462 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4A4D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x147A CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x14AF SWAP1 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x14B9 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DB PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x5 PUSH2 0x14FA PUSH1 0x4 DUP6 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP4 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1547 PUSH2 0x154E SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1540 PUSH1 0xA0 SWAP7 PUSH2 0x1539 PUSH2 0x517 SWAP11 PUSH2 0x1529 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1571 PUSH2 0x156C CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST SWAP3 PUSH2 0x1581 SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x15B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0x8 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x15B5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1601 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x15FC JUMPI JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x15F1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x1628 PUSH2 0x161E DUP4 PUSH2 0x15E1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x167A JUMPI POP PUSH1 0x1 EQ PUSH2 0x1641 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1666 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x52D SWAP2 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x16B3 SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x168F JUMP JUMPDEST SUB DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP1 PUSH2 0x16C9 PUSH2 0x16CE SWAP3 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x16D8 DUP3 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16E5 PUSH1 0x1 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x16FA PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1707 PUSH1 0x3 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1714 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1721 PUSH1 0x5 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x172E PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 PUSH2 0x173B PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0x8 PUSH2 0x174D PUSH1 0x7 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP8 SWAP7 SWAP6 SWAP5 PUSH2 0x140 DUP10 ADD SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x17AE SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x120 SWAP1 SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x17D3 PUSH2 0x17CD CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x16BA JUMP JUMPDEST SWAP7 PUSH2 0x17E9 SWAP11 SWAP9 SWAP11 SWAP7 SWAP2 SWAP7 SWAP6 SWAP3 SWAP6 SWAP5 SWAP4 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP11 DUP12 PUSH2 0x1754 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x67D PUSH2 0x1808 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4BDD JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1820 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1838 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x4C8A JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x13 PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x185A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC PUSH2 0x52D SWAP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x188B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH2 0x64D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x133F JUMP JUMPDEST SWAP1 PUSH2 0x18BD PUSH2 0x18B6 PUSH2 0x18AC DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x18E8 PUSH2 0x18E1 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x52D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x191D PUSH2 0x1917 CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18F0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP1 PUSH1 0x20 PUSH2 0xC59 DUP3 DUP7 PUSH2 0x581 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x54F PUSH2 0x195B CALLDATASIZE PUSH1 0x4 PUSH2 0x1929 JUMP JUMPDEST SWAP1 PUSH2 0x4D4A JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1974 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4DCC JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x1989 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH1 0x1D PUSH2 0x8CF JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x19B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x562 PUSH2 0x7C1 PUSH2 0x1994 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19CE CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E2D JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x19E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x4E8E JUMP JUMPDEST PUSH2 0x19F6 SWAP1 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A0C PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A19 PUSH1 0x2 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A26 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x1A33 PUSH1 0x4 DUP3 ADD PUSH2 0x149A JUMP JUMPDEST SWAP2 PUSH2 0x1A40 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A4D PUSH1 0x6 DUP3 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A5A PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH2 0x1A67 PUSH1 0x8 DUP3 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 PUSH2 0x52D PUSH1 0xA PUSH2 0x174D PUSH1 0x9 DUP6 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP3 PUSH2 0x1B12 SWAP8 PUSH1 0xC0 DUP15 PUSH2 0xA14 PUSH2 0x517 SWAP15 SWAP11 PUSH2 0x1AE7 PUSH2 0x1ADD PUSH2 0x140 SWAP16 SWAP9 SWAP8 PUSH2 0x1B03 SWAP14 SWAP13 PUSH2 0x1AD0 PUSH2 0x1AC8 PUSH2 0x1AEE SWAP12 PUSH2 0x1AF5 SWAP15 PUSH2 0x1ABB PUSH2 0x160 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP11 ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP13 ADD MSTORE JUMP JUMPDEST DUP10 DUP3 SUB PUSH2 0x100 DUP12 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x562 PUSH2 0x1B32 PUSH2 0x1B2D CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP8 PUSH2 0x1B48 SWAP12 SWAP10 SWAP12 SWAP8 SWAP2 SWAP8 SWAP7 SWAP3 SWAP7 SWAP6 SWAP4 SWAP6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x1A79 JUMP JUMPDEST CALLVALUE PUSH2 0x4F2 JUMPI PUSH2 0x5E6 PUSH2 0x1B64 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DB JUMP JUMPDEST SWAP1 PUSH2 0x515B JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5165 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x518E JUMP JUMPDEST PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1BAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031302500000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x566 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1C95 PUSH2 0x1C74 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP3 PUSH2 0x1C65 PUSH2 0x1C53 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND JUMPDEST GT ISZERO PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x524A JUMP JUMPDEST PUSH2 0x1C14 JUMP JUMPDEST SWAP3 PUSH2 0x1C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x1CC7 PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CE9 JUMPI PUSH1 0x0 PUSH2 0x1CDB PUSH2 0x52D SWAP3 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x53A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D12 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D17 JUMP JUMPDEST CALLDATALOAD PUSH2 0x52D DUP2 PUSH2 0x689 JUMP JUMPDEST ISZERO PUSH2 0x1D53 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x546F6B656E204944206F7574206F6620626F756E6473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1D9E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1DD8 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1DEF SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1D42 JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x1DCE PUSH2 0x52D PUSH2 0x544F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1462 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E11 PUSH2 0x5459 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1E1E PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x1E3B PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x1E4C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0xC38 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x160 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x60 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x1FB9 PUSH1 0xA PUSH2 0x1ED8 PUSH2 0x1E63 JUMP JUMPDEST SWAP5 PUSH2 0x1EE9 PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F15 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F43 PUSH2 0x1F3A PUSH1 0x4 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F59 PUSH2 0x1F52 PUSH1 0x5 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F6F PUSH2 0x1F68 PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F85 PUSH2 0x1F7E PUSH1 0x7 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C PUSH2 0x1F94 PUSH1 0x8 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1FAB PUSH1 0x9 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x1FE1 PUSH2 0x52D SWAP2 PUSH2 0x1FD9 PUSH2 0x1EBF JUMP JUMPDEST POP PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x52D SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x128E SWAP1 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x203F PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x201F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2074 PUSH2 0x206F PUSH2 0x2069 DUP5 PUSH2 0x5493 JUMP JUMPDEST SWAP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x1FE6 JUMP JUMPDEST SWAP2 PUSH2 0x2090 PUSH2 0x208B PUSH2 0x2083 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 SWAP6 AND PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x1C0B JUMP JUMPDEST SWAP4 PUSH2 0x209D PUSH2 0x208B DUP5 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x20B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x227E JUMPI DUP5 SWAP3 PUSH2 0x20C8 DUP4 PUSH2 0x555D JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ DUP2 DUP6 EQ OR ISZERO PUSH2 0x224F JUMPI JUMPDEST POP PUSH2 0x1DCE SWAP6 SWAP5 SWAP4 PUSH2 0x21E4 SWAP8 SWAP4 PUSH2 0x21B8 SWAP4 PUSH2 0x206F SWAP4 PUSH2 0x20FF PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x210C DUP5 DUP11 DUP8 DUP14 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x2245 JUMPI JUMPDEST POP PUSH2 0x2139 PUSH2 0x2120 DUP10 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x212C DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2153 PUSH2 0x2147 DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x217F PUSH2 0x2169 DUP3 DUP6 PUSH2 0x2163 PUSH2 0x204A JUMP JUMPDEST SWAP12 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP11 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2195 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP11 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x21AA PUSH2 0x21A4 DUP12 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x21F8 JUMPI JUMPDEST POP POP POP PUSH2 0x1C0B JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x21EB JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST DUP8 ADD SWAP2 PUSH2 0x220D PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x2219 PUSH2 0x1DCE DUP12 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x21B0 JUMPI PUSH2 0x222A PUSH2 0x52D DUP11 PUSH2 0x1487 JUMP JUMPDEST DUP4 EQ PUSH2 0x21B0 JUMPI PUSH2 0x223D SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x2261 SWAP3 SWAP9 SWAP5 SWAP7 SWAP6 SWAP8 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI DUP7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP6 CODESIZE PUSH2 0x20E1 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x2299 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x232A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D6520686173206E6F7420706173736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x2384 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x2395 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23B0 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x2407 JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x23C4 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH32 0x5114E731F472514591AA5A2E7254174B62963E757A427CF9E9B069666478B060 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0x241B PUSH2 0x52D PUSH2 0x2208 DUP5 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x228A JUMP JUMPDEST SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1FB3 PUSH2 0x52D SWAP3 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2461 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST ISZERO PUSH2 0x246D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x0 PUSH2 0x24C1 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x252B JUMPI DUP1 PUSH2 0x24DE PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x2526 SWAP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x250F PUSH2 0x24FD PUSH2 0x2208 PUSH1 0x19 PUSH2 0x24F7 PUSH2 0x1DBB DUP7 DUP12 DUP12 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2509 PUSH2 0x1DCE DUP7 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH2 0x2521 PUSH2 0x1DBB DUP5 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4BBF JUMP JUMPDEST PUSH2 0x24C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x254A PUSH2 0x1CC3 DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x25DE JUMPI PUSH2 0x255C PUSH2 0x2208 DUP3 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x256C PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x25DA JUMPI PUSH2 0x257F PUSH2 0x2208 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x258B PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x25DA JUMPI PUSH2 0x259E PUSH2 0x2208 DUP3 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x25AA PUSH2 0x1DCE DUP5 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 PUSH2 0x25BE JUMPI JUMPDEST POP PUSH2 0x52D JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x25D1 SWAP2 POP PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST TIMESTAMP LT ISZERO CODESIZE PUSH2 0x25B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x25E4 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2642 JUMPI JUMP JUMPDEST PUSH2 0x2619 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2667 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST PUSH2 0x2688 PUSH2 0x52D PUSH1 0x0 SWAP3 SWAP5 SWAP4 SWAP5 PUSH2 0x2680 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST ADD SWAP2 PUSH2 0x269B DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x26A5 DUP2 SWAP5 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 PUSH2 0x26B6 PUSH2 0x20AB PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST EQ PUSH2 0x26E8 JUMPI JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x26CC PUSH2 0x26D2 SWAP3 PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST PUSH2 0x2603 JUMP JUMPDEST SWAP1 PUSH2 0x265D JUMP JUMPDEST POP PUSH1 0xC SWAP3 POP PUSH2 0x52D SWAP1 PUSH2 0x26D2 SWAP1 PUSH2 0x26CC PUSH2 0x2712 PUSH2 0x270C DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH2 0x26BC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2732 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x2C8E JUMP JUMPDEST ISZERO PUSH2 0x273E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420747970652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x278A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65207374616B65642074696D65206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2837 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163746976652074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x288D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D75737420626520696E2074686520667574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656163746976652074696D65206D7573742062652061667465722061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x76652074696D65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2642 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2972 PUSH2 0x52D PUSH2 0x2046 SWAP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x294D JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2961 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2991 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x299F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x297A JUMP JUMPDEST ADD PUSH2 0x2986 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x29B4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x29C6 PUSH2 0x517 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x29E8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x2986 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST SWAP1 PUSH2 0x29FB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA7E JUMPI PUSH2 0x2A1E DUP3 PUSH2 0x2A18 DUP6 SLOAD PUSH2 0x15E1 JUMP JUMPDEST DUP6 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2A59 JUMPI PUSH2 0x2046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2A4E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2A6E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAC JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x2A93 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2A8A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x29F2 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x2AE7 PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2ACE JUMP JUMPDEST PUSH1 0xA PUSH2 0x2BE6 PUSH2 0x140 PUSH2 0x517 SWAP5 PUSH2 0x2B0E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x2B1C PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B3C PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B53 PUSH2 0x2B4A PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2B6C PUSH2 0x2B63 PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x2B83 PUSH2 0x2B7A PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B91 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BB1 PUSH2 0x2BA8 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2BC9 PUSH2 0x2BC0 PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x2BD8 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x2AEE JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C0F SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2C09 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x2C37 SWAP1 PUSH2 0x2C2E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C18 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2C86 PUSH1 0xC0 SWAP6 PUSH2 0x2C78 PUSH2 0x1AE7 SWAP4 PUSH2 0x2C6A PUSH2 0x517 SWAP12 SWAP7 PUSH2 0xA14 SWAP9 SWAP15 SWAP14 SWAP12 SWAP15 PUSH2 0x1ABB PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD MSTORE JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST SWAP6 DUP6 DUP4 SWAP6 PUSH2 0x2DE7 PUSH2 0x2DE1 DUP11 PUSH2 0x23CB PUSH2 0x1DCE PUSH2 0x2DB9 DUP12 SWAP16 SWAP10 SWAP12 PUSH2 0x2D89 PUSH32 0x408E1E6B24C523DF52071026044644BC970ACE38BBA503FA10E7C6E4E9EE0661 SWAP16 SWAP13 PUSH2 0x1540 DUP16 PUSH2 0x2DFA SWAP16 DUP16 DUP16 SWAP1 PUSH2 0x2D2A SWAP1 PUSH2 0x2CFA PUSH2 0x2CE8 PUSH2 0x2949 DUP16 SWAP1 JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x0 SWAP14 DUP15 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x2D18 DUP12 PUSH2 0x2D12 PUSH2 0x1DCE PUSH2 0x2D0C DUP12 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x1DCE DUP13 PUSH2 0x11D5 JUMP JUMPDEST GT PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x2D33 DUP10 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ ISZERO DUP1 PUSH2 0x2E2F JUMPI JUMPDEST PUSH2 0x2D45 DUP11 PUSH2 0x11D5 JUMP JUMPDEST DUP3 SUB PUSH2 0x2DFF JUMPI JUMPDEST POP POP POP PUSH2 0x1539 PUSH2 0x2D5C PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST SWAP10 PUSH2 0x2D70 PUSH2 0x2D69 DUP13 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x1D PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2D82 DUP12 PUSH2 0x2D7C PUSH2 0x1E63 JUMP JUMPDEST SWAP11 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D9B DUP10 PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DA6 DUP11 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DB1 DUP12 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DC5 DUP7 PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DD1 TIMESTAMP PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DDC DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST SWAP10 PUSH2 0x2C21 JUMP JUMPDEST SWAP10 PUSH2 0x2DF1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x2C3D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2E0A TIMESTAMP DUP4 GT PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x2E15 JUMPI JUMPDEST CODESIZE PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x1DCE PUSH2 0x2E28 SWAP4 SWAP1 JUMP JUMPDEST GT PUSH2 0x28DE JUMP JUMPDEST DUP13 DUP15 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x2E3A TIMESTAMP DUP5 GT PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2D3C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP3 SWAP2 PUSH2 0x2E5D PUSH2 0x577A JUMP JUMPDEST PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57BA JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E78 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3046 JUMP JUMPDEST ISZERO PUSH2 0x2E84 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420616E2041444D494E206F7220455343524F57 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2ED4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x135A5B9D1A5B99C81A5CC81B9BDD08195B98589B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2F26 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FE4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617320666565206D7573742062652067726561746572207468616E20300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3124 PUSH32 0x26F4C0C9DD9536441681C861E4C72684BBEC9E4E6D7E4492C2A90FF07CF35C6F SWAP3 PUSH2 0x3091 PUSH2 0x3078 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x3083 CALLER DUP1 SWAP3 PUSH2 0x45F8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3151 JUMPI JUMPDEST POP PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x30A3 PUSH2 0x309E PUSH1 0x12 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x30CE PUSH2 0x30B7 DUP5 PUSH2 0x30B2 PUSH2 0x5479 JUMP JUMPDEST PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x30C7 PUSH2 0x1DCE PUSH2 0x52D PUSH1 0x13 PUSH2 0x1487 JUMP JUMPDEST GT ISZERO PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x30EF PUSH2 0x30DE PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ ISZERO PUSH2 0x2F60 JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x30FC PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP5 GT PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3117 PUSH2 0x3110 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x2FDD JUMP JUMPDEST PUSH2 0x26CC PUSH4 0x3B9ACA00 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 PUSH2 0x1C95 PUSH2 0x313E PUSH2 0x3133 PUSH2 0x544F JUMP JUMPDEST SWAP3 PUSH2 0x1C6F DUP6 DUP3 PUSH2 0x57D6 JUMP JUMPDEST SWAP5 PUSH2 0x3148 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3029 JUMP JUMPDEST PUSH2 0x3163 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x45F8 JUMP JUMPDEST CODESIZE PUSH2 0x308B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x2E4F JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3180 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x3308 JUMP JUMPDEST ISZERO PUSH2 0x318C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0xC0 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3250 PUSH1 0x5 PUSH2 0x31E2 PUSH2 0x31C7 JUMP JUMPDEST SWAP5 PUSH2 0x31EF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3216 PUSH2 0x3206 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3225 PUSH2 0x1F0E PUSH1 0x2 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x324A PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x31D1 JUMP JUMPDEST ISZERO PUSH2 0x3269 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20756E7374616B652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D6520686173206E6F74207061737365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3314 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x3338 PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x3355 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3259 JUMP JUMPDEST SWAP6 PUSH2 0x335E PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x336D PUSH2 0x1CC3 CALLER JUMPDEST DUP1 SWAP4 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x341A JUMPI JUMPDEST POP PUSH1 0x60 DUP8 ADD DUP1 MLOAD PUSH2 0x3385 PUSH2 0x1DCE DUP9 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x33FE JUMPI JUMPDEST POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x4 TIMESTAMP SWAP2 ADD PUSH2 0x202F JUMP JUMPDEST ADD PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x33B2 DUP7 PUSH2 0x4C66 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 PUSH32 0x8400AAD51EC7B4A6D1C58218EA03E51798A0485003BEAE9E5B76662E91D7058F PUSH2 0x33F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x340C PUSH2 0x52D PUSH2 0x3414 SWAP3 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x32BC JUMP JUMPDEST CODESIZE PUSH2 0x338B JUMP JUMPDEST PUSH2 0x344A SWAP1 PUSH2 0x3444 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x3262 JUMP JUMPDEST CODESIZE PUSH2 0x3372 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3174 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x346A PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x5942 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3459 JUMP JUMPDEST SWAP1 PUSH2 0x348B CALLER PUSH2 0x566 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x34A3 JUMPI PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34C7 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3535 JUMP JUMPDEST ISZERO PUSH2 0x34D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426C6F636B2074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x517 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH32 0xBE1531878CA10F11C57318847B09788B90ED4E6DD52B36836BE286097A74FF4F SWAP1 PUSH2 0x356B PUSH2 0x3564 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 GT PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3575 PUSH1 0xF PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3580 DUP3 PUSH1 0xF PUSH2 0x202F JUMP JUMPDEST PUSH2 0x3595 PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x35AE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5A7C JUMP JUMPDEST PUSH2 0x517 PUSH2 0x35A3 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0xA97 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x35D3 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x517 SWAP3 PUSH2 0x35F3 PUSH2 0x35DD JUMP JUMPDEST SWAP3 PUSH2 0x48C6 JUMP JUMPDEST ISZERO PUSH2 0x3600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1BF3 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206F776E6572206E6F7220617070726F766564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 PUSH2 0x1C95 PUSH2 0x368C CALLER PUSH2 0x3683 PUSH2 0x367E DUP3 DUP8 PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x1C6F DUP6 PUSH2 0x5ADE JUMP JUMPDEST SWAP3 PUSH2 0x7C5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36A5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0xF62079051152E03BD87F33518B9CE4A5564414395B75AFEEF8A467E7CA4EE91B SWAP2 PUSH2 0x54F DUP2 PUSH1 0x12 PUSH2 0x2AD7 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP2 PUSH2 0x67D DUP2 PUSH1 0x10 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x36DE JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3737 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1C74 DUP3 PUSH2 0x1C6F DUP6 PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP6 PUSH2 0x1C95 SWAP6 PUSH2 0x3782 PUSH2 0x3773 PUSH2 0x3E8 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH2 0x1C5E JUMP JUMPDEST PUSH2 0x378E PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5B09 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x3726 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH1 0xA0 SHR PUSH2 0x119D JUMP JUMPDEST PUSH2 0x52D SWAP1 SLOAD PUSH2 0x379E JUMP JUMPDEST PUSH2 0x52D PUSH1 0x9 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x208B PUSH2 0x37D6 PUSH2 0x52D SWAP3 PUSH2 0x37D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5493 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37EA PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x383B JUMP JUMPDEST ISZERO PUSH2 0x37F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C7265616479206163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x386C SWAP1 PUSH2 0x385A PUSH2 0x3855 PUSH2 0x1CC3 PUSH1 0x4 PUSH2 0x324A DUP6 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x1 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x77DF36C64E7C698035A47D2E97DA79AB1C3BCFDF6F82430581659CC4D2A969A PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38B5 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x38CA SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x38C5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3477 JUMP JUMPDEST PUSH32 0x31C682DCD71348807B079D0CB25BF0C85C9E75F84A8B7B31111BA081E52817F3 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x38A6 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x390D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x391A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x3937 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x395C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x394B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x951 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x391A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x3988 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x39B1 JUMPI PUSH2 0x2208 PUSH2 0x39A5 SWAP2 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39AD PUSH2 0x396B JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x2208 PUSH2 0x52D SWAP2 PUSH2 0x39CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x39DD PUSH2 0x5BCF JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x39ED PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5C10 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x39D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA7E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x35CE PUSH2 0xACF DUP4 PUSH2 0x39FA JUMP JUMPDEST PUSH2 0x52D PUSH2 0x140 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x3A31 PUSH2 0x3A1E JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x52D PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3A7F JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x3A8A PUSH2 0x3A68 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x3A73 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3AAA PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3A70 JUMP JUMPDEST SWAP1 PUSH2 0x3AC0 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x3B91 PUSH1 0x8 PUSH2 0x3AE2 PUSH2 0x3A1E JUMP JUMPDEST SWAP5 PUSH2 0x3AEF PUSH2 0x1EE5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3AFE PUSH2 0x1EF8 PUSH1 0x1 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B25 PUSH2 0x3B15 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B34 PUSH2 0x1F24 PUSH1 0x3 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B43 PUSH2 0x3243 PUSH1 0x4 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x3B5B PUSH2 0x3B52 PUSH1 0x5 DUP4 ADD PUSH2 0x149A JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B73 PUSH2 0x3B6A PUSH1 0x5 DUP4 ADD PUSH2 0x15C1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B82 PUSH2 0x1F7E PUSH1 0x6 DUP4 ADD PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x1F94 PUSH1 0x7 DUP4 ADD PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST SWAP1 PUSH2 0x3BAD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3BBC PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3BFE JUMPI PUSH2 0x3BD7 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP9 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3BE9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x3BAF JUMP JUMPDEST PUSH2 0x3BAF JUMP JUMPDEST SWAP1 PUSH2 0x3BF6 PUSH2 0x3BE4 SWAP2 PUSH2 0x293A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x3BDC JUMP JUMPDEST POP PUSH2 0x3C08 SWAP1 PUSH2 0x3A94 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST PUSH2 0x3C22 PUSH2 0x52D PUSH1 0x1D PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C52 SWAP1 PUSH1 0x1C DUP4 DUP3 PUSH2 0x3C44 PUSH1 0x5 PUSH2 0x324A DUP4 PUSH2 0x16C9 DUP7 DUP9 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3C57 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3C15 JUMP JUMPDEST PUSH2 0x16C9 PUSH2 0x3C67 SWAP3 PUSH2 0x3C8B SWAP5 PUSH2 0x1284 JUMP JUMPDEST SWAP7 PUSH2 0x3C7A PUSH2 0x3C74 DUP3 PUSH2 0x293A JUMP JUMPDEST SWAP9 PUSH2 0x3B99 JUMP JUMPDEST PUSH2 0x3C84 DUP3 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3AB7 JUMP JUMPDEST POP CODESIZE DUP4 DUP3 PUSH2 0x3C49 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CAB PUSH2 0x5459 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3CBE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3DFC JUMP JUMPDEST ISZERO PUSH2 0x3CCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46726F6D2061646472657373206973206E6F7420746865206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP4 SWAP3 PUSH2 0x3DB6 PUSH2 0x35CE PUSH2 0x64D SWAP5 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3DC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3FC1 PUSH2 0x3FC7 SWAP2 PUSH2 0x3F8B PUSH2 0x3F86 PUSH2 0x3E97 PUSH32 0xE37E962447C072D61E0164C30F30D2A3F4752DEA7A7224FFD42D5FC2586B02D5 SWAP8 SWAP10 SWAP9 SWAP7 SWAP9 PUSH2 0x3E3E PUSH2 0x237F DUP13 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x3E62 PUSH2 0x3E4A DUP13 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x3E5C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x20AB JUMP JUMPDEST EQ PUSH2 0x3CC3 JUMP JUMPDEST PUSH2 0x3E83 PUSH2 0x3E72 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND EQ ISZERO PUSH2 0x3D0F JUMP JUMPDEST PUSH2 0x3103 PUSH2 0x3E92 PUSH2 0x1CC3 DUP14 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x3D5B JUMP JUMPDEST SWAP6 PUSH2 0x3F3A PUSH2 0x3F74 DUP12 PUSH2 0x3F46 DUP13 DUP9 PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x5845C8B965119358C29037DC6226E8F2195E0D03C7D2055C52FB161F57928741 SWAP1 PUSH2 0x3EE0 ADDRESS PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 CHAINID SWAP6 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3F58 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3F63 PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x3D99 JUMP JUMPDEST PUSH2 0x3F7F PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 DUP5 PUSH2 0x5D29 JUMP JUMPDEST PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x3FAA PUSH2 0x3F99 DUP3 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x3FA5 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x293A JUMP JUMPDEST PUSH2 0x3FB6 PUSH1 0x0 DUP9 CALLER PUSH2 0x53A6 JUMP JUMPDEST PUSH2 0x1C6F DUP8 DUP8 DUP4 PUSH2 0x2057 JUMP JUMPDEST SWAP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 PUSH2 0x2DFA PUSH2 0x358C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x3C9B JUMP JUMPDEST PUSH2 0x3FEC PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x517 PUSH2 0x517 PUSH2 0x5E3A JUMP JUMPDEST PUSH2 0x517 PUSH2 0x3FE1 JUMP JUMPDEST SWAP1 PUSH2 0x2E62 SWAP2 PUSH2 0x400C PUSH2 0x577A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4019 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x435D JUMP JUMPDEST ISZERO PUSH2 0x4025 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4069 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x526577617264206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F7420616374697665207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206973206E6F742061637469766520616E796D6F726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4151 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F74207374616B6564206C6F6E6720656E6F75676800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x419D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420697320616C726561647920636C61696D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x41E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20636C61696D20746865207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1DD85C99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x4259 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x1C14 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x423A JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x427D PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x2BE6 PUSH2 0x120 PUSH2 0x517 SWAP5 PUSH2 0x429E PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AC PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x42D5 PUSH2 0x42CC PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x42EC PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x4303 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x202F JUMP JUMPDEST PUSH2 0x432D PUSH1 0x5 DUP7 ADD PUSH2 0x4320 PUSH2 0x431A PUSH1 0xA0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x426D JUMP JUMPDEST PUSH2 0x433B PUSH2 0x2B91 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE1 PUSH2 0x434A PUSH2 0x100 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4284 JUMP JUMPDEST SWAP1 PUSH2 0x4367 DUP2 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4370 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x437B DUP3 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4384 SWAP1 PUSH2 0x1487 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x4391 DUP4 PUSH2 0x11D5 JUMP JUMPDEST EQ ISZERO PUSH2 0x439C SWAP1 PUSH2 0x401E JUMP JUMPDEST PUSH2 0x43A7 DUP4 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43B0 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH2 0x43BC DUP3 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x43C5 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH2 0x43D5 SWAP1 PUSH2 0x4062 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x43E6 SWAP1 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x43F7 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x440A DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4414 SWAP1 TIMESTAMP PUSH2 0x413D JUMP JUMPDEST LT ISZERO PUSH2 0x441F SWAP1 PUSH2 0x414A JUMP JUMPDEST DUP6 PUSH2 0x442B DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST SWAP1 PUSH2 0x4435 SWAP2 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x5 ADD PUSH2 0x4441 SWAP1 PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0x444B SWAP1 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH2 0x4508 SWAP3 PUSH2 0x44DD SWAP2 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x447B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4575 JUMPI JUMPDEST POP PUSH2 0x41E2 JUMP JUMPDEST PUSH2 0x44B7 PUSH2 0x448F PUSH2 0x448A DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP6 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44B0 PUSH2 0x449A PUSH2 0x3A1E JUMP JUMPDEST SWAP7 PUSH2 0x44A5 DUP13 DUP7 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x3B15 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x44C2 TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x44E8 PUSH2 0x2DB1 PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x44F4 TIMESTAMP PUSH2 0x120 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4503 DUP6 PUSH2 0x16C9 DUP6 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4353 JUMP JUMPDEST PUSH32 0x7EF1954A47BCF45F29BBC3B53D86DF999B6F295782796AC65EA2DF0347116935 PUSH2 0x4570 PUSH2 0x455B PUSH2 0x4555 PUSH2 0x454F PUSH2 0x4549 PUSH1 0x40 PUSH2 0x4543 DUP9 PUSH2 0x37BE JUMP JUMPDEST SWAP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP5 PUSH2 0x4565 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x3522 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x4582 SWAP2 POP PUSH2 0x315E PUSH2 0xE4F JUMP JUMPDEST CODESIZE PUSH2 0x4475 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x3FFF JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x45A0 PUSH2 0x5459 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x45AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45E6 JUMPI DUP1 PUSH2 0x45CA PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x45E1 SWAP5 DUP8 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 DUP7 PUSH2 0x45DC PUSH2 0x1DBB DUP5 DUP9 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x515B JUMP JUMPDEST PUSH2 0x45AD JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH1 0x0 PUSH2 0x460D PUSH2 0x4613 SWAP4 PUSH2 0x2448 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4627 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3595 PUSH32 0x905D981207A7D0B6C62CC46AB0BE2A076D0298E4A86D0AB79882DBD01AC37378 SWAP2 PUSH2 0x67D DUP2 PUSH1 0x11 PUSH2 0x2AC4 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4618 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x3 PUSH2 0x1CA4 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2DFA PUSH2 0x46B2 PUSH2 0x3FC1 CALLER PUSH2 0x1C6F DUP8 PUSH2 0x46AD DUP9 PUSH2 0x46A8 DUP6 PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST SWAP4 PUSH2 0x553 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x16C9 PUSH2 0x46D7 SWAP3 PUSH2 0x46CF PUSH2 0x3A68 JUMP JUMPDEST POP PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3B99 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46ED PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4753 JUMP JUMPDEST ISZERO PUSH2 0x46F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14995DD85C99081A5CC81B9BDD0818DB185A5B5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1B12 PUSH2 0x517 SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST SWAP1 PUSH2 0x4760 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x477C PUSH2 0x4777 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH2 0x16C9 DUP7 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x46F2 JUMP JUMPDEST PUSH32 0x7DE9B19A9A16075E228395248AD5311FFAB7748C0525BD16AB44912A968161C3 PUSH2 0x4570 PUSH2 0x47ED PUSH2 0x4555 PUSH2 0x454F PUSH2 0x47E7 PUSH1 0x40 PUSH2 0x47C0 PUSH2 0x46D7 DUP11 PUSH2 0x16C9 DUP12 PUSH1 0x1C PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x47D2 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP11 PUSH2 0x100 DUP3 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP5 PUSH2 0x47F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x4736 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x46DC JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x481D PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x482A PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP1 PUSH2 0x4847 PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x486C SWAP5 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x485B PUSH2 0x2390 PUSH2 0x9D6 PUSH2 0x1DBB DUP5 DUP10 DUP9 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x1DE9 PUSH2 0x1820 PUSH2 0x1DBB DUP4 DUP9 DUP8 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x482A JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x480D JUMP JUMPDEST PUSH2 0x4883 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x487B JUMP JUMPDEST PUSH2 0x3350 PUSH2 0x52D SWAP2 PUSH2 0x48BE PUSH2 0x48A7 JUMP JUMPDEST POP PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x48D5 DUP2 DUP6 DUP6 PUSH2 0x2057 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x48E4 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x48F0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x48FD SWAP4 PUSH2 0x1CC3 SWAP4 PUSH2 0x5EDE JUMP JUMPDEST PUSH2 0x490A JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x48EA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP2 PUSH2 0x3F46 PUSH2 0x493D SWAP3 PUSH2 0x3F3A SWAP5 PUSH2 0x492B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3F3A PUSH2 0x3EB5 PUSH2 0x2208 DUP4 PUSH1 0x15 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x4948 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x495B PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x49C0 JUMP JUMPDEST ISZERO PUSH2 0x4967 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E20666F72636520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A3432903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x49CC PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x33C6 PUSH2 0x33C0 PUSH2 0x2D0C PUSH1 0x20 PUSH1 0x1A PUSH2 0x49EB PUSH2 0x3333 PUSH1 0x5 PUSH2 0x324A DUP10 DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x33A9 PUSH1 0x0 PUSH1 0x5 PUSH2 0x33A3 DUP10 PUSH2 0x4A03 PUSH2 0x3350 DUP3 DUP9 PUSH2 0x1284 JUMP JUMPDEST SWAP6 PUSH2 0x4A0C PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4A18 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x4A2A JUMPI POP PUSH2 0x16C9 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x3414 SWAP1 PUSH2 0x4A47 PUSH2 0x20AB PUSH2 0x3437 DUP13 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x494C JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A66 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4B0D JUMP JUMPDEST ISZERO PUSH2 0x4A72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ABE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1C95 PUSH2 0x4B9B PUSH32 0xF25FD82F8BF40DF41B90B95A0159C55596F50B182D7B7DFF1D3E04A5A16AC7C4 SWAP3 PUSH2 0x4B41 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4B55 PUSH2 0x4B50 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x4B5F PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 SUB PUSH2 0x4BAF JUMPI JUMPDEST PUSH2 0x4B74 PUSH2 0x23C4 DUP3 PUSH1 0x17 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4B83 DUP6 PUSH2 0x2190 DUP4 PUSH1 0x18 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x23CB PUSH2 0x4B90 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x2190 DUP4 PUSH1 0x19 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP DUP4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x4BBA TIMESTAMP DUP7 GT PUSH2 0x4AB7 JUMP JUMPDEST PUSH2 0x4B66 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4A56 JUMP JUMPDEST PUSH2 0x4BD7 SWAP1 PUSH2 0x52D SWAP4 SWAP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x4BE9 PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x4BF1 PUSH2 0x5FAB JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4C00 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x4C31 JUMPI PUSH2 0x52D PUSH2 0x3F3A SWAP2 PUSH2 0x4C19 PUSH2 0x52D SWAP5 PUSH2 0x5FDD JUMP JUMPDEST SWAP1 PUSH2 0x4C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x4BC9 JUMP JUMPDEST POP POP PUSH2 0x52D PUSH2 0x35DD JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C4A PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x23D0 SWAP1 PUSH2 0x4C5A PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x23B6 PUSH2 0x2390 DUP3 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4C3B JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C80 PUSH2 0x1B83 DUP3 PUSH2 0x2437 JUMP JUMPDEST SWAP1 PUSH2 0x3474 SWAP2 PUSH2 0x59B3 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4C6F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4CA3 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x4CAE PUSH2 0x48A7 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x4C97 JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x4CC8 PUSH2 0x3AA4 DUP5 PUSH2 0x3A11 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x4C94 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SWAP3 PUSH2 0x4CE2 DUP5 PUSH2 0x4CB8 JUMP JUMPDEST SWAP3 PUSH2 0x4CED PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x4D42 JUMPI PUSH2 0x4D3B DUP2 PUSH2 0x4D0E PUSH2 0x1DC0 PUSH2 0x1DBB PUSH2 0x4CEF SWAP6 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D1F PUSH2 0x13BC PUSH2 0x1DBB DUP4 DUP10 DUP10 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x4D29 DUP3 DUP10 PUSH2 0x3AB7 JUMP JUMPDEST MSTORE PUSH2 0x4D34 DUP2 DUP9 PUSH2 0x3AB7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CED JUMP JUMPDEST POP SWAP4 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 PUSH2 0x46A8 PUSH2 0x4613 SWAP3 PUSH2 0x4D5D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D74 PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4DA2 SWAP1 PUSH2 0x4D90 PUSH2 0x4D8B PUSH1 0x4 PUSH2 0x324A DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4062 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 PUSH1 0x4 PUSH2 0x33A3 DUP5 PUSH1 0x1B PUSH2 0x1284 JUMP JUMPDEST PUSH32 0x385EED96CA33F0DA03D900751711FF4392ADF11BE79222F4AA99F92E71A1DA4F PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DEE PUSH2 0x1B83 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4E03 SWAP1 PUSH2 0x1C6F DUP2 PUSH2 0x4DFE PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x4C8A JUMP JUMPDEST PUSH32 0x4A84A984790B90CDC99ACB8CF998C3F36E0EFEFD6A3F5B47DCAF480F6A1862C2 PUSH2 0x3896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4DDF JUMP JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E42 PUSH2 0x5BCF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4D DUP2 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4E71 JUMPI POP POP PUSH2 0x517 SWAP1 PUSH2 0x5C10 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x517 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4EA4 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x501F JUMP JUMPDEST ISZERO PUSH2 0x4EB0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20697320616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4EFC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865207374616B65722063616E207374616B652074686520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x35B2B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4F54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B652074696D65206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7265 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH2 0x500E PUSH1 0xA0 PUSH2 0x517 SWAP5 PUSH2 0x4FBD PUSH2 0x2B08 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FDD PUSH2 0x4FD4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x4249 JUMP JUMPDEST PUSH2 0x4FEB PUSH2 0x2B33 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FF9 PUSH2 0x42E3 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5007 PUSH2 0x42FA PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x2AD7 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4FA4 JUMP JUMPDEST PUSH2 0x502B PUSH2 0x237F DUP3 PUSH2 0x5319 JUMP JUMPDEST PUSH2 0x5046 PUSH2 0x5041 PUSH2 0x1CC3 PUSH1 0x5 PUSH2 0x324A DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x4EA9 JUMP JUMPDEST PUSH2 0x5055 PUSH2 0x3E92 PUSH2 0x1CC3 DUP4 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x505D PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x5069 PUSH2 0x1CC3 CALLER PUSH2 0x3366 JUMP JUMPDEST PUSH2 0x513C JUMPI JUMPDEST POP PUSH32 0x30441850B15FD31A9413CD27711113D1430F46DD517499B60A5D8365FA375BF0 PUSH2 0x2DFA PUSH2 0x5122 PUSH2 0x3FC1 PUSH2 0x50A2 DUP6 PUSH2 0x37BE JUMP JUMPDEST SWAP5 PUSH2 0x50AD PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP8 SUB PUSH2 0x512C JUMPI JUMPDEST PUSH2 0x23CB PUSH2 0x50BF PUSH2 0x31C7 JUMP JUMPDEST PUSH2 0x50C7 DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x50E1 TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x50EC DUP10 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x511C PUSH2 0x50F9 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x5105 DUP4 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x5117 DUP6 PUSH1 0x1A PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5015 JUMP JUMPDEST DUP3 PUSH2 0x4BBF JUMP JUMPDEST SWAP4 PUSH2 0x4BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5137 TIMESTAMP DUP9 GT PUSH2 0x4F4D JUMP JUMPDEST PUSH2 0x50B4 JUMP JUMPDEST PUSH2 0x5155 SWAP1 PUSH2 0x514F PUSH2 0x20AB PUSH2 0x3437 DUP6 PUSH2 0x37BE JUMP JUMPDEST EQ PUSH2 0x4EF5 JUMP JUMPDEST CODESIZE PUSH2 0x506E JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x4E97 JUMP JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5184 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x606A JUMP JUMPDEST PUSH2 0x517 SWAP1 CALLER SWAP1 PUSH2 0x6093 JUMP JUMPDEST PUSH2 0x530 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x517 SWAP3 SWAP5 SWAP4 PUSH2 0xA14 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0xA83 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1B9A PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5200 PUSH2 0x52D PUSH2 0x2046 SWAP3 PUSH2 0x51DA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x51C7 JUMP JUMPDEST PUSH2 0x517 SWAP2 PUSH2 0x523A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x522C PUSH2 0x5226 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x4249 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x51F0 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x5207 JUMP JUMPDEST SWAP1 PUSH2 0x5256 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5260 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x52E5 JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0x5272 DUP4 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x52C8 JUMPI POP PUSH2 0x517 SWAP3 SWAP2 PUSH2 0x52B1 PUSH2 0x52C1 SWAP3 PUSH2 0x52A0 PUSH2 0x51BD JUMP JUMPDEST SWAP5 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x6F483D09 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x51A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x5326 PUSH2 0x11E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x5331 JUMPI POP POP JUMP JUMPDEST PUSH2 0x533E PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST DUP3 LT PUSH2 0x5348 JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x535B PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x536A PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x537E JUMPI PUSH2 0x5379 SWAP2 POP PUSH2 0x52FF JUMP JUMPDEST PUSH2 0x534D JUMP JUMPDEST POP PUSH2 0x5399 PUSH2 0x538A PUSH2 0x530C JUMP JUMPDEST PUSH2 0x5394 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x53B0 DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x5434 JUMPI JUMPDEST PUSH2 0x5415 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 PUSH2 0x53E3 SWAP3 PUSH2 0x1C6F DUP7 PUSH1 0x0 PUSH2 0x53D7 DUP9 PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST ADD PUSH2 0x4249 JUMP JUMPDEST SWAP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x540E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4570 JUMP JUMPDEST PUSH2 0x5422 PUSH2 0x1CC3 CALLER DUP4 PUSH2 0x4D4A JUMP JUMPDEST ISZERO PUSH2 0x53BC JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST POP CALLER PUSH2 0x5448 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO PUSH2 0x53B7 JUMP JUMPDEST PUSH2 0x52D PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x5461 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x5467 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH2 0x5486 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x548E PUSH2 0x11E2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x549B PUSH2 0x11E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54B0 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x54C1 PUSH2 0x2208 DUP3 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x54CE DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x54F2 JUMPI POP POP PUSH2 0x54EA PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x54A3 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x5502 PUSH2 0x52D DUP5 PUSH2 0x1487 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54A3 JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x551F PUSH2 0x2208 DUP5 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 PUSH2 0x5529 DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP5 EQ PUSH2 0x5551 JUMPI POP POP PUSH2 0x553F PUSH2 0x54E4 PUSH2 0x2D0C PUSH2 0x530C JUMP JUMPDEST EQ PUSH2 0x52D JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x5511 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x5574 SWAP2 PUSH2 0x556C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1284 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x5589 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x55EC JUMP JUMPDEST ISZERO PUSH2 0x5595 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x55FA PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST SWAP2 PUSH2 0x560D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 PUSH2 0x569F JUMPI JUMPDEST POP POP PUSH2 0x5620 JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x562C PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x5699 JUMPI PUSH2 0x566A DUP2 PUSH2 0x5646 PUSH2 0x562E SWAP4 DUP8 PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x564E PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x565D PUSH2 0x1CC3 CALLER DUP1 SWAP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x5671 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x562C JUMP JUMPDEST PUSH2 0x5692 SWAP2 DUP2 PUSH2 0x5688 PUSH2 0x3E92 PUSH2 0x1CC3 PUSH2 0x568D SWAP6 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x5A84 JUMP JUMPDEST PUSH2 0x558E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x5662 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x56B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20AB JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 PUSH2 0x517 SWAP4 SWAP3 SWAP2 PUSH2 0x557A JUMP JUMPDEST PUSH2 0x52D PUSH1 0xE8 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x56E4 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x56F6 PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x52D PUSH2 0x52D SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x5721 PUSH2 0x1DCE PUSH2 0x52D SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x575B PUSH2 0x5760 SWAP2 PUSH2 0x52D SWAP5 SWAP4 PUSH2 0x573A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5755 PUSH2 0x5750 PUSH2 0x5749 PUSH2 0x56C9 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x56D3 JUMP JUMPDEST PUSH2 0x56E9 JUMP JUMPDEST SWAP2 PUSH2 0x60C2 JUMP JUMPDEST PUSH2 0x56FE JUMP JUMPDEST PUSH2 0x5710 JUMP JUMPDEST PUSH2 0x52D PUSH2 0x2710 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x52D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x5784 PUSH1 0xA PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x578C PUSH2 0x5770 JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x579E JUMPI PUSH2 0x517 SWAP1 PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x57C5 PUSH2 0x57B0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x202F JUMP JUMPDEST PUSH2 0x52D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x57E0 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x57ED DUP4 PUSH2 0x11D5 JUMP JUMPDEST DUP3 EQ PUSH2 0x5935 JUMPI DUP1 PUSH2 0x5879 SWAP3 PUSH2 0x584F PUSH2 0x5844 PUSH2 0x5807 DUP8 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x5813 DUP5 DUP11 DUP8 DUP5 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x582F PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL SWAP2 PUSH2 0x5827 DUP11 PUSH2 0x11D5 JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2190 DUP9 PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5897 PUSH2 0x206F PUSH1 0x1 SWAP4 PUSH2 0x208B PUSH2 0x587F PUSH2 0x5866 PUSH2 0x57CC JUMP JUMPDEST PUSH2 0x5870 PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x5710 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP5 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x64D DUP4 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x589F PUSH2 0x1FF8 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x5929 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x58B8 PUSH1 0x0 NOT PUSH2 0x1DCE JUMP JUMPDEST GT PUSH2 0x591C JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x58D4 JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x517 SWAP2 PUSH2 0x202F JUMP JUMPDEST ISZERO PUSH2 0x590A JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x58C1 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x58DA JUMPI DUP1 PUSH2 0x58C6 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x539D JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x539D JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x539D JUMP JUMPDEST PUSH2 0x594F PUSH2 0x1CC3 DUP4 DUP4 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x596A PUSH1 0x1 PUSH2 0x46AD DUP5 PUSH1 0x0 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x5978 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x59BD DUP3 DUP3 PUSH2 0x45F8 JUMP JUMPDEST ISZERO PUSH2 0x59AC JUMPI PUSH2 0x59D7 PUSH1 0x0 PUSH2 0x46AD DUP5 DUP3 PUSH2 0x460D DUP7 PUSH1 0xB PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x59E5 PUSH2 0x33C0 PUSH2 0x3FC1 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x59A3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A18 PUSH2 0x60CD JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A46 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x2025 JUMP JUMPDEST SWAP1 PUSH2 0x5A3F PUSH2 0x52D PUSH2 0x2046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5A20 JUMP JUMPDEST PUSH2 0x5A52 PUSH1 0x0 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5A10 JUMP JUMPDEST SWAP1 PUSH2 0x5A8E DUP3 PUSH2 0x37BE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP3 DUP4 ISZERO PUSH2 0x5ACA JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x5AB8 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5399 SWAP2 SWAP3 POP PUSH2 0x3437 PUSH2 0x20AB SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x5AD7 SWAP2 SWAP4 POP DUP3 SWAP1 PUSH2 0x4D4A JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5AAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 SWAP2 PUSH2 0x60FA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x517 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xA14 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x5199 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x5B16 PUSH2 0x26DD PUSH2 0x5765 JUMP JUMPDEST DUP1 PUSH2 0x5B20 DUP4 PUSH2 0x2603 JUMP JUMPDEST GT PUSH2 0x5BB5 JUMPI POP PUSH1 0x0 SWAP3 PUSH2 0x5B32 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x5B91 JUMPI POP SWAP2 PUSH2 0x5B85 PUSH2 0x5B8C SWAP3 PUSH2 0x5B75 PUSH2 0x517 SWAP7 SWAP6 PUSH2 0x5B64 PUSH2 0x51BD JUMP JUMPDEST SWAP7 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xD PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x5240 JUMP JUMPDEST PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 REVERT JUMPDEST PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 PUSH2 0x34B3 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x5AE9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x5BE6 DUP3 PUSH2 0x20AB JUMP JUMPDEST SUB PUSH2 0x5BEE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5C33 PUSH2 0x33C0 PUSH2 0x5C28 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C6F DUP5 PUSH1 0x9 PUSH2 0x4249 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x5C5E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA JUMP JUMPDEST SWAP1 PUSH2 0x64D PUSH2 0x35CE PUSH1 0x20 SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C ADD SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x11D5 JUMP JUMPDEST ISZERO PUSH2 0x5CA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202773272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA14 PUSH2 0x517 SWAP5 PUSH2 0x5D16 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5D0C PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x5DB9 PUSH1 0x0 SWAP2 PUSH2 0x5D6C PUSH1 0x20 SWAP5 PUSH2 0x5D3E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x5D5A PUSH2 0x5D4B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x3F3A DUP10 DUP4 ADD SWAP2 DUP3 PUSH2 0x5C65 JUMP JUMPDEST PUSH2 0x5D65 PUSH2 0x3F51 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x6379 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5DAD PUSH2 0x5D7A DUP4 PUSH2 0x5C98 JUMP JUMPDEST PUSH2 0x5DA6 PUSH2 0x1DCE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x11D5 JUMP JUMPDEST GT ISZERO PUSH2 0x5CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CED JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x5DF4 JUMPI PUSH1 0x0 MLOAD PUSH2 0x5399 SWAP1 PUSH2 0x20AB SWAP1 SWAP3 PUSH2 0x566 PUSH2 0x5DE3 PUSH2 0x566 PUSH1 0x0 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x5D1D JUMP JUMPDEST PUSH2 0x5E01 PUSH2 0x5459 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5E10 PUSH1 0x1 PUSH1 0x9 PUSH2 0x5A2F JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3595 CALLER PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x517 PUSH2 0x5DF9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x517 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x4F2 JUMPI PUSH2 0x52D SWAP2 PUSH2 0x5E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x52D SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5E8C SWAP1 PUSH2 0x5D16 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x619 JUMP JUMPDEST PUSH2 0x5EB2 PUSH2 0x5EAC PUSH2 0x52D SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5ED9 JUMPI PUSH2 0x5ECE RETURNDATASIZE PUSH2 0x35C1 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5EF6 PUSH2 0x1C6F PUSH1 0x20 SWAP4 PUSH2 0x5EF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1C14 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x5F27 PUSH2 0x5F0B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x5F1C DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x5E63 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x5F7A JUMPI JUMPDEST POP PUSH2 0x5F5D JUMPI PUSH2 0x5F41 PUSH2 0x5EBF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5F50 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x490A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5F6C PUSH2 0x5EB2 PUSH2 0x5399 SWAP3 PUSH2 0x5E99 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5F9D SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FA4 JUMPI JUMPDEST PUSH2 0x5F95 DUP2 DUP4 PUSH2 0xA5D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5E4F JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x5F34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F8B JUMP JUMPDEST PUSH2 0x52D PUSH1 0x10 PUSH2 0x1CA4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x517 PUSH2 0x5FD0 PUSH2 0x5FCA DUP5 PUSH2 0x35C1 JUMP JUMPDEST SWAP4 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x5FB5 JUMP JUMPDEST PUSH2 0x5FE6 DUP2 PUSH2 0x6419 JUMP JUMPDEST SWAP1 PUSH2 0x5FF7 PUSH1 0x1 SWAP3 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x6002 DUP5 PUSH2 0x5FBA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD DUP5 ADD SWAP1 JUMPDEST PUSH2 0x6015 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6065 JUMPI PUSH2 0x6049 SWAP1 PUSH1 0x0 NOT ADD SWAP3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP5 MSTORE8 PUSH2 0x26E2 PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x6058 PUSH2 0x1DCE PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x6065 JUMPI SWAP1 SWAP2 DUP2 PUSH2 0x600A JUMP JUMPDEST PUSH2 0x600F JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x6089 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP2 POP PUSH2 0x65BB JUMP JUMPDEST SWAP1 PUSH2 0x60A1 PUSH2 0x1CC3 DUP3 DUP5 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x60A9 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x34B3 SWAP2 PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST POP POP POP PUSH2 0x52D PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x60D8 PUSH2 0x1CC3 PUSH2 0x37B4 JUMP JUMPDEST PUSH2 0x60DE JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x52D PUSH1 0x80 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6103 DUP2 PUSH2 0x5493 JUMP JUMPDEST SWAP1 PUSH2 0x6110 PUSH2 0x208B DUP4 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0x6119 DUP3 PUSH2 0x555D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6286 JUMPI JUMPDEST PUSH2 0x53DD PUSH2 0x3FC1 DUP5 SWAP4 PUSH2 0x517 SWAP8 PUSH2 0x61F4 SWAP5 PUSH2 0x6151 SWAP9 SWAP8 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x6143 DUP3 PUSH2 0x25FA JUMP JUMPDEST SWAP11 PUSH2 0x615A DUP13 PUSH1 0x1 SWAP15 DUP16 PUSH2 0x11D5 JUMP JUMPDEST SWAP6 DUP7 SWAP2 DUP11 PUSH2 0x56BD JUMP JUMPDEST PUSH2 0x627E JUMPI JUMPDEST POP POP PUSH2 0x618B PUSH2 0x617D DUP3 PUSH2 0x6179 PUSH2 0x6173 PUSH2 0x60F0 JUMP JUMPDEST DUP3 PUSH2 0x5710 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x588D DUP8 PUSH1 0x5 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x6193 PUSH2 0x530C JUMP JUMPDEST SWAP1 PUSH2 0x61C2 PUSH2 0x619F PUSH2 0x204A JUMP JUMPDEST DUP1 SWAP4 OR PUSH2 0x61AD DUP6 DUP14 DUP10 PUSH2 0x5726 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP2 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x61D3 PUSH1 0x4 SWAP4 PUSH2 0x2190 DUP13 DUP7 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x61E5 PUSH2 0x61DF DUP7 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 DUP6 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x622F JUMPI JUMPDEST POP POP POP POP PUSH2 0x1C14 JUMP JUMPDEST SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x621F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x2133 PUSH2 0x1DE9 DUP3 PUSH2 0x1487 JUMP JUMPDEST DUP9 ADD SWAP3 PUSH2 0x623F PUSH2 0x2208 DUP6 DUP5 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x624B PUSH2 0x1DCE DUP4 PUSH2 0x11D5 JUMP JUMPDEST SUB PUSH2 0x61EB JUMPI PUSH2 0x52D PUSH2 0x625C SWAP2 PUSH2 0x1487 JUMP JUMPDEST DUP4 SUB PUSH2 0x6269 JUMPI JUMPDEST DUP1 PUSH2 0x61EB JUMP JUMPDEST PUSH2 0x6276 SWAP3 PUSH2 0x2190 SWAP2 PUSH2 0x1284 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x6263 JUMP JUMPDEST SSTORE DUP3 CODESIZE PUSH2 0x615F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 EQ DUP6 DUP3 EQ OR ISZERO PUSH2 0x62A3 JUMPI JUMPDEST POP PUSH2 0x6121 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x62B4 SWAP2 DUP5 SWAP4 SWAP7 SWAP6 SWAP5 PUSH2 0x4D4A JUMP JUMPDEST PUSH2 0x2271 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE PUSH2 0x629D JUMP JUMPDEST ISZERO PUSH2 0x62C8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH2 0x52D PUSH2 0x52D SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2642 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6334 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265202776272076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x6398 PUSH2 0x6385 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6392 PUSH2 0x1DCE PUSH1 0x41 PUSH2 0x11D5 JUMP JUMPDEST EQ PUSH2 0x62C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP2 PUSH2 0x63B6 PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND LT PUSH2 0x63FE JUMPI JUMPDEST PUSH2 0x63CA PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP5 AND EQ DUP1 ISZERO PUSH2 0x63E4 JUMPI JUMPDEST PUSH2 0x63DF SWAP1 PUSH2 0x632D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP PUSH2 0x63DF PUSH2 0x63F2 PUSH1 0x1C PUSH2 0x630D JUMP JUMPDEST PUSH1 0xFF DUP6 AND EQ SWAP1 POP PUSH2 0x63D6 JUMP JUMPDEST SWAP2 PUSH2 0x6413 SWAP1 PUSH2 0x640D PUSH1 0x1B PUSH2 0x630D JUMP JUMPDEST SWAP1 PUSH2 0x631A JUMP JUMPDEST SWAP2 PUSH2 0x63C0 JUMP JUMPDEST PUSH2 0x6423 PUSH1 0x0 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 PUSH2 0x6449 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6599 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH2 0x646A DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6577 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 PUSH2 0x6484 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6555 JUMPI JUMPDEST POP PUSH4 0x5F5E100 PUSH2 0x649B DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6533 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x64B0 DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x6511 JUMPI JUMPDEST POP PUSH2 0x64C3 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x64EF JUMPI JUMPDEST PUSH2 0x64D8 PUSH2 0x1DCE PUSH1 0xA PUSH2 0x11D5 JUMP JUMPDEST LT ISZERO PUSH2 0x64E1 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x52D SWAP1 PUSH2 0x64D PUSH1 0x1 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x6500 PUSH2 0x650B SWAP2 PUSH2 0x26E2 PUSH1 0x64 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x2 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 PUSH2 0x64CB JUMP JUMPDEST PUSH2 0x652C SWAP2 PUSH2 0x26E2 PUSH2 0x6521 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64B8 JUMP JUMPDEST PUSH2 0x654E SWAP2 PUSH2 0x26E2 PUSH2 0x6543 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x8 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x64A3 JUMP JUMPDEST PUSH2 0x6570 SWAP2 PUSH2 0x26E2 PUSH2 0x6565 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x10 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x648C JUMP JUMPDEST PUSH2 0x6592 SWAP2 PUSH2 0x26E2 PUSH2 0x6587 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x20 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6472 JUMP JUMPDEST PUSH2 0x65B4 SWAP2 PUSH2 0x26E2 PUSH2 0x65A9 SWAP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 PUSH2 0x64D PUSH1 0x40 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x6451 JUMP JUMPDEST PUSH2 0x5399 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x5F6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x2C 0x21 STOP SWAP9 LOG4 PUSH28 0xBF27B9194CEAB9E7606AC7DA4D41D66802AD6E129D7B1882F264736F PUSH13 0x634300081C0033A26469706673 PC 0x22 SLT KECCAK256 PREVRANDAO LOG3 0x2B SWAP6 0x1F 0xEC 0xE9 0xC5 BLOBHASH CALL CODESIZE RETURN 0xDE DUP11 0xB9 DUP3 0xD8 GASLIMIT PUSH14 0x9BEFF404E9C8CD94DE82ACFE9D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"145:2040:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;145:2040:16;;:::o;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;145:2040:16;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;145:2040:16;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;145:2040:16;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;;;:::i;190:28::-;;145:2040;190:28;;;;;;;;;;:::i;:::-;;;:::i;145:2040::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2078:104::-;2156:18;2163:11;2156:18;:::i;1500:62:2:-;;;:::i;:::-;1554:1;;:::i;145:2040:16:-;;;;;;;;;;;:::i;2293:101:2:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;1638:85::-;1710:6;;;:::i;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;145:2040:16:-;;;;;-1:-1:-1;;;;;145:2040:16;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;145:2040:16;;;;;;;;;;;;-1:-1:-1;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;145:2040:16;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;145:2040:16;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;145:2040:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;145:2040:16;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;1385:685::-;1900:42;;1907:35;1484:16;;1872:15;;1484:35;;;;;:::i;:::-;;:::i;:::-;1538:11;:18;1530:61;1538:18;;;;;:::i;:::-;:39;-1:-1:-1;;;;;145:2040:16;;1538:39;;-1:-1:-1;;;;;145:2040:16;;;1538:39;;1530:61;:::i;:::-;1624:22;:18;;145:2040;;;1624:18;:22;;;:::i;:::-;;;:::i;:::-;1661:18;;;;1657:203;;1872:15;;145:2040;;1872:15;;:::i;:::-;1907:35;:::i;:::-;1900:42;:::i;:::-;1971:34;:29;;;:::i;:::-;:34;:::i;:::-;:36;;;145:2040;;;;1971:36;-1:-1:-1;;;1971:36:16;;;;;;;;;;;;;;;;1953:55;1960:48;2026:36;1971;1953:55;1971:36;;;;;1385:685;1960:48;:10;:48;:::i;:::-;1953:55;:::i;2026:36::-;;;145:2040;;;;2026:36;;;;1385:685::o;1971:36::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1657:203::-;1808:32;1721:22;;1808:40;1721:22;;;:::i;:::-;1758:35;:18;;;;;:::i;:::-;:35;;:::i;:::-;1808:32;;:::i;:::-;:40;:::i;1385:685::-;;;;:::i;1500:62:2:-;;1554:1;1500:62;;;;;;;;:::i;:::-;1554:1;:::i;145:2040:16:-;;;;:::o;:::-;;;-1:-1:-1;;;145:2040:16;;;;;;;;;;;;-1:-1:-1;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;533:844::-;;;;;;;;808:16;799:40;807:17;808:16;;;:10;:16;:::i;:::-;145:2040;;;;;808:16;807:17;;145:2040;807:17;799:40;:::i;:::-;145:2040;;879:187;;;;;;;;;;;;;;;;;;;;;;948:10;;879:187;;:::i;:::-;;;;;;;;;1258:22;1186:16;:23;1107:22;1220:60;1107:22;;:::i;:::-;1140:11;;;;;:35;:11;;:35;:::i;:::-;808:10;1186:16;:::i;:::-;:23;:::i;:::-;1258:22;:18;;145:2040;;;1258:18;:22;;:::i;:::-;1220:35;;:16;:35;:::i;:60::-;1298:36;;;:::i;:::-;;;145:2040;;;;1298:36;;;;533:844;:::o;:::-;779:7;;533:844;;;;;145:2040;779:7;:::i;1500:62:2:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;-1:-1:-1;;;;;145:2040:16;;-1:-1:-1;;;;;145:2040:16;;2627:22:2;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:2;;-1:-1:-1;;;;;145:2040:16;2672:31:2;;;145:2040:16;;;;2543:215:2;;;;:::i;1796:162::-;1855:7;;:::i;:::-;735:10:5;;1855:23:2;735:10:5;1855:23:2;145:2040:16;1855:23:2;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:2;;;;-1:-1:-1;;;;;145:2040:16;;;1901:40:2;145:2040:16;;1901:40:2;;;145:2040:16;;-1:-1:-1;;;;;145:2040:16;;;;;;;;;;:::i;:::-;;;;:::i;2912:187:2:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;145:2040:16;;;;3052:40:2;;;;2912:187::o"},"methodIdentifiers":{"collections(uint256)":"fdbda0ec","createCollection(string,string,uint256,uint256,string,string)":"d6a4448b","deleteCollection(address)":"a6bb6cac","getCollections()":"46e63586","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"}],\"name\":\"CollectionDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collections\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI_\",\"type\":\"string\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"}],\"name\":\"deleteCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollections\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"CollectionFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xbc10927da9f47d87e6cd46a3218526b7718716a717d07722791eb7de6befc2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d838bc5e79732a20acc5578a4fa0dd88ba484c906346ad4daea2654ecb922a94\",\"dweb:/ipfs/QmaXqkJiniK3xSi5MEaCrYnFDa9AXd6FvByHMMKaWEEEK7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Collection.sol\":{\"keccak256\":\"0x7a9c8fbf2596b77e7e00ba918b25f38fc5b8660aa095258a0a51eba9ac15647d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72666aa3ce1745cdf5bc76a0ba6705f542937945e4ba32c1e28e6c7bd9c2fb64\",\"dweb:/ipfs/QmYL2fTwEF3QH7biDT2DEq9xVLhzyAWMZFmgEvQTzsWn67\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0x1e13dbc01ab7e3e17974ce38b4c32eba8aaa3be16931516bf92912aa49e38aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f334d27f6eeaf9e74cffdacd81466f56ae3f6a12a52b5f136e22ac08f4e36dfc\",\"dweb:/ipfs/QmRSFMRbY18jj2gJ3emiiccd8gpx8hyr5UwZRc3Du6E6nf\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":387,"contract":"contracts/Factory.sol:CollectionFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":8660,"contract":"contracts/Factory.sol:CollectionFactory","label":"collections","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"},{"astId":8664,"contract":"contracts/Factory.sol:CollectionFactory","label":"_usedNames","offset":0,"slot":"2","type":"t_mapping(t_string_memory_ptr,t_bool)"},{"astId":8668,"contract":"contracts/Factory.sol:CollectionFactory","label":"_collectionIndex","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_string_memory_ptr,t_bool)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"erc721a/contracts/ERC721A.sol":{"ERC721A":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_available_length_string_fromMemory":{"entryPoint":193,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_string_fromMemory":{"entryPoint":269,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":108,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":130,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":551,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":520,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC721A":{"entryPoint":881,"id":9000,"parameterSlots":2,"returnSlots":0},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":466,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_ERC721A":{"entryPoint":342,"id":null,"parameterSlots":0,"returnSlots":2},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":158,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":398,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":70,"id":null,"parameterSlots":2,"returnSlots":0},"fun_revert":{"entryPoint":969,"id":10948,"parameterSlots":1,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":9022,"parameterSlots":0,"returnSlots":1},"fun_startTokenId":{"entryPoint":959,"id":9009,"parameterSlots":0,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":376,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":48,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":508,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":440,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":848,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_string_to_string":{"entryPoint":838,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":858,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":479,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002b5761001a610014610156565b90610371565b6040516111f06103d382396111f090f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006757604052565b610030565b9061008061007960405190565b9283610046565b565b6001600160401b03811161006757602090601f01601f19160190565b60005b8381106100b15750506000910152565b81810151838201526020016100a1565b909291926100d66100d182610082565b61006c565b938185528183011161002b5761008091602085019061009e565b9080601f8301121561002b57815161010a926020016100c1565b90565b91909160408184031261002b5780516001600160401b03811161002b57836101369183016100f0565b60208201519093906001600160401b03811161002b5761010a92016100f0565b6101746115c3803803806101698161006c565b92833981019061010d565b9091565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156101ae575b60208310146101a957565b610178565b91607f169161019e565b9160001960089290920291821b911b5b9181191691161790565b61010a61010a61010a9290565b91906101f061010a6101f8936101d2565b9083546101b8565b9055565b610080916000916101df565b818110610213575050565b8061022160006001936101fc565b01610208565b9190601f811161023657505050565b61024861008093600052602060002090565b906020601f84018190048301931061026a575b6020601f909101040190610208565b909150819061025b565b9061027d815190565b906001600160401b038211610067576102a08261029a855461018e565b85610227565b602090601f83116001146102db576101f89291600091836102d0575b5050600019600883021c1916906002021790565b0151905038806102bc565b601f198316916102f085600052602060002090565b9260005b81811061032e57509160029391856001969410610315575b50505002019055565b01516000196008601f8516021c1916905538808061030c565b919360206001819287870151815501950192016102f4565b9061008091610274565b90600019906101c8565b9061036a61010a6101f8926101d2565b8254610350565b90610380610387926002610346565b6003610346565b61038f6103bf565b61039a81600061035a565b6103ab6103a76000199290565b9190565b106103b257565b63fed8210f60e01b6103c9565b61010a60006101d2565b60005260046000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806318160ddd146100de57806323b872dd146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036100f757610560565b610522565b61050b565b6103de565b61038b565b610370565b610341565b61032d565b610319565b6102c5565b6102ac565b610238565b6101de565b610135565b600080fd5b6001600160e01b031981165b036100f757565b9050359061011c826100fc565b565b906020828203126100f7576101329161010f565b90565b346100f75761016361015061014b36600461011e565b61059c565b6040515b91829182901515815260200190565b0390f35b60009103126100f757565b60005b8381106101855750506000910152565b8181015183820152602001610175565b6101b66101bf6020936101c9936101aa815190565b80835293849260200190565b95869101610172565b601f01601f191690565b0190565b602080825261013292910190610195565b346100f7576101ee366004610167565b6101636101f9610704565b604051918291826101cd565b80610108565b9050359061011c82610205565b906020828203126100f7576101329161020b565b6001600160a01b031690565b346100f75761016361025361024e366004610218565b610733565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610108565b9050359061011c8261026d565b91906040838203126100f7576101329060206102a5828661027c565b940161020b565b6102c06102ba366004610289565b90610772565b604051005b346100f7576102d5366004610167565b6101636102e061078f565b6040519182918290815260200190565b90916060828403126100f757610132610309848461027c565b9360406102a5826020870161027c565b6102c06103273660046102f0565b91610874565b6102c061033b3660046102f0565b91610aca565b346100f757610163610253610357366004610218565b610ade565b906020828203126100f7576101329161027c565b346100f7576101636102e061038636600461035c565b610b15565b346100f75761039b366004610167565b6101636101f9610b58565b801515610108565b9050359061011c826103a6565b91906040838203126100f7576101329060206103d7828661027c565b94016103ae565b346100f7576102c06103f13660046103bb565b90610b82565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761042f57604052565b6103f7565b9061011c61044160405190565b928361040d565b67ffffffffffffffff811161042f57602090601f01601f19160190565b90826000939282370152565b9092919261048661048182610448565b610434565b93818552818301116100f75761011c916020850190610465565b9080601f830112156100f75781602061013293359101610471565b906080828203126100f7576104d0818361027c565b926104de826020850161027c565b926104ec836040830161020b565b92606082013567ffffffffffffffff81116100f75761013292016104a0565b6102c06105193660046104bb565b92919091610be4565b346100f7576101636101f9610538366004610218565b610c6a565b91906040838203126100f757610132906020610559828661027c565b940161027c565b346100f75761016361015061057636600461053d565b90610ce4565b61058f6105896101329290565b60e01b90565b6001600160e01b03191690565b6105a96301ffc9a761057c565b6001600160e01b03198216149081156105eb575b81156105c7575090565b90506105e76105d9635b5e139f61057c565b916001600160e01b03191690565b1490565b90506105fa6380ac58cd61057c565b6001600160e01b0319821614906105bd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610642575b602083101461063d57565b61060c565b91607f1691610632565b8054600093929161066961065f83610622565b8085529360200190565b91600181169081156106bb575060011461068257505050565b6106959192939450600052602060002090565b916000925b8184106106a75750500190565b80548484015260209093019260010161069a565b92949550505060ff1916825215156020020190565b906101329161064c565b9061011c6106f4926106eb60405190565b938480926106d0565b038361040d565b610132906106da565b61013260026106fb565b6101326101326101329290565b906107259061070e565b600052602052604060002090565b61074361073f82610d3b565b1590565b61076557600061075761013292600661071b565b01546001600160a01b031690565b6333d1c03960e21b610dbb565b61011c91600191610dea565b6101329081565b610132905461077e565b6107b66107ae61079f6000610785565b6107a96001610785565b900390565b6107a9610e92565b9081600019806107c5565b9190565b036107cd5750565b6101329192506101c96008610785565b6101329061022c906001600160a01b031682565b610132906107dd565b6101329081906001600160a01b031681565b6101326001600160a01b0361070e565b61022c6101326101329290565b610132906107f1565b9061072590610829565b90600019905b9181191691161790565b9061085c6101326108639261070e565b825461083c565b9055565b610132600160e11b61070e565b61088e61088961088385610e9c565b926107f1565b6107fa565b926108aa6108a561089d61080c565b80961661081c565b6107f1565b936108b76108a58461081c565b6108d26001600160a01b0387165b916001600160a01b031690565b03610a9a576108e082610f66565b9490336001600160a01b03881681148188141715610a6c575b506108896107c1959493926109be926109ea98610a62575b506109396109208a6005610832565b61093361092c82610785565b6000190190565b9061084c565b610959610947826005610832565b61093361095382610785565b60010190565b610961610867565b9561098661097082848d610fe0565b4260a01b908917176001600160a01b0384161790565b9061099c600492610997898561071b565b61084c565b6000976109b16109ab8a61070e565b91831690565b146109fe575b50506107f1565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a461070e565b146109f157565b633a954ecd60e21b610dbb565b610a10610a0b600161070e565b880190565b91610a23610a1e848361071b565b610785565b610a2f6107c18b61070e565b14610a3b575b506109b7565b610a476101328a610785565b8314610a3557610a5a926109979161071b565b388080610a35565b6000905538610911565b61073f610a7e91899796959497610ce4565b610a8d573894919293946108f9565b632ce44b5f60e11b610dbb565b62a1148160e81b610dbb565b90610ab361048183610448565b918252565b6101326000610aa6565b610132610ab8565b909161011c92610ad8610ac2565b92610be4565b6108a5610af661013292610af0600090565b50610e9c565b61081c565b6101329061081c565b61013267ffffffffffffffff61070e565b610b2261022c6000610afb565b6001600160a01b03821614610b4b57610a1e610b3f916005610832565b610b47610b04565b1690565b6323d3ad8160e21b610dbb565b61013260036106fb565b9060ff90610842565b90610b7b61013261086392151590565b8254610b62565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31610bdf610bd5610bcf33610bca87610bc588610bc0856007610832565b610832565b610b6b565b610829565b93610829565b9361015460405190565b0390a3565b91929092610bf3818585610874565b833b610c026107c1600061070e565b03610c0e575b50505050565b610c1b9361073f936110a3565b610c285738808080610c08565b6368d2bf6b60e11b610dbb565b6101c9610c4d92602092610c47815190565b94859290565b93849101610172565b610c64906101329392610c35565b90610c35565b610c7661073f82610d3b565b610cd757610c82611162565b8051610c916107c1600061070e565b14610ccd57610132610cc191610ca96101329461116a565b90610cb360405190565b938492602084019283610c56565b9081038252038261040d565b5050610132610ac2565b630a14c4b560e41b610dbb565b61013291610bc0610cff92610cf7600090565b506007610832565b5460ff1690565b634e487b7160e01b600052601160045260246000fd5b8015610d29576000190190565b610d06565b610132600160e01b61070e565b9060009182610d48610e92565b821015610d53575050565b610d606101326000610785565b8210610d6a575050565b509091505b610d7d610a1e82600461071b565b9081610d8c6107c1600061070e565b03610da057610d9b9150610d1c565b610d6f565b506105e7610dac610d2e565b610db6600061070e565b921690565b60005260046000fd5b906001600160a01b0390610842565b90610de361013261086392610829565b8254610dc4565b91610df482610ade565b9080610e77575b610e58575b610e21610bcf610e2792610bca866000610e1b88600661071b565b01610dd3565b9161070e565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925610e5260405190565b600090a4565b610e6561073f3383610ce4565b15610e00576367d9dca160e11b610dbb565b5033610e8b6001600160a01b0383166108c5565b1415610dfb565b610132600061070e565b610ea4610e92565b811015610eb9575b636f96cda160e11b610dbb565b600490610eca610a1e82600461071b565b91600091610ed78361070e565b8414610efb575050610ef36109ab610eed610d2e565b9261070e565b03610eac5790565b90919250610f0b61013284610785565b811015610eac57909190600019015b91610f28610a1e848361071b565b92610f328361070e565b8414610f5a575050610f486109ab610eed610d2e565b1461013257636f96cda160e11b610dbb565b90925060001901610f1a565b610132610f7d91610f75600090565b50600661071b565b90815490565b61013260e861070e565b61013290610f9e6107c16101329490565b901c90565b610fb06101326101329290565b62ffffff1690565b6101326101326101329262ffffff1690565b61013290610fdb6107c16101329490565b901b90565b61101561101a916101329493610ff4600090565b5061100f61100a611003610f83565b8097610f8d565b610fa3565b916111af565b610fb8565b610fca565b9050519061011c826100fc565b906020828203126100f7576101329161101f565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261013292910190610195565b61058f6105896101329263ffffffff1690565b3d1561109e576110933d610aa6565b903d6000602084013e565b606090565b916110bb610bca6020936110b5600090565b50610829565b63150b7a02936000336110ec6110d060405190565b988996879586946110e18c60e01b90565b865260048601611040565b03925af160009281611131575b5061112257611106611084565b80516111156107c1600061070e565b14610c2857805190602001fd5b6105d961058f6105e792611071565b61115491935060203d60201161115b575b61114c818361040d565b81019061102c565b91386110f9565b503d611142565b610132610ac2565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156111a1576001600a91611185565b809350602091039203918252565b50505061013260009056fea2646970667358221220bf9e059293e91df1e5adc5201bb7e2ce31da4e59b898427f11a0bbd07590e46564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2B JUMPI PUSH2 0x1A PUSH2 0x14 PUSH2 0x156 JUMP JUMPDEST SWAP1 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F0 PUSH2 0x3D3 DUP3 CODECOPY PUSH2 0x11F0 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30 JUMP JUMPDEST SWAP1 PUSH2 0x80 PUSH2 0x79 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x46 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x67 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xD6 PUSH2 0xD1 DUP3 PUSH2 0x82 JUMP JUMPDEST PUSH2 0x6C JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2B JUMPI PUSH2 0x80 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x9E JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B JUMPI DUP2 MLOAD PUSH2 0x10A SWAP3 PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x2B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B JUMPI DUP4 PUSH2 0x136 SWAP2 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B JUMPI PUSH2 0x10A SWAP3 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x15C3 DUP1 CODESIZE SUB DUP1 PUSH2 0x169 DUP2 PUSH2 0x6C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x10D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1A9 JUMPI JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x19E JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x10A PUSH2 0x10A SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F0 PUSH2 0x10A PUSH2 0x1F8 SWAP4 PUSH2 0x1D2 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1B8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x80 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1DF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x213 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x221 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x1FC JUMP JUMPDEST ADD PUSH2 0x208 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x236 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x248 PUSH2 0x80 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x208 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST SWAP1 PUSH2 0x27D DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x67 JUMPI PUSH2 0x2A0 DUP3 PUSH2 0x29A DUP6 SLOAD PUSH2 0x18E JUMP JUMPDEST DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DB JUMPI PUSH2 0x1F8 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2D0 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2F0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32E JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x315 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30C JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP1 PUSH2 0x80 SWAP2 PUSH2 0x274 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1C8 JUMP JUMPDEST SWAP1 PUSH2 0x36A PUSH2 0x10A PUSH2 0x1F8 SWAP3 PUSH2 0x1D2 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH2 0x380 PUSH2 0x387 SWAP3 PUSH1 0x2 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x38F PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x39A DUP2 PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x3A7 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x3B2 JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x10A PUSH1 0x0 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB6 JUMPI PUSH4 0xE985E9C5 SUB PUSH2 0xF7 JUMPI PUSH2 0x560 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x10F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x11E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x185 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1BF PUSH1 0x20 SWAP4 PUSH2 0x1C9 SWAP4 PUSH2 0x1AA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x26D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 PUSH2 0x309 DUP5 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x2A5 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0x874 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0xACA JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0xB58 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x3D7 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2C0 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BB JUMP JUMPDEST SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x42F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x441 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x486 PUSH2 0x481 DUP3 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF7 JUMPI PUSH2 0x11C SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x465 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF7 JUMPI DUP2 PUSH1 0x20 PUSH2 0x132 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x4D0 DUP2 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4DE DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4EC DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x20B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP3 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBE4 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x559 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH4 0x1FFC9A7 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5EB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x5C7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 PUSH2 0x5D9 PUSH4 0x5B5E139F PUSH2 0x57C JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH4 0x80AC58CD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x642 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x63D JUMPI JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x632 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x669 PUSH2 0x65F DUP4 PUSH2 0x622 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x6A7 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x132 SWAP2 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x6F4 SWAP3 PUSH2 0x6EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x6D0 JUMP JUMPDEST SUB DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x132 PUSH1 0x2 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x743 PUSH2 0x73F DUP3 PUSH2 0xD3B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x0 PUSH2 0x757 PUSH2 0x132 SWAP3 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x11C SWAP2 PUSH1 0x1 SWAP2 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x132 SWAP1 SLOAD PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7AE PUSH2 0x79F PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7A9 PUSH1 0x1 PUSH2 0x785 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xE92 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x7CD JUMPI POP JUMP JUMPDEST PUSH2 0x132 SWAP2 SWAP3 POP PUSH2 0x1C9 PUSH1 0x8 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x22C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x85C PUSH2 0x132 PUSH2 0x863 SWAP3 PUSH2 0x70E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x83C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x70E JUMP JUMPDEST PUSH2 0x88E PUSH2 0x889 PUSH2 0x883 DUP6 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST SWAP3 PUSH2 0x8AA PUSH2 0x8A5 PUSH2 0x89D PUSH2 0x80C JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x81C JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST SWAP4 PUSH2 0x8B7 PUSH2 0x8A5 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x8D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0xA9A JUMPI PUSH2 0x8E0 DUP3 PUSH2 0xF66 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 EQ DUP2 DUP9 EQ OR ISZERO PUSH2 0xA6C JUMPI JUMPDEST POP PUSH2 0x889 PUSH2 0x7C1 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x9BE SWAP3 PUSH2 0x9EA SWAP9 PUSH2 0xA62 JUMPI JUMPDEST POP PUSH2 0x939 PUSH2 0x920 DUP11 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x933 PUSH2 0x92C DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x959 PUSH2 0x947 DUP3 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x933 PUSH2 0x953 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x961 PUSH2 0x867 JUMP JUMPDEST SWAP6 PUSH2 0x986 PUSH2 0x970 DUP3 DUP5 DUP14 PUSH2 0xFE0 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP10 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x99C PUSH1 0x4 SWAP3 PUSH2 0x997 DUP10 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x9B1 PUSH2 0x9AB DUP11 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x9FE JUMPI JUMPDEST POP POP PUSH2 0x7F1 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0x9F1 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0B PUSH1 0x1 PUSH2 0x70E JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xA23 PUSH2 0xA1E DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0xA2F PUSH2 0x7C1 DUP12 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xA3B JUMPI JUMPDEST POP PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xA47 PUSH2 0x132 DUP11 PUSH2 0x785 JUMP JUMPDEST DUP4 EQ PUSH2 0xA35 JUMPI PUSH2 0xA5A SWAP3 PUSH2 0x997 SWAP2 PUSH2 0x71B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x911 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA7E SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xA8D JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xDBB JUMP JUMPDEST SWAP1 PUSH2 0xAB3 PUSH2 0x481 DUP4 PUSH2 0x448 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x11C SWAP3 PUSH2 0xAD8 PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0xAF6 PUSH2 0x132 SWAP3 PUSH2 0xAF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x132 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x70E JUMP JUMPDEST PUSH2 0xB22 PUSH2 0x22C PUSH1 0x0 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4B JUMPI PUSH2 0xA1E PUSH2 0xB3F SWAP2 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0xB47 PUSH2 0xB04 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x132 PUSH1 0x3 PUSH2 0x6FB JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xB7B PUSH2 0x132 PUSH2 0x863 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB62 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0xBDF PUSH2 0xBD5 PUSH2 0xBCF CALLER PUSH2 0xBCA DUP8 PUSH2 0xBC5 DUP9 PUSH2 0xBC0 DUP6 PUSH1 0x7 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST SWAP4 PUSH2 0x829 JUMP JUMPDEST SWAP4 PUSH2 0x154 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0xBF3 DUP2 DUP6 DUP6 PUSH2 0x874 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0xC02 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xC0E JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC1B SWAP4 PUSH2 0x73F SWAP4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xC28 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xC08 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xC4D SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xC47 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0xC64 SWAP1 PUSH2 0x132 SWAP4 SWAP3 PUSH2 0xC35 JUMP JUMPDEST SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xC76 PUSH2 0x73F DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xCD7 JUMPI PUSH2 0xC82 PUSH2 0x1162 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC91 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xCCD JUMPI PUSH2 0x132 PUSH2 0xCC1 SWAP2 PUSH2 0xCA9 PUSH2 0x132 SWAP5 PUSH2 0x116A JUMP JUMPDEST SWAP1 PUSH2 0xCB3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xC56 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x40D JUMP JUMPDEST POP POP PUSH2 0x132 PUSH2 0xAC2 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x132 SWAP2 PUSH2 0xBC0 PUSH2 0xCFF SWAP3 PUSH2 0xCF7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x832 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xD29 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x70E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0xD48 PUSH2 0xE92 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD53 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD60 PUSH2 0x132 PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST DUP3 LT PUSH2 0xD6A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0xD7D PUSH2 0xA1E DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xD8C PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xDA0 JUMPI PUSH2 0xD9B SWAP2 POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST POP PUSH2 0x5E7 PUSH2 0xDAC PUSH2 0xD2E JUMP JUMPDEST PUSH2 0xDB6 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xDE3 PUSH2 0x132 PUSH2 0x863 SWAP3 PUSH2 0x829 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 PUSH2 0xDF4 DUP3 PUSH2 0xADE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0xE77 JUMPI JUMPDEST PUSH2 0xE58 JUMPI JUMPDEST PUSH2 0xE21 PUSH2 0xBCF PUSH2 0xE27 SWAP3 PUSH2 0xBCA DUP7 PUSH1 0x0 PUSH2 0xE1B DUP9 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0xE52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST PUSH2 0xE65 PUSH2 0x73F CALLER DUP4 PUSH2 0xCE4 JUMP JUMPDEST ISZERO PUSH2 0xE00 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST POP CALLER PUSH2 0xE8B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8C5 JUMP JUMPDEST EQ ISZERO PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xE92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEB9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0xECA PUSH2 0xA1E DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xED7 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xEFB JUMPI POP POP PUSH2 0xEF3 PUSH2 0x9AB PUSH2 0xEED PUSH2 0xD2E JUMP JUMPDEST SWAP3 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xEAC JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0xF0B PUSH2 0x132 DUP5 PUSH2 0x785 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEAC JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0xF28 PUSH2 0xA1E DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH2 0xF32 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xF5A JUMPI POP POP PUSH2 0xF48 PUSH2 0x9AB PUSH2 0xEED PUSH2 0xD2E JUMP JUMPDEST EQ PUSH2 0x132 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x132 PUSH2 0xF7D SWAP2 PUSH2 0xF75 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0xE8 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xF9E PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0xFB0 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFDB PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1015 PUSH2 0x101A SWAP2 PUSH2 0x132 SWAP5 SWAP4 PUSH2 0xFF4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x100F PUSH2 0x100A PUSH2 0x1003 PUSH2 0xF83 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xFA3 JUMP JUMPDEST SWAP2 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x109E JUMPI PUSH2 0x1093 RETURNDATASIZE PUSH2 0xAA6 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x10BB PUSH2 0xBCA PUSH1 0x20 SWAP4 PUSH2 0x10B5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x829 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x10EC PUSH2 0x10D0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x10E1 DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1040 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1131 JUMPI JUMPDEST POP PUSH2 0x1122 JUMPI PUSH2 0x1106 PUSH2 0x1084 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1115 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xC28 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5D9 PUSH2 0x58F PUSH2 0x5E7 SWAP3 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x1154 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x115B JUMPI JUMPDEST PUSH2 0x114C DUP2 DUP4 PUSH2 0x40D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x102C JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x10F9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x1185 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST POP POP POP PUSH2 0x132 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP15 SDIV SWAP3 SWAP4 0xE9 SAR CALL 0xE5 0xAD 0xC5 KECCAK256 SHL 0xB7 0xE2 0xCE BALANCE 0xDA 0x4E MSIZE 0xB8 SWAP9 TIMESTAMP PUSH32 0x11A0BBD07590E46564736F6C634300081C003300000000000000000000000000 ","sourceMap":"1053:48812:17:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1053:48812:17;;;;;;;;-1:-1:-1;;1053:48812:17;;;:::o;:::-;;;;;;;;-1:-1:-1;;1053:48812:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1053:48812:17;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1053:48812:17;;;;;;;;;;:::i;:::-;;;;:::i;5261:246::-;;5327:13;5350:17;5261:246;5327:13;;:::i;:::-;5350:17;;:::i;:::-;5393:15;;:::i;:::-;5377:31;;;;:::i;:::-;5423:35;;-1:-1:-1;;5423:35:17;1053:48812;;5423:35;;1053:48812;;5423:35;;5419:81;;5261:246::o;5419:81::-;-1:-1:-1;;;5468:31:17;:::i;5966:90::-;6041:8;6048:1;6041:8;:::i;49703:160::-;49766:91;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":359,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":1341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":752,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_bytes":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_addresst_bool":{"entryPoint":955,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":1137,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":4127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_bytes4_fromMemory":{"entryPoint":4140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":1744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_bytes":{"entryPoint":4160,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_string_string":{"entryPoint":3158,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":3125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":1612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":2726,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1096,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint24":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_BITMASK_ADDRESS":{"entryPoint":2060,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_ADDRESS_DATA_ENTRY":{"entryPoint":2820,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_BURNED":{"entryPoint":3374,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_NEXT_INITIALIZED":{"entryPoint":2151,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_EXTRA_DATA":{"entryPoint":3971,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":2089,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_ERC721A_IERC721Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_uint160":{"entryPoint":2033,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":1787,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1461501637330902918203684832716283019655932542975_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_232_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_33540519_by_1_to_bytes4":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2811,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_c5d2_to_bytes":{"entryPoint":2754,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2013,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":2042,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint24_to_uint256":{"entryPoint":4024,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint160":{"entryPoint":2076,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint24":{"entryPoint":4003,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":1806,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":4209,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":1754,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1125,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":2744,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":370,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":3356,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_approve":{"entryPoint":684,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":880,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":568,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":1376,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":478,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":833,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1291,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_9955":{"entryPoint":813,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":990,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":907,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":1314,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":709,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":793,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1570,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":1918,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":4228,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1037,"id":null,"parameterSlots":2,"returnSlots":0},"fun__approve":{"entryPoint":3562,"id":10662,"parameterSlots":3,"returnSlots":0},"fun_approve":{"entryPoint":1906,"id":9597,"parameterSlots":2,"returnSlots":0},"fun_balanceOf":{"entryPoint":2837,"id":9136,"parameterSlots":1,"returnSlots":1},"fun_baseURI":{"entryPoint":4450,"id":9323,"parameterSlots":0,"returnSlots":1},"fun_checkContractOnERC721Received":{"entryPoint":4259,"id":10077,"parameterSlots":4,"returnSlots":1},"fun_exists":{"entryPoint":3387,"id":9720,"parameterSlots":1,"returnSlots":1},"fun_extraData":{"entryPoint":4527,"id":10887,"parameterSlots":3,"returnSlots":1},"fun_getApproved":{"entryPoint":1843,"id":9622,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":3942,"id":9763,"parameterSlots":1,"returnSlots":2},"fun_isApprovedForAll":{"entryPoint":3300,"id":9666,"parameterSlots":2,"returnSlots":1},"fun_isSenderApprovedOrOwner":{"entryPoint":null,"id":9744,"parameterSlots":3,"returnSlots":1},"fun_msgSenderERC721A":{"entryPoint":null,"id":10930,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":1796,"id":9259,"parameterSlots":0,"returnSlots":1},"fun_nextExtraData":{"entryPoint":4064,"id":10920,"parameterSlots":3,"returnSlots":1},"fun_ownerOf":{"entryPoint":2782,"id":9343,"parameterSlots":1,"returnSlots":1},"fun_packOwnershipData":{"entryPoint":null,"id":9571,"parameterSlots":2,"returnSlots":1},"fun_packedOwnershipExists":{"entryPoint":null,"id":9730,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":3740,"id":9505,"parameterSlots":1,"returnSlots":1},"fun_revert":{"entryPoint":3515,"id":10948,"parameterSlots":1,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":3044,"id":9995,"parameterSlots":4,"returnSlots":0},"fun_safeTransferFrom_9955":{"entryPoint":2762,"id":9955,"parameterSlots":3,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":9022,"parameterSlots":0,"returnSlots":1},"fun_setApprovalForAll":{"entryPoint":2946,"id":9648,"parameterSlots":2,"returnSlots":0},"fun_startTokenId":{"entryPoint":3730,"id":9009,"parameterSlots":0,"returnSlots":1},"fun_supportsInterface":{"entryPoint":1436,"id":9249,"parameterSlots":1,"returnSlots":1},"fun_symbol":{"entryPoint":2904,"id":9269,"parameterSlots":0,"returnSlots":1},"fun_toString":{"entryPoint":4458,"id":10940,"parameterSlots":1,"returnSlots":1},"fun_tokenURI":{"entryPoint":3178,"id":9314,"parameterSlots":1,"returnSlots":1},"fun_totalSupply":{"entryPoint":1935,"id":9062,"parameterSlots":0,"returnSlots":1},"fun_transferFrom":{"entryPoint":2164,"id":9936,"parameterSlots":3,"returnSlots":0},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":2098,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_TokenApprovalRef_storage_of_uint256":{"entryPoint":1819,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3334,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1548,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1015,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1925,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":247,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_left_uint256_uint256":{"entryPoint":4042,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint256":{"entryPoint":3981,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":3524,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2914,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":3539,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":2923,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":2124,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":517,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806318160ddd146100de57806323b872dd146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036100f757610560565b610522565b61050b565b6103de565b61038b565b610370565b610341565b61032d565b610319565b6102c5565b6102ac565b610238565b6101de565b610135565b600080fd5b6001600160e01b031981165b036100f757565b9050359061011c826100fc565b565b906020828203126100f7576101329161010f565b90565b346100f75761016361015061014b36600461011e565b61059c565b6040515b91829182901515815260200190565b0390f35b60009103126100f757565b60005b8381106101855750506000910152565b8181015183820152602001610175565b6101b66101bf6020936101c9936101aa815190565b80835293849260200190565b95869101610172565b601f01601f191690565b0190565b602080825261013292910190610195565b346100f7576101ee366004610167565b6101636101f9610704565b604051918291826101cd565b80610108565b9050359061011c82610205565b906020828203126100f7576101329161020b565b6001600160a01b031690565b346100f75761016361025361024e366004610218565b610733565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610108565b9050359061011c8261026d565b91906040838203126100f7576101329060206102a5828661027c565b940161020b565b6102c06102ba366004610289565b90610772565b604051005b346100f7576102d5366004610167565b6101636102e061078f565b6040519182918290815260200190565b90916060828403126100f757610132610309848461027c565b9360406102a5826020870161027c565b6102c06103273660046102f0565b91610874565b6102c061033b3660046102f0565b91610aca565b346100f757610163610253610357366004610218565b610ade565b906020828203126100f7576101329161027c565b346100f7576101636102e061038636600461035c565b610b15565b346100f75761039b366004610167565b6101636101f9610b58565b801515610108565b9050359061011c826103a6565b91906040838203126100f7576101329060206103d7828661027c565b94016103ae565b346100f7576102c06103f13660046103bb565b90610b82565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761042f57604052565b6103f7565b9061011c61044160405190565b928361040d565b67ffffffffffffffff811161042f57602090601f01601f19160190565b90826000939282370152565b9092919261048661048182610448565b610434565b93818552818301116100f75761011c916020850190610465565b9080601f830112156100f75781602061013293359101610471565b906080828203126100f7576104d0818361027c565b926104de826020850161027c565b926104ec836040830161020b565b92606082013567ffffffffffffffff81116100f75761013292016104a0565b6102c06105193660046104bb565b92919091610be4565b346100f7576101636101f9610538366004610218565b610c6a565b91906040838203126100f757610132906020610559828661027c565b940161027c565b346100f75761016361015061057636600461053d565b90610ce4565b61058f6105896101329290565b60e01b90565b6001600160e01b03191690565b6105a96301ffc9a761057c565b6001600160e01b03198216149081156105eb575b81156105c7575090565b90506105e76105d9635b5e139f61057c565b916001600160e01b03191690565b1490565b90506105fa6380ac58cd61057c565b6001600160e01b0319821614906105bd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610642575b602083101461063d57565b61060c565b91607f1691610632565b8054600093929161066961065f83610622565b8085529360200190565b91600181169081156106bb575060011461068257505050565b6106959192939450600052602060002090565b916000925b8184106106a75750500190565b80548484015260209093019260010161069a565b92949550505060ff1916825215156020020190565b906101329161064c565b9061011c6106f4926106eb60405190565b938480926106d0565b038361040d565b610132906106da565b61013260026106fb565b6101326101326101329290565b906107259061070e565b600052602052604060002090565b61074361073f82610d3b565b1590565b61076557600061075761013292600661071b565b01546001600160a01b031690565b6333d1c03960e21b610dbb565b61011c91600191610dea565b6101329081565b610132905461077e565b6107b66107ae61079f6000610785565b6107a96001610785565b900390565b6107a9610e92565b9081600019806107c5565b9190565b036107cd5750565b6101329192506101c96008610785565b6101329061022c906001600160a01b031682565b610132906107dd565b6101329081906001600160a01b031681565b6101326001600160a01b0361070e565b61022c6101326101329290565b610132906107f1565b9061072590610829565b90600019905b9181191691161790565b9061085c6101326108639261070e565b825461083c565b9055565b610132600160e11b61070e565b61088e61088961088385610e9c565b926107f1565b6107fa565b926108aa6108a561089d61080c565b80961661081c565b6107f1565b936108b76108a58461081c565b6108d26001600160a01b0387165b916001600160a01b031690565b03610a9a576108e082610f66565b9490336001600160a01b03881681148188141715610a6c575b506108896107c1959493926109be926109ea98610a62575b506109396109208a6005610832565b61093361092c82610785565b6000190190565b9061084c565b610959610947826005610832565b61093361095382610785565b60010190565b610961610867565b9561098661097082848d610fe0565b4260a01b908917176001600160a01b0384161790565b9061099c600492610997898561071b565b61084c565b6000976109b16109ab8a61070e565b91831690565b146109fe575b50506107f1565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a461070e565b146109f157565b633a954ecd60e21b610dbb565b610a10610a0b600161070e565b880190565b91610a23610a1e848361071b565b610785565b610a2f6107c18b61070e565b14610a3b575b506109b7565b610a476101328a610785565b8314610a3557610a5a926109979161071b565b388080610a35565b6000905538610911565b61073f610a7e91899796959497610ce4565b610a8d573894919293946108f9565b632ce44b5f60e11b610dbb565b62a1148160e81b610dbb565b90610ab361048183610448565b918252565b6101326000610aa6565b610132610ab8565b909161011c92610ad8610ac2565b92610be4565b6108a5610af661013292610af0600090565b50610e9c565b61081c565b6101329061081c565b61013267ffffffffffffffff61070e565b610b2261022c6000610afb565b6001600160a01b03821614610b4b57610a1e610b3f916005610832565b610b47610b04565b1690565b6323d3ad8160e21b610dbb565b61013260036106fb565b9060ff90610842565b90610b7b61013261086392151590565b8254610b62565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31610bdf610bd5610bcf33610bca87610bc588610bc0856007610832565b610832565b610b6b565b610829565b93610829565b9361015460405190565b0390a3565b91929092610bf3818585610874565b833b610c026107c1600061070e565b03610c0e575b50505050565b610c1b9361073f936110a3565b610c285738808080610c08565b6368d2bf6b60e11b610dbb565b6101c9610c4d92602092610c47815190565b94859290565b93849101610172565b610c64906101329392610c35565b90610c35565b610c7661073f82610d3b565b610cd757610c82611162565b8051610c916107c1600061070e565b14610ccd57610132610cc191610ca96101329461116a565b90610cb360405190565b938492602084019283610c56565b9081038252038261040d565b5050610132610ac2565b630a14c4b560e41b610dbb565b61013291610bc0610cff92610cf7600090565b506007610832565b5460ff1690565b634e487b7160e01b600052601160045260246000fd5b8015610d29576000190190565b610d06565b610132600160e01b61070e565b9060009182610d48610e92565b821015610d53575050565b610d606101326000610785565b8210610d6a575050565b509091505b610d7d610a1e82600461071b565b9081610d8c6107c1600061070e565b03610da057610d9b9150610d1c565b610d6f565b506105e7610dac610d2e565b610db6600061070e565b921690565b60005260046000fd5b906001600160a01b0390610842565b90610de361013261086392610829565b8254610dc4565b91610df482610ade565b9080610e77575b610e58575b610e21610bcf610e2792610bca866000610e1b88600661071b565b01610dd3565b9161070e565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925610e5260405190565b600090a4565b610e6561073f3383610ce4565b15610e00576367d9dca160e11b610dbb565b5033610e8b6001600160a01b0383166108c5565b1415610dfb565b610132600061070e565b610ea4610e92565b811015610eb9575b636f96cda160e11b610dbb565b600490610eca610a1e82600461071b565b91600091610ed78361070e565b8414610efb575050610ef36109ab610eed610d2e565b9261070e565b03610eac5790565b90919250610f0b61013284610785565b811015610eac57909190600019015b91610f28610a1e848361071b565b92610f328361070e565b8414610f5a575050610f486109ab610eed610d2e565b1461013257636f96cda160e11b610dbb565b90925060001901610f1a565b610132610f7d91610f75600090565b50600661071b565b90815490565b61013260e861070e565b61013290610f9e6107c16101329490565b901c90565b610fb06101326101329290565b62ffffff1690565b6101326101326101329262ffffff1690565b61013290610fdb6107c16101329490565b901b90565b61101561101a916101329493610ff4600090565b5061100f61100a611003610f83565b8097610f8d565b610fa3565b916111af565b610fb8565b610fca565b9050519061011c826100fc565b906020828203126100f7576101329161101f565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261013292910190610195565b61058f6105896101329263ffffffff1690565b3d1561109e576110933d610aa6565b903d6000602084013e565b606090565b916110bb610bca6020936110b5600090565b50610829565b63150b7a02936000336110ec6110d060405190565b988996879586946110e18c60e01b90565b865260048601611040565b03925af160009281611131575b5061112257611106611084565b80516111156107c1600061070e565b14610c2857805190602001fd5b6105d961058f6105e792611071565b61115491935060203d60201161115b575b61114c818361040d565b81019061102c565b91386110f9565b503d611142565b610132610ac2565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156111a1576001600a91611185565b809350602091039203918252565b50505061013260009056fea2646970667358221220bf9e059293e91df1e5adc5201bb7e2ce31da4e59b898427f11a0bbd07590e46564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB6 JUMPI PUSH4 0xE985E9C5 SUB PUSH2 0xF7 JUMPI PUSH2 0x560 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x10F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x11E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x185 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1BF PUSH1 0x20 SWAP4 PUSH2 0x1C9 SWAP4 PUSH2 0x1AA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x26D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 PUSH2 0x309 DUP5 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x2A5 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0x874 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0xACA JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0xB58 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x3D7 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2C0 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BB JUMP JUMPDEST SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x42F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x441 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x486 PUSH2 0x481 DUP3 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF7 JUMPI PUSH2 0x11C SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x465 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF7 JUMPI DUP2 PUSH1 0x20 PUSH2 0x132 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x4D0 DUP2 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4DE DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4EC DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x20B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP3 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBE4 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x559 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH4 0x1FFC9A7 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5EB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x5C7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 PUSH2 0x5D9 PUSH4 0x5B5E139F PUSH2 0x57C JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH4 0x80AC58CD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x642 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x63D JUMPI JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x632 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x669 PUSH2 0x65F DUP4 PUSH2 0x622 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x6A7 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x132 SWAP2 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x6F4 SWAP3 PUSH2 0x6EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x6D0 JUMP JUMPDEST SUB DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x132 PUSH1 0x2 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x743 PUSH2 0x73F DUP3 PUSH2 0xD3B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x0 PUSH2 0x757 PUSH2 0x132 SWAP3 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x11C SWAP2 PUSH1 0x1 SWAP2 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x132 SWAP1 SLOAD PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7AE PUSH2 0x79F PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7A9 PUSH1 0x1 PUSH2 0x785 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xE92 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x7CD JUMPI POP JUMP JUMPDEST PUSH2 0x132 SWAP2 SWAP3 POP PUSH2 0x1C9 PUSH1 0x8 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x22C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x85C PUSH2 0x132 PUSH2 0x863 SWAP3 PUSH2 0x70E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x83C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x70E JUMP JUMPDEST PUSH2 0x88E PUSH2 0x889 PUSH2 0x883 DUP6 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST SWAP3 PUSH2 0x8AA PUSH2 0x8A5 PUSH2 0x89D PUSH2 0x80C JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x81C JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST SWAP4 PUSH2 0x8B7 PUSH2 0x8A5 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x8D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0xA9A JUMPI PUSH2 0x8E0 DUP3 PUSH2 0xF66 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 EQ DUP2 DUP9 EQ OR ISZERO PUSH2 0xA6C JUMPI JUMPDEST POP PUSH2 0x889 PUSH2 0x7C1 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x9BE SWAP3 PUSH2 0x9EA SWAP9 PUSH2 0xA62 JUMPI JUMPDEST POP PUSH2 0x939 PUSH2 0x920 DUP11 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x933 PUSH2 0x92C DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x959 PUSH2 0x947 DUP3 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x933 PUSH2 0x953 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x961 PUSH2 0x867 JUMP JUMPDEST SWAP6 PUSH2 0x986 PUSH2 0x970 DUP3 DUP5 DUP14 PUSH2 0xFE0 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SHL SWAP1 DUP10 OR OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x99C PUSH1 0x4 SWAP3 PUSH2 0x997 DUP10 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x9B1 PUSH2 0x9AB DUP11 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x9FE JUMPI JUMPDEST POP POP PUSH2 0x7F1 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0x9F1 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0B PUSH1 0x1 PUSH2 0x70E JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xA23 PUSH2 0xA1E DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0xA2F PUSH2 0x7C1 DUP12 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xA3B JUMPI JUMPDEST POP PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xA47 PUSH2 0x132 DUP11 PUSH2 0x785 JUMP JUMPDEST DUP4 EQ PUSH2 0xA35 JUMPI PUSH2 0xA5A SWAP3 PUSH2 0x997 SWAP2 PUSH2 0x71B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x911 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA7E SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xA8D JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x8F9 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xDBB JUMP JUMPDEST SWAP1 PUSH2 0xAB3 PUSH2 0x481 DUP4 PUSH2 0x448 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x11C SWAP3 PUSH2 0xAD8 PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0xAF6 PUSH2 0x132 SWAP3 PUSH2 0xAF0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x132 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x70E JUMP JUMPDEST PUSH2 0xB22 PUSH2 0x22C PUSH1 0x0 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4B JUMPI PUSH2 0xA1E PUSH2 0xB3F SWAP2 PUSH1 0x5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0xB47 PUSH2 0xB04 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x132 PUSH1 0x3 PUSH2 0x6FB JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xB7B PUSH2 0x132 PUSH2 0x863 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB62 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0xBDF PUSH2 0xBD5 PUSH2 0xBCF CALLER PUSH2 0xBCA DUP8 PUSH2 0xBC5 DUP9 PUSH2 0xBC0 DUP6 PUSH1 0x7 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST SWAP4 PUSH2 0x829 JUMP JUMPDEST SWAP4 PUSH2 0x154 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0xBF3 DUP2 DUP6 DUP6 PUSH2 0x874 JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0xC02 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xC0E JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC1B SWAP4 PUSH2 0x73F SWAP4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xC28 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xC08 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xC4D SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xC47 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0xC64 SWAP1 PUSH2 0x132 SWAP4 SWAP3 PUSH2 0xC35 JUMP JUMPDEST SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xC76 PUSH2 0x73F DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xCD7 JUMPI PUSH2 0xC82 PUSH2 0x1162 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC91 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xCCD JUMPI PUSH2 0x132 PUSH2 0xCC1 SWAP2 PUSH2 0xCA9 PUSH2 0x132 SWAP5 PUSH2 0x116A JUMP JUMPDEST SWAP1 PUSH2 0xCB3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xC56 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x40D JUMP JUMPDEST POP POP PUSH2 0x132 PUSH2 0xAC2 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x132 SWAP2 PUSH2 0xBC0 PUSH2 0xCFF SWAP3 PUSH2 0xCF7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x832 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xD29 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x70E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0xD48 PUSH2 0xE92 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD53 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD60 PUSH2 0x132 PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST DUP3 LT PUSH2 0xD6A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0xD7D PUSH2 0xA1E DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xD8C PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xDA0 JUMPI PUSH2 0xD9B SWAP2 POP PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST POP PUSH2 0x5E7 PUSH2 0xDAC PUSH2 0xD2E JUMP JUMPDEST PUSH2 0xDB6 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xDE3 PUSH2 0x132 PUSH2 0x863 SWAP3 PUSH2 0x829 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 PUSH2 0xDF4 DUP3 PUSH2 0xADE JUMP JUMPDEST SWAP1 DUP1 PUSH2 0xE77 JUMPI JUMPDEST PUSH2 0xE58 JUMPI JUMPDEST PUSH2 0xE21 PUSH2 0xBCF PUSH2 0xE27 SWAP3 PUSH2 0xBCA DUP7 PUSH1 0x0 PUSH2 0xE1B DUP9 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0xE52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST PUSH2 0xE65 PUSH2 0x73F CALLER DUP4 PUSH2 0xCE4 JUMP JUMPDEST ISZERO PUSH2 0xE00 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST POP CALLER PUSH2 0xE8B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8C5 JUMP JUMPDEST EQ ISZERO PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xE92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEB9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0xECA PUSH2 0xA1E DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xED7 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xEFB JUMPI POP POP PUSH2 0xEF3 PUSH2 0x9AB PUSH2 0xEED PUSH2 0xD2E JUMP JUMPDEST SWAP3 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xEAC JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0xF0B PUSH2 0x132 DUP5 PUSH2 0x785 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEAC JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0xF28 PUSH2 0xA1E DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH2 0xF32 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xF5A JUMPI POP POP PUSH2 0xF48 PUSH2 0x9AB PUSH2 0xEED PUSH2 0xD2E JUMP JUMPDEST EQ PUSH2 0x132 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x132 PUSH2 0xF7D SWAP2 PUSH2 0xF75 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0xE8 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xF9E PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0xFB0 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFDB PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1015 PUSH2 0x101A SWAP2 PUSH2 0x132 SWAP5 SWAP4 PUSH2 0xFF4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x100F PUSH2 0x100A PUSH2 0x1003 PUSH2 0xF83 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xFA3 JUMP JUMPDEST SWAP2 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x109E JUMPI PUSH2 0x1093 RETURNDATASIZE PUSH2 0xAA6 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x10BB PUSH2 0xBCA PUSH1 0x20 SWAP4 PUSH2 0x10B5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x829 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x10EC PUSH2 0x10D0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x10E1 DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1040 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1131 JUMPI JUMPDEST POP PUSH2 0x1122 JUMPI PUSH2 0x1106 PUSH2 0x1084 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1115 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xC28 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5D9 PUSH2 0x58F PUSH2 0x5E7 SWAP3 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x1154 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x115B JUMPI JUMPDEST PUSH2 0x114C DUP2 DUP4 PUSH2 0x40D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x102C JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x10F9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x1185 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST POP POP POP PUSH2 0x132 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP15 SDIV SWAP3 SWAP4 0xE9 SAR CALL 0xE5 0xAD 0xC5 KECCAK256 SHL 0xB7 0xE2 0xCE BALANCE 0xDA 0x4E MSIZE 0xB8 SWAP9 TIMESTAMP PUSH32 0x11A0BBD07590E46564736F6C634300081C003300000000000000000000000000 ","sourceMap":"1053:48812:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;;1053:48812:17;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1053:48812:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1053:48812:17;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:17;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1053:48812:17;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;1053:48812:17;;;10689:630;11092:25;11107:10;11092:25;:::i;:::-;-1:-1:-1;;;;;;1053:48812:17;;11092:25;:101;;;;;10689:630;11092:177;;;;11073:196;10689:630;:::o;11092:177::-;11244:25;;;;11259:10;11244:25;:::i;:::-;;-1:-1:-1;;;;;;1053:48812:17;;;11244:25;;10689:630;:::o;11092:101::-;11168:25;;;11183:10;11168:25;:::i;:::-;-1:-1:-1;;;;;;1053:48812:17;;11168:25;11092:101;;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;11573:98::-;11652:12;11659:5;11652:12;:::i;1053:48812::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;18636:223::-;18735:17;18736:16;;;:::i;:::-;18735:17;;1053:48812;18735:17;18731:73;;18822:30;:24;:30;:24;:15;:24;:::i;:::-;:30;1053:48812;-1:-1:-1;;;;;1053:48812:17;;;18731:73;-1:-1:-1;;;18762:41:17;:::i;18364:122::-;18474:4;18364:122;18474:4;18364:122;18474:4;:::i;1053:48812::-;;;;;;;;;;:::i;6890:564::-;7312:46;:28;:13;;;:::i;:::-;7328:12;;;:::i;:::-;7312:28;1053:48812;;;7312:28;7343:15;;:::i;7312:46::-;7303:55;;-1:-1:-1;;7397:17:17;7376:38;1053:48812;7376:38;;1053:48812;;7376:38;;7372:65;;6890:564;:::o;7372:65::-;7416:21;7426:11;;;;;;:::i;1053:48812::-;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1053:48812:17;;;2899:58;2943:14;-1:-1:-1;;;;;2943:14:17;:::i;:::-;;;;;1053:48812;;2943:14;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;;7397:17:17;2943:14;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2497:61::-;2550:8;-1:-1:-1;;;2550:8:17;:::i;22796:3447::-;23115:22;23123:13;22963:27;;;:::i;:::-;23123:13;;:::i;:::-;23115:22;:::i;:::-;23140:16;23099:59;23107:50;23140:16;;:::i;:::-;23115:41;;;23107:50;:::i;:::-;23099:59;:::i;:::-;23092:66;23173:37;23181:28;;;:::i;23173:37::-;:45;-1:-1:-1;;;;;1053:48812:17;;23173:45;;-1:-1:-1;;;;;1053:48812:17;;;23173:45;;23169:95;;23332:35;;;:::i;:::-;23512:19;;47819:10;-1:-1:-1;;;;;21135:472:17;;;;;;;;18735:17;23459:188;;22796:3447;23764:190;25708:11;26129:13;23764:190;;;;25700:20;23764:190;26129:13;23764:190;;;22796:3447;24316:24;24314:26;24316:24;;:18;:24;:::i;:::-;24314:26;;;;:::i;:::-;-1:-1:-1;;2943:14:17;1053:48812;;24314:26;;;:::i;:::-;24382:24;24384:22;;24316:18;24384:22;:::i;:::-;24382:24;;;;:::i;:::-;2943:14;;1053:48812;;24382:24;24755:25;;:::i;:::-;24783:45;24699:143;24783:45;;;;;:::i;:::-;17192:331;1053:48812;17192:331;24755:73;;;17192:331;-1:-1:-1;;;;;17192:331:17;;;;17086:443;24699:143;24670:17;:172;:17;:26;;;;;:::i;:::-;:172;:::i;:::-;25010:1;24959:52;;;;;:::i;:::-;:47;;;1053:48812;;24959:52;;24955:617;;22796:3447;25708:11;;;:::i;25700:20::-;:39;25749:367;;;;;;26129:13;:::i;:::-;;26125:58;;22796:3447::o;26125:58::-;-1:-1:-1;;;26152:30:17;:::i;24955:617::-;25053:11;;25063:1;25053:11;:::i;:::-;;1053:48812;;;25053:11;25184:30;;;;;;:::i;:::-;;:::i;:::-;:35;;;;:::i;:::-;;25180:378;;24955:617;;;;25180:378;25305:28;25320:13;;;:::i;25305:28::-;;25301:239;25180:378;25301:239;25465:52;:30;;;;:::i;:52::-;25301:239;;;25180:378;;23764:190;;;;;;;23459:188;23551:43;23550:44;23551:43;;;;;;;;:::i;23550:44::-;23546:101;;23459:188;;;;;;;;23546:101;-1:-1:-1;;;23604:42:17;:::i;23169:95::-;-1:-1:-1;;;23228:35:17;:::i;1053:48812::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::i;26334:187::-;;;26475:39;26334:187;26475:39;;:::i;:::-;;;:::i;12934:150::-;13040:36;13048:27;13032:45;12934:150;13006:7;1053:48812;;;13006:7;13048:27;;:::i;:::-;13040:36;:::i;1053:48812::-;;;;:::i;1463:68::-;1518:13;;;:::i;8570:239::-;8665:19;8674:10;8682:1;8674:10;:::i;8665:19::-;-1:-1:-1;;;;;1053:48812:17;;8665:19;8661:69;;8747:25;;;:18;:25;:::i;:::-;8775:27;;:::i;:::-;8747:55;8570:239;:::o;8661:69::-;-1:-1:-1;;;8694:35:17;:::i;11742:102::-;11823:14;11830:7;11823:14;:::i;1053:48812::-;;;;;2943:14;1053:48812;;;;;;;;;;;;;;:::i;19186:231::-;19355:55;;;;47819:10;19280:60;:39;:49;:39;;;:18;:39;:::i;:::-;:49;:::i;:::-;:60;:::i;:::-;19355:55;:::i;:::-;;;:::i;:::-;;;1053:48812;;;;19355:55;;;;19186:231::o;27102:405::-;;;;;27294:7;;;;;:::i;:::-;27316:14;;:19;;27334:1;27316:19;:::i;:::-;;27312:189;;27102:405;;;;;:::o;27312:189::-;27353:57;27354:56;;;;:::i;27353:57::-;27349:152;;27312:189;;;;;;27349:152;-1:-1:-1;;;27438:47:17;:::i;1053:48812::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;11945:322::-;12047:17;12048:16;;;:::i;12047:17::-;12043:68;;12146:10;;:::i;:::-;1053:48812;;12173:26;;12198:1;12173:26;:::i;:::-;;:87;;12209:45;;12235:18;;12202:53;12235:18;;:::i;:::-;12209:45;;1053:48812;;;;12209:45;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;12173:87::-;;;;;:::i;12043:68::-;-1:-1:-1;;;12074:36:17;:::i;19567:162::-;19687:35;19567:162;19687:25;:35;19567:162;19664:4;1053:48812;;;19664:4;19687:25;:18;:25;:::i;:35::-;1053:48812;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;:::o;:::-;;:::i;2233:51::-;2276:8;-1:-1:-1;;;2276:8:17;:::i;19978:465::-;;1053:48812;20043:11;;20070:15;;:::i;:::-;:26;-1:-1:-1;20070:26:17;20066:371;;19978:465;;:::o;20066:371::-;20221:23;20231:13;;;:::i;20221:23::-;;;20217:210;;19978:465;;:::o;20217:210::-;-1:-1:-1;20264:14:17;;-1:-1:-1;20296:60:17;20313:26;;:17;;:26;:::i;:::-;20304:35;;20303:42;;20344:1;20303:42;:::i;:::-;;;;20347:9;;;;:::i;:::-;20296:60;;20303:42;;20383:29;20392:15;;:::i;:::-;20383:29;20411:1;20383:29;:::i;:::-;:24;;1053:48812;;49703:160;49766:91;;;;;1053:48812;;-1:-1:-1;;;;;1053:48812:17;;2943:14;1053:48812;;;;;;;:::i;:::-;;;;:::i;41333:460::-;;41473:16;;;:::i;:::-;41504:45;;;;41333:460;41500:198;;41333:460;41758:28;;;41708:24;:35;:24;:30;:24;;:15;:24;:::i;:::-;:30;:35;:::i;41758:28::-;;;:::i;:::-;;;;1053:48812;;;;41758:28;;;;41333:460::o;41500:198::-;41567:45;41568:44;47819:10;41568:44;;:::i;41567:45::-;41563:135;41500:198;41563:135;-1:-1:-1;;;41640:42:17;:::i;41504:45::-;-1:-1:-1;47819:10:17;41521:28;-1:-1:-1;;;;;1053:48812:17;;41521:28;1053:48812;41521:28;;;41504:45;;5966:90;6041:8;6048:1;6041:8;:::i;14380:2173::-;14477:15;;:::i;:::-;:26;-1:-1:-1;14477:26:17;14473:2017;;14380:2173;-1:-1:-1;;;16507:38:17;:::i;14473:2017::-;14528:17;:26;;;;:17;:26;:::i;:::-;14519:35;14857:1;14847:11;;;;:::i;:::-;;;14843:1270;;16444:15;;16435:29;;16444:15;;:::i;:::-;16435:29;;:::i;:::-;;14473:2017;16431:48;16466:13;:::o;14843:1270::-;14893:13;;;;14882:24;14893:13;;;:::i;14882:24::-;;;;14878:77;;15502:597;;;-1:-1:-1;;2943:14:17;15596:9;;15578:28;;15596:9;15578:28;;:::i;:::-;15569:37;15654:11;;;:::i;:::-;;;15650:25;;15710:15;;15701:29;;15710:15;;:::i;15701:29::-;;15697:48;;-1:-1:-1;;;16041:38:17;:::i;15650:25::-;15667:8;;-1:-1:-1;;;2943:14:17;15596:9;1053:48812;21721:474;21929:24;21888:65;21721:474;21820:27;1053:48812;;;21820:27;21929:24;:15;:24;:::i;21888:65::-;22057:132;;;21721:474;:::o;2625:49::-;2671:3;;;:::i;:::-;;;;;;;1053:48812;;2671:3;;;;;;;;;;1053:48812;;2671:3;;;;;;;;;;;;;;;;;;;;;1053:48812;;2671:3;;;;;47060:304;47303:31;47295:40;47060:304;47295:62;47060:304;;47191:7;1053:48812;;;47191:7;47259:18;47229:49;47236:41;47259:18;;:::i;:::-;47236:41;;;:::i;:::-;47229:49;:::i;:::-;47303:31;;:::i;:::-;47295:40;:::i;:::-;:62;:::i;1053:48812::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;29533:673::-;;29711:45;:28;:88;29533:673;29691:4;1053:48812;;;29691:4;29711:28;;:::i;:45::-;;;:88;47819:10;29711:88;;1053:48812;;;;29711:88;;;;;;;;;;1053:48812;;;;29711:88;;;;;;;:::i;:::-;;;;;-1:-1:-1;;29711:88:17;;;29533:673;-1:-1:-1;29707:493:17;;29943:257;;:::i;:::-;1053:48812;;29989:18;;30006:1;29989:18;:::i;:::-;;29985:113;;30111:79;;;;;;29707:493;29867:64;29877:54;29867:64;29877:54;;:::i;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;12512:92;12588:9;;:::i;47933:1708::-;;48027:1608;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47933:1708::o;46771:143::-;;;;46904:6;1053:48812;;"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8941,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":8943,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":8945,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8947,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":8951,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":8955,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":8960,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)8873_storage)"},{"astId":8966,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":8968,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_spotMinted","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)8873_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)8873_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenApprovalRef)8873_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":8872,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"ERC721A__IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"erc721a/contracts/IERC721A.sol":{"IERC721A":{"abi":[{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}