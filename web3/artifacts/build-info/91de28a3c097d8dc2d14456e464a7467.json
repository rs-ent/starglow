{"id":"91de28a3c097d8dc2d14456e464a7467","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/SPGNFTCollection.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"erc721a/contracts/ERC721A.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n/**\r\n * @title ISPGNFT\r\n * @dev Interface for Story Protocol Gateway NFT\r\n */\r\ninterface ISPGNFT {\r\n    struct InitParams {\r\n        string name;\r\n        string symbol;\r\n        string baseURI;\r\n        string contractURI;\r\n        uint256 maxSupply;\r\n        uint256 mintFee;\r\n        address mintFeeToken;\r\n        address mintFeeRecipient;\r\n        address owner;\r\n        bool mintOpen;\r\n        bool isPublicMinting;\r\n    }\r\n\r\n    function mint(address to) external payable returns (uint256);\r\n    function mint(address to, uint256 quantity) external payable returns (uint256);\r\n}\r\n\r\n/**\r\n * @title IERC6551Registry\r\n * @dev Interface for ERC6551 registry\r\n */\r\ninterface IERC6551Registry {\r\n\r\n    function account(\r\n        address implementation,\r\n        uint256 chainId,\r\n        address tokenContract,\r\n        uint256 tokenId,\r\n        uint256 salt\r\n    ) external view returns (address);\r\n}\r\n\r\ncontract SPGNFTCollection is ERC721A, ISPGNFT, Ownable, Pausable, ReentrancyGuard, EIP712 {\r\n    using ECDSA for bytes32;\r\n\r\n    uint256 private constant MAX_BATCH_SIZE = 100;\r\n    uint256 private constant SAFE_BATCH_SIZE = 50;\r\n    \r\n    bytes32 public constant TRANSFER_PERMIT_TYPEHASH = keccak256(\r\n        \"TransferPermit(address owner,address to,uint256[] tokenIds,uint256 nonce,uint256 deadline)\"\r\n    );\r\n    \r\n    bytes32 public constant BATCH_TRANSFER_TYPEHASH = keccak256(\r\n        \"BatchTransferPermit(address owner,address to,uint256 startTokenId,uint256 quantity,uint256 nonce,uint256 deadline)\"\r\n    );\r\n\r\n    struct TransferPermit {\r\n        address owner;\r\n        address to;\r\n        uint256[] tokenIds;\r\n        uint256 nonce;\r\n        uint256 deadline;\r\n    }\r\n\r\n    struct BatchTransferPermit {\r\n        address owner;\r\n        address to;\r\n        uint256 startTokenId;\r\n        uint256 quantity;\r\n        uint256 nonce;\r\n        uint256 deadline;\r\n    }\r\n\r\n    IERC6551Registry public immutable TBARegistry;\r\n    address public immutable TBAImplementation;\r\n\r\n    string private _baseTokenURI;\r\n    string public contractURI;\r\n    uint256 public maxSupply;\r\n    uint256 public mintFee;\r\n    address public mintFeeToken;\r\n    address public mintFeeRecipient;\r\n    bool public mintOpen;\r\n    bool public isPublicMinting;\r\n\r\n    mapping(uint256 => string) private _tokenURIs;\r\n    mapping(address => bool) public minters;\r\n    mapping(address => bool) public isEscrowWallet;\r\n    mapping(address => uint256) public nonces;\r\n\r\n    event Minted(address indexed to, uint256 indexed tokenId);\r\n    event BatchMinted(address indexed to, uint256 indexed startTokenId, uint256 quantity);\r\n    event MintStatusChanged(bool open);\r\n    event PublicMintingStatusChanged(bool isPublic);\r\n    event MintFeeChanged(uint256 fee);\r\n    event MinterAdded(address indexed minter);\r\n    event MinterRemoved(address indexed minter);\r\n    event EscrowWalletAdded(address indexed wallet);\r\n    event EscrowWalletRemoved(address indexed wallet);\r\n    event EscrowTransfer(address indexed from, address indexed to, uint256[] tokenIds, address indexed executor);\r\n    event BatchEscrowTransfer(address indexed from, address indexed to, uint256 startTokenId, uint256 quantity, address indexed executor);\r\n\r\n    constructor(\r\n        InitParams memory params,\r\n        address _TBARegistry,\r\n        address _TBAImplementation\r\n    ) \r\n        ERC721A(params.name, params.symbol) \r\n        EIP712(\"SPGNFTCollection\", \"1\")\r\n        Ownable(params.owner)\r\n    {\r\n        _baseTokenURI = params.baseURI;\r\n        contractURI = params.contractURI;\r\n        maxSupply = params.maxSupply;\r\n        mintFee = params.mintFee;\r\n        mintFeeToken = params.mintFeeToken;\r\n        mintFeeRecipient = params.mintFeeRecipient;\r\n        mintOpen = params.mintOpen;\r\n        isPublicMinting = params.isPublicMinting;\r\n\r\n        isEscrowWallet[msg.sender] = true;\r\n\r\n        TBARegistry = IERC6551Registry(_TBARegistry);\r\n        TBAImplementation = _TBAImplementation;\r\n    }\r\n\r\n    function getTBA(uint256 tokenId) public view returns (address) {\r\n        return TBARegistry.account(\r\n            TBAImplementation,\r\n            block.chainid,\r\n            address(this),\r\n            tokenId,\r\n            0\r\n        );\r\n    }\r\n    \r\n    function mint(address to, uint256 quantity, string[] calldata tokenURIs) external payable nonReentrant whenNotPaused returns (uint256) {\r\n        require(mintOpen, \"Minting is closed\");\r\n        require(totalSupply() + quantity <= maxSupply, \"Max supply exceeded\");\r\n        require(tokenURIs.length == quantity, \"TokenURI count mismatch\");\r\n        require(quantity <= MAX_BATCH_SIZE, \"Batch too large\");\r\n        \r\n        if (!isPublicMinting) {\r\n            require(minters[msg.sender] || owner() == msg.sender, \"Not authorized to mint\");\r\n        }\r\n\r\n        if (mintFee > 0) {\r\n            _processMintFee(quantity);\r\n        }\r\n\r\n        uint256 startTokenId = _nextTokenId();\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            for (uint256 i = 0; i < quantity; ++i) {\r\n                if (bytes(tokenURIs[i]).length > 0) {\r\n                    _tokenURIs[startTokenId + i] = tokenURIs[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        emit BatchMinted(to, startTokenId, quantity);\r\n        return startTokenId;\r\n    }\r\n\r\n    function mint(address to, uint256 quantity) external payable returns (uint256) {\r\n        string[] memory tokenURIs = new string[](quantity);\r\n        return _mintWithURIs(to, quantity, tokenURIs);\r\n    }\r\n    \r\n    function mint(address to) external payable returns (uint256) {\r\n        string[] memory tokenURIs = new string[](1);\r\n        return _mintWithURIs(to, 1, tokenURIs);\r\n    }\r\n\r\n    function _mintWithURIs(address to, uint256 quantity, string[] memory tokenURIs) internal nonReentrant whenNotPaused returns (uint256) {\r\n        require(to != address(0), \"Cannot mint to zero address\");\r\n        require(mintOpen, \"Minting is closed\");\r\n        require(totalSupply() + quantity <= maxSupply, \"Max supply exceeded\");\r\n        require(tokenURIs.length == 0 || tokenURIs.length == quantity, \"TokenURI count mismatch\");\r\n        require(quantity > 0 && quantity <= MAX_BATCH_SIZE, \"Invalid quantity\");\r\n        \r\n        if (!isPublicMinting) {\r\n            require(minters[msg.sender] || owner() == msg.sender, \"Not authorized to mint\");\r\n        }\r\n\r\n        if (mintFee > 0) {\r\n            _processMintFee(quantity);\r\n        }\r\n\r\n        uint256 startTokenId = _nextTokenId();\r\n        _mint(to, quantity);\r\n\r\n        if (tokenURIs.length > 0) {\r\n            unchecked {\r\n                for (uint256 i = 0; i < quantity; ++i) {\r\n                    if (bytes(tokenURIs[i]).length > 0) {\r\n                        _tokenURIs[startTokenId + i] = tokenURIs[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit BatchMinted(to, startTokenId, quantity);\r\n        return startTokenId;\r\n    }\r\n    \r\n    function escrowTransfer(\r\n        address owner,\r\n        address to,\r\n        uint256[] calldata tokenIds,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external nonReentrant whenNotPaused {\r\n        require(isEscrowWallet[msg.sender], \"Not authorized escrow wallet\");\r\n        require(to != address(0), \"Cannot transfer to zero address\");\r\n        require(owner != address(0), \"Invalid owner address\");\r\n        require(block.timestamp <= deadline, \"Signature expired\");\r\n        require(tokenIds.length > 0 && tokenIds.length <= SAFE_BATCH_SIZE, \"Invalid batch size\");\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(_exists(tokenIds[i]), \"Token does not exist\");\r\n            require(ownerOf(tokenIds[i]) == owner, \"Not token owner\");\r\n        }\r\n\r\n        TransferPermit memory permit = TransferPermit({\r\n            owner: owner,\r\n            to: to,\r\n            tokenIds: tokenIds,\r\n            nonce: nonces[owner],\r\n            deadline: deadline\r\n        });\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                TRANSFER_PERMIT_TYPEHASH,\r\n                permit.owner,\r\n                permit.to,\r\n                keccak256(abi.encodePacked(permit.tokenIds)),\r\n                permit.nonce,\r\n                permit.deadline\r\n            )\r\n        );\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        \r\n        require(signer == owner, \"Invalid signature\");\r\n\r\n        unchecked {\r\n            nonces[owner]++;\r\n        }\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            super.safeTransferFrom(owner, to, tokenIds[i]);\r\n        }\r\n\r\n        emit EscrowTransfer(owner, to, tokenIds, msg.sender);\r\n    }\r\n\r\n    function escrowTransferWithSignature(\r\n        address owner,\r\n        address to,\r\n        uint256[] calldata tokenIds,\r\n        uint256 deadline,\r\n        bytes calldata signature\r\n    ) external nonReentrant whenNotPaused {\r\n        require(isEscrowWallet[msg.sender], \"Not authorized escrow wallet\");\r\n        require(to != address(0), \"Cannot transfer to zero address\");\r\n        require(owner != address(0), \"Invalid owner address\");\r\n        require(block.timestamp <= deadline, \"Signature expired\");\r\n        require(tokenIds.length > 0 && tokenIds.length <= SAFE_BATCH_SIZE, \"Invalid batch size\");\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(_exists(tokenIds[i]), \"Token does not exist\");\r\n            require(ownerOf(tokenIds[i]) == owner, \"Not token owner\");\r\n        }\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                TRANSFER_PERMIT_TYPEHASH,\r\n                owner,\r\n                to,\r\n                keccak256(abi.encodePacked(tokenIds)),\r\n                nonces[owner],\r\n                deadline\r\n            )\r\n        );\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n        address signer = ECDSA.recover(hash, signature);\r\n        \r\n        require(signer == owner, \"Invalid signature\");\r\n\r\n        unchecked {\r\n            nonces[owner]++;\r\n        }\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            super.safeTransferFrom(owner, to, tokenIds[i]);\r\n        }\r\n\r\n        emit EscrowTransfer(owner, to, tokenIds, msg.sender);\r\n    }\r\n\r\n    function escrowTransferBatch(\r\n        address owner,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity,\r\n        uint256 deadline,\r\n        bytes calldata signature\r\n    ) external nonReentrant whenNotPaused {\r\n        require(isEscrowWallet[msg.sender], \"Not authorized escrow wallet\");\r\n        require(to != address(0), \"Cannot transfer to zero address\");\r\n        require(owner != address(0), \"Invalid owner address\");\r\n        require(block.timestamp <= deadline, \"Signature expired\");\r\n        \r\n        uint256 maxBatch = quantity > 20 ? SAFE_BATCH_SIZE : MAX_BATCH_SIZE;\r\n        require(quantity > 0 && quantity <= maxBatch, \"Invalid quantity\");\r\n        \r\n        _verifyConsecutiveOwnership(owner, startTokenId, quantity);\r\n        \r\n        BatchTransferPermit memory permit = BatchTransferPermit({\r\n            owner: owner,\r\n            to: to,\r\n            startTokenId: startTokenId,\r\n            quantity: quantity,\r\n            nonce: nonces[owner],\r\n            deadline: deadline\r\n        });\r\n        \r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                BATCH_TRANSFER_TYPEHASH,\r\n                permit.owner,\r\n                permit.to,\r\n                permit.startTokenId,\r\n                permit.quantity,\r\n                permit.nonce,\r\n                permit.deadline\r\n            )\r\n        );\r\n        \r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n        address signer = ECDSA.recover(hash, signature);\r\n        require(signer == owner, \"Invalid signature\");\r\n        \r\n        unchecked {\r\n            nonces[owner]++;\r\n        }\r\n        \r\n        _batchTransferFrom(owner, to, startTokenId, quantity);\r\n        \r\n        emit BatchEscrowTransfer(owner, to, startTokenId, quantity, msg.sender);\r\n    }\r\n\r\n    function _batchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal {\r\n        unchecked {\r\n            for (uint256 i = 0; i < quantity; ++i) {\r\n                safeTransferFrom(from, to, startTokenId + i);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _verifyConsecutiveOwnership(\r\n        address owner,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal view {\r\n        unchecked {\r\n            uint256 end = startTokenId + quantity;\r\n            for (uint256 i = startTokenId; i < end; ++i) {\r\n                require(_ownershipOf(i).addr == owner, \"Not consecutive owner\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _processMintFee(uint256 quantity) internal {\r\n        uint256 totalFee;\r\n        unchecked {\r\n            totalFee = mintFee * quantity;\r\n        }\r\n        \r\n        if (mintFeeToken == address(0)) {\r\n            require(msg.value >= totalFee, \"Insufficient payment\");\r\n            \r\n            if (mintFeeRecipient != address(0) && totalFee > 0) {\r\n                (bool success, ) = mintFeeRecipient.call{value: totalFee, gas: 30000}(\"\");\r\n                if (!success) {\r\n                    (bool refundSuccess, ) = msg.sender.call{value: totalFee}(\"\");\r\n                    require(refundSuccess, \"Fee handling failed\");\r\n                }\r\n            }\r\n            \r\n            unchecked {\r\n                uint256 excess = msg.value - totalFee;\r\n                if (excess > 0) {\r\n                    (bool refundSuccess, ) = msg.sender.call{value: excess}(\"\");\r\n                    require(refundSuccess, \"Refund failed\");\r\n                }\r\n            }\r\n        } else {\r\n            revert(\"ERC20 payment not implemented\");\r\n        }\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_exists(tokenId), \"URI query for nonexistent token\");\r\n        \r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return _tokenURI;\r\n        }\r\n        \r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function setTokenURI(uint256 tokenId, string calldata _tokenURI) external onlyOwner {\r\n        require(_exists(tokenId), \"Token does not exist\");\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    function addEscrowWallet(address wallet) external onlyOwner {\r\n        require(wallet != address(0), \"Invalid address\");\r\n        isEscrowWallet[wallet] = true;\r\n        emit EscrowWalletAdded(wallet);\r\n    }\r\n\r\n    function removeEscrowWallet(address wallet) external onlyOwner {\r\n        isEscrowWallet[wallet] = false;\r\n        emit EscrowWalletRemoved(wallet);\r\n    }\r\n\r\n    function setMintOpen(bool _mintOpen) external onlyOwner {\r\n        mintOpen = _mintOpen;\r\n        emit MintStatusChanged(_mintOpen);\r\n    }\r\n\r\n    function setPublicMinting(bool _isPublic) external onlyOwner {\r\n        isPublicMinting = _isPublic;\r\n        emit PublicMintingStatusChanged(_isPublic);\r\n    }\r\n\r\n    function addMinter(address minter) external onlyOwner {\r\n        minters[minter] = true;\r\n        emit MinterAdded(minter);\r\n    }\r\n\r\n    function removeMinter(address minter) external onlyOwner {\r\n        minters[minter] = false;\r\n        emit MinterRemoved(minter);\r\n    }\r\n\r\n    function setMintFee(uint256 _mintFee) external onlyOwner {\r\n        mintFee = _mintFee;\r\n        emit MintFeeChanged(_mintFee);\r\n    }\r\n\r\n    function setBaseURI(string calldata baseURI) external onlyOwner {\r\n        _baseTokenURI = baseURI;\r\n    }\r\n\r\n    function setContractURI(string calldata _contractURI) external onlyOwner {\r\n        contractURI = _contractURI;\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    function canMint(address account) external view returns (bool) {\r\n        if (isPublicMinting) return true;\r\n        return minters[account] || owner() == account;\r\n    }\r\n\r\n    function getMintPrice(uint256 quantity) external view returns (uint256) {\r\n        return mintFee * quantity;\r\n    }\r\n\r\n    function availableSupply() external view returns (uint256) {\r\n        return maxSupply - totalSupply();\r\n    }\r\n\r\n    function getNonce(address user) external view returns (uint256) {\r\n        return nonces[user];\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721A) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n\r\n"},"contracts/SPGNFTFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./SPGNFTCollection.sol\";\r\n\r\ncontract SPGNFTFactory {\r\n    mapping(address => address[]) public deployedCollections;\r\n    address[] public allCollections;\r\n    \r\n    event CollectionDeployed(\r\n        address indexed collection,\r\n        address indexed owner,\r\n        address indexed deployer,\r\n        string name,\r\n        string symbol\r\n    );\r\n    \r\n    function deployCollection(\r\n        ISPGNFT.InitParams memory params,\r\n        address tbaRegistry,\r\n        address tbaImplementation\r\n    ) public returns (address collection) {\r\n        // Validate inputs\r\n        require(bytes(params.name).length > 0);\r\n        require(bytes(params.symbol).length > 0);\r\n        require(params.owner != address(0));\r\n        require(params.maxSupply > 0);\r\n        require(tbaRegistry != address(0));\r\n        require(tbaImplementation != address(0));\r\n        \r\n        if (params.mintFee > 0) {\r\n            require(params.mintFeeRecipient != address(0));\r\n        }\r\n        \r\n        SPGNFTCollection newCollection = new SPGNFTCollection(\r\n            params,\r\n            tbaRegistry,\r\n            tbaImplementation\r\n        );\r\n        collection = address(newCollection);\r\n        \r\n        deployedCollections[params.owner].push(collection);\r\n        allCollections.push(collection);\r\n        \r\n        emit CollectionDeployed(collection, params.owner, msg.sender, params.name, params.symbol);\r\n        return collection;\r\n    }\r\n\r\n    function deployStoryCollection(\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory baseURI,\r\n        string memory contractURI,\r\n        address owner,\r\n        address tbaRegistry,\r\n        address tbaImplementation\r\n    ) external returns (address collection) {\r\n        ISPGNFT.InitParams memory params = ISPGNFT.InitParams({\r\n            name: name,\r\n            symbol: symbol,\r\n            baseURI: baseURI,\r\n            contractURI: contractURI,\r\n            maxSupply: 10000,\r\n            mintFee: 0,\r\n            mintFeeToken: address(0),\r\n            mintFeeRecipient: owner,\r\n            owner: owner,\r\n            mintOpen: true,\r\n            isPublicMinting: false\r\n        });\r\n        return deployCollection(params, tbaRegistry, tbaImplementation);\r\n    }\r\n    \r\n    function getDeployedCollections(address owner) external view returns (address[] memory) {\r\n        return deployedCollections[owner];\r\n    }\r\n    \r\n    function getAllCollectionsCount() external view returns (uint256) {\r\n        return allCollections.length;\r\n    }\r\n    \r\n    function getCollectionAt(uint256 index) external view returns (address) {\r\n        require(index < allCollections.length, \"INDEX_OUT_OF_BOUNDS\");\r\n        return allCollections[index];\r\n    }\r\n} "},"erc721a/contracts/ERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"},"erc721a/contracts/IERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":500,"details":{"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf"}}},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 24615 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n --> contracts/SPGNFTFactory.sol:6:1:\n  |\n6 | contract SPGNFTFactory {\n  | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 24615 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":2796,"file":"contracts/SPGNFTFactory.sol","start":97},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[202],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":203,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,202],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[202]},"id":203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":202,"linearizedBaseContracts":[202],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":183,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":179,"id":182,"nodeType":"Return","src":"728:17:2"}]},"id":184,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":202,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":192,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":188,"id":191,"nodeType":"Return","src":"835:15:2"}]},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":193,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":186,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":202,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":200,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":197,"id":199,"nodeType":"Return","src":"945:8:2"}]},"id":201,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":201,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":202,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":203,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[254]},"id":255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":204,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"125:489:3","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":254,"linearizedBaseContracts":[254],"name":"Panic","nameLocation":"665:5:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"677:36:3","text":"@dev generic / unspecified error"},"id":209,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:3","nodeType":"VariableDeclaration","scope":254,"src":"718:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"764:37:3","text":"@dev used by the assert() builtin"},"id":213,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:3","nodeType":"VariableDeclaration","scope":254,"src":"806:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"851:41:3","text":"@dev arithmetic underflow or overflow"},"id":217,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:3","nodeType":"VariableDeclaration","scope":254,"src":"897:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:3","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"950:35:3","text":"@dev division or modulo by zero"},"id":221,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:3","nodeType":"VariableDeclaration","scope":254,"src":"990:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1045:30:3","text":"@dev enum conversion error"},"id":225,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:3","nodeType":"VariableDeclaration","scope":254,"src":"1080:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:3","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"1140:36:3","text":"@dev invalid encoding in storage"},"id":229,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:3","nodeType":"VariableDeclaration","scope":254,"src":"1181:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"1242:24:3","text":"@dev empty array pop"},"id":233,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:3","nodeType":"VariableDeclaration","scope":254,"src":"1271:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"1325:35:3","text":"@dev array out of bounds access"},"id":237,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:3","nodeType":"VariableDeclaration","scope":254,"src":"1365:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"1423:65:3","text":"@dev resource error (too large allocation or too large array)"},"id":241,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:3","nodeType":"VariableDeclaration","scope":254,"src":"1493:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"1546:42:3","text":"@dev calling invalid internal function"},"id":245,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:3","nodeType":"VariableDeclaration","scope":254,"src":"1593:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:3","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":252,"nodeType":"Block","src":"1819:151:3","statements":[{"AST":{"nativeSrc":"1854:110:3","nodeType":"YulBlock","src":"1854:110:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:3","nodeType":"YulLiteral","src":"1875:4:3","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:3","nodeType":"YulLiteral","src":"1881:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:3","nodeType":"YulIdentifier","src":"1868:6:3"},"nativeSrc":"1868:24:3","nodeType":"YulFunctionCall","src":"1868:24:3"},"nativeSrc":"1868:24:3","nodeType":"YulExpressionStatement","src":"1868:24:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:3","nodeType":"YulLiteral","src":"1912:4:3","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:3","nodeType":"YulIdentifier","src":"1918:4:3"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:3","nodeType":"YulIdentifier","src":"1905:6:3"},"nativeSrc":"1905:18:3","nodeType":"YulFunctionCall","src":"1905:18:3"},"nativeSrc":"1905:18:3","nodeType":"YulExpressionStatement","src":"1905:18:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:3","nodeType":"YulLiteral","src":"1943:4:3","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:3","nodeType":"YulLiteral","src":"1949:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:3","nodeType":"YulIdentifier","src":"1936:6:3"},"nativeSrc":"1936:18:3","nodeType":"YulFunctionCall","src":"1936:18:3"},"nativeSrc":"1936:18:3","nodeType":"YulExpressionStatement","src":"1936:18:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":248,"isOffset":false,"isSlot":false,"src":"1918:4:3","valueSize":1}],"flags":["memory-safe"],"id":251,"nodeType":"InlineAssembly","src":"1829:135:3"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"1658:113:3","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:3","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"code","nameLocation":"1799:4:3","nodeType":"VariableDeclaration","scope":253,"src":"1791:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:3"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"1819:0:3"},"scope":254,"src":"1776:194:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":255,"src":"657:1315:3","usedErrors":[],"usedEvents":[]}],"src":"99:1874:3"},"id":3},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[202],"Pausable":[362]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":203,"src":"128:45:4","symbolAliases":[{"foreign":{"id":257,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"136:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":260,"name":"Context","nameLocations":["645:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"645:7:4"},"id":261,"nodeType":"InheritanceSpecifier","src":"645:7:4"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"175:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,202],"name":"Pausable","nameLocation":"633:8:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":263,"mutability":"mutable","name":"_paused","nameLocation":"672:7:4","nodeType":"VariableDeclaration","scope":362,"src":"659:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"686:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":268,"name":"Paused","nameLocation":"770:6:4","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:4","nodeType":"VariableDeclaration","scope":268,"src":"777:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:4"},"src":"764:30:4"},{"anonymous":false,"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"800:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":273,"name":"Unpaused","nameLocation":"881:8:4","nodeType":"EventDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:4","nodeType":"VariableDeclaration","scope":273,"src":"890:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:4"},"src":"875:32:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"913:76:4","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":276,"name":"EnforcedPause","nameLocation":"1000:13:4","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"1013:2:4"},"src":"994:22:4"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"1022:80:4","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":279,"name":"ExpectedPause","nameLocation":"1113:13:4","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"1126:2:4"},"src":"1107:22:4"},{"body":{"id":286,"nodeType":"Block","src":"1340:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1350:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"1350:19:4"},{"id":285,"nodeType":"PlaceholderStatement","src":"1379:1:4"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"1135:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":287,"name":"whenNotPaused","nameLocation":"1324:13:4","nodeType":"ModifierDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[],"src":"1337:2:4"},"src":"1315:72:4","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"1587:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"1597:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"1597:16:4"},{"id":293,"nodeType":"PlaceholderStatement","src":"1623:1:4"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"1393:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":295,"name":"whenPaused","nameLocation":"1574:10:4","nodeType":"ModifierDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"1584:2:4"},"src":"1565:66:4","virtual":false,"visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"1779:31:4","statements":[{"expression":{"id":301,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1796:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":300,"id":302,"nodeType":"Return","src":"1789:14:4"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"1637:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:4","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"1741:2:4"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"1773:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":298,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:4"},"scope":362,"src":"1726:84:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":315,"nodeType":"Block","src":"1929:77:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1943:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":314,"nodeType":"IfStatement","src":"1939:61:4","trueBody":{"id":313,"nodeType":"Block","src":"1953:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1974:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":312,"nodeType":"RevertStatement","src":"1967:22:4"}]}}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"1816:57:4","text":" @dev Throws if the contract is paused."},"id":316,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:4","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"1904:2:4"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"1929:0:4"},"scope":362,"src":"1878:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"2126:78:4","statements":[{"condition":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"2141:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"IfStatement","src":"2136:62:4","trueBody":{"id":326,"nodeType":"Block","src":"2151:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":323,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2172:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":325,"nodeType":"RevertStatement","src":"2165:22:4"}]}}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"2012:61:4","text":" @dev Throws if the contract is not paused."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:4","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"2101:2:4"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"2126:0:4"},"scope":362,"src":"2078:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":344,"nodeType":"Block","src":"2388:66:4","statements":[{"expression":{"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":335,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2398:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":338,"nodeType":"ExpressionStatement","src":"2398:14:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":340,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2434:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":339,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2427:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"EmitStatement","src":"2422:25:4"}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"2210:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":345,"implemented":true,"kind":"function","modifiers":[{"id":333,"kind":"modifierInvocation","modifierName":{"id":332,"name":"whenNotPaused","nameLocations":["2374:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"2374:13:4"},"nodeType":"ModifierInvocation","src":"2374:13:4"}],"name":"_pause","nameLocation":"2348:6:4","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"2354:2:4"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"2388:0:4"},"scope":362,"src":"2339:115:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"2634:69:4","statements":[{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2644:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":354,"nodeType":"ExpressionStatement","src":"2644:15:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2683:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2674:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"EmitStatement","src":"2669:27:4"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2460:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":361,"implemented":true,"kind":"function","modifiers":[{"id":349,"kind":"modifierInvocation","modifierName":{"id":348,"name":"whenPaused","nameLocations":["2623:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"2623:10:4"},"nodeType":"ModifierInvocation","src":"2623:10:4"}],"name":"_unpause","nameLocation":"2595:8:4","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2634:0:4"},"scope":362,"src":"2586:117:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"615:2090:4","usedErrors":[276,279],"usedEvents":[268,273]}],"src":"102:2604:4"},"id":4},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[431]},"id":432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"135:894:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":431,"linearizedBaseContracts":[431],"name":"ReentrancyGuard","nameLocation":"1048:15:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":368,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:5","nodeType":"VariableDeclaration","scope":431,"src":"1818:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":371,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:5","nodeType":"VariableDeclaration","scope":431,"src":"1864:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":373,"mutability":"mutable","name":"_status","nameLocation":"1923:7:5","nodeType":"VariableDeclaration","scope":431,"src":"1907:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"1937:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":376,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:5","nodeType":"ErrorDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"2028:2:5"},"src":"1994:37:5"},{"body":{"id":383,"nodeType":"Block","src":"2051:38:5","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":379,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":380,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"2071:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"2061:21:5"}]},"id":384,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"2048:2:5"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2051:0:5"},"scope":431,"src":"2037:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"2490:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":387,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2500:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"2500:21:5"},{"id":390,"nodeType":"PlaceholderStatement","src":"2531:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":391,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2542:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"2542:20:5"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"2095:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":395,"name":"nonReentrant","nameLocation":"2475:12:5","nodeType":"ModifierDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2487:2:5"},"src":"2466:103:5","virtual":false,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"2614:268:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":399,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":405,"nodeType":"IfStatement","src":"2698:86:5","trueBody":{"id":404,"nodeType":"Block","src":"2722:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":401,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2743:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":403,"nodeType":"RevertStatement","src":"2736:37:5"}]}},{"expression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":406,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":407,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":409,"nodeType":"ExpressionStatement","src":"2858:17:5"}]},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:5","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"2603:2:5"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2614:0:5"},"scope":431,"src":"2575:307:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":418,"nodeType":"Block","src":"2926:170:5","statements":[{"expression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":414,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3068:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":415,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3078:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":417,"nodeType":"ExpressionStatement","src":"3068:21:5"}]},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:5","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"2915:2:5"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"2926:0:5"},"scope":431,"src":"2888:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":429,"nodeType":"Block","src":"3339:42:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":426,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3367:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":424,"id":428,"nodeType":"Return","src":"3349:25:5"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"3102:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":430,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:5","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"3307:2:5"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"3333:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:5"},"scope":431,"src":"3275:106:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":432,"src":"1030:2353:5","usedErrors":[376],"usedEvents":[]}],"src":"109:3275:5"},"id":5},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[437],"ShortStrings":[648],"StorageSlot":[772]},"id":649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":649,"sourceUnit":773,"src":"132:46:6","symbolAliases":[{"foreign":{"id":434,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"140:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":437,"name":"ShortString","nameLocation":"353:11:6","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:6","underlyingType":{"id":436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"378:876:6","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":648,"linearizedBaseContracts":[648],"name":"ShortStrings","nameLocation":"1263:12:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":441,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:6","nodeType":"VariableDeclaration","scope":648,"src":"1345:111:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":445,"name":"StringTooLong","nameLocation":"1469:13:6","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"str","nameLocation":"1490:3:6","nodeType":"VariableDeclaration","scope":445,"src":"1483:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":442,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:6"},"src":"1463:32:6"},{"errorSelector":"b3512b0c","id":447,"name":"InvalidShortString","nameLocation":"1506:18:6","nodeType":"ErrorDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"1524:2:6"},"src":"1500:27:6"},{"body":{"id":490,"nodeType":"Block","src":"1786:208:6","statements":[{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:6","nodeType":"VariableDeclaration","scope":490,"src":"1796:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":456,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":462,"initialValue":{"arguments":[{"id":460,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1822:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:6","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1840:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:6","memberName":"length","nodeType":"MemberAccess","src":"1840:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"1836:72:6","trueBody":{"id":471,"nodeType":"Block","src":"1858:50:6","statements":[{"errorCall":{"arguments":[{"id":468,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1893:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":467,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1879:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":470,"nodeType":"RevertStatement","src":"1872:25:6"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":481,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1965:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:6","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:6","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":484,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1974:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:6","memberName":"length","nodeType":"MemberAccess","src":"1974:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:6","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":473,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1924:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$437_$","typeString":"type(ShortString)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:6","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:6","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$437_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"functionReturnParameters":455,"id":489,"nodeType":"Return","src":"1917:70:6"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1533:170:6","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:6","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"str","nameLocation":"1745:3:6","nodeType":"VariableDeclaration","scope":491,"src":"1731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:6"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"1773:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":453,"nodeType":"UserDefinedTypeName","pathNode":{"id":452,"name":"ShortString","nameLocations":["1773:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1773:11:6"},"referencedDeclaration":437,"src":"1773:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:6"},"scope":648,"src":"1708:286:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"2152:304:6","statements":[{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"len","nameLocation":"2170:3:6","nodeType":"VariableDeclaration","scope":516,"src":"2162:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":505,"initialValue":{"arguments":[{"id":503,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2187:4:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"id":502,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2176:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:6"},{"assignments":[507],"declarations":[{"constant":false,"id":507,"mutability":"mutable","name":"str","nameLocation":"2294:3:6","nodeType":"VariableDeclaration","scope":516,"src":"2280:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":512,"initialValue":{"arguments":[{"hexValue":"3332","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:6"},{"AST":{"nativeSrc":"2349:81:6","nodeType":"YulBlock","src":"2349:81:6","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:6","nodeType":"YulIdentifier","src":"2370:3:6"},{"name":"len","nativeSrc":"2375:3:6","nodeType":"YulIdentifier","src":"2375:3:6"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:6","nodeType":"YulIdentifier","src":"2363:6:6"},"nativeSrc":"2363:16:6","nodeType":"YulFunctionCall","src":"2363:16:6"},"nativeSrc":"2363:16:6","nodeType":"YulExpressionStatement","src":"2363:16:6"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:6","nodeType":"YulIdentifier","src":"2403:3:6"},{"kind":"number","nativeSrc":"2408:4:6","nodeType":"YulLiteral","src":"2408:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:6","nodeType":"YulIdentifier","src":"2399:3:6"},"nativeSrc":"2399:14:6","nodeType":"YulFunctionCall","src":"2399:14:6"},{"name":"sstr","nativeSrc":"2415:4:6","nodeType":"YulIdentifier","src":"2415:4:6"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:6","nodeType":"YulIdentifier","src":"2392:6:6"},"nativeSrc":"2392:28:6","nodeType":"YulFunctionCall","src":"2392:28:6"},"nativeSrc":"2392:28:6","nodeType":"YulExpressionStatement","src":"2392:28:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":501,"isOffset":false,"isSlot":false,"src":"2375:3:6","valueSize":1},{"declaration":495,"isOffset":false,"isSlot":false,"src":"2415:4:6","valueSize":1},{"declaration":507,"isOffset":false,"isSlot":false,"src":"2370:3:6","valueSize":1},{"declaration":507,"isOffset":false,"isSlot":false,"src":"2403:3:6","valueSize":1}],"flags":["memory-safe"],"id":513,"nodeType":"InlineAssembly","src":"2324:106:6"},{"expression":{"id":514,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2446:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":499,"id":515,"nodeType":"Return","src":"2439:10:6"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2000:73:6","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":517,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:6","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:6","nodeType":"VariableDeclaration","scope":517,"src":"2096:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":494,"nodeType":"UserDefinedTypeName","pathNode":{"id":493,"name":"ShortString","nameLocations":["2096:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2096:11:6"},"referencedDeclaration":437,"src":"2096:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:6"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":517,"src":"2137:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":497,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:6"},"scope":648,"src":"2078:378:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"2598:175:6","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"result","nameLocation":"2616:6:6","nodeType":"VariableDeclaration","scope":548,"src":"2608:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":537,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":532,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2652:4:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"expression":{"id":530,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2633:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$437_$","typeString":"type(ShortString)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:6","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2679:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"IfStatement","src":"2675:69:6","trueBody":{"id":544,"nodeType":"Block","src":"2692:52:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":541,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2713:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":543,"nodeType":"RevertStatement","src":"2706:27:6"}]}},{"expression":{"id":546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2760:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":525,"id":547,"nodeType":"Return","src":"2753:13:6"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"2462:61:6","text":" @dev Return the length of a `ShortString`."},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:6","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:6","nodeType":"VariableDeclaration","scope":549,"src":"2548:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":520,"nodeType":"UserDefinedTypeName","pathNode":{"id":519,"name":"ShortString","nameLocations":["2548:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2548:11:6"},"referencedDeclaration":437,"src":"2548:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:6"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"2589:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:6"},"scope":648,"src":"2528:245:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":588,"nodeType":"Block","src":"2996:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3016:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":560,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:6","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:6","memberName":"length","nodeType":"MemberAccess","src":"3010:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":586,"nodeType":"Block","src":"3094:127:6","statements":[{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":575,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3134:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":572,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3108:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$772_$","typeString":"type(library StorageSlot)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:6","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":749,"src":"3108:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$669_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$669_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3108:38:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3149:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":580,"nodeType":"ExpressionStatement","src":"3108:46:6"},{"expression":{"arguments":[{"id":583,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"3192:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":581,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3175:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$437_$","typeString":"type(ShortString)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:6","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:6","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$437_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"functionReturnParameters":559,"id":585,"nodeType":"Return","src":"3168:42:6"}]},"id":587,"nodeType":"IfStatement","src":"3006:215:6","trueBody":{"id":571,"nodeType":"Block","src":"3036:52:6","statements":[{"expression":{"arguments":[{"id":568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3071:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":567,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3057:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$437_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"functionReturnParameters":559,"id":570,"nodeType":"Return","src":"3050:27:6"}]}}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"2779:103:6","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":589,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:6","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"value","nameLocation":"2936:5:6","nodeType":"VariableDeclaration","scope":589,"src":"2922:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":551,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"store","nameLocation":"2958:5:6","nodeType":"VariableDeclaration","scope":589,"src":"2943:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":553,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:6"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":589,"src":"2983:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":557,"nodeType":"UserDefinedTypeName","pathNode":{"id":556,"name":"ShortString","nameLocations":["2983:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2983:11:6"},"referencedDeclaration":437,"src":"2983:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:6"},"scope":648,"src":"2887:340:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"3477:158:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3510:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"expression":{"id":600,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3491:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$437_$","typeString":"type(ShortString)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":604,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"3520:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":613,"nodeType":"Block","src":"3592:37:6","statements":[{"expression":{"id":611,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3613:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":599,"id":612,"nodeType":"Return","src":"3606:12:6"}]},"id":614,"nodeType":"IfStatement","src":"3487:142:6","trueBody":{"id":610,"nodeType":"Block","src":"3539:47:6","statements":[{"expression":{"arguments":[{"id":607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3569:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"id":606,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3560:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":599,"id":609,"nodeType":"Return","src":"3553:22:6"}]}}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"3233:130:6","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:6","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"value","nameLocation":"3410:5:6","nodeType":"VariableDeclaration","scope":616,"src":"3398:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":592,"nodeType":"UserDefinedTypeName","pathNode":{"id":591,"name":"ShortString","nameLocations":["3398:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"3398:11:6"},"referencedDeclaration":437,"src":"3398:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"store","nameLocation":"3432:5:6","nodeType":"VariableDeclaration","scope":616,"src":"3417:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":594,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:6"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"3462:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":597,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:6"},"scope":648,"src":"3368:267:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":646,"nodeType":"Block","src":"4125:174:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4158:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"expression":{"id":627,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4139:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$437_$","typeString":"type(ShortString)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":631,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4168:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":644,"nodeType":"Block","src":"4242:51:6","statements":[{"expression":{"expression":{"arguments":[{"id":640,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"4269:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":638,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:6","typeDescriptions":{}}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:6","memberName":"length","nodeType":"MemberAccess","src":"4263:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":626,"id":643,"nodeType":"Return","src":"4256:26:6"}]},"id":645,"nodeType":"IfStatement","src":"4135:158:6","trueBody":{"id":637,"nodeType":"Block","src":"4187:49:6","statements":[{"expression":{"arguments":[{"id":634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4219:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}],"id":633,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4208:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$437_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":626,"id":636,"nodeType":"Return","src":"4201:24:6"}]}}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3641:374:6","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":647,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:6","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"value","nameLocation":"4064:5:6","nodeType":"VariableDeclaration","scope":647,"src":"4052:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"ShortString","nameLocations":["4052:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"4052:11:6"},"referencedDeclaration":437,"src":"4052:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"store","nameLocation":"4086:5:6","nodeType":"VariableDeclaration","scope":647,"src":"4071:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":621,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:6"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":647,"src":"4116:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:6"},"scope":648,"src":"4020:279:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":649,"src":"1255:3046:6","usedErrors":[445,447],"usedEvents":[]}],"src":"106:4196:6"},"id":6},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[772]},"id":773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":650,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"219:1187:7","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":772,"linearizedBaseContracts":[772],"name":"StorageSlot","nameLocation":"1415:11:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":654,"members":[{"constant":false,"id":653,"mutability":"mutable","name":"value","nameLocation":"1470:5:7","nodeType":"VariableDeclaration","scope":654,"src":"1462:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:7","nodeType":"StructDefinition","scope":772,"src":"1433:49:7","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":657,"members":[{"constant":false,"id":656,"mutability":"mutable","name":"value","nameLocation":"1522:5:7","nodeType":"VariableDeclaration","scope":657,"src":"1517:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":655,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:7","nodeType":"StructDefinition","scope":772,"src":"1488:46:7","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":660,"members":[{"constant":false,"id":659,"mutability":"mutable","name":"value","nameLocation":"1577:5:7","nodeType":"VariableDeclaration","scope":660,"src":"1569:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:7","nodeType":"StructDefinition","scope":772,"src":"1540:49:7","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":663,"members":[{"constant":false,"id":662,"mutability":"mutable","name":"value","nameLocation":"1632:5:7","nodeType":"VariableDeclaration","scope":663,"src":"1624:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:7","nodeType":"StructDefinition","scope":772,"src":"1595:49:7","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":666,"members":[{"constant":false,"id":665,"mutability":"mutable","name":"value","nameLocation":"1685:5:7","nodeType":"VariableDeclaration","scope":666,"src":"1678:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":664,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:7","nodeType":"StructDefinition","scope":772,"src":"1650:47:7","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":669,"members":[{"constant":false,"id":668,"mutability":"mutable","name":"value","nameLocation":"1738:5:7","nodeType":"VariableDeclaration","scope":669,"src":"1731:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:7","nodeType":"StructDefinition","scope":772,"src":"1703:47:7","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":672,"members":[{"constant":false,"id":671,"mutability":"mutable","name":"value","nameLocation":"1789:5:7","nodeType":"VariableDeclaration","scope":672,"src":"1783:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":670,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:7","nodeType":"StructDefinition","scope":772,"src":"1756:45:7","visibility":"public"},{"body":{"id":682,"nodeType":"Block","src":"1983:79:7","statements":[{"AST":{"nativeSrc":"2018:38:7","nodeType":"YulBlock","src":"2018:38:7","statements":[{"nativeSrc":"2032:14:7","nodeType":"YulAssignment","src":"2032:14:7","value":{"name":"slot","nativeSrc":"2042:4:7","nodeType":"YulIdentifier","src":"2042:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:7","nodeType":"YulIdentifier","src":"2032:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":679,"isOffset":false,"isSlot":true,"src":"2032:6:7","suffix":"slot","valueSize":1},{"declaration":675,"isOffset":false,"isSlot":false,"src":"2042:4:7","valueSize":1}],"flags":["memory-safe"],"id":681,"nodeType":"InlineAssembly","src":"1993:63:7"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"1807:87:7","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":683,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:7","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"slot","nameLocation":"1931:4:7","nodeType":"VariableDeclaration","scope":683,"src":"1923:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:7"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"r","nameLocation":"1980:1:7","nodeType":"VariableDeclaration","scope":683,"src":"1960:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$654_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"AddressSlot","nameLocations":["1960:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":654,"src":"1960:11:7"},"referencedDeclaration":654,"src":"1960:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$654_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:7"},"scope":772,"src":"1899:163:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"2243:79:7","statements":[{"AST":{"nativeSrc":"2278:38:7","nodeType":"YulBlock","src":"2278:38:7","statements":[{"nativeSrc":"2292:14:7","nodeType":"YulAssignment","src":"2292:14:7","value":{"name":"slot","nativeSrc":"2302:4:7","nodeType":"YulIdentifier","src":"2302:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:7","nodeType":"YulIdentifier","src":"2292:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":690,"isOffset":false,"isSlot":true,"src":"2292:6:7","suffix":"slot","valueSize":1},{"declaration":686,"isOffset":false,"isSlot":false,"src":"2302:4:7","valueSize":1}],"flags":["memory-safe"],"id":692,"nodeType":"InlineAssembly","src":"2253:63:7"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"2068:86:7","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:7","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"slot","nameLocation":"2191:4:7","nodeType":"VariableDeclaration","scope":694,"src":"2183:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:7"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"r","nameLocation":"2240:1:7","nodeType":"VariableDeclaration","scope":694,"src":"2220:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$657_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":689,"nodeType":"UserDefinedTypeName","pathNode":{"id":688,"name":"BooleanSlot","nameLocations":["2220:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"2220:11:7"},"referencedDeclaration":657,"src":"2220:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$657_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:7"},"scope":772,"src":"2159:163:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"2503:79:7","statements":[{"AST":{"nativeSrc":"2538:38:7","nodeType":"YulBlock","src":"2538:38:7","statements":[{"nativeSrc":"2552:14:7","nodeType":"YulAssignment","src":"2552:14:7","value":{"name":"slot","nativeSrc":"2562:4:7","nodeType":"YulIdentifier","src":"2562:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:7","nodeType":"YulIdentifier","src":"2552:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":701,"isOffset":false,"isSlot":true,"src":"2552:6:7","suffix":"slot","valueSize":1},{"declaration":697,"isOffset":false,"isSlot":false,"src":"2562:4:7","valueSize":1}],"flags":["memory-safe"],"id":703,"nodeType":"InlineAssembly","src":"2513:63:7"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"2328:86:7","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:7","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"slot","nameLocation":"2451:4:7","nodeType":"VariableDeclaration","scope":705,"src":"2443:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:7"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"r","nameLocation":"2500:1:7","nodeType":"VariableDeclaration","scope":705,"src":"2480:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$660_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"Bytes32Slot","nameLocations":["2480:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"2480:11:7"},"referencedDeclaration":660,"src":"2480:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$660_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:7"},"scope":772,"src":"2419:163:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":715,"nodeType":"Block","src":"2763:79:7","statements":[{"AST":{"nativeSrc":"2798:38:7","nodeType":"YulBlock","src":"2798:38:7","statements":[{"nativeSrc":"2812:14:7","nodeType":"YulAssignment","src":"2812:14:7","value":{"name":"slot","nativeSrc":"2822:4:7","nodeType":"YulIdentifier","src":"2822:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:7","nodeType":"YulIdentifier","src":"2812:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":712,"isOffset":false,"isSlot":true,"src":"2812:6:7","suffix":"slot","valueSize":1},{"declaration":708,"isOffset":false,"isSlot":false,"src":"2822:4:7","valueSize":1}],"flags":["memory-safe"],"id":714,"nodeType":"InlineAssembly","src":"2773:63:7"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"2588:86:7","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":716,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:7","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"slot","nameLocation":"2711:4:7","nodeType":"VariableDeclaration","scope":716,"src":"2703:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:7"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"r","nameLocation":"2760:1:7","nodeType":"VariableDeclaration","scope":716,"src":"2740:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$663_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":711,"nodeType":"UserDefinedTypeName","pathNode":{"id":710,"name":"Uint256Slot","nameLocations":["2740:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":663,"src":"2740:11:7"},"referencedDeclaration":663,"src":"2740:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$663_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:7"},"scope":772,"src":"2679:163:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"3020:79:7","statements":[{"AST":{"nativeSrc":"3055:38:7","nodeType":"YulBlock","src":"3055:38:7","statements":[{"nativeSrc":"3069:14:7","nodeType":"YulAssignment","src":"3069:14:7","value":{"name":"slot","nativeSrc":"3079:4:7","nodeType":"YulIdentifier","src":"3079:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:7","nodeType":"YulIdentifier","src":"3069:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":723,"isOffset":false,"isSlot":true,"src":"3069:6:7","suffix":"slot","valueSize":1},{"declaration":719,"isOffset":false,"isSlot":false,"src":"3079:4:7","valueSize":1}],"flags":["memory-safe"],"id":725,"nodeType":"InlineAssembly","src":"3030:63:7"}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2848:85:7","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:7","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"slot","nameLocation":"2969:4:7","nodeType":"VariableDeclaration","scope":727,"src":"2961:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:7"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"r","nameLocation":"3017:1:7","nodeType":"VariableDeclaration","scope":727,"src":"2998:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$666_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":722,"nodeType":"UserDefinedTypeName","pathNode":{"id":721,"name":"Int256Slot","nameLocations":["2998:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2998:10:7"},"referencedDeclaration":666,"src":"2998:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$666_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:7"},"scope":772,"src":"2938:161:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"3277:79:7","statements":[{"AST":{"nativeSrc":"3312:38:7","nodeType":"YulBlock","src":"3312:38:7","statements":[{"nativeSrc":"3326:14:7","nodeType":"YulAssignment","src":"3326:14:7","value":{"name":"slot","nativeSrc":"3336:4:7","nodeType":"YulIdentifier","src":"3336:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:7","nodeType":"YulIdentifier","src":"3326:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":734,"isOffset":false,"isSlot":true,"src":"3326:6:7","suffix":"slot","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"3336:4:7","valueSize":1}],"flags":["memory-safe"],"id":736,"nodeType":"InlineAssembly","src":"3287:63:7"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"3105:85:7","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:7","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"slot","nameLocation":"3226:4:7","nodeType":"VariableDeclaration","scope":738,"src":"3218:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:7"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"r","nameLocation":"3274:1:7","nodeType":"VariableDeclaration","scope":738,"src":"3255:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$669_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"StringSlot","nameLocations":["3255:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"3255:10:7"},"referencedDeclaration":669,"src":"3255:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$669_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:7"},"scope":772,"src":"3195:161:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"3558:85:7","statements":[{"AST":{"nativeSrc":"3593:44:7","nodeType":"YulBlock","src":"3593:44:7","statements":[{"nativeSrc":"3607:20:7","nodeType":"YulAssignment","src":"3607:20:7","value":{"name":"store.slot","nativeSrc":"3617:10:7","nodeType":"YulIdentifier","src":"3617:10:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:7","nodeType":"YulIdentifier","src":"3607:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":745,"isOffset":false,"isSlot":true,"src":"3607:6:7","suffix":"slot","valueSize":1},{"declaration":741,"isOffset":false,"isSlot":true,"src":"3617:10:7","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":747,"nodeType":"InlineAssembly","src":"3568:69:7"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3362:101:7","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:7","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"store","nameLocation":"3506:5:7","nodeType":"VariableDeclaration","scope":749,"src":"3491:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":740,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:7"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"r","nameLocation":"3555:1:7","nodeType":"VariableDeclaration","scope":749,"src":"3536:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$669_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"StringSlot","nameLocations":["3536:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"3536:10:7"},"referencedDeclaration":669,"src":"3536:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$669_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:7"},"scope":772,"src":"3468:175:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"3818:79:7","statements":[{"AST":{"nativeSrc":"3853:38:7","nodeType":"YulBlock","src":"3853:38:7","statements":[{"nativeSrc":"3867:14:7","nodeType":"YulAssignment","src":"3867:14:7","value":{"name":"slot","nativeSrc":"3877:4:7","nodeType":"YulIdentifier","src":"3877:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:7","nodeType":"YulIdentifier","src":"3867:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":756,"isOffset":false,"isSlot":true,"src":"3867:6:7","suffix":"slot","valueSize":1},{"declaration":752,"isOffset":false,"isSlot":false,"src":"3877:4:7","valueSize":1}],"flags":["memory-safe"],"id":758,"nodeType":"InlineAssembly","src":"3828:63:7"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"3649:84:7","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:7","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"slot","nameLocation":"3768:4:7","nodeType":"VariableDeclaration","scope":760,"src":"3760:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:7"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"r","nameLocation":"3815:1:7","nodeType":"VariableDeclaration","scope":760,"src":"3797:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":755,"nodeType":"UserDefinedTypeName","pathNode":{"id":754,"name":"BytesSlot","nameLocations":["3797:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"3797:9:7"},"referencedDeclaration":672,"src":"3797:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:7"},"scope":772,"src":"3738:159:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"4094:85:7","statements":[{"AST":{"nativeSrc":"4129:44:7","nodeType":"YulBlock","src":"4129:44:7","statements":[{"nativeSrc":"4143:20:7","nodeType":"YulAssignment","src":"4143:20:7","value":{"name":"store.slot","nativeSrc":"4153:10:7","nodeType":"YulIdentifier","src":"4153:10:7"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:7","nodeType":"YulIdentifier","src":"4143:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":767,"isOffset":false,"isSlot":true,"src":"4143:6:7","suffix":"slot","valueSize":1},{"declaration":763,"isOffset":false,"isSlot":true,"src":"4153:10:7","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":769,"nodeType":"InlineAssembly","src":"4104:69:7"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"3903:99:7","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:7","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"store","nameLocation":"4043:5:7","nodeType":"VariableDeclaration","scope":771,"src":"4029:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:7"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"r","nameLocation":"4091:1:7","nodeType":"VariableDeclaration","scope":771,"src":"4073:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"BytesSlot","nameLocations":["4073:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4073:9:7"},"referencedDeclaration":672,"src":"4073:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:7"},"scope":772,"src":"4007:172:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":773,"src":"1407:2774:7","usedErrors":[],"usedEvents":[]}],"src":"193:3989:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4456],"SafeCast":[6221],"SignedMath":[6365],"Strings":[2174]},"id":2175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2175,"sourceUnit":4457,"src":"127:37:8","symbolAliases":[{"foreign":{"id":775,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"135:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2175,"sourceUnit":6222,"src":"165:45:8","symbolAliases":[{"foreign":{"id":777,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2175,"sourceUnit":6366,"src":"211:49:8","symbolAliases":[{"foreign":{"id":779,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"219:10:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"262:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":2174,"linearizedBaseContracts":[2174],"name":"Strings","nameLocation":"305:7:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":783,"libraryName":{"id":782,"name":"SafeCast","nameLocations":["325:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":6221,"src":"325:8:8"},"nodeType":"UsingForDirective","src":"319:21:8"},{"constant":true,"id":786,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:8","nodeType":"VariableDeclaration","scope":2174,"src":"346:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":784,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":789,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:8","nodeType":"VariableDeclaration","scope":2174,"src":"408:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":787,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":825,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:8","nodeType":"VariableDeclaration","scope":2174,"src":"456:302:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:8","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:8","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:8","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:8","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:8","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:8","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:8","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:8","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:8","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:8","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:8","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:8","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:8","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:8","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"778:81:8","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":832,"name":"StringsInsufficientHexLength","nameLocation":"870:28:8","nodeType":"ErrorDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"value","nameLocation":"907:5:8","nodeType":"VariableDeclaration","scope":832,"src":"899:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"length","nameLocation":"922:6:8","nodeType":"VariableDeclaration","scope":832,"src":"914:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:8"},"src":"864:66:8"},{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"936:108:8","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":835,"name":"StringsInvalidChar","nameLocation":"1055:18:8","nodeType":"ErrorDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"1073:2:8"},"src":"1049:27:8"},{"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"1082:84:8","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":838,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:8","nodeType":"ErrorDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"1204:2:8"},"src":"1171:36:8"},{"body":{"id":885,"nodeType":"Block","src":"1379:561:8","statements":[{"id":884,"nodeType":"UncheckedBlock","src":"1389:545:8","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"length","nameLocation":"1421:6:8","nodeType":"VariableDeclaration","scope":884,"src":"1413:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":854,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1441:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":848,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"1430:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4456_$","typeString":"type(library Math)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4288,"src":"1430:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:8"},{"assignments":[856],"declarations":[{"constant":false,"id":856,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:8","nodeType":"VariableDeclaration","scope":884,"src":"1465:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":855,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":861,"initialValue":{"arguments":[{"id":859,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1499:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":857,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:8"},{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:8","nodeType":"VariableDeclaration","scope":884,"src":"1520:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":864,"nodeType":"VariableDeclarationStatement","src":"1520:11:8"},{"AST":{"nativeSrc":"1570:67:8","nodeType":"YulBlock","src":"1570:67:8","statements":[{"nativeSrc":"1588:35:8","nodeType":"YulAssignment","src":"1588:35:8","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:8","nodeType":"YulIdentifier","src":"1599:6:8"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:8","nodeType":"YulLiteral","src":"1611:2:8","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:8","nodeType":"YulIdentifier","src":"1615:6:8"}],"functionName":{"name":"add","nativeSrc":"1607:3:8","nodeType":"YulIdentifier","src":"1607:3:8"},"nativeSrc":"1607:15:8","nodeType":"YulFunctionCall","src":"1607:15:8"}],"functionName":{"name":"add","nativeSrc":"1595:3:8","nodeType":"YulIdentifier","src":"1595:3:8"},"nativeSrc":"1595:28:8","nodeType":"YulFunctionCall","src":"1595:28:8"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:8","nodeType":"YulIdentifier","src":"1588:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":856,"isOffset":false,"isSlot":false,"src":"1599:6:8","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"1615:6:8","valueSize":1},{"declaration":863,"isOffset":false,"isSlot":false,"src":"1588:3:8","valueSize":1}],"flags":["memory-safe"],"id":865,"nodeType":"InlineAssembly","src":"1545:92:8"},{"body":{"id":880,"nodeType":"Block","src":"1663:234:8","statements":[{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:8","subExpression":{"id":867,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"1681:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":869,"nodeType":"ExpressionStatement","src":"1681:5:8"},{"AST":{"nativeSrc":"1729:86:8","nodeType":"YulBlock","src":"1729:86:8","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:8","nodeType":"YulIdentifier","src":"1759:3:8"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:8","nodeType":"YulIdentifier","src":"1773:5:8"},{"kind":"number","nativeSrc":"1780:2:8","nodeType":"YulLiteral","src":"1780:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:8","nodeType":"YulIdentifier","src":"1769:3:8"},"nativeSrc":"1769:14:8","nodeType":"YulFunctionCall","src":"1769:14:8"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:8","nodeType":"YulIdentifier","src":"1785:10:8"}],"functionName":{"name":"byte","nativeSrc":"1764:4:8","nodeType":"YulIdentifier","src":"1764:4:8"},"nativeSrc":"1764:32:8","nodeType":"YulFunctionCall","src":"1764:32:8"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:8","nodeType":"YulIdentifier","src":"1751:7:8"},"nativeSrc":"1751:46:8","nodeType":"YulFunctionCall","src":"1751:46:8"},"nativeSrc":"1751:46:8","nodeType":"YulExpressionStatement","src":"1751:46:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":786,"isOffset":false,"isSlot":false,"src":"1785:10:8","valueSize":1},{"declaration":863,"isOffset":false,"isSlot":false,"src":"1759:3:8","valueSize":1},{"declaration":841,"isOffset":false,"isSlot":false,"src":"1773:5:8","valueSize":1}],"flags":["memory-safe"],"id":870,"nodeType":"InlineAssembly","src":"1704:111:8"},{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1832:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":874,"nodeType":"ExpressionStatement","src":"1832:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1865:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":879,"nodeType":"IfStatement","src":"1861:21:8","trueBody":{"id":878,"nodeType":"Break","src":"1877:5:8"}}]},"condition":{"hexValue":"74727565","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":881,"nodeType":"WhileStatement","src":"1650:247:8"},{"expression":{"id":882,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"1917:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":845,"id":883,"nodeType":"Return","src":"1910:13:8"}]}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"1213:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:8","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"value","nameLocation":"1334:5:8","nodeType":"VariableDeclaration","scope":886,"src":"1326:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:8"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"1364:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":843,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:8"},"scope":2174,"src":"1308:632:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"2116:92:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2147:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:8","trueExpression":{"hexValue":"2d","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2193:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":904,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"2178:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6365_$","typeString":"type(library SignedMath)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6364,"src":"2178:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2169:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":894,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:8","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":893,"id":910,"nodeType":"Return","src":"2126:75:8"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1946:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:8","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"value","nameLocation":"2071:5:8","nodeType":"VariableDeclaration","scope":912,"src":"2064:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":888,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:8"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"2101:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":891,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:8"},"scope":2174,"src":"2040:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"2387:100:8","statements":[{"id":930,"nodeType":"UncheckedBlock","src":"2397:84:8","statements":[{"expression":{"arguments":[{"id":921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2459:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":922,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"2447:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4456_$","typeString":"type(library Math)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4399,"src":"2447:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":920,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[932,1015,1035],"referencedDeclaration":1015,"src":"2428:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":919,"id":929,"nodeType":"Return","src":"2421:49:8"}]}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2214:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:8","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"value","nameLocation":"2342:5:8","nodeType":"VariableDeclaration","scope":932,"src":"2334:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:8"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"2372:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":917,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:8"},"scope":2174,"src":"2313:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1014,"nodeType":"Block","src":"2700:435:8","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:8","nodeType":"VariableDeclaration","scope":1014,"src":"2710:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":945,"initialValue":{"id":944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2731:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:8"},{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:8","nodeType":"VariableDeclaration","scope":1014,"src":"2746:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":956,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":951,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"2782:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:8"},{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":957,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2803:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":959,"indexExpression":{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":962,"nodeType":"ExpressionStatement","src":"2803:15:8"},{"expression":{"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":963,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2828:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":965,"indexExpression":{"hexValue":"31","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":968,"nodeType":"ExpressionStatement","src":"2828:15:8"},{"body":{"id":997,"nodeType":"Block","src":"2898:95:8","statements":[{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":983,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2912:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":985,"indexExpression":{"id":984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2919:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":986,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2924:10:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":990,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":987,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2935:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":992,"nodeType":"ExpressionStatement","src":"2912:40:8"},{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":993,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2966:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"nodeType":"ExpressionStatement","src":"2966:16:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2886:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":998,"initializationExpression":{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"i","nameLocation":"2866:1:8","nodeType":"VariableDeclaration","scope":998,"src":"2858:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":976,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":972,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"2874:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:8","subExpression":{"id":980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2895:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":982,"nodeType":"ExpressionStatement","src":"2893:3:8"},"nodeType":"ForStatement","src":"2853:140:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3006:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"3002:96:8","trueBody":{"id":1007,"nodeType":"Block","src":"3023:75:8","statements":[{"errorCall":{"arguments":[{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"3073:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1004,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3080:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3044:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1006,"nodeType":"RevertStatement","src":"3037:50:8"}]}},{"expression":{"arguments":[{"id":1011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3121:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1009,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:8","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":941,"id":1013,"nodeType":"Return","src":"3107:21:8"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"2493:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:8","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"2639:5:8","nodeType":"VariableDeclaration","scope":1015,"src":"2631:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"length","nameLocation":"2654:6:8","nodeType":"VariableDeclaration","scope":1015,"src":"2646:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:8"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"2685:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":939,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:8"},"scope":2174,"src":"2610:525:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1034,"nodeType":"Block","src":"3367:75:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1028,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"3412:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1026,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:8","typeDescriptions":{}}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:8","typeDescriptions":{}}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1031,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3420:14:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1023,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[932,1015,1035],"referencedDeclaration":1015,"src":"3384:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1022,"id":1033,"nodeType":"Return","src":"3377:58:8"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"3141:148:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:8","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"addr","nameLocation":"3323:4:8","nodeType":"VariableDeclaration","scope":1035,"src":"3315:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:8"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"3352:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:8"},"scope":2174,"src":"3294:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1099,"nodeType":"Block","src":"3699:642:8","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:8","nodeType":"VariableDeclaration","scope":1099,"src":"3709:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"arguments":[{"id":1048,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"3749:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1047,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[932,1015,1035],"referencedDeclaration":1035,"src":"3737:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:8","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:8"},{"assignments":[1053],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:8","nodeType":"VariableDeclaration","scope":1099,"src":"3840:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1054,"nodeType":"VariableDeclarationStatement","src":"3840:17:8"},{"AST":{"nativeSrc":"3892:78:8","nodeType":"YulBlock","src":"3892:78:8","statements":[{"nativeSrc":"3906:54:8","nodeType":"YulAssignment","src":"3906:54:8","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:8","nodeType":"YulLiteral","src":"3923:2:8","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:8","nodeType":"YulIdentifier","src":"3941:6:8"},{"kind":"number","nativeSrc":"3949:4:8","nodeType":"YulLiteral","src":"3949:4:8","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:8","nodeType":"YulIdentifier","src":"3937:3:8"},"nativeSrc":"3937:17:8","nodeType":"YulFunctionCall","src":"3937:17:8"},{"kind":"number","nativeSrc":"3956:2:8","nodeType":"YulLiteral","src":"3956:2:8","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:8","nodeType":"YulIdentifier","src":"3927:9:8"},"nativeSrc":"3927:32:8","nodeType":"YulFunctionCall","src":"3927:32:8"}],"functionName":{"name":"shr","nativeSrc":"3919:3:8","nodeType":"YulIdentifier","src":"3919:3:8"},"nativeSrc":"3919:41:8","nodeType":"YulFunctionCall","src":"3919:41:8"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:8","nodeType":"YulIdentifier","src":"3906:9:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1044,"isOffset":false,"isSlot":false,"src":"3941:6:8","valueSize":1},{"declaration":1053,"isOffset":false,"isSlot":false,"src":"3906:9:8","valueSize":1}],"flags":["memory-safe"],"id":1055,"nodeType":"InlineAssembly","src":"3867:103:8"},{"body":{"id":1092,"nodeType":"Block","src":"4013:291:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4119:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1073,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4148:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1075,"indexExpression":{"id":1074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4155:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1071,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:8","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"4115:150:8","trueBody":{"id":1086,"nodeType":"Block","src":"4165:100:8","statements":[{"expression":{"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1080,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4233:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1082,"indexExpression":{"id":1081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4240:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1085,"nodeType":"ExpressionStatement","src":"4233:17:8"}]}},{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1088,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4278:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"4278:15:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4001:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1093,"initializationExpression":{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"i","nameLocation":"3993:1:8","nodeType":"VariableDeclaration","scope":1093,"src":"3985:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1059,"initialValue":{"hexValue":"3431","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:8","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:8","subExpression":{"id":1063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4010:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"4008:3:8"},"nodeType":"ForStatement","src":"3980:324:8"},{"expression":{"arguments":[{"id":1096,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4327:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1094,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:8","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1042,"id":1098,"nodeType":"Return","src":"4313:21:8"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"3448:165:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:8","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"addr","nameLocation":"3655:4:8","nodeType":"VariableDeclaration","scope":1100,"src":"3647:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:8"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"3684:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:8"},"scope":2174,"src":"3618:723:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"4496:104:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4519:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1110,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:8","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:8","memberName":"length","nodeType":"MemberAccess","src":"4513:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4538:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:8","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:8","memberName":"length","nodeType":"MemberAccess","src":"4532:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4567:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:8","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1121,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1130,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4590:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:8","typeDescriptions":{}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1109,"id":1135,"nodeType":"Return","src":"4506:87:8"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"4347:66:8","text":" @dev Returns true if the two strings are equal."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:8","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"a","nameLocation":"4447:1:8","nodeType":"VariableDeclaration","scope":1137,"src":"4433:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1102,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"b","nameLocation":"4464:1:8","nodeType":"VariableDeclaration","scope":1137,"src":"4450:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1104,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:8"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"4490:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:8"},"scope":2174,"src":"4418:182:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"4897:64:8","statements":[{"expression":{"arguments":[{"id":1146,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4924:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1150,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4940:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:8","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:8","memberName":"length","nodeType":"MemberAccess","src":"4934:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1156,1187],"referencedDeclaration":1187,"src":"4914:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1144,"id":1154,"nodeType":"Return","src":"4907:47:8"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"4606:214:8","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:8","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"input","nameLocation":"4858:5:8","nodeType":"VariableDeclaration","scope":1156,"src":"4844:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:8"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"4888:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:8"},"scope":2174,"src":"4825:136:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"5366:153:8","statements":[{"assignments":[1169,1171],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"success","nameLocation":"5382:7:8","nodeType":"VariableDeclaration","scope":1186,"src":"5377:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"value","nameLocation":"5399:5:8","nodeType":"VariableDeclaration","scope":1186,"src":"5391:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1177,"initialValue":{"arguments":[{"id":1173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5421:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1174,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5428:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1175,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5435:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1208,1245],"referencedDeclaration":1245,"src":"5408:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:8"},{"condition":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:8","subExpression":{"id":1178,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5454:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"5449:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1180,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"5470:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1182,"nodeType":"RevertStatement","src":"5463:27:8"}},{"expression":{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"5507:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1167,"id":1185,"nodeType":"Return","src":"5500:12:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"4967:294:8","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:8","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"input","nameLocation":"5299:5:8","nodeType":"VariableDeclaration","scope":1187,"src":"5285:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1158,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"begin","nameLocation":"5314:5:8","nodeType":"VariableDeclaration","scope":1187,"src":"5306:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"end","nameLocation":"5329:3:8","nodeType":"VariableDeclaration","scope":1187,"src":"5321:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:8"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"5357:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:8"},"scope":2174,"src":"5266:253:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"5840:83:8","statements":[{"expression":{"arguments":[{"id":1198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5886:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1202,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5902:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1200,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:8","typeDescriptions":{}}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:8","memberName":"length","nodeType":"MemberAccess","src":"5896:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1197,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5857:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1196,"id":1206,"nodeType":"Return","src":"5850:66:8"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"5525:215:8","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:8","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"input","nameLocation":"5781:5:8","nodeType":"VariableDeclaration","scope":1208,"src":"5767:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1189,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:8"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"success","nameLocation":"5816:7:8","nodeType":"VariableDeclaration","scope":1208,"src":"5811:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1192,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"value","nameLocation":"5833:5:8","nodeType":"VariableDeclaration","scope":1208,"src":"5825:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:8"},"scope":2174,"src":"5745:178:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"6325:144:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"6339:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6351:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1223,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:8","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:8","memberName":"length","nodeType":"MemberAccess","src":"6345:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6368:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1230,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"6376:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1237,"nodeType":"IfStatement","src":"6335:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1221,"id":1236,"nodeType":"Return","src":"6381:17:8"}},{"expression":{"arguments":[{"id":1239,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6444:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1240,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1241,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"6458:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1238,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6415:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1221,"id":1243,"nodeType":"Return","src":"6408:54:8"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"5929:238:8","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:8","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"input","nameLocation":"6217:5:8","nodeType":"VariableDeclaration","scope":1245,"src":"6203:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"begin","nameLocation":"6240:5:8","nodeType":"VariableDeclaration","scope":1245,"src":"6232:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"end","nameLocation":"6263:3:8","nodeType":"VariableDeclaration","scope":1245,"src":"6255:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:8"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"success","nameLocation":"6301:7:8","nodeType":"VariableDeclaration","scope":1245,"src":"6296:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1217,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"value","nameLocation":"6318:5:8","nodeType":"VariableDeclaration","scope":1245,"src":"6310:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:8"},"scope":2174,"src":"6172:297:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"6872:347:8","statements":[{"assignments":[1260],"declarations":[{"constant":false,"id":1260,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:8","nodeType":"VariableDeclaration","scope":1314,"src":"6882:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1259,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1265,"initialValue":{"arguments":[{"id":1263,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"6910:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1261,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:8","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:8"},{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"result","nameLocation":"6935:6:8","nodeType":"VariableDeclaration","scope":1314,"src":"6927:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1269,"initialValue":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:8"},{"body":{"id":1308,"nodeType":"Block","src":"6993:189:8","statements":[{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"chr","nameLocation":"7013:3:8","nodeType":"VariableDeclaration","scope":1308,"src":"7007:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1280,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1291,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1286,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"7062:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7039:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1283,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:8","typeDescriptions":{}}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1282,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7019:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"7092:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"nodeType":"IfStatement","src":"7088:30:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1258,"id":1298,"nodeType":"Return","src":"7101:17:8"}},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7132:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"7132:12:8"},{"expression":{"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7158:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1305,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"7168:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"nodeType":"ExpressionStatement","src":"7158:13:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6979:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1275,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"6983:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"initializationExpression":{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"i","nameLocation":"6968:1:8","nodeType":"VariableDeclaration","scope":1309,"src":"6960:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1273,"initialValue":{"id":1272,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6972:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:8","subExpression":{"id":1277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1279,"nodeType":"ExpressionStatement","src":"6988:3:8"},"nodeType":"ForStatement","src":"6955:227:8"},{"expression":{"components":[{"hexValue":"74727565","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7205:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1258,"id":1313,"nodeType":"Return","src":"7191:21:8"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"6475:224:8","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:8","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"input","nameLocation":"6765:5:8","nodeType":"VariableDeclaration","scope":1315,"src":"6751:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"begin","nameLocation":"6788:5:8","nodeType":"VariableDeclaration","scope":1315,"src":"6780:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"end","nameLocation":"6811:3:8","nodeType":"VariableDeclaration","scope":1315,"src":"6803:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:8"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"success","nameLocation":"6848:7:8","nodeType":"VariableDeclaration","scope":1315,"src":"6843:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1254,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"value","nameLocation":"6865:5:8","nodeType":"VariableDeclaration","scope":1315,"src":"6857:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:8"},"scope":2174,"src":"6704:515:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"7516:63:8","statements":[{"expression":{"arguments":[{"id":1324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7542:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1328,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7558:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1326,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:8","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:8","memberName":"length","nodeType":"MemberAccess","src":"7552:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1323,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1334,1365],"referencedDeclaration":1365,"src":"7533:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1322,"id":1332,"nodeType":"Return","src":"7526:46:8"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"7225:216:8","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:8","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"input","nameLocation":"7478:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"7464:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1317,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:8"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"7508:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1320,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:8"},"scope":2174,"src":"7446:133:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"7984:151:8","statements":[{"assignments":[1347,1349],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"success","nameLocation":"8000:7:8","nodeType":"VariableDeclaration","scope":1364,"src":"7995:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1346,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"value","nameLocation":"8016:5:8","nodeType":"VariableDeclaration","scope":1364,"src":"8009:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1348,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1355,"initialValue":{"arguments":[{"id":1351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"8037:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1352,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8044:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1353,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"8051:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1386,1428],"referencedDeclaration":1428,"src":"8025:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:8"},{"condition":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:8","subExpression":{"id":1356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8070:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"IfStatement","src":"8065:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1358,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8086:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1360,"nodeType":"RevertStatement","src":"8079:27:8"}},{"expression":{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8123:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1345,"id":1363,"nodeType":"Return","src":"8116:12:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"7585:296:8","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"input","nameLocation":"7918:5:8","nodeType":"VariableDeclaration","scope":1365,"src":"7904:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"begin","nameLocation":"7933:5:8","nodeType":"VariableDeclaration","scope":1365,"src":"7925:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"end","nameLocation":"7948:3:8","nodeType":"VariableDeclaration","scope":1365,"src":"7940:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:8"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"7976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1343,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:8"},"scope":2174,"src":"7886:249:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"8526:82:8","statements":[{"expression":{"arguments":[{"id":1376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"8571:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"8587:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:8","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:8","memberName":"length","nodeType":"MemberAccess","src":"8581:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"8543:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1374,"id":1384,"nodeType":"Return","src":"8536:65:8"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"8141:287:8","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:8","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"input","nameLocation":"8468:5:8","nodeType":"VariableDeclaration","scope":1386,"src":"8454:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1367,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:8"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"success","nameLocation":"8503:7:8","nodeType":"VariableDeclaration","scope":1386,"src":"8498:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1370,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"value","nameLocation":"8519:5:8","nodeType":"VariableDeclaration","scope":1386,"src":"8512:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1372,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:8"},"scope":2174,"src":"8433:175:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1391,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:8","nodeType":"VariableDeclaration","scope":2174,"src":"8614:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1427,"nodeType":"Block","src":"9130:143:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9144:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1408,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"9156:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:8","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:8","memberName":"length","nodeType":"MemberAccess","src":"9150:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9173:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9181:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"9140:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1404,"id":1419,"nodeType":"Return","src":"9186:17:8"}},{"expression":{"arguments":[{"id":1422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"9248:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1423,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9255:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9262:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"9220:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1404,"id":1426,"nodeType":"Return","src":"9213:53:8"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"8671:303:8","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:8","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"input","nameLocation":"9023:5:8","nodeType":"VariableDeclaration","scope":1428,"src":"9009:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1393,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"begin","nameLocation":"9046:5:8","nodeType":"VariableDeclaration","scope":1428,"src":"9038:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"end","nameLocation":"9069:3:8","nodeType":"VariableDeclaration","scope":1428,"src":"9061:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:8"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"success","nameLocation":"9107:7:8","nodeType":"VariableDeclaration","scope":1428,"src":"9102:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1400,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"value","nameLocation":"9123:5:8","nodeType":"VariableDeclaration","scope":1428,"src":"9116:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1402,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:8"},"scope":2174,"src":"8979:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"9673:812:8","statements":[{"assignments":[1443],"declarations":[{"constant":false,"id":1443,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:8","nodeType":"VariableDeclaration","scope":1548,"src":"9683:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1448,"initialValue":{"arguments":[{"id":1446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9711:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1444,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:8","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:8"},{"assignments":[1450],"declarations":[{"constant":false,"id":1450,"mutability":"mutable","name":"sign","nameLocation":"9781:4:8","nodeType":"VariableDeclaration","scope":1548,"src":"9774:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1449,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1466,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"9788:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1452,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9797:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"9845:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1462,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"9853:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9822:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1458,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:8","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:8","trueExpression":{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1454,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:8","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:8"},{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:8","nodeType":"VariableDeclaration","scope":1548,"src":"9941:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1467,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1475,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"9961:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1470,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:8","typeDescriptions":{}}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:8"},{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:8","nodeType":"VariableDeclaration","scope":1548,"src":"9990:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1476,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1484,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"10010:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1479,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:8","typeDescriptions":{}}},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:8"},{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"offset","nameLocation":"10047:6:8","nodeType":"VariableDeclaration","scope":1548,"src":"10039:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1487,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10057:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1488,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"10073:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"10056:37:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:8"},{"assignments":[1495,1497],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:8","nodeType":"VariableDeclaration","scope":1548,"src":"10107:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:8","nodeType":"VariableDeclaration","scope":1548,"src":"10124:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1505,"initialValue":{"arguments":[{"id":1499,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10157:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10164:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1501,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10172:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1503,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"10180:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1498,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1208,1245],"referencedDeclaration":1245,"src":"10144:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10199:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10213:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1508,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"10224:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"10341:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1527,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"10355:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10371:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1530,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"10383:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1441,"id":1545,"nodeType":"Return","src":"10461:17:8"},"id":1546,"nodeType":"IfStatement","src":"10337:141:8","trueBody":{"id":1541,"nodeType":"Block","src":"10399:56:8","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1535,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:8","memberName":"min","nodeType":"MemberAccess","src":"10427:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1441,"id":1540,"nodeType":"Return","src":"10413:31:8"}]}},"id":1547,"nodeType":"IfStatement","src":"10195:283:8","trueBody":{"id":1525,"nodeType":"Block","src":"10240:91:8","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1512,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"10268:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1520,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10310:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1518,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:8","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:8","trueExpression":{"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:8","subExpression":{"arguments":[{"id":1515,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10291:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1513,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:8","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1441,"id":1524,"nodeType":"Return","src":"10254:66:8"}]}}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"9279:223:8","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:8","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"input","nameLocation":"9567:5:8","nodeType":"VariableDeclaration","scope":1549,"src":"9553:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1430,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"begin","nameLocation":"9590:5:8","nodeType":"VariableDeclaration","scope":1549,"src":"9582:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"end","nameLocation":"9613:3:8","nodeType":"VariableDeclaration","scope":1549,"src":"9605:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:8"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"success","nameLocation":"9650:7:8","nodeType":"VariableDeclaration","scope":1549,"src":"9645:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1437,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"value","nameLocation":"9666:5:8","nodeType":"VariableDeclaration","scope":1549,"src":"9659:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1439,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:8"},"scope":2174,"src":"9507:978:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1567,"nodeType":"Block","src":"10830:67:8","statements":[{"expression":{"arguments":[{"id":1558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"10860:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1562,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"10876:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1560,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:8","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:8","memberName":"length","nodeType":"MemberAccess","src":"10870:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1557,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1568,1599],"referencedDeclaration":1599,"src":"10847:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1556,"id":1566,"nodeType":"Return","src":"10840:50:8"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"10491:259:8","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:8","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"input","nameLocation":"10791:5:8","nodeType":"VariableDeclaration","scope":1568,"src":"10777:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1551,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:8"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1568,"src":"10821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:8"},"scope":2174,"src":"10755:142:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1598,"nodeType":"Block","src":"11318:156:8","statements":[{"assignments":[1581,1583],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"success","nameLocation":"11334:7:8","nodeType":"VariableDeclaration","scope":1598,"src":"11329:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1580,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"11351:5:8","nodeType":"VariableDeclaration","scope":1598,"src":"11343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1589,"initialValue":{"arguments":[{"id":1585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"11376:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1586,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11383:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1587,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11390:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1584,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1620,1657],"referencedDeclaration":1657,"src":"11360:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:8"},{"condition":{"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:8","subExpression":{"id":1590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11409:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1595,"nodeType":"IfStatement","src":"11404:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"11425:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1594,"nodeType":"RevertStatement","src":"11418:27:8"}},{"expression":{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"11462:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1597,"nodeType":"Return","src":"11455:12:8"}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"10903:307:8","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:8","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"input","nameLocation":"11251:5:8","nodeType":"VariableDeclaration","scope":1599,"src":"11237:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"begin","nameLocation":"11266:5:8","nodeType":"VariableDeclaration","scope":1599,"src":"11258:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"end","nameLocation":"11281:3:8","nodeType":"VariableDeclaration","scope":1599,"src":"11273:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:8"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"11309:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:8"},"scope":2174,"src":"11215:259:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1619,"nodeType":"Block","src":"11801:86:8","statements":[{"expression":{"arguments":[{"id":1610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11850:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1614,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"11866:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:8","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:8","memberName":"length","nodeType":"MemberAccess","src":"11860:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"11818:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1608,"id":1618,"nodeType":"Return","src":"11811:69:8"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"11480:218:8","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:8","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"input","nameLocation":"11742:5:8","nodeType":"VariableDeclaration","scope":1620,"src":"11728:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1601,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:8"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"success","nameLocation":"11777:7:8","nodeType":"VariableDeclaration","scope":1620,"src":"11772:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1604,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"value","nameLocation":"11794:5:8","nodeType":"VariableDeclaration","scope":1620,"src":"11786:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:8"},"scope":2174,"src":"11703:184:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"12295:147:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12309:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"12321:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1635,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:8","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:8","memberName":"length","nodeType":"MemberAccess","src":"12315:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"12338:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12346:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1649,"nodeType":"IfStatement","src":"12305:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1633,"id":1648,"nodeType":"Return","src":"12351:17:8"}},{"expression":{"arguments":[{"id":1651,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"12417:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"12424:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1653,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12431:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1650,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12385:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1633,"id":1655,"nodeType":"Return","src":"12378:57:8"}]},"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"11893:241:8","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:8","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"input","nameLocation":"12187:5:8","nodeType":"VariableDeclaration","scope":1657,"src":"12173:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"begin","nameLocation":"12210:5:8","nodeType":"VariableDeclaration","scope":1657,"src":"12202:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"end","nameLocation":"12233:3:8","nodeType":"VariableDeclaration","scope":1657,"src":"12225:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:8"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"success","nameLocation":"12271:7:8","nodeType":"VariableDeclaration","scope":1657,"src":"12266:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1629,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"value","nameLocation":"12288:5:8","nodeType":"VariableDeclaration","scope":1657,"src":"12280:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:8"},"scope":2174,"src":"12139:303:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"12851:881:8","statements":[{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:8","nodeType":"VariableDeclaration","scope":1759,"src":"12861:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1677,"initialValue":{"arguments":[{"id":1675,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"12889:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:8","typeDescriptions":{}}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:8"},{"assignments":[1679],"declarations":[{"constant":false,"id":1679,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:8","nodeType":"VariableDeclaration","scope":1759,"src":"12943:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1699,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"12961:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"12967:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1689,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"13011:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1690,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"13019:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1688,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"12988:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1686,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:8","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1693,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:8","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:8"},{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"offset","nameLocation":"13131:6:8","nodeType":"VariableDeclaration","scope":1759,"src":"13123:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1707,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1702,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"13140:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"13140:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:8"},{"assignments":[1709],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"result","nameLocation":"13181:6:8","nodeType":"VariableDeclaration","scope":1759,"src":"13173:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1711,"initialValue":{"hexValue":"30","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:8"},{"body":{"id":1753,"nodeType":"Block","src":"13248:447:8","statements":[{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"chr","nameLocation":"13268:3:8","nodeType":"VariableDeclaration","scope":1753,"src":"13262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1724,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1735,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1730,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"13317:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13325:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"13294:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:8","typeDescriptions":{}}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1726,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"13274:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"13347:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"13343:31:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1670,"id":1742,"nodeType":"Return","src":"13357:17:8"}},{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"13388:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1747,"nodeType":"ExpressionStatement","src":"13388:12:8"},{"id":1752,"nodeType":"UncheckedBlock","src":"13414:271:8","statements":[{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"13657:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1749,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"13667:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"13657:13:8"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13234:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1719,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"13238:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"initializationExpression":{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"i","nameLocation":"13214:1:8","nodeType":"VariableDeclaration","scope":1754,"src":"13206:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1717,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"13218:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1715,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"13226:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:8","subExpression":{"id":1721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13245:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1723,"nodeType":"ExpressionStatement","src":"13243:3:8"},"nodeType":"ForStatement","src":"13201:494:8"},{"expression":{"components":[{"hexValue":"74727565","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"13718:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1670,"id":1758,"nodeType":"Return","src":"13704:21:8"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"12448:227:8","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:8","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"input","nameLocation":"12744:5:8","nodeType":"VariableDeclaration","scope":1760,"src":"12730:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1659,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"begin","nameLocation":"12767:5:8","nodeType":"VariableDeclaration","scope":1760,"src":"12759:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"end","nameLocation":"12790:3:8","nodeType":"VariableDeclaration","scope":1760,"src":"12782:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:8"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"success","nameLocation":"12827:7:8","nodeType":"VariableDeclaration","scope":1760,"src":"12822:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1666,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"value","nameLocation":"12844:5:8","nodeType":"VariableDeclaration","scope":1760,"src":"12836:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:8"},"scope":2174,"src":"12680:1052:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1778,"nodeType":"Block","src":"14030:67:8","statements":[{"expression":{"arguments":[{"id":1769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14060:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1773,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14076:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1771,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:8","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:8","memberName":"length","nodeType":"MemberAccess","src":"14070:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1768,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1779,1810],"referencedDeclaration":1810,"src":"14047:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1767,"id":1777,"nodeType":"Return","src":"14040:50:8"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"13738:212:8","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:8","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"input","nameLocation":"13991:5:8","nodeType":"VariableDeclaration","scope":1779,"src":"13977:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:8"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"14021:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:8"},"scope":2174,"src":"13955:142:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"14470:165:8","statements":[{"assignments":[1792,1794],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"success","nameLocation":"14486:7:8","nodeType":"VariableDeclaration","scope":1809,"src":"14481:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"value","nameLocation":"14503:5:8","nodeType":"VariableDeclaration","scope":1809,"src":"14495:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1800,"initialValue":{"arguments":[{"id":1796,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"14528:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"14535:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"14542:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1831,1935],"referencedDeclaration":1935,"src":"14512:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:8"},{"condition":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:8","subExpression":{"id":1801,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"14561:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"14556:50:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1803,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"14577:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1805,"nodeType":"RevertStatement","src":"14570:36:8"}},{"expression":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"14623:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1790,"id":1808,"nodeType":"Return","src":"14616:12:8"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"14103:259:8","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:8","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"input","nameLocation":"14403:5:8","nodeType":"VariableDeclaration","scope":1810,"src":"14389:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"begin","nameLocation":"14418:5:8","nodeType":"VariableDeclaration","scope":1810,"src":"14410:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"end","nameLocation":"14433:3:8","nodeType":"VariableDeclaration","scope":1810,"src":"14425:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:8"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"14461:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:8"},"scope":2174,"src":"14367:268:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"14942:70:8","statements":[{"expression":{"arguments":[{"id":1821,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"14975:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1825,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"14991:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:8","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:8","memberName":"length","nodeType":"MemberAccess","src":"14985:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1820,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1831,1935],"referencedDeclaration":1935,"src":"14959:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1819,"id":1829,"nodeType":"Return","src":"14952:53:8"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"14641:198:8","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:8","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"input","nameLocation":"14883:5:8","nodeType":"VariableDeclaration","scope":1831,"src":"14869:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1812,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:8"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"success","nameLocation":"14918:7:8","nodeType":"VariableDeclaration","scope":1831,"src":"14913:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1815,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"value","nameLocation":"14935:5:8","nodeType":"VariableDeclaration","scope":1831,"src":"14927:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:8"},"scope":2174,"src":"14844:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"15405:733:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"15419:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1848,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"15431:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:8","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:8","memberName":"length","nodeType":"MemberAccess","src":"15425:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"15448:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1853,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"15456:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"15415:72:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:8","typeDescriptions":{}}},"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1844,"id":1862,"nodeType":"Return","src":"15461:26:8"}},{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:8","nodeType":"VariableDeclaration","scope":1934,"src":"15498:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1864,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1888,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"15516:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"15522:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"15572:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:8","typeDescriptions":{}}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1879,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"15580:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1874,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"15543:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1872,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:8","typeDescriptions":{}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1882,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:8","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:8"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:8","nodeType":"VariableDeclaration","scope":1934,"src":"15684:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1898,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1892,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"15714:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"15714:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"15801:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1900,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"15807:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1902,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"15816:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1932,"nodeType":"Block","src":"16081:51:8","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:8","typeDescriptions":{}}},"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1844,"id":1931,"nodeType":"Return","src":"16095:26:8"}]},"id":1933,"nodeType":"IfStatement","src":"15797:335:8","trueBody":{"id":1924,"nodeType":"Block","src":"15832:243:8","statements":[{"assignments":[1905,1907],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"s","nameLocation":"15953:1:8","nodeType":"VariableDeclaration","scope":1924,"src":"15948:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1904,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"v","nameLocation":"15964:1:8","nodeType":"VariableDeclaration","scope":1924,"src":"15956:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"initialValue":{"arguments":[{"id":1909,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"16001:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1910,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"16008:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1911,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"16015:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1908,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"15969:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:8"},{"expression":{"components":[{"id":1914,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"16041:1:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1919,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"16060:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1917,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:8","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:8","typeDescriptions":{}}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1844,"id":1923,"nodeType":"Return","src":"16033:31:8"}]}}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"15018:226:8","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:8","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"input","nameLocation":"15297:5:8","nodeType":"VariableDeclaration","scope":1935,"src":"15283:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"begin","nameLocation":"15320:5:8","nodeType":"VariableDeclaration","scope":1935,"src":"15312:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"end","nameLocation":"15343:3:8","nodeType":"VariableDeclaration","scope":1935,"src":"15335:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:8"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"success","nameLocation":"15381:7:8","nodeType":"VariableDeclaration","scope":1935,"src":"15376:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1840,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"value","nameLocation":"15398:5:8","nodeType":"VariableDeclaration","scope":1935,"src":"15390:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:8"},"scope":2174,"src":"15249:889:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"16207:461:8","statements":[{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"value","nameLocation":"16223:5:8","nodeType":"VariableDeclaration","scope":1994,"src":"16217:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1942,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1948,"initialValue":{"arguments":[{"id":1946,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"16237:3:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1944,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:8","typeDescriptions":{}}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:8"},{"id":1991,"nodeType":"UncheckedBlock","src":"16401:238:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16429:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:8","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16443:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:8","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16489:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16503:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:8","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16550:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16564:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:8","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1983,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:8","memberName":"max","nodeType":"MemberAccess","src":"16613:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1941,"id":1987,"nodeType":"Return","src":"16606:22:8"},"id":1988,"nodeType":"IfStatement","src":"16546:82:8","trueBody":{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16576:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:8","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1981,"nodeType":"ExpressionStatement","src":"16576:11:8"}},"id":1989,"nodeType":"IfStatement","src":"16485:143:8","trueBody":{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16516:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:8","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1970,"nodeType":"ExpressionStatement","src":"16516:11:8"}},"id":1990,"nodeType":"IfStatement","src":"16425:203:8","trueBody":{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16455:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1959,"nodeType":"ExpressionStatement","src":"16455:11:8"}}]},{"expression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16656:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1941,"id":1993,"nodeType":"Return","src":"16649:12:8"}]},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:8","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"chr","nameLocation":"16173:3:8","nodeType":"VariableDeclaration","scope":1995,"src":"16166:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1936,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:8"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1995,"src":"16200:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1939,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:8"},"scope":2174,"src":"16144:524:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2160,"nodeType":"Block","src":"17334:1331:8","statements":[{"assignments":[2004],"declarations":[{"constant":false,"id":2004,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:8","nodeType":"VariableDeclaration","scope":2160,"src":"17344:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2009,"initialValue":{"arguments":[{"id":2007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"17372:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2005,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:8","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:8"},{"assignments":[2011],"declarations":[{"constant":false,"id":2011,"mutability":"mutable","name":"output","nameLocation":"17401:6:8","nodeType":"VariableDeclaration","scope":2160,"src":"17388:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2010,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2019,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2015,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"17424:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:8","memberName":"length","nodeType":"MemberAccess","src":"17424:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2012,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:8"},{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:8","nodeType":"VariableDeclaration","scope":2160,"src":"17471:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2023,"initialValue":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:8"},{"body":{"id":2152,"nodeType":"Block","src":"17546:854:8","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"char","nameLocation":"17567:4:8","nodeType":"VariableDeclaration","scope":2152,"src":"17560:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2034,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2043,"initialValue":{"arguments":[{"arguments":[{"id":2039,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"17604:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"17612:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"17581:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2036,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:8","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:8"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"17635:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2048,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"17670:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2046,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:8","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2150,"nodeType":"Block","src":"18328:62:8","statements":[{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2143,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"18346:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2146,"indexExpression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:8","subExpression":{"id":2144,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18353:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2147,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"18371:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2149,"nodeType":"ExpressionStatement","src":"18346:29:8"}]},"id":2151,"nodeType":"IfStatement","src":"17629:761:8","trueBody":{"id":2142,"nodeType":"Block","src":"17685:637:8","statements":[{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2057,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"17703:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2060,"indexExpression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:8","subExpression":{"id":2058,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"17710:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2063,"nodeType":"ExpressionStatement","src":"17703:29:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"17754:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"17823:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"17892:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"17961:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:8","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"18030:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:8","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"18099:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:8","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"18169:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"18165:143:8","trueBody":{"id":2134,"nodeType":"Block","src":"18183:125:8","statements":[{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2127,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"18261:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2130,"indexExpression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:8","subExpression":{"id":2128,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18268:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2133,"nodeType":"ExpressionStatement","src":"18261:28:8"}]}},"id":2136,"nodeType":"IfStatement","src":"18095:213:8","trueBody":{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2117,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"18113:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2120,"indexExpression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:8","subExpression":{"id":2118,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18120:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2123,"nodeType":"ExpressionStatement","src":"18113:29:8"}},"id":2137,"nodeType":"IfStatement","src":"18026:282:8","trueBody":{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2107,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"18044:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2110,"indexExpression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:8","subExpression":{"id":2108,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"18051:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2113,"nodeType":"ExpressionStatement","src":"18044:28:8"}},"id":2138,"nodeType":"IfStatement","src":"17957:351:8","trueBody":{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2097,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"17975:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2100,"indexExpression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:8","subExpression":{"id":2098,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"17982:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2103,"nodeType":"ExpressionStatement","src":"17975:28:8"}},"id":2139,"nodeType":"IfStatement","src":"17888:420:8","trueBody":{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2087,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"17906:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2090,"indexExpression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:8","subExpression":{"id":2088,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"17913:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2093,"nodeType":"ExpressionStatement","src":"17906:28:8"}},"id":2140,"nodeType":"IfStatement","src":"17819:489:8","trueBody":{"expression":{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2077,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"17837:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2080,"indexExpression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:8","subExpression":{"id":2078,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"17844:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2083,"nodeType":"ExpressionStatement","src":"17837:28:8"}},"id":2141,"nodeType":"IfStatement","src":"17750:558:8","trueBody":{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2067,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"17768:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2070,"indexExpression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:8","subExpression":{"id":2068,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"17775:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2073,"nodeType":"ExpressionStatement","src":"17768:28:8"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"17522:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2028,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"17526:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:8","memberName":"length","nodeType":"MemberAccess","src":"17526:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"initializationExpression":{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"i","nameLocation":"17519:1:8","nodeType":"VariableDeclaration","scope":2153,"src":"17511:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2026,"nodeType":"VariableDeclarationStatement","src":"17511:9:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:8","subExpression":{"id":2031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"17543:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"nodeType":"ExpressionStatement","src":"17541:3:8"},"nodeType":"ForStatement","src":"17506:894:8"},{"AST":{"nativeSrc":"18498:129:8","nodeType":"YulBlock","src":"18498:129:8","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:8","nodeType":"YulIdentifier","src":"18519:6:8"},{"name":"outputLength","nativeSrc":"18527:12:8","nodeType":"YulIdentifier","src":"18527:12:8"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:8","nodeType":"YulIdentifier","src":"18512:6:8"},"nativeSrc":"18512:28:8","nodeType":"YulFunctionCall","src":"18512:28:8"},"nativeSrc":"18512:28:8","nodeType":"YulExpressionStatement","src":"18512:28:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:8","nodeType":"YulLiteral","src":"18560:4:8","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:8","nodeType":"YulIdentifier","src":"18570:6:8"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:8","nodeType":"YulLiteral","src":"18582:1:8","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:8","nodeType":"YulLiteral","src":"18589:1:8","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:8","nodeType":"YulIdentifier","src":"18596:12:8"},{"kind":"number","nativeSrc":"18610:2:8","nodeType":"YulLiteral","src":"18610:2:8","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:8","nodeType":"YulIdentifier","src":"18592:3:8"},"nativeSrc":"18592:21:8","nodeType":"YulFunctionCall","src":"18592:21:8"}],"functionName":{"name":"shr","nativeSrc":"18585:3:8","nodeType":"YulIdentifier","src":"18585:3:8"},"nativeSrc":"18585:29:8","nodeType":"YulFunctionCall","src":"18585:29:8"}],"functionName":{"name":"shl","nativeSrc":"18578:3:8","nodeType":"YulIdentifier","src":"18578:3:8"},"nativeSrc":"18578:37:8","nodeType":"YulFunctionCall","src":"18578:37:8"}],"functionName":{"name":"add","nativeSrc":"18566:3:8","nodeType":"YulIdentifier","src":"18566:3:8"},"nativeSrc":"18566:50:8","nodeType":"YulFunctionCall","src":"18566:50:8"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:8","nodeType":"YulIdentifier","src":"18553:6:8"},"nativeSrc":"18553:64:8","nodeType":"YulFunctionCall","src":"18553:64:8"},"nativeSrc":"18553:64:8","nodeType":"YulExpressionStatement","src":"18553:64:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2011,"isOffset":false,"isSlot":false,"src":"18519:6:8","valueSize":1},{"declaration":2011,"isOffset":false,"isSlot":false,"src":"18570:6:8","valueSize":1},{"declaration":2021,"isOffset":false,"isSlot":false,"src":"18527:12:8","valueSize":1},{"declaration":2021,"isOffset":false,"isSlot":false,"src":"18596:12:8","valueSize":1}],"flags":["memory-safe"],"id":2154,"nodeType":"InlineAssembly","src":"18473:154:8"},{"expression":{"arguments":[{"id":2157,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"18651:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:8","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2002,"id":2159,"nodeType":"Return","src":"18637:21:8"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"16674:576:8","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:8","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"input","nameLocation":"17289:5:8","nodeType":"VariableDeclaration","scope":2161,"src":"17275:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:8"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2161,"src":"17319:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2000,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:8"},"scope":2174,"src":"17255:1410:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2172,"nodeType":"Block","src":"19050:225:8","statements":[{"AST":{"nativeSrc":"19199:70:8","nodeType":"YulBlock","src":"19199:70:8","statements":[{"nativeSrc":"19213:46:8","nodeType":"YulAssignment","src":"19213:46:8","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:8","nodeType":"YulIdentifier","src":"19232:6:8"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:8","nodeType":"YulLiteral","src":"19244:4:8","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:8","nodeType":"YulIdentifier","src":"19250:6:8"}],"functionName":{"name":"add","nativeSrc":"19240:3:8","nodeType":"YulIdentifier","src":"19240:3:8"},"nativeSrc":"19240:17:8","nodeType":"YulFunctionCall","src":"19240:17:8"}],"functionName":{"name":"add","nativeSrc":"19228:3:8","nodeType":"YulIdentifier","src":"19228:3:8"},"nativeSrc":"19228:30:8","nodeType":"YulFunctionCall","src":"19228:30:8"}],"functionName":{"name":"mload","nativeSrc":"19222:5:8","nodeType":"YulIdentifier","src":"19222:5:8"},"nativeSrc":"19222:37:8","nodeType":"YulFunctionCall","src":"19222:37:8"},"variableNames":[{"name":"value","nativeSrc":"19213:5:8","nodeType":"YulIdentifier","src":"19213:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2164,"isOffset":false,"isSlot":false,"src":"19232:6:8","valueSize":1},{"declaration":2166,"isOffset":false,"isSlot":false,"src":"19250:6:8","valueSize":1},{"declaration":2169,"isOffset":false,"isSlot":false,"src":"19213:5:8","valueSize":1}],"flags":["memory-safe"],"id":2171,"nodeType":"InlineAssembly","src":"19174:95:8"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"18671:268:8","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:8","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:8","nodeType":"VariableDeclaration","scope":2173,"src":"18976:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2163,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"offset","nameLocation":"19005:6:8","nodeType":"VariableDeclaration","scope":2173,"src":"18997:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:8"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"19043:5:8","nodeType":"VariableDeclaration","scope":2173,"src":"19035:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:8"},"scope":2174,"src":"18944:331:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2175,"src":"297:18980:8","usedErrors":[832,835,838],"usedEvents":[]}],"src":"101:19177:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2522]},"id":2523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2176,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"138:205:9","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2522,"linearizedBaseContracts":[2522],"name":"ECDSA","nameLocation":"352:5:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2182,"members":[{"id":2178,"name":"NoError","nameLocation":"392:7:9","nodeType":"EnumValue","src":"392:7:9"},{"id":2179,"name":"InvalidSignature","nameLocation":"409:16:9","nodeType":"EnumValue","src":"409:16:9"},{"id":2180,"name":"InvalidSignatureLength","nameLocation":"435:22:9","nodeType":"EnumValue","src":"435:22:9"},{"id":2181,"name":"InvalidSignatureS","nameLocation":"467:17:9","nodeType":"EnumValue","src":"467:17:9"}],"name":"RecoverError","nameLocation":"369:12:9","nodeType":"EnumDefinition","src":"364:126:9"},{"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"496:63:9","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2185,"name":"ECDSAInvalidSignature","nameLocation":"570:21:9","nodeType":"ErrorDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"591:2:9"},"src":"564:30:9"},{"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"600:60:9","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2190,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:9","nodeType":"ErrorDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"length","nameLocation":"707:6:9","nodeType":"VariableDeclaration","scope":2190,"src":"699:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:9"},"src":"665:50:9"},{"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"721:85:9","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2195,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:9","nodeType":"ErrorDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"s","nameLocation":"848:1:9","nodeType":"VariableDeclaration","scope":2195,"src":"840:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:9"},"src":"811:40:9"},{"body":{"id":2247,"nodeType":"Block","src":"2285:622:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2210,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2299:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:9","memberName":"length","nodeType":"MemberAccess","src":"2299:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2245,"nodeType":"Block","src":"2793:108:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:9","typeDescriptions":{}}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2236,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"2827:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"2827:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2240,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2872:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:9","memberName":"length","nodeType":"MemberAccess","src":"2872:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:9","typeDescriptions":{}}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2209,"id":2244,"nodeType":"Return","src":"2807:83:9"}]},"id":2246,"nodeType":"IfStatement","src":"2295:606:9","trueBody":{"id":2231,"nodeType":"Block","src":"2323:464:9","statements":[{"assignments":[2215],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"r","nameLocation":"2345:1:9","nodeType":"VariableDeclaration","scope":2231,"src":"2337:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2216,"nodeType":"VariableDeclarationStatement","src":"2337:9:9"},{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"s","nameLocation":"2368:1:9","nodeType":"VariableDeclaration","scope":2231,"src":"2360:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2219,"nodeType":"VariableDeclarationStatement","src":"2360:9:9"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"v","nameLocation":"2389:1:9","nodeType":"VariableDeclaration","scope":2231,"src":"2383:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2220,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2222,"nodeType":"VariableDeclarationStatement","src":"2383:7:9"},{"AST":{"nativeSrc":"2560:171:9","nodeType":"YulBlock","src":"2560:171:9","statements":[{"nativeSrc":"2578:32:9","nodeType":"YulAssignment","src":"2578:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:9","nodeType":"YulIdentifier","src":"2593:9:9"},{"kind":"number","nativeSrc":"2604:4:9","nodeType":"YulLiteral","src":"2604:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:9","nodeType":"YulIdentifier","src":"2589:3:9"},"nativeSrc":"2589:20:9","nodeType":"YulFunctionCall","src":"2589:20:9"}],"functionName":{"name":"mload","nativeSrc":"2583:5:9","nodeType":"YulIdentifier","src":"2583:5:9"},"nativeSrc":"2583:27:9","nodeType":"YulFunctionCall","src":"2583:27:9"},"variableNames":[{"name":"r","nativeSrc":"2578:1:9","nodeType":"YulIdentifier","src":"2578:1:9"}]},{"nativeSrc":"2627:32:9","nodeType":"YulAssignment","src":"2627:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:9","nodeType":"YulIdentifier","src":"2642:9:9"},{"kind":"number","nativeSrc":"2653:4:9","nodeType":"YulLiteral","src":"2653:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:9","nodeType":"YulIdentifier","src":"2638:3:9"},"nativeSrc":"2638:20:9","nodeType":"YulFunctionCall","src":"2638:20:9"}],"functionName":{"name":"mload","nativeSrc":"2632:5:9","nodeType":"YulIdentifier","src":"2632:5:9"},"nativeSrc":"2632:27:9","nodeType":"YulFunctionCall","src":"2632:27:9"},"variableNames":[{"name":"s","nativeSrc":"2627:1:9","nodeType":"YulIdentifier","src":"2627:1:9"}]},{"nativeSrc":"2676:41:9","nodeType":"YulAssignment","src":"2676:41:9","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:9","nodeType":"YulLiteral","src":"2686:1:9","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:9","nodeType":"YulIdentifier","src":"2699:9:9"},{"kind":"number","nativeSrc":"2710:4:9","nodeType":"YulLiteral","src":"2710:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:9","nodeType":"YulIdentifier","src":"2695:3:9"},"nativeSrc":"2695:20:9","nodeType":"YulFunctionCall","src":"2695:20:9"}],"functionName":{"name":"mload","nativeSrc":"2689:5:9","nodeType":"YulIdentifier","src":"2689:5:9"},"nativeSrc":"2689:27:9","nodeType":"YulFunctionCall","src":"2689:27:9"}],"functionName":{"name":"byte","nativeSrc":"2681:4:9","nodeType":"YulIdentifier","src":"2681:4:9"},"nativeSrc":"2681:36:9","nodeType":"YulFunctionCall","src":"2681:36:9"},"variableNames":[{"name":"v","nativeSrc":"2676:1:9","nodeType":"YulIdentifier","src":"2676:1:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2215,"isOffset":false,"isSlot":false,"src":"2578:1:9","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"2627:1:9","valueSize":1},{"declaration":2200,"isOffset":false,"isSlot":false,"src":"2593:9:9","valueSize":1},{"declaration":2200,"isOffset":false,"isSlot":false,"src":"2642:9:9","valueSize":1},{"declaration":2200,"isOffset":false,"isSlot":false,"src":"2699:9:9","valueSize":1},{"declaration":2221,"isOffset":false,"isSlot":false,"src":"2676:1:9","valueSize":1}],"flags":["memory-safe"],"id":2223,"nodeType":"InlineAssembly","src":"2535:196:9"},{"expression":{"arguments":[{"id":2225,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"2762:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2226,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2768:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2227,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"2771:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2228,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2774:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2224,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2248,2328,2436],"referencedDeclaration":2436,"src":"2751:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2209,"id":2230,"nodeType":"Return","src":"2744:32:9"}]}}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"857:1267:9","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:9","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"hash","nameLocation":"2166:4:9","nodeType":"VariableDeclaration","scope":2248,"src":"2158:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"signature","nameLocation":"2193:9:9","nodeType":"VariableDeclaration","scope":2248,"src":"2180:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:9"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:9","nodeType":"VariableDeclaration","scope":2248,"src":"2232:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"err","nameLocation":"2264:3:9","nodeType":"VariableDeclaration","scope":2248,"src":"2251:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2205,"nodeType":"UserDefinedTypeName","pathNode":{"id":2204,"name":"RecoverError","nameLocations":["2251:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"2251:12:9"},"referencedDeclaration":2182,"src":"2251:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:9","nodeType":"VariableDeclaration","scope":2248,"src":"2269:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:9"},"scope":2522,"src":"2129:778:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"3801:168:9","statements":[{"assignments":[2259,2262,2264],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:9","nodeType":"VariableDeclaration","scope":2277,"src":"3812:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"error","nameLocation":"3844:5:9","nodeType":"VariableDeclaration","scope":2277,"src":"3831:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2261,"nodeType":"UserDefinedTypeName","pathNode":{"id":2260,"name":"RecoverError","nameLocations":["3831:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"3831:12:9"},"referencedDeclaration":2182,"src":"3831:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:9","nodeType":"VariableDeclaration","scope":2277,"src":"3851:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2269,"initialValue":{"arguments":[{"id":2266,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"3882:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2267,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3888:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2265,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2248,2328,2436],"referencedDeclaration":2248,"src":"3871:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:9"},{"expression":{"arguments":[{"id":2271,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"3920:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"id":2272,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"3927:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2270,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"3908:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2274,"nodeType":"ExpressionStatement","src":"3908:28:9"},{"expression":{"id":2275,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3953:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2257,"id":2276,"nodeType":"Return","src":"3946:16:9"}]},"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"2913:796:9","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:9","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"hash","nameLocation":"3739:4:9","nodeType":"VariableDeclaration","scope":2278,"src":"3731:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"signature","nameLocation":"3758:9:9","nodeType":"VariableDeclaration","scope":2278,"src":"3745:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2252,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:9"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"3792:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:9"},"scope":2522,"src":"3714:255:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"4348:342:9","statements":[{"id":2326,"nodeType":"UncheckedBlock","src":"4358:326:9","statements":[{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"s","nameLocation":"4390:1:9","nodeType":"VariableDeclaration","scope":2326,"src":"4382:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2303,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"4394:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:9","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:9"},{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"v","nameLocation":"4591:1:9","nodeType":"VariableDeclaration","scope":2326,"src":"4585:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2304,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2318,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2310,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"4610:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:9","typeDescriptions":{}}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2306,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:9","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:9"},{"expression":{"arguments":[{"id":2320,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"4659:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2321,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"4665:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2322,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"4668:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2323,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"4671:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2319,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2248,2328,2436],"referencedDeclaration":2436,"src":"4648:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2294,"id":2325,"nodeType":"Return","src":"4641:32:9"}]}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"3975:205:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:9","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"hash","nameLocation":"4222:4:9","nodeType":"VariableDeclaration","scope":2328,"src":"4214:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"r","nameLocation":"4244:1:9","nodeType":"VariableDeclaration","scope":2328,"src":"4236:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"vs","nameLocation":"4263:2:9","nodeType":"VariableDeclaration","scope":2328,"src":"4255:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:9"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:9","nodeType":"VariableDeclaration","scope":2328,"src":"4295:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"err","nameLocation":"4327:3:9","nodeType":"VariableDeclaration","scope":2328,"src":"4314:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"RecoverError","nameLocations":["4314:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"4314:12:9"},"referencedDeclaration":2182,"src":"4314:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:9","nodeType":"VariableDeclaration","scope":2328,"src":"4332:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:9"},"scope":2522,"src":"4185:505:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2360,"nodeType":"Block","src":"4903:164:9","statements":[{"assignments":[2341,2344,2346],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:9","nodeType":"VariableDeclaration","scope":2360,"src":"4914:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"error","nameLocation":"4946:5:9","nodeType":"VariableDeclaration","scope":2360,"src":"4933:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"RecoverError","nameLocations":["4933:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"4933:12:9"},"referencedDeclaration":2182,"src":"4933:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:9","nodeType":"VariableDeclaration","scope":2360,"src":"4953:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2352,"initialValue":{"arguments":[{"id":2348,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"4984:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"4990:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2350,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"4993:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2347,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2248,2328,2436],"referencedDeclaration":2328,"src":"4973:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:9"},{"expression":{"arguments":[{"id":2354,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"5018:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"id":2355,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"5025:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2353,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5006:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"5006:28:9"},{"expression":{"id":2358,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5051:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2339,"id":2359,"nodeType":"Return","src":"5044:16:9"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"4696:116:9","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:9","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"hash","nameLocation":"4842:4:9","nodeType":"VariableDeclaration","scope":2361,"src":"4834:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"r","nameLocation":"4856:1:9","nodeType":"VariableDeclaration","scope":2361,"src":"4848:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"vs","nameLocation":"4867:2:9","nodeType":"VariableDeclaration","scope":2361,"src":"4859:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:9"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"4894:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:9"},"scope":2522,"src":"4817:250:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2435,"nodeType":"Block","src":"5382:1372:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2382,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"6278:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:9","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"6266:164:9","trueBody":{"id":2395,"nodeType":"Block","src":"6351:79:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:9","typeDescriptions":{}}},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2390,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6385:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"6385:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"id":2392,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"6417:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2379,"id":2394,"nodeType":"Return","src":"6365:54:9"}]}},{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"signer","nameLocation":"6532:6:9","nodeType":"VariableDeclaration","scope":2435,"src":"6524:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2405,"initialValue":{"arguments":[{"id":2400,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6551:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2401,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6557:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2402,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"6560:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2403,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"6563:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2399,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:9","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6579:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:9","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2425,"nodeType":"IfStatement","src":"6575:113:9","trueBody":{"id":2424,"nodeType":"Block","src":"6601:87:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:9","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2416,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6635:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"6635:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:9","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2379,"id":2423,"nodeType":"Return","src":"6615:62:9"}]}},{"expression":{"components":[{"id":2426,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6706:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2427,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6714:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2178,"src":"6714:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:9","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2379,"id":2434,"nodeType":"Return","src":"6698:49:9"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"5073:125:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2436,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:9","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"hash","nameLocation":"5240:4:9","nodeType":"VariableDeclaration","scope":2436,"src":"5232:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"v","nameLocation":"5260:1:9","nodeType":"VariableDeclaration","scope":2436,"src":"5254:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2365,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"r","nameLocation":"5279:1:9","nodeType":"VariableDeclaration","scope":2436,"src":"5271:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"s","nameLocation":"5298:1:9","nodeType":"VariableDeclaration","scope":2436,"src":"5290:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:9"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:9","nodeType":"VariableDeclaration","scope":2436,"src":"5329:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"err","nameLocation":"5361:3:9","nodeType":"VariableDeclaration","scope":2436,"src":"5348:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"RecoverError","nameLocations":["5348:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"5348:12:9"},"referencedDeclaration":2182,"src":"5348:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:9","nodeType":"VariableDeclaration","scope":2436,"src":"5366:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:9"},"scope":2522,"src":"5203:1551:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"6981:166:9","statements":[{"assignments":[2451,2454,2456],"declarations":[{"constant":false,"id":2451,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:9","nodeType":"VariableDeclaration","scope":2471,"src":"6992:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"error","nameLocation":"7024:5:9","nodeType":"VariableDeclaration","scope":2471,"src":"7011:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"RecoverError","nameLocations":["7011:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"7011:12:9"},"referencedDeclaration":2182,"src":"7011:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:9","nodeType":"VariableDeclaration","scope":2471,"src":"7031:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2463,"initialValue":{"arguments":[{"id":2458,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"7062:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2459,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7068:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2460,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"7071:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2461,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"7074:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2457,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2248,2328,2436],"referencedDeclaration":2436,"src":"7051:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:9"},{"expression":{"arguments":[{"id":2465,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"7098:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},{"id":2466,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"7105:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2464,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"7086:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2468,"nodeType":"ExpressionStatement","src":"7086:28:9"},{"expression":{"id":2469,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"7131:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2449,"id":2470,"nodeType":"Return","src":"7124:16:9"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"6760:122:9","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:9","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"hash","nameLocation":"6912:4:9","nodeType":"VariableDeclaration","scope":2472,"src":"6904:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"v","nameLocation":"6924:1:9","nodeType":"VariableDeclaration","scope":2472,"src":"6918:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2440,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"r","nameLocation":"6935:1:9","nodeType":"VariableDeclaration","scope":2472,"src":"6927:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"s","nameLocation":"6946:1:9","nodeType":"VariableDeclaration","scope":2472,"src":"6938:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:9"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2472,"src":"6972:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:9"},"scope":2522,"src":"6887:260:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"7352:460:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7366:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2482,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7375:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2178,"src":"7375:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7462:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2488,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7471:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"7471:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7567:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2496,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7576:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"7576:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7701:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2508,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7710:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"7710:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2516,"nodeType":"IfStatement","src":"7697:109:9","trueBody":{"id":2515,"nodeType":"Block","src":"7742:64:9","statements":[{"errorCall":{"arguments":[{"id":2512,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"7786:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2511,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"7763:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2514,"nodeType":"RevertStatement","src":"7756:39:9"}]}},"id":2517,"nodeType":"IfStatement","src":"7563:243:9","trueBody":{"id":2506,"nodeType":"Block","src":"7613:78:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2502,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"7670:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:9","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2499,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"7634:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2505,"nodeType":"RevertStatement","src":"7627:53:9"}]}},"id":2518,"nodeType":"IfStatement","src":"7458:348:9","trueBody":{"id":2494,"nodeType":"Block","src":"7502:55:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2491,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"7523:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2493,"nodeType":"RevertStatement","src":"7516:30:9"}]}},"id":2519,"nodeType":"IfStatement","src":"7362:444:9","trueBody":{"id":2486,"nodeType":"Block","src":"7397:55:9","statements":[{"functionReturnParameters":2480,"id":2485,"nodeType":"Return","src":"7411:7:9"}]}}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"7153:122:9","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:9","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"error","nameLocation":"7314:5:9","nodeType":"VariableDeclaration","scope":2521,"src":"7301:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"RecoverError","nameLocations":["7301:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"7301:12:9"},"referencedDeclaration":2182,"src":"7301:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:9","nodeType":"VariableDeclaration","scope":2521,"src":"7321:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:9"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"7352:0:9"},"scope":2522,"src":"7280:532:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2523,"src":"344:7470:9","usedErrors":[2185,2190,2195],"usedEvents":[]}],"src":"112:7703:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2749],"IERC5267":[172],"MessageHashUtils":[2835],"ShortString":[437],"ShortStrings":[648]},"id":2750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2524,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2750,"sourceUnit":2836,"src":"139:56:10","symbolAliases":[{"foreign":{"id":2525,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"147:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2750,"sourceUnit":649,"src":"196:62:10","symbolAliases":[{"foreign":{"id":2527,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"204:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2528,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"218:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2750,"sourceUnit":173,"src":"259:55:10","symbolAliases":[{"foreign":{"id":2530,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2533,"name":"IERC5267","nameLocations":["1988:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:10"},"id":2534,"nodeType":"InheritanceSpecifier","src":"1988:8:10"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"316:1643:10","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2749,"linearizedBaseContracts":[2749,172],"name":"EIP712","nameLocation":"1978:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2536,"libraryName":{"id":2535,"name":"ShortStrings","nameLocations":["2009:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"2009:12:10"},"nodeType":"UsingForDirective","src":"2003:25:10"},{"constant":true,"id":2541,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:10","nodeType":"VariableDeclaration","scope":2749,"src":"2034:140:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2538,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2543,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:10","nodeType":"VariableDeclaration","scope":2749,"src":"2373:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2545,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:10","nodeType":"VariableDeclaration","scope":2749,"src":"2427:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2547,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:10","nodeType":"VariableDeclaration","scope":2749,"src":"2473:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2549,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:10","nodeType":"VariableDeclaration","scope":2749,"src":"2517:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2551,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:10","nodeType":"VariableDeclaration","scope":2749,"src":"2560:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2554,"mutability":"immutable","name":"_name","nameLocation":"2637:5:10","nodeType":"VariableDeclaration","scope":2749,"src":"2607:35:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":2553,"nodeType":"UserDefinedTypeName","pathNode":{"id":2552,"name":"ShortString","nameLocations":["2607:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2607:11:10"},"referencedDeclaration":437,"src":"2607:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2557,"mutability":"immutable","name":"_version","nameLocation":"2678:8:10","nodeType":"VariableDeclaration","scope":2749,"src":"2648:38:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"},"typeName":{"id":2556,"nodeType":"UserDefinedTypeName","pathNode":{"id":2555,"name":"ShortString","nameLocations":["2648:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2648:11:10"},"referencedDeclaration":437,"src":"2648:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2559,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:10","nodeType":"VariableDeclaration","scope":2749,"src":"2742:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2558,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2561,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:10","nodeType":"VariableDeclaration","scope":2749,"src":"2826:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2560,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2618,"nodeType":"Block","src":"3483:376:10","statements":[{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2569,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"3493:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2572,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"3532:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2570,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3501:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:10","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":589,"src":"3501:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$437_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"src":"3493:53:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"id":2575,"nodeType":"ExpressionStatement","src":"3493:53:10"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2576,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"3556:8:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2579,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3601:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2577,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3567:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:10","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":589,"src":"3567:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$437_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"src":"3556:62:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"id":2582,"nodeType":"ExpressionStatement","src":"3556:62:10"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2583,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"3628:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2587,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3658:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2585,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:10","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2584,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2591,"nodeType":"ExpressionStatement","src":"3628:36:10"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2592,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3674:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2596,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"3707:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2594,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:10","typeDescriptions":{}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2593,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2600,"nodeType":"ExpressionStatement","src":"3674:42:10"},{"expression":{"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2601,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"3727:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2602,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2605,"nodeType":"ExpressionStatement","src":"3727:30:10"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3767:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2607,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3792:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2610,"nodeType":"ExpressionStatement","src":"3767:48:10"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3825:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2614,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:10","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2617,"nodeType":"ExpressionStatement","src":"3825:27:10"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"2864:559:10","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2619,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"name","nameLocation":"3454:4:10","nodeType":"VariableDeclaration","scope":2619,"src":"3440:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2563,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"version","nameLocation":"3474:7:10","nodeType":"VariableDeclaration","scope":2619,"src":"3460:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:10"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[],"src":"3483:0:10"},"scope":2749,"src":"3428:431:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"4007:200:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2627,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:10","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2629,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"4038:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2631,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2633,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4070:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2642,"nodeType":"Block","src":"4146:55:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2639,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4167:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2624,"id":2641,"nodeType":"Return","src":"4160:30:10"}]},"id":2643,"nodeType":"IfStatement","src":"4017:184:10","trueBody":{"id":2638,"nodeType":"Block","src":"4086:54:10","statements":[{"expression":{"id":2636,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"4107:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2624,"id":2637,"nodeType":"Return","src":"4100:29:10"}]}}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"3865:75:10","text":" @dev Returns the domain separator for the current chain."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:10","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"3972:2:10"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2645,"src":"3998:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:10"},"scope":2749,"src":"3945:262:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"4277:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2653,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"4315:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2654,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"4326:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2655,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"4339:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2656,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2660,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:10","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:10","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2650,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2649,"id":2664,"nodeType":"Return","src":"4287:98:10"}]},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:10","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"4243:2:10"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"4268:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:10"},"scope":2749,"src":"4213:179:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2681,"nodeType":"Block","src":"5103:90:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2676,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5153:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2678,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5175:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2674,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"5120:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2835_$","typeString":"type(library MessageHashUtils)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:10","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2834,"src":"5120:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2673,"id":2680,"nodeType":"Return","src":"5113:73:10"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"4398:614:10","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:10","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:10","nodeType":"VariableDeclaration","scope":2682,"src":"5043:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:10"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"5094:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:10"},"scope":2749,"src":"5017:176:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":2723,"nodeType":"Block","src":"5571:229:10","statements":[{"expression":{"components":[{"hexValue":"0f","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2702,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"5632:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2704,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"5659:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2706,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2710,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2749","typeString":"contract EIP712"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:10","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:10","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ArrayTypeName","src":"5771:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2700,"id":2722,"nodeType":"Return","src":"5581:212:10"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"5199:39:10","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:10","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"5264:2:10"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"fields","nameLocation":"5348:6:10","nodeType":"VariableDeclaration","scope":2724,"src":"5341:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2685,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"name","nameLocation":"5382:4:10","nodeType":"VariableDeclaration","scope":2724,"src":"5368:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"version","nameLocation":"5414:7:10","nodeType":"VariableDeclaration","scope":2724,"src":"5400:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:10","nodeType":"VariableDeclaration","scope":2724,"src":"5435:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:10","nodeType":"VariableDeclaration","scope":2724,"src":"5464:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"salt","nameLocation":"5511:4:10","nodeType":"VariableDeclaration","scope":2724,"src":"5503:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:10","nodeType":"VariableDeclaration","scope":2724,"src":"5529:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ArrayTypeName","src":"5529:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:10"},"scope":2749,"src":"5243:557:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2735,"nodeType":"Block","src":"6181:65:10","statements":[{"expression":{"arguments":[{"id":2732,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6225:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2730,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"6198:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:10","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":616,"src":"6198:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$437_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$437_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2729,"id":2734,"nodeType":"Return","src":"6191:48:10"}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"5806:256:10","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:10","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"6140:2:10"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2736,"src":"6166:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2727,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:10"},"scope":2749,"src":"6120:126:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"6636:71:10","statements":[{"expression":{"arguments":[{"id":2744,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"6683:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2742,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"6653:8:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$437","typeString":"ShortString"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:10","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":616,"src":"6653:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$437_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$437_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2741,"id":2746,"nodeType":"Return","src":"6646:54:10"}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"6252:262:10","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:10","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[],"src":"6595:2:10"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2748,"src":"6621:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2739,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:10"},"scope":2749,"src":"6572:135:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2750,"src":"1960:4749:10","usedErrors":[445,447],"usedEvents":[152]}],"src":"113:6597:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2835],"Strings":[2174]},"id":2836,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2836,"sourceUnit":2175,"src":"149:39:11","symbolAliases":[{"foreign":{"id":2752,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"157:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"190:330:11","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2835,"linearizedBaseContracts":[2835],"name":"MessageHashUtils","nameLocation":"529:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2763,"nodeType":"Block","src":"1339:341:11","statements":[{"AST":{"nativeSrc":"1374:300:11","nodeType":"YulBlock","src":"1374:300:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:11","nodeType":"YulLiteral","src":"1395:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:11","nodeType":"YulLiteral","src":"1401:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:11","nodeType":"YulIdentifier","src":"1388:6:11"},"nativeSrc":"1388:48:11","nodeType":"YulFunctionCall","src":"1388:48:11"},"nativeSrc":"1388:48:11","nodeType":"YulExpressionStatement","src":"1388:48:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:11","nodeType":"YulLiteral","src":"1497:4:11","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:11","nodeType":"YulIdentifier","src":"1503:11:11"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:11","nodeType":"YulIdentifier","src":"1490:6:11"},"nativeSrc":"1490:25:11","nodeType":"YulFunctionCall","src":"1490:25:11"},"nativeSrc":"1490:25:11","nodeType":"YulExpressionStatement","src":"1490:25:11"},{"nativeSrc":"1569:31:11","nodeType":"YulAssignment","src":"1569:31:11","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:11","nodeType":"YulLiteral","src":"1589:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:11","nodeType":"YulLiteral","src":"1595:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:11","nodeType":"YulIdentifier","src":"1579:9:11"},"nativeSrc":"1579:21:11","nodeType":"YulFunctionCall","src":"1579:21:11"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:11","nodeType":"YulIdentifier","src":"1569:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2760,"isOffset":false,"isSlot":false,"src":"1569:6:11","valueSize":1},{"declaration":2757,"isOffset":false,"isSlot":false,"src":"1503:11:11","valueSize":1}],"flags":["memory-safe"],"id":2762,"nodeType":"InlineAssembly","src":"1349:325:11"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"552:690:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:11","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:11","nodeType":"VariableDeclaration","scope":2764,"src":"1279:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:11"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"digest","nameLocation":"1331:6:11","nodeType":"VariableDeclaration","scope":2764,"src":"1323:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:11"},"scope":2835,"src":"1247:433:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"2257:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2781,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:11","memberName":"length","nodeType":"MemberAccess","src":"2366:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2779,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2349:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2174_$","typeString":"type(library Strings)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":886,"src":"2349:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2777,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:11","typeDescriptions":{}}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2785,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2384:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:11","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2772,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2771,"id":2788,"nodeType":"Return","src":"2267:126:11"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"1686:480:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:11","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"message","nameLocation":"2216:7:11","nodeType":"VariableDeclaration","scope":2790,"src":"2203:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2766,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:11"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"2248:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:11"},"scope":2835,"src":"2171:229:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"2854:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2804,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2910:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2805,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2921:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2801,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2800,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2799,"id":2808,"nodeType":"Return","src":"2864:63:11"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"2406:332:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:11","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"validator","nameLocation":"2792:9:11","nodeType":"VariableDeclaration","scope":2810,"src":"2784:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"data","nameLocation":"2816:4:11","nodeType":"VariableDeclaration","scope":2810,"src":"2803:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:11"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2810,"src":"2845:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:11"},"scope":2835,"src":"2743:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"3216:216:11","statements":[{"AST":{"nativeSrc":"3251:175:11","nodeType":"YulBlock","src":"3251:175:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:11","nodeType":"YulLiteral","src":"3272:4:11","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:11","nodeType":"YulLiteral","src":"3278:10:11","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:11","nodeType":"YulIdentifier","src":"3265:6:11"},"nativeSrc":"3265:24:11","nodeType":"YulFunctionCall","src":"3265:24:11"},"nativeSrc":"3265:24:11","nodeType":"YulExpressionStatement","src":"3265:24:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:11","nodeType":"YulLiteral","src":"3309:4:11","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:11","nodeType":"YulLiteral","src":"3319:2:11","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:11","nodeType":"YulIdentifier","src":"3323:9:11"}],"functionName":{"name":"shl","nativeSrc":"3315:3:11","nodeType":"YulIdentifier","src":"3315:3:11"},"nativeSrc":"3315:18:11","nodeType":"YulFunctionCall","src":"3315:18:11"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:11","nodeType":"YulIdentifier","src":"3302:6:11"},"nativeSrc":"3302:32:11","nodeType":"YulFunctionCall","src":"3302:32:11"},"nativeSrc":"3302:32:11","nodeType":"YulExpressionStatement","src":"3302:32:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:11","nodeType":"YulLiteral","src":"3354:4:11","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:11","nodeType":"YulIdentifier","src":"3360:11:11"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:11","nodeType":"YulIdentifier","src":"3347:6:11"},"nativeSrc":"3347:25:11","nodeType":"YulFunctionCall","src":"3347:25:11"},"nativeSrc":"3347:25:11","nodeType":"YulExpressionStatement","src":"3347:25:11"},{"nativeSrc":"3385:31:11","nodeType":"YulAssignment","src":"3385:31:11","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:11","nodeType":"YulLiteral","src":"3405:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:11","nodeType":"YulLiteral","src":"3411:4:11","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:11","nodeType":"YulIdentifier","src":"3395:9:11"},"nativeSrc":"3395:21:11","nodeType":"YulFunctionCall","src":"3395:21:11"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:11","nodeType":"YulIdentifier","src":"3385:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2818,"isOffset":false,"isSlot":false,"src":"3385:6:11","valueSize":1},{"declaration":2815,"isOffset":false,"isSlot":false,"src":"3360:11:11","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3323:9:11","valueSize":1}],"flags":["memory-safe"],"id":2820,"nodeType":"InlineAssembly","src":"3226:200:11"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"2940:129:11","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:11","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"validator","nameLocation":"3132:9:11","nodeType":"VariableDeclaration","scope":2822,"src":"3124:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:11","nodeType":"VariableDeclaration","scope":2822,"src":"3151:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:11"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"digest","nameLocation":"3208:6:11","nodeType":"VariableDeclaration","scope":2822,"src":"3200:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:11"},"scope":2835,"src":"3074:358:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"3983:265:11","statements":[{"AST":{"nativeSrc":"4018:224:11","nodeType":"YulBlock","src":"4018:224:11","statements":[{"nativeSrc":"4032:22:11","nodeType":"YulVariableDeclaration","src":"4032:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:11","nodeType":"YulLiteral","src":"4049:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:11","nodeType":"YulIdentifier","src":"4043:5:11"},"nativeSrc":"4043:11:11","nodeType":"YulFunctionCall","src":"4043:11:11"},"variables":[{"name":"ptr","nativeSrc":"4036:3:11","nodeType":"YulTypedName","src":"4036:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:11","nodeType":"YulIdentifier","src":"4074:3:11"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:11","nodeType":"YulLiteral","src":"4079:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:11","nodeType":"YulIdentifier","src":"4067:6:11"},"nativeSrc":"4067:23:11","nodeType":"YulFunctionCall","src":"4067:23:11"},"nativeSrc":"4067:23:11","nodeType":"YulExpressionStatement","src":"4067:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:11","nodeType":"YulIdentifier","src":"4114:3:11"},{"kind":"number","nativeSrc":"4119:4:11","nodeType":"YulLiteral","src":"4119:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:11","nodeType":"YulIdentifier","src":"4110:3:11"},"nativeSrc":"4110:14:11","nodeType":"YulFunctionCall","src":"4110:14:11"},{"name":"domainSeparator","nativeSrc":"4126:15:11","nodeType":"YulIdentifier","src":"4126:15:11"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:11","nodeType":"YulIdentifier","src":"4103:6:11"},"nativeSrc":"4103:39:11","nodeType":"YulFunctionCall","src":"4103:39:11"},"nativeSrc":"4103:39:11","nodeType":"YulExpressionStatement","src":"4103:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:11","nodeType":"YulIdentifier","src":"4166:3:11"},{"kind":"number","nativeSrc":"4171:4:11","nodeType":"YulLiteral","src":"4171:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:11","nodeType":"YulIdentifier","src":"4162:3:11"},"nativeSrc":"4162:14:11","nodeType":"YulFunctionCall","src":"4162:14:11"},{"name":"structHash","nativeSrc":"4178:10:11","nodeType":"YulIdentifier","src":"4178:10:11"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:11","nodeType":"YulIdentifier","src":"4155:6:11"},"nativeSrc":"4155:34:11","nodeType":"YulFunctionCall","src":"4155:34:11"},"nativeSrc":"4155:34:11","nodeType":"YulExpressionStatement","src":"4155:34:11"},{"nativeSrc":"4202:30:11","nodeType":"YulAssignment","src":"4202:30:11","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:11","nodeType":"YulIdentifier","src":"4222:3:11"},{"kind":"number","nativeSrc":"4227:4:11","nodeType":"YulLiteral","src":"4227:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:11","nodeType":"YulIdentifier","src":"4212:9:11"},"nativeSrc":"4212:20:11","nodeType":"YulFunctionCall","src":"4212:20:11"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:11","nodeType":"YulIdentifier","src":"4202:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2830,"isOffset":false,"isSlot":false,"src":"4202:6:11","valueSize":1},{"declaration":2825,"isOffset":false,"isSlot":false,"src":"4126:15:11","valueSize":1},{"declaration":2827,"isOffset":false,"isSlot":false,"src":"4178:10:11","valueSize":1}],"flags":["memory-safe"],"id":2832,"nodeType":"InlineAssembly","src":"3993:249:11"}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"3438:431:11","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:11","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:11","nodeType":"VariableDeclaration","scope":2834,"src":"3899:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:11","nodeType":"VariableDeclaration","scope":2834,"src":"3924:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:11"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"digest","nameLocation":"3975:6:11","nodeType":"VariableDeclaration","scope":2834,"src":"3967:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:11"},"scope":2835,"src":"3874:374:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2836,"src":"521:3729:11","usedErrors":[],"usedEvents":[]}],"src":"123:4128:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4456],"Panic":[254],"SafeCast":[6221]},"id":4457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2837,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4457,"sourceUnit":255,"src":"129:35:12","symbolAliases":[{"foreign":{"id":2838,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4457,"sourceUnit":6222,"src":"165:40:12","symbolAliases":[{"foreign":{"id":2840,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4456,"linearizedBaseContracts":[4456],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2847,"members":[{"id":2843,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":2844,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":2845,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":2846,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":2860,"nodeType":"Block","src":"731:112:12","statements":[{"AST":{"nativeSrc":"766:71:12","nodeType":"YulBlock","src":"766:71:12","statements":[{"nativeSrc":"780:16:12","nodeType":"YulAssignment","src":"780:16:12","value":{"arguments":[{"name":"a","nativeSrc":"791:1:12","nodeType":"YulIdentifier","src":"791:1:12"},{"name":"b","nativeSrc":"794:1:12","nodeType":"YulIdentifier","src":"794:1:12"}],"functionName":{"name":"add","nativeSrc":"787:3:12","nodeType":"YulIdentifier","src":"787:3:12"},"nativeSrc":"787:9:12","nodeType":"YulFunctionCall","src":"787:9:12"},"variableNames":[{"name":"low","nativeSrc":"780:3:12","nodeType":"YulIdentifier","src":"780:3:12"}]},{"nativeSrc":"809:18:12","nodeType":"YulAssignment","src":"809:18:12","value":{"arguments":[{"name":"low","nativeSrc":"820:3:12","nodeType":"YulIdentifier","src":"820:3:12"},{"name":"a","nativeSrc":"825:1:12","nodeType":"YulIdentifier","src":"825:1:12"}],"functionName":{"name":"lt","nativeSrc":"817:2:12","nodeType":"YulIdentifier","src":"817:2:12"},"nativeSrc":"817:10:12","nodeType":"YulFunctionCall","src":"817:10:12"},"variableNames":[{"name":"high","nativeSrc":"809:4:12","nodeType":"YulIdentifier","src":"809:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":false,"src":"791:1:12","valueSize":1},{"declaration":2850,"isOffset":false,"isSlot":false,"src":"825:1:12","valueSize":1},{"declaration":2852,"isOffset":false,"isSlot":false,"src":"794:1:12","valueSize":1},{"declaration":2855,"isOffset":false,"isSlot":false,"src":"809:4:12","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"780:3:12","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"820:3:12","valueSize":1}],"flags":["memory-safe"],"id":2859,"nodeType":"InlineAssembly","src":"741:96:12"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"475:163:12","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:12","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"a","nameLocation":"667:1:12","nodeType":"VariableDeclaration","scope":2861,"src":"659:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"b","nameLocation":"678:1:12","nodeType":"VariableDeclaration","scope":2861,"src":"670:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:12"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"high","nameLocation":"712:4:12","nodeType":"VariableDeclaration","scope":2861,"src":"704:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"low","nameLocation":"726:3:12","nodeType":"VariableDeclaration","scope":2861,"src":"718:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:12"},"scope":4456,"src":"643:200:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2874,"nodeType":"Block","src":"1115:462:12","statements":[{"AST":{"nativeSrc":"1437:134:12","nodeType":"YulBlock","src":"1437:134:12","statements":[{"nativeSrc":"1451:30:12","nodeType":"YulVariableDeclaration","src":"1451:30:12","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:12","nodeType":"YulIdentifier","src":"1468:1:12"},{"name":"b","nativeSrc":"1471:1:12","nodeType":"YulIdentifier","src":"1471:1:12"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:12","nodeType":"YulLiteral","src":"1478:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:12","nodeType":"YulIdentifier","src":"1474:3:12"},"nativeSrc":"1474:6:12","nodeType":"YulFunctionCall","src":"1474:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:12","nodeType":"YulIdentifier","src":"1461:6:12"},"nativeSrc":"1461:20:12","nodeType":"YulFunctionCall","src":"1461:20:12"},"variables":[{"name":"mm","nativeSrc":"1455:2:12","nodeType":"YulTypedName","src":"1455:2:12","type":""}]},{"nativeSrc":"1494:16:12","nodeType":"YulAssignment","src":"1494:16:12","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:12","nodeType":"YulIdentifier","src":"1505:1:12"},{"name":"b","nativeSrc":"1508:1:12","nodeType":"YulIdentifier","src":"1508:1:12"}],"functionName":{"name":"mul","nativeSrc":"1501:3:12","nodeType":"YulIdentifier","src":"1501:3:12"},"nativeSrc":"1501:9:12","nodeType":"YulFunctionCall","src":"1501:9:12"},"variableNames":[{"name":"low","nativeSrc":"1494:3:12","nodeType":"YulIdentifier","src":"1494:3:12"}]},{"nativeSrc":"1523:38:12","nodeType":"YulAssignment","src":"1523:38:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:12","nodeType":"YulIdentifier","src":"1539:2:12"},{"name":"low","nativeSrc":"1543:3:12","nodeType":"YulIdentifier","src":"1543:3:12"}],"functionName":{"name":"sub","nativeSrc":"1535:3:12","nodeType":"YulIdentifier","src":"1535:3:12"},"nativeSrc":"1535:12:12","nodeType":"YulFunctionCall","src":"1535:12:12"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:12","nodeType":"YulIdentifier","src":"1552:2:12"},{"name":"low","nativeSrc":"1556:3:12","nodeType":"YulIdentifier","src":"1556:3:12"}],"functionName":{"name":"lt","nativeSrc":"1549:2:12","nodeType":"YulIdentifier","src":"1549:2:12"},"nativeSrc":"1549:11:12","nodeType":"YulFunctionCall","src":"1549:11:12"}],"functionName":{"name":"sub","nativeSrc":"1531:3:12","nodeType":"YulIdentifier","src":"1531:3:12"},"nativeSrc":"1531:30:12","nodeType":"YulFunctionCall","src":"1531:30:12"},"variableNames":[{"name":"high","nativeSrc":"1523:4:12","nodeType":"YulIdentifier","src":"1523:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2864,"isOffset":false,"isSlot":false,"src":"1468:1:12","valueSize":1},{"declaration":2864,"isOffset":false,"isSlot":false,"src":"1505:1:12","valueSize":1},{"declaration":2866,"isOffset":false,"isSlot":false,"src":"1471:1:12","valueSize":1},{"declaration":2866,"isOffset":false,"isSlot":false,"src":"1508:1:12","valueSize":1},{"declaration":2869,"isOffset":false,"isSlot":false,"src":"1523:4:12","valueSize":1},{"declaration":2871,"isOffset":false,"isSlot":false,"src":"1494:3:12","valueSize":1},{"declaration":2871,"isOffset":false,"isSlot":false,"src":"1543:3:12","valueSize":1},{"declaration":2871,"isOffset":false,"isSlot":false,"src":"1556:3:12","valueSize":1}],"flags":["memory-safe"],"id":2873,"nodeType":"InlineAssembly","src":"1412:159:12"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"849:173:12","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2875,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:12","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"a","nameLocation":"1051:1:12","nodeType":"VariableDeclaration","scope":2875,"src":"1043:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"b","nameLocation":"1062:1:12","nodeType":"VariableDeclaration","scope":2875,"src":"1054:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:12"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"high","nameLocation":"1096:4:12","nodeType":"VariableDeclaration","scope":2875,"src":"1088:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"low","nameLocation":"1110:3:12","nodeType":"VariableDeclaration","scope":2875,"src":"1102:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:12"},"scope":4456,"src":"1027:550:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2909,"nodeType":"Block","src":"1784:149:12","statements":[{"id":2908,"nodeType":"UncheckedBlock","src":"1794:133:12","statements":[{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"c","nameLocation":"1826:1:12","nodeType":"VariableDeclaration","scope":2908,"src":"1818:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1830:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"1834:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:12"},{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2893,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1849:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1859:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1864:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2898,"nodeType":"ExpressionStatement","src":"1849:16:12"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"1879:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2903,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2901,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"1892:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"1892:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"1879:37:12"}]}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"1583:105:12","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2910,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:12","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"a","nameLocation":"1717:1:12","nodeType":"VariableDeclaration","scope":2910,"src":"1709:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"b","nameLocation":"1728:1:12","nodeType":"VariableDeclaration","scope":2910,"src":"1720:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:12"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"success","nameLocation":"1759:7:12","nodeType":"VariableDeclaration","scope":2910,"src":"1754:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2882,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"result","nameLocation":"1776:6:12","nodeType":"VariableDeclaration","scope":2910,"src":"1768:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:12"},"scope":4456,"src":"1693:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"2143:149:12","statements":[{"id":2943,"nodeType":"UncheckedBlock","src":"2153:133:12","statements":[{"assignments":[2923],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"c","nameLocation":"2185:1:12","nodeType":"VariableDeclaration","scope":2943,"src":"2177:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"2189:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2193:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:12"},{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2928,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2208:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2218:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"2223:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"nodeType":"ExpressionStatement","src":"2208:16:12"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2238:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2938,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2267:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2936,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"2251:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"2251:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"2238:37:12"}]}]},"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"1939:108:12","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:12","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"a","nameLocation":"2076:1:12","nodeType":"VariableDeclaration","scope":2945,"src":"2068:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"b","nameLocation":"2087:1:12","nodeType":"VariableDeclaration","scope":2945,"src":"2079:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:12"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"success","nameLocation":"2118:7:12","nodeType":"VariableDeclaration","scope":2945,"src":"2113:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2917,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"result","nameLocation":"2135:6:12","nodeType":"VariableDeclaration","scope":2945,"src":"2127:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:12"},"scope":4456,"src":"2052:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2974,"nodeType":"Block","src":"2505:391:12","statements":[{"id":2973,"nodeType":"UncheckedBlock","src":"2515:375:12","statements":[{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"c","nameLocation":"2547:1:12","nodeType":"VariableDeclaration","scope":2973,"src":"2539:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2962,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"2551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2555:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:12"},{"AST":{"nativeSrc":"2595:188:12","nodeType":"YulBlock","src":"2595:188:12","statements":[{"nativeSrc":"2727:42:12","nodeType":"YulAssignment","src":"2727:42:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:12","nodeType":"YulIdentifier","src":"2748:1:12"},{"name":"a","nativeSrc":"2751:1:12","nodeType":"YulIdentifier","src":"2751:1:12"}],"functionName":{"name":"div","nativeSrc":"2744:3:12","nodeType":"YulIdentifier","src":"2744:3:12"},"nativeSrc":"2744:9:12","nodeType":"YulFunctionCall","src":"2744:9:12"},{"name":"b","nativeSrc":"2755:1:12","nodeType":"YulIdentifier","src":"2755:1:12"}],"functionName":{"name":"eq","nativeSrc":"2741:2:12","nodeType":"YulIdentifier","src":"2741:2:12"},"nativeSrc":"2741:16:12","nodeType":"YulFunctionCall","src":"2741:16:12"},{"arguments":[{"name":"a","nativeSrc":"2766:1:12","nodeType":"YulIdentifier","src":"2766:1:12"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:12","nodeType":"YulIdentifier","src":"2759:6:12"},"nativeSrc":"2759:9:12","nodeType":"YulFunctionCall","src":"2759:9:12"}],"functionName":{"name":"or","nativeSrc":"2738:2:12","nodeType":"YulIdentifier","src":"2738:2:12"},"nativeSrc":"2738:31:12","nodeType":"YulFunctionCall","src":"2738:31:12"},"variableNames":[{"name":"success","nativeSrc":"2727:7:12","nodeType":"YulIdentifier","src":"2727:7:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2948,"isOffset":false,"isSlot":false,"src":"2751:1:12","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"2766:1:12","valueSize":1},{"declaration":2950,"isOffset":false,"isSlot":false,"src":"2755:1:12","valueSize":1},{"declaration":2958,"isOffset":false,"isSlot":false,"src":"2748:1:12","valueSize":1},{"declaration":2953,"isOffset":false,"isSlot":false,"src":"2727:7:12","valueSize":1}],"flags":["memory-safe"],"id":2963,"nodeType":"InlineAssembly","src":"2570:213:12"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2851:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"2871:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2966,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"2855:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"2855:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"2842:37:12"}]}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"2298:111:12","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:12","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"a","nameLocation":"2438:1:12","nodeType":"VariableDeclaration","scope":2975,"src":"2430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"b","nameLocation":"2449:1:12","nodeType":"VariableDeclaration","scope":2975,"src":"2441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:12"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"success","nameLocation":"2480:7:12","nodeType":"VariableDeclaration","scope":2975,"src":"2475:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2952,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"result","nameLocation":"2497:6:12","nodeType":"VariableDeclaration","scope":2975,"src":"2489:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:12"},"scope":4456,"src":"2414:482:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"3111:231:12","statements":[{"id":2994,"nodeType":"UncheckedBlock","src":"3121:215:12","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2987,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"3145:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"3155:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2992,"nodeType":"ExpressionStatement","src":"3145:15:12"},{"AST":{"nativeSrc":"3199:127:12","nodeType":"YulBlock","src":"3199:127:12","statements":[{"nativeSrc":"3293:19:12","nodeType":"YulAssignment","src":"3293:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:12","nodeType":"YulIdentifier","src":"3307:1:12"},{"name":"b","nativeSrc":"3310:1:12","nodeType":"YulIdentifier","src":"3310:1:12"}],"functionName":{"name":"div","nativeSrc":"3303:3:12","nodeType":"YulIdentifier","src":"3303:3:12"},"nativeSrc":"3303:9:12","nodeType":"YulFunctionCall","src":"3303:9:12"},"variableNames":[{"name":"result","nativeSrc":"3293:6:12","nodeType":"YulIdentifier","src":"3293:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2978,"isOffset":false,"isSlot":false,"src":"3307:1:12","valueSize":1},{"declaration":2980,"isOffset":false,"isSlot":false,"src":"3310:1:12","valueSize":1},{"declaration":2985,"isOffset":false,"isSlot":false,"src":"3293:6:12","valueSize":1}],"flags":["memory-safe"],"id":2993,"nodeType":"InlineAssembly","src":"3174:152:12"}]}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"2902:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:12","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"a","nameLocation":"3044:1:12","nodeType":"VariableDeclaration","scope":2996,"src":"3036:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"b","nameLocation":"3055:1:12","nodeType":"VariableDeclaration","scope":2996,"src":"3047:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:12"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"success","nameLocation":"3086:7:12","nodeType":"VariableDeclaration","scope":2996,"src":"3081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2982,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"result","nameLocation":"3103:6:12","nodeType":"VariableDeclaration","scope":2996,"src":"3095:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:12"},"scope":4456,"src":"3020:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"3567:231:12","statements":[{"id":3015,"nodeType":"UncheckedBlock","src":"3577:215:12","statements":[{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3008,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3601:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3611:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"ExpressionStatement","src":"3601:15:12"},{"AST":{"nativeSrc":"3655:127:12","nodeType":"YulBlock","src":"3655:127:12","statements":[{"nativeSrc":"3749:19:12","nodeType":"YulAssignment","src":"3749:19:12","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:12","nodeType":"YulIdentifier","src":"3763:1:12"},{"name":"b","nativeSrc":"3766:1:12","nodeType":"YulIdentifier","src":"3766:1:12"}],"functionName":{"name":"mod","nativeSrc":"3759:3:12","nodeType":"YulIdentifier","src":"3759:3:12"},"nativeSrc":"3759:9:12","nodeType":"YulFunctionCall","src":"3759:9:12"},"variableNames":[{"name":"result","nativeSrc":"3749:6:12","nodeType":"YulIdentifier","src":"3749:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2999,"isOffset":false,"isSlot":false,"src":"3763:1:12","valueSize":1},{"declaration":3001,"isOffset":false,"isSlot":false,"src":"3766:1:12","valueSize":1},{"declaration":3006,"isOffset":false,"isSlot":false,"src":"3749:6:12","valueSize":1}],"flags":["memory-safe"],"id":3014,"nodeType":"InlineAssembly","src":"3630:152:12"}]}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"3348:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:12","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"a","nameLocation":"3500:1:12","nodeType":"VariableDeclaration","scope":3017,"src":"3492:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"b","nameLocation":"3511:1:12","nodeType":"VariableDeclaration","scope":3017,"src":"3503:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:12"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"success","nameLocation":"3542:7:12","nodeType":"VariableDeclaration","scope":3017,"src":"3537:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3003,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"result","nameLocation":"3559:6:12","nodeType":"VariableDeclaration","scope":3017,"src":"3551:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:12"},"scope":4456,"src":"3476:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"3989:122:12","statements":[{"assignments":[3028,3030],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"success","nameLocation":"4005:7:12","nodeType":"VariableDeclaration","scope":3046,"src":"4000:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3027,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"result","nameLocation":"4022:6:12","nodeType":"VariableDeclaration","scope":3046,"src":"4014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"id":3032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4039:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"4042:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"4032:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:12"},{"expression":{"arguments":[{"id":3037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"4069:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"4078:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:12","memberName":"max","nodeType":"MemberAccess","src":"4086:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3036,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"4061:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3026,"id":3045,"nodeType":"Return","src":"4054:50:12"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"3804:103:12","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:12","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"a","nameLocation":"3943:1:12","nodeType":"VariableDeclaration","scope":3047,"src":"3935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"b","nameLocation":"3954:1:12","nodeType":"VariableDeclaration","scope":3047,"src":"3946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:12"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"3980:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:12"},"scope":4456,"src":"3912:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"4294:73:12","statements":[{"assignments":[null,3058],"declarations":[null,{"constant":false,"id":3058,"mutability":"mutable","name":"result","nameLocation":"4315:6:12","nodeType":"VariableDeclaration","scope":3066,"src":"4307:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"arguments":[{"id":3060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"4332:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"4335:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3059,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4325:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:12"},{"expression":{"id":3064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"4354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3056,"id":3065,"nodeType":"Return","src":"4347:13:12"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"4117:95:12","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:12","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"a","nameLocation":"4248:1:12","nodeType":"VariableDeclaration","scope":3067,"src":"4240:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"b","nameLocation":"4259:1:12","nodeType":"VariableDeclaration","scope":3067,"src":"4251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:12"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"4285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:12"},"scope":4456,"src":"4217:150:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3096,"nodeType":"Block","src":"4564:122:12","statements":[{"assignments":[3078,3080],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"success","nameLocation":"4580:7:12","nodeType":"VariableDeclaration","scope":3096,"src":"4575:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3077,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"result","nameLocation":"4597:6:12","nodeType":"VariableDeclaration","scope":3096,"src":"4589:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"initialValue":{"arguments":[{"id":3082,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3083,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4617:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"4607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:12"},{"expression":{"arguments":[{"id":3087,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"4653:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3089,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:12","memberName":"max","nodeType":"MemberAccess","src":"4661:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3086,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"4636:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3076,"id":3095,"nodeType":"Return","src":"4629:50:12"}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"4373:109:12","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:12","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"a","nameLocation":"4518:1:12","nodeType":"VariableDeclaration","scope":3097,"src":"4510:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"b","nameLocation":"4529:1:12","nodeType":"VariableDeclaration","scope":3097,"src":"4521:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:12"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3097,"src":"4555:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:12"},"scope":4456,"src":"4487:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"5158:207:12","statements":[{"id":3122,"nodeType":"UncheckedBlock","src":"5168:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5306:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5312:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5316:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3116,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"5337:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"5321:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"5321:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3108,"id":3121,"nodeType":"Return","src":"5299:49:12"}]}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"4692:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:12","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"condition","nameLocation":"5093:9:12","nodeType":"VariableDeclaration","scope":3124,"src":"5088:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3099,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"a","nameLocation":"5112:1:12","nodeType":"VariableDeclaration","scope":3124,"src":"5104:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"b","nameLocation":"5123:1:12","nodeType":"VariableDeclaration","scope":3124,"src":"5115:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:12"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"5149:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:12"},"scope":4456,"src":"5071:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3142,"nodeType":"Block","src":"5502:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5527:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5531:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5534:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5537:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3134,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5519:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3133,"id":3141,"nodeType":"Return","src":"5512:27:12"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"5371:59:12","text":" @dev Returns the largest of two numbers."},"id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:12","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"a","nameLocation":"5456:1:12","nodeType":"VariableDeclaration","scope":3143,"src":"5448:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"b","nameLocation":"5467:1:12","nodeType":"VariableDeclaration","scope":3143,"src":"5459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:12"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3143,"src":"5493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:12"},"scope":4456,"src":"5435:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3161,"nodeType":"Block","src":"5684:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5709:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"5713:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5716:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"5719:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3153,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5701:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3152,"id":3160,"nodeType":"Return","src":"5694:27:12"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"5552:60:12","text":" @dev Returns the smallest of two numbers."},"id":3162,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:12","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"a","nameLocation":"5638:1:12","nodeType":"VariableDeclaration","scope":3162,"src":"5630:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"b","nameLocation":"5649:1:12","nodeType":"VariableDeclaration","scope":3162,"src":"5641:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:12"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3162,"src":"5675:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:12"},"scope":4456,"src":"5617:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"5912:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5967:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5971:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3171,"id":3183,"nodeType":"Return","src":"5959:28:12"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"5734:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:12","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"a","nameLocation":"5866:1:12","nodeType":"VariableDeclaration","scope":3185,"src":"5858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"b","nameLocation":"5877:1:12","nodeType":"VariableDeclaration","scope":3185,"src":"5869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:12"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"5903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:12"},"scope":4456,"src":"5841:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"6286:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"6300:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"6296:150:12","trueBody":{"id":3205,"nodeType":"Block","src":"6308:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":3201,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6412:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":221,"src":"6412:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3198,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6400:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":253,"src":"6400:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"ExpressionStatement","src":"6400:35:12"}]}},{"id":3224,"nodeType":"UncheckedBlock","src":"6829:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"6876:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3207,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"6860:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"6860:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"6887:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"6896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3194,"id":3223,"nodeType":"Return","src":"6853:49:12"}]}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"6000:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:12","nodeType":"FunctionDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"a","nameLocation":"6240:1:12","nodeType":"VariableDeclaration","scope":3226,"src":"6232:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"b","nameLocation":"6251:1:12","nodeType":"VariableDeclaration","scope":3226,"src":"6243:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:12"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3226,"src":"6277:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:12"},"scope":4456,"src":"6215:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"7340:3585:12","statements":[{"id":3360,"nodeType":"UncheckedBlock","src":"7350:3569:12","statements":[{"assignments":[3239,3241],"declarations":[{"constant":false,"id":3239,"mutability":"mutable","name":"high","nameLocation":"7383:4:12","nodeType":"VariableDeclaration","scope":3360,"src":"7375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"low","nameLocation":"7397:3:12","nodeType":"VariableDeclaration","scope":3360,"src":"7389:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3246,"initialValue":{"arguments":[{"id":3243,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"7411:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3244,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7414:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"7404:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"7498:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"7494:365:12","trueBody":{"id":3254,"nodeType":"Block","src":"7509:350:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"7827:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3251,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7833:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3237,"id":3253,"nodeType":"Return","src":"7820:24:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"7969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3257,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"7984:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"IfStatement","src":"7965:142:12","trueBody":{"id":3273,"nodeType":"Block","src":"7990:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"8028:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3266,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":221,"src":"8046:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3268,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":217,"src":"8070:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3262,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"8020:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3259,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8008:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":253,"src":"8008:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3272,"nodeType":"ExpressionStatement","src":"8008:84:12"}]}},{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:12","nodeType":"VariableDeclaration","scope":3360,"src":"8359:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3277,"nodeType":"VariableDeclarationStatement","src":"8359:17:12"},{"AST":{"nativeSrc":"8415:283:12","nodeType":"YulBlock","src":"8415:283:12","statements":[{"nativeSrc":"8484:38:12","nodeType":"YulAssignment","src":"8484:38:12","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:12","nodeType":"YulIdentifier","src":"8504:1:12"},{"name":"y","nativeSrc":"8507:1:12","nodeType":"YulIdentifier","src":"8507:1:12"},{"name":"denominator","nativeSrc":"8510:11:12","nodeType":"YulIdentifier","src":"8510:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:12","nodeType":"YulIdentifier","src":"8497:6:12"},"nativeSrc":"8497:25:12","nodeType":"YulFunctionCall","src":"8497:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:12","nodeType":"YulIdentifier","src":"8484:9:12"}]},{"nativeSrc":"8604:37:12","nodeType":"YulAssignment","src":"8604:37:12","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:12","nodeType":"YulIdentifier","src":"8616:4:12"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:12","nodeType":"YulIdentifier","src":"8625:9:12"},{"name":"low","nativeSrc":"8636:3:12","nodeType":"YulIdentifier","src":"8636:3:12"}],"functionName":{"name":"gt","nativeSrc":"8622:2:12","nodeType":"YulIdentifier","src":"8622:2:12"},"nativeSrc":"8622:18:12","nodeType":"YulFunctionCall","src":"8622:18:12"}],"functionName":{"name":"sub","nativeSrc":"8612:3:12","nodeType":"YulIdentifier","src":"8612:3:12"},"nativeSrc":"8612:29:12","nodeType":"YulFunctionCall","src":"8612:29:12"},"variableNames":[{"name":"high","nativeSrc":"8604:4:12","nodeType":"YulIdentifier","src":"8604:4:12"}]},{"nativeSrc":"8658:26:12","nodeType":"YulAssignment","src":"8658:26:12","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:12","nodeType":"YulIdentifier","src":"8669:3:12"},{"name":"remainder","nativeSrc":"8674:9:12","nodeType":"YulIdentifier","src":"8674:9:12"}],"functionName":{"name":"sub","nativeSrc":"8665:3:12","nodeType":"YulIdentifier","src":"8665:3:12"},"nativeSrc":"8665:19:12","nodeType":"YulFunctionCall","src":"8665:19:12"},"variableNames":[{"name":"low","nativeSrc":"8658:3:12","nodeType":"YulIdentifier","src":"8658:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3233,"isOffset":false,"isSlot":false,"src":"8510:11:12","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"8604:4:12","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"8616:4:12","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"8636:3:12","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"8658:3:12","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"8669:3:12","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"8484:9:12","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"8625:9:12","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"8674:9:12","valueSize":1},{"declaration":3229,"isOffset":false,"isSlot":false,"src":"8504:1:12","valueSize":1},{"declaration":3231,"isOffset":false,"isSlot":false,"src":"8507:1:12","valueSize":1}],"flags":["memory-safe"],"id":3278,"nodeType":"InlineAssembly","src":"8390:308:12"},{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"twos","nameLocation":"8910:4:12","nodeType":"VariableDeclaration","scope":3360,"src":"8902:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"8917:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3283,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"8936:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:12"},{"AST":{"nativeSrc":"8987:359:12","nodeType":"YulBlock","src":"8987:359:12","statements":[{"nativeSrc":"9052:37:12","nodeType":"YulAssignment","src":"9052:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:12","nodeType":"YulIdentifier","src":"9071:11:12"},{"name":"twos","nativeSrc":"9084:4:12","nodeType":"YulIdentifier","src":"9084:4:12"}],"functionName":{"name":"div","nativeSrc":"9067:3:12","nodeType":"YulIdentifier","src":"9067:3:12"},"nativeSrc":"9067:22:12","nodeType":"YulFunctionCall","src":"9067:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:12","nodeType":"YulIdentifier","src":"9052:11:12"}]},{"nativeSrc":"9153:21:12","nodeType":"YulAssignment","src":"9153:21:12","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:12","nodeType":"YulIdentifier","src":"9164:3:12"},{"name":"twos","nativeSrc":"9169:4:12","nodeType":"YulIdentifier","src":"9169:4:12"}],"functionName":{"name":"div","nativeSrc":"9160:3:12","nodeType":"YulIdentifier","src":"9160:3:12"},"nativeSrc":"9160:14:12","nodeType":"YulFunctionCall","src":"9160:14:12"},"variableNames":[{"name":"low","nativeSrc":"9153:3:12","nodeType":"YulIdentifier","src":"9153:3:12"}]},{"nativeSrc":"9293:39:12","nodeType":"YulAssignment","src":"9293:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:12","nodeType":"YulLiteral","src":"9313:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:12","nodeType":"YulIdentifier","src":"9316:4:12"}],"functionName":{"name":"sub","nativeSrc":"9309:3:12","nodeType":"YulIdentifier","src":"9309:3:12"},"nativeSrc":"9309:12:12","nodeType":"YulFunctionCall","src":"9309:12:12"},{"name":"twos","nativeSrc":"9323:4:12","nodeType":"YulIdentifier","src":"9323:4:12"}],"functionName":{"name":"div","nativeSrc":"9305:3:12","nodeType":"YulIdentifier","src":"9305:3:12"},"nativeSrc":"9305:23:12","nodeType":"YulFunctionCall","src":"9305:23:12"},{"kind":"number","nativeSrc":"9330:1:12","nodeType":"YulLiteral","src":"9330:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:12","nodeType":"YulIdentifier","src":"9301:3:12"},"nativeSrc":"9301:31:12","nodeType":"YulFunctionCall","src":"9301:31:12"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:12","nodeType":"YulIdentifier","src":"9293:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3233,"isOffset":false,"isSlot":false,"src":"9052:11:12","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"9071:11:12","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"9153:3:12","valueSize":1},{"declaration":3241,"isOffset":false,"isSlot":false,"src":"9164:3:12","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"9084:4:12","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"9169:4:12","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"9293:4:12","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"9316:4:12","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"9323:4:12","valueSize":1}],"flags":["memory-safe"],"id":3288,"nodeType":"InlineAssembly","src":"8962:384:12"},{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3289,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9409:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"9416:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3291,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"9423:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"9409:18:12"},{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:12","nodeType":"VariableDeclaration","scope":3360,"src":"9762:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3298,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"9785:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:12"},{"expression":{"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10033:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3307,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3311,"nodeType":"ExpressionStatement","src":"10018:36:12"},{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3312,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10103:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3315,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"10088:36:12"},{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10175:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"10160:36:12"},{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10231:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10246:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"10231:36:12"},{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10304:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10319:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10333:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"10304:36:12"},{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3344,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10393:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3351,"nodeType":"ExpressionStatement","src":"10378:36:12"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"10859:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"10868:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3354,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"10874:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"10859:22:12"},{"expression":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"10902:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3237,"id":3359,"nodeType":"Return","src":"10895:13:12"}]}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"6925:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:12","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"x","nameLocation":"7266:1:12","nodeType":"VariableDeclaration","scope":3362,"src":"7258:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"y","nameLocation":"7277:1:12","nodeType":"VariableDeclaration","scope":3362,"src":"7269:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:12","nodeType":"VariableDeclaration","scope":3362,"src":"7280:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:12"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"result","nameLocation":"7332:6:12","nodeType":"VariableDeclaration","scope":3362,"src":"7324:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:12"},"scope":4456,"src":"7242:3683:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3398,"nodeType":"Block","src":"11164:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3378,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11188:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3379,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"11191:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3380,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"11194:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3377,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3362,3399],"referencedDeclaration":3362,"src":"11181:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3385,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"11242:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":3384,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"11225:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3388,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11262:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3389,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"11265:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"11268:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3387,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3382,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"11209:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"11209:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3376,"id":3397,"nodeType":"Return","src":"11174:111:12"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"10931:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:12","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"x","nameLocation":"11078:1:12","nodeType":"VariableDeclaration","scope":3399,"src":"11070:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"y","nameLocation":"11089:1:12","nodeType":"VariableDeclaration","scope":3399,"src":"11081:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:12","nodeType":"VariableDeclaration","scope":3399,"src":"11092:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:12","nodeType":"VariableDeclaration","scope":3399,"src":"11113:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":3371,"nodeType":"UserDefinedTypeName","pathNode":{"id":3370,"name":"Rounding","nameLocations":["11113:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"11113:8:12"},"referencedDeclaration":2847,"src":"11113:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:12"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3399,"src":"11155:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:12"},"scope":4456,"src":"11054:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"11500:245:12","statements":[{"id":3447,"nodeType":"UncheckedBlock","src":"11510:229:12","statements":[{"assignments":[3412,3414],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"high","nameLocation":"11543:4:12","nodeType":"VariableDeclaration","scope":3447,"src":"11535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"low","nameLocation":"11557:3:12","nodeType":"VariableDeclaration","scope":3447,"src":"11549:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[{"id":3416,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"11571:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3417,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"11574:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3415,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"11564:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"11594:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3422,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"11607:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3433,"nodeType":"IfStatement","src":"11590:86:12","trueBody":{"id":3432,"nodeType":"Block","src":"11610:66:12","statements":[{"expression":{"arguments":[{"expression":{"id":3428,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11640:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":217,"src":"11640:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3425,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11628:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":253,"src":"11628:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"11628:33:12"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"11697:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3436,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"11712:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11719:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3442,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"11726:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3410,"id":3446,"nodeType":"Return","src":"11689:39:12"}]}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"11298:111:12","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:12","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"x","nameLocation":"11438:1:12","nodeType":"VariableDeclaration","scope":3449,"src":"11430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"y","nameLocation":"11449:1:12","nodeType":"VariableDeclaration","scope":3449,"src":"11441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"n","nameLocation":"11458:1:12","nodeType":"VariableDeclaration","scope":3449,"src":"11452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3405,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:12"},"returnParameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"result","nameLocation":"11492:6:12","nodeType":"VariableDeclaration","scope":3449,"src":"11484:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:12"},"scope":4456,"src":"11414:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"11963:113:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3465,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3466,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3467,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"11993:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3464,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3449,3488],"referencedDeclaration":3449,"src":"11980:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3472,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12031:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":3471,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"12014:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3475,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"12051:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3476,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"12054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3478,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"12062:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3469,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"11998:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"11998:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3463,"id":3486,"nodeType":"Return","src":"11973:96:12"}]},"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"11751:109:12","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:12","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"x","nameLocation":"11889:1:12","nodeType":"VariableDeclaration","scope":3488,"src":"11881:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"y","nameLocation":"11900:1:12","nodeType":"VariableDeclaration","scope":3488,"src":"11892:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"n","nameLocation":"11909:1:12","nodeType":"VariableDeclaration","scope":3488,"src":"11903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3455,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:12","nodeType":"VariableDeclaration","scope":3488,"src":"11912:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":3458,"nodeType":"UserDefinedTypeName","pathNode":{"id":3457,"name":"Rounding","nameLocations":["11912:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"11912:8:12"},"referencedDeclaration":2847,"src":"11912:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:12"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"11954:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:12"},"scope":4456,"src":"11865:211:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"12710:1849:12","statements":[{"id":3583,"nodeType":"UncheckedBlock","src":"12720:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12748:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3503,"nodeType":"IfStatement","src":"12744:20:12","trueBody":{"expression":{"hexValue":"30","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3497,"id":3502,"nodeType":"Return","src":"12756:8:12"}},{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:12","nodeType":"VariableDeclaration","scope":3583,"src":"13235:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"13255:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3507,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"13259:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:12"},{"assignments":[3511],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:12","nodeType":"VariableDeclaration","scope":3583,"src":"13274:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"id":3512,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"13288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:12"},{"assignments":[3515],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"x","nameLocation":"13432:1:12","nodeType":"VariableDeclaration","scope":3583,"src":"13425:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3514,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3517,"initialValue":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:12"},{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"y","nameLocation":"13458:1:12","nodeType":"VariableDeclaration","scope":3583,"src":"13451:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3518,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3521,"initialValue":{"hexValue":"31","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:12"},{"body":{"id":3558,"nodeType":"Block","src":"13501:882:12","statements":[{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:12","nodeType":"VariableDeclaration","scope":3558,"src":"13519:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13538:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3528,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13544:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:12"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3531,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13573:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3532,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13578:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3533,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3534,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13678:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13923:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13929:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3537,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"13941:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3542,"nodeType":"ExpressionStatement","src":"13572:395:12"},{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3543,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"13987:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3544,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"13990:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3545,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3546,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"14072:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"14326:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"14330:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3551,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"14341:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3549,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:12","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3557,"nodeType":"ExpressionStatement","src":"13986:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13485:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"WhileStatement","src":"13478:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"14401:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"14397:22:12","trueBody":{"expression":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3497,"id":3564,"nodeType":"Return","src":"14411:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"14470:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"14477:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:12","subExpression":{"id":3573,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"14490:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:12","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3579,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"14502:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:12","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3566,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"14462:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3497,"id":3582,"nodeType":"Return","src":"14455:50:12"}]}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"12082:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:12","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"a","nameLocation":"12664:1:12","nodeType":"VariableDeclaration","scope":3585,"src":"12656:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"n","nameLocation":"12675:1:12","nodeType":"VariableDeclaration","scope":3585,"src":"12667:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:12"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3585,"src":"12701:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:12"},"scope":4456,"src":"12640:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"15159:82:12","statements":[{"id":3604,"nodeType":"UncheckedBlock","src":"15169:66:12","statements":[{"expression":{"arguments":[{"id":3597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"15212:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"15215:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3601,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"15222:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3595,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"15200:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4456_$","typeString":"type(library Math)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3642,"src":"15200:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3594,"id":3603,"nodeType":"Return","src":"15193:31:12"}]}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"14565:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:12","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"a","nameLocation":"15113:1:12","nodeType":"VariableDeclaration","scope":3606,"src":"15105:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"p","nameLocation":"15124:1:12","nodeType":"VariableDeclaration","scope":3606,"src":"15116:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:12"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"15150:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:12"},"scope":4456,"src":"15084:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"16011:174:12","statements":[{"assignments":[3619,3621],"declarations":[{"constant":false,"id":3619,"mutability":"mutable","name":"success","nameLocation":"16027:7:12","nodeType":"VariableDeclaration","scope":3641,"src":"16022:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3618,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"result","nameLocation":"16044:6:12","nodeType":"VariableDeclaration","scope":3641,"src":"16036:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"initialValue":{"arguments":[{"id":3623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"16064:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3624,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"16067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3625,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"16070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3666,3748],"referencedDeclaration":3666,"src":"16054:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:12"},{"condition":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:12","subExpression":{"id":3628,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"16087:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3638,"nodeType":"IfStatement","src":"16082:74:12","trueBody":{"id":3637,"nodeType":"Block","src":"16096:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3633,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"16122:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":221,"src":"16122:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3630,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"16110:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":253,"src":"16110:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"ExpressionStatement","src":"16110:35:12"}]}},{"expression":{"id":3639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"16172:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3617,"id":3640,"nodeType":"Return","src":"16165:13:12"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"15247:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:12","nodeType":"FunctionDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"b","nameLocation":"15954:1:12","nodeType":"VariableDeclaration","scope":3642,"src":"15946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"e","nameLocation":"15965:1:12","nodeType":"VariableDeclaration","scope":3642,"src":"15957:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"m","nameLocation":"15976:1:12","nodeType":"VariableDeclaration","scope":3642,"src":"15968:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:12"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"16002:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:12"},"scope":4456,"src":"15930:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3665,"nodeType":"Block","src":"17039:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"17053:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"IfStatement","src":"17049:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3655,"id":3662,"nodeType":"Return","src":"17061:17:12"}},{"AST":{"nativeSrc":"17113:1413:12","nodeType":"YulBlock","src":"17113:1413:12","statements":[{"nativeSrc":"17127:22:12","nodeType":"YulVariableDeclaration","src":"17127:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:12","nodeType":"YulLiteral","src":"17144:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:12","nodeType":"YulIdentifier","src":"17138:5:12"},"nativeSrc":"17138:11:12","nodeType":"YulFunctionCall","src":"17138:11:12"},"variables":[{"name":"ptr","nativeSrc":"17131:3:12","nodeType":"YulTypedName","src":"17131:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:12","nodeType":"YulIdentifier","src":"18057:3:12"},{"kind":"number","nativeSrc":"18062:4:12","nodeType":"YulLiteral","src":"18062:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:12","nodeType":"YulIdentifier","src":"18050:6:12"},"nativeSrc":"18050:17:12","nodeType":"YulFunctionCall","src":"18050:17:12"},"nativeSrc":"18050:17:12","nodeType":"YulExpressionStatement","src":"18050:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:12","nodeType":"YulIdentifier","src":"18091:3:12"},{"kind":"number","nativeSrc":"18096:4:12","nodeType":"YulLiteral","src":"18096:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:12","nodeType":"YulIdentifier","src":"18087:3:12"},"nativeSrc":"18087:14:12","nodeType":"YulFunctionCall","src":"18087:14:12"},{"kind":"number","nativeSrc":"18103:4:12","nodeType":"YulLiteral","src":"18103:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:12","nodeType":"YulIdentifier","src":"18080:6:12"},"nativeSrc":"18080:28:12","nodeType":"YulFunctionCall","src":"18080:28:12"},"nativeSrc":"18080:28:12","nodeType":"YulExpressionStatement","src":"18080:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:12","nodeType":"YulIdentifier","src":"18132:3:12"},{"kind":"number","nativeSrc":"18137:4:12","nodeType":"YulLiteral","src":"18137:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:12","nodeType":"YulIdentifier","src":"18128:3:12"},"nativeSrc":"18128:14:12","nodeType":"YulFunctionCall","src":"18128:14:12"},{"kind":"number","nativeSrc":"18144:4:12","nodeType":"YulLiteral","src":"18144:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:12","nodeType":"YulIdentifier","src":"18121:6:12"},"nativeSrc":"18121:28:12","nodeType":"YulFunctionCall","src":"18121:28:12"},"nativeSrc":"18121:28:12","nodeType":"YulExpressionStatement","src":"18121:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:12","nodeType":"YulIdentifier","src":"18173:3:12"},{"kind":"number","nativeSrc":"18178:4:12","nodeType":"YulLiteral","src":"18178:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:12","nodeType":"YulIdentifier","src":"18169:3:12"},"nativeSrc":"18169:14:12","nodeType":"YulFunctionCall","src":"18169:14:12"},{"name":"b","nativeSrc":"18185:1:12","nodeType":"YulIdentifier","src":"18185:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:12","nodeType":"YulIdentifier","src":"18162:6:12"},"nativeSrc":"18162:25:12","nodeType":"YulFunctionCall","src":"18162:25:12"},"nativeSrc":"18162:25:12","nodeType":"YulExpressionStatement","src":"18162:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:12","nodeType":"YulIdentifier","src":"18211:3:12"},{"kind":"number","nativeSrc":"18216:4:12","nodeType":"YulLiteral","src":"18216:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:12","nodeType":"YulIdentifier","src":"18207:3:12"},"nativeSrc":"18207:14:12","nodeType":"YulFunctionCall","src":"18207:14:12"},{"name":"e","nativeSrc":"18223:1:12","nodeType":"YulIdentifier","src":"18223:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:12","nodeType":"YulIdentifier","src":"18200:6:12"},"nativeSrc":"18200:25:12","nodeType":"YulFunctionCall","src":"18200:25:12"},"nativeSrc":"18200:25:12","nodeType":"YulExpressionStatement","src":"18200:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:12","nodeType":"YulIdentifier","src":"18249:3:12"},{"kind":"number","nativeSrc":"18254:4:12","nodeType":"YulLiteral","src":"18254:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:12","nodeType":"YulIdentifier","src":"18245:3:12"},"nativeSrc":"18245:14:12","nodeType":"YulFunctionCall","src":"18245:14:12"},{"name":"m","nativeSrc":"18261:1:12","nodeType":"YulIdentifier","src":"18261:1:12"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:12","nodeType":"YulIdentifier","src":"18238:6:12"},"nativeSrc":"18238:25:12","nodeType":"YulFunctionCall","src":"18238:25:12"},"nativeSrc":"18238:25:12","nodeType":"YulExpressionStatement","src":"18238:25:12"},{"nativeSrc":"18425:57:12","nodeType":"YulAssignment","src":"18425:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:12","nodeType":"YulIdentifier","src":"18447:3:12"},"nativeSrc":"18447:5:12","nodeType":"YulFunctionCall","src":"18447:5:12"},{"kind":"number","nativeSrc":"18454:4:12","nodeType":"YulLiteral","src":"18454:4:12","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:12","nodeType":"YulIdentifier","src":"18460:3:12"},{"kind":"number","nativeSrc":"18465:4:12","nodeType":"YulLiteral","src":"18465:4:12","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:12","nodeType":"YulLiteral","src":"18471:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:12","nodeType":"YulLiteral","src":"18477:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:12","nodeType":"YulIdentifier","src":"18436:10:12"},"nativeSrc":"18436:46:12","nodeType":"YulFunctionCall","src":"18436:46:12"},"variableNames":[{"name":"success","nativeSrc":"18425:7:12","nodeType":"YulIdentifier","src":"18425:7:12"}]},{"nativeSrc":"18495:21:12","nodeType":"YulAssignment","src":"18495:21:12","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:12","nodeType":"YulLiteral","src":"18511:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:12","nodeType":"YulIdentifier","src":"18505:5:12"},"nativeSrc":"18505:11:12","nodeType":"YulFunctionCall","src":"18505:11:12"},"variableNames":[{"name":"result","nativeSrc":"18495:6:12","nodeType":"YulIdentifier","src":"18495:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3645,"isOffset":false,"isSlot":false,"src":"18185:1:12","valueSize":1},{"declaration":3647,"isOffset":false,"isSlot":false,"src":"18223:1:12","valueSize":1},{"declaration":3649,"isOffset":false,"isSlot":false,"src":"18261:1:12","valueSize":1},{"declaration":3654,"isOffset":false,"isSlot":false,"src":"18495:6:12","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"18425:7:12","valueSize":1}],"flags":["memory-safe"],"id":3664,"nodeType":"InlineAssembly","src":"17088:1438:12"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"16191:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:12","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"b","nameLocation":"16961:1:12","nodeType":"VariableDeclaration","scope":3666,"src":"16953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"e","nameLocation":"16972:1:12","nodeType":"VariableDeclaration","scope":3666,"src":"16964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"m","nameLocation":"16983:1:12","nodeType":"VariableDeclaration","scope":3666,"src":"16975:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:12"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"success","nameLocation":"17014:7:12","nodeType":"VariableDeclaration","scope":3666,"src":"17009:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3651,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"result","nameLocation":"17031:6:12","nodeType":"VariableDeclaration","scope":3666,"src":"17023:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:12"},"scope":4456,"src":"16934:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3701,"nodeType":"Block","src":"18729:179:12","statements":[{"assignments":[3679,3681],"declarations":[{"constant":false,"id":3679,"mutability":"mutable","name":"success","nameLocation":"18745:7:12","nodeType":"VariableDeclaration","scope":3701,"src":"18740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3678,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"result","nameLocation":"18767:6:12","nodeType":"VariableDeclaration","scope":3701,"src":"18754:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3680,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3687,"initialValue":{"arguments":[{"id":3683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"18787:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3684,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"18790:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3685,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"18793:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3682,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3666,3748],"referencedDeclaration":3748,"src":"18777:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:12"},{"condition":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:12","subExpression":{"id":3688,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"18810:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"IfStatement","src":"18805:74:12","trueBody":{"id":3697,"nodeType":"Block","src":"18819:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"18845:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":221,"src":"18845:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3690,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"18833:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$254_$","typeString":"type(library Panic)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":253,"src":"18833:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3696,"nodeType":"ExpressionStatement","src":"18833:35:12"}]}},{"expression":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"18895:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3677,"id":3700,"nodeType":"Return","src":"18888:13:12"}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"18538:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:12","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"b","nameLocation":"18657:1:12","nodeType":"VariableDeclaration","scope":3702,"src":"18644:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3668,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"e","nameLocation":"18673:1:12","nodeType":"VariableDeclaration","scope":3702,"src":"18660:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3670,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"m","nameLocation":"18689:1:12","nodeType":"VariableDeclaration","scope":3702,"src":"18676:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:12"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"18715:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3675,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:12"},"scope":4456,"src":"18628:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"19162:771:12","statements":[{"condition":{"arguments":[{"id":3717,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"19187:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3716,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"19176:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3726,"nodeType":"IfStatement","src":"19172:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3720,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3715,"id":3725,"nodeType":"Return","src":"19191:28:12"}},{"assignments":[3728],"declarations":[{"constant":false,"id":3728,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:12","nodeType":"VariableDeclaration","scope":3747,"src":"19230:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3731,"initialValue":{"expression":{"id":3729,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"19245:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:12","memberName":"length","nodeType":"MemberAccess","src":"19245:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:12"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"19335:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"19361:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:12","memberName":"length","nodeType":"MemberAccess","src":"19361:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3737,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"19371:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:12","memberName":"length","nodeType":"MemberAccess","src":"19371:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3739,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"19381:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"19387:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3741,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3742,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"19393:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3733,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3745,"nodeType":"ExpressionStatement","src":"19335:60:12"},{"AST":{"nativeSrc":"19431:496:12","nodeType":"YulBlock","src":"19431:496:12","statements":[{"nativeSrc":"19445:32:12","nodeType":"YulVariableDeclaration","src":"19445:32:12","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:12","nodeType":"YulIdentifier","src":"19464:6:12"},{"kind":"number","nativeSrc":"19472:4:12","nodeType":"YulLiteral","src":"19472:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:12","nodeType":"YulIdentifier","src":"19460:3:12"},"nativeSrc":"19460:17:12","nodeType":"YulFunctionCall","src":"19460:17:12"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:12","nodeType":"YulTypedName","src":"19449:7:12","type":""}]},{"nativeSrc":"19567:73:12","nodeType":"YulAssignment","src":"19567:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:12","nodeType":"YulIdentifier","src":"19589:3:12"},"nativeSrc":"19589:5:12","nodeType":"YulFunctionCall","src":"19589:5:12"},{"kind":"number","nativeSrc":"19596:4:12","nodeType":"YulLiteral","src":"19596:4:12","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:12","nodeType":"YulIdentifier","src":"19602:7:12"},{"arguments":[{"name":"result","nativeSrc":"19617:6:12","nodeType":"YulIdentifier","src":"19617:6:12"}],"functionName":{"name":"mload","nativeSrc":"19611:5:12","nodeType":"YulIdentifier","src":"19611:5:12"},"nativeSrc":"19611:13:12","nodeType":"YulFunctionCall","src":"19611:13:12"},{"name":"dataPtr","nativeSrc":"19626:7:12","nodeType":"YulIdentifier","src":"19626:7:12"},{"name":"mLen","nativeSrc":"19635:4:12","nodeType":"YulIdentifier","src":"19635:4:12"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:12","nodeType":"YulIdentifier","src":"19578:10:12"},"nativeSrc":"19578:62:12","nodeType":"YulFunctionCall","src":"19578:62:12"},"variableNames":[{"name":"success","nativeSrc":"19567:7:12","nodeType":"YulIdentifier","src":"19567:7:12"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:12","nodeType":"YulIdentifier","src":"19796:6:12"},{"name":"mLen","nativeSrc":"19804:4:12","nodeType":"YulIdentifier","src":"19804:4:12"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:12","nodeType":"YulIdentifier","src":"19789:6:12"},"nativeSrc":"19789:20:12","nodeType":"YulFunctionCall","src":"19789:20:12"},"nativeSrc":"19789:20:12","nodeType":"YulExpressionStatement","src":"19789:20:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:12","nodeType":"YulLiteral","src":"19892:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:12","nodeType":"YulIdentifier","src":"19902:7:12"},{"name":"mLen","nativeSrc":"19911:4:12","nodeType":"YulIdentifier","src":"19911:4:12"}],"functionName":{"name":"add","nativeSrc":"19898:3:12","nodeType":"YulIdentifier","src":"19898:3:12"},"nativeSrc":"19898:18:12","nodeType":"YulFunctionCall","src":"19898:18:12"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:12","nodeType":"YulIdentifier","src":"19885:6:12"},"nativeSrc":"19885:32:12","nodeType":"YulFunctionCall","src":"19885:32:12"},"nativeSrc":"19885:32:12","nodeType":"YulExpressionStatement","src":"19885:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3728,"isOffset":false,"isSlot":false,"src":"19635:4:12","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"19804:4:12","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"19911:4:12","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"19464:6:12","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"19617:6:12","valueSize":1},{"declaration":3714,"isOffset":false,"isSlot":false,"src":"19796:6:12","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"19567:7:12","valueSize":1}],"flags":["memory-safe"],"id":3746,"nodeType":"InlineAssembly","src":"19406:521:12"}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"18914:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:12","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"b","nameLocation":"19048:1:12","nodeType":"VariableDeclaration","scope":3748,"src":"19035:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"e","nameLocation":"19072:1:12","nodeType":"VariableDeclaration","scope":3748,"src":"19059:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3706,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"m","nameLocation":"19096:1:12","nodeType":"VariableDeclaration","scope":3748,"src":"19083:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3708,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:12"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"success","nameLocation":"19132:7:12","nodeType":"VariableDeclaration","scope":3748,"src":"19127:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3711,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"result","nameLocation":"19154:6:12","nodeType":"VariableDeclaration","scope":3748,"src":"19141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3713,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:12"},"scope":4456,"src":"19007:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3780,"nodeType":"Block","src":"20088:176:12","statements":[{"body":{"id":3776,"nodeType":"Block","src":"20145:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3767,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"20163:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3769,"indexExpression":{"id":3768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"20173:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3775,"nodeType":"IfStatement","src":"20159:68:12","trueBody":{"id":3774,"nodeType":"Block","src":"20182:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3755,"id":3773,"nodeType":"Return","src":"20200:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"20118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3761,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"20122:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:12","memberName":"length","nodeType":"MemberAccess","src":"20122:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3777,"initializationExpression":{"assignments":[3757],"declarations":[{"constant":false,"id":3757,"mutability":"mutable","name":"i","nameLocation":"20111:1:12","nodeType":"VariableDeclaration","scope":3777,"src":"20103:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3759,"initialValue":{"hexValue":"30","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:12","subExpression":{"id":3764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"20142:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3766,"nodeType":"ExpressionStatement","src":"20140:3:12"},"nodeType":"ForStatement","src":"20098:139:12"},{"expression":{"hexValue":"74727565","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3755,"id":3779,"nodeType":"Return","src":"20246:11:12"}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"19939:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:12","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:12","nodeType":"VariableDeclaration","scope":3781,"src":"20036:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3750,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:12"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3781,"src":"20082:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3753,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:12"},"scope":4456,"src":"20016:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3999,"nodeType":"Block","src":"20624:5124:12","statements":[{"id":3998,"nodeType":"UncheckedBlock","src":"20634:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"20728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"20724:53:12","trueBody":{"id":3794,"nodeType":"Block","src":"20736:41:12","statements":[{"expression":{"id":3792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"20761:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3788,"id":3793,"nodeType":"Return","src":"20754:8:12"}]}},{"assignments":[3797],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"aa","nameLocation":"21712:2:12","nodeType":"VariableDeclaration","scope":3998,"src":"21704:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3799,"initialValue":{"id":3798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"21717:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:12"},{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"xn","nameLocation":"21740:2:12","nodeType":"VariableDeclaration","scope":3998,"src":"21732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3803,"initialValue":{"hexValue":"31","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"21765:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"IfStatement","src":"21761:92:12","trueBody":{"id":3818,"nodeType":"Block","src":"21783:70:12","statements":[{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3810,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"21801:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ExpressionStatement","src":"21801:10:12"},{"expression":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3814,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"21829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"nodeType":"ExpressionStatement","src":"21829:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"21870:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3835,"nodeType":"IfStatement","src":"21866:90:12","trueBody":{"id":3834,"nodeType":"Block","src":"21887:69:12","statements":[{"expression":{"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"21905:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"nodeType":"ExpressionStatement","src":"21905:9:12"},{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"21932:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"21932:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"21973:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"21969:90:12","trueBody":{"id":3850,"nodeType":"Block","src":"21990:69:12","statements":[{"expression":{"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3842,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22008:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3845,"nodeType":"ExpressionStatement","src":"22008:9:12"},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22035:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3849,"nodeType":"ExpressionStatement","src":"22035:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22076:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3867,"nodeType":"IfStatement","src":"22072:89:12","trueBody":{"id":3866,"nodeType":"Block","src":"22093:68:12","statements":[{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22111:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3861,"nodeType":"ExpressionStatement","src":"22111:9:12"},{"expression":{"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22138:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3865,"nodeType":"ExpressionStatement","src":"22138:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22178:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"nodeType":"IfStatement","src":"22174:87:12","trueBody":{"id":3882,"nodeType":"Block","src":"22194:67:12","statements":[{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3874,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22212:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"22212:8:12"},{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22238:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"22238:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"22274:87:12","trueBody":{"id":3898,"nodeType":"Block","src":"22294:67:12","statements":[{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22312:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ExpressionStatement","src":"22312:8:12"},{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22338:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"22338:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"22378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3911,"nodeType":"IfStatement","src":"22374:61:12","trueBody":{"id":3910,"nodeType":"Block","src":"22394:41:12","statements":[{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22412:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"22412:8:12"}]}},{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22855:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"22865:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3920,"nodeType":"ExpressionStatement","src":"22855:18:12"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24760:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24766:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24771:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24775:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"24760:23:12"},{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24869:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24875:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24880:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24884:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3942,"nodeType":"ExpressionStatement","src":"24869:23:12"},{"expression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3943,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24980:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24986:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24991:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"24995:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ExpressionStatement","src":"24980:23:12"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25089:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25095:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25100:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3957,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25104:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"25089:23:12"},{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25199:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25205:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25210:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3968,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25214:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"nodeType":"ExpressionStatement","src":"25199:23:12"},{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25309:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3977,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25315:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25320:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3979,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25324:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ExpressionStatement","src":"25309:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25698:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25719:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"25724:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3992,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3988,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"25703:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"25703:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3788,"id":3997,"nodeType":"Return","src":"25691:40:12"}]}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"20270:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:12","nodeType":"FunctionDefinition","parameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"a","nameLocation":"20589:1:12","nodeType":"VariableDeclaration","scope":4000,"src":"20581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:12"},"returnParameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4000,"src":"20615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:12"},"scope":4456,"src":"20567:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4033,"nodeType":"Block","src":"25921:171:12","statements":[{"id":4032,"nodeType":"UncheckedBlock","src":"25931:155:12","statements":[{"assignments":[4012],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"result","nameLocation":"25963:6:12","nodeType":"VariableDeclaration","scope":4032,"src":"25955:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"initialValue":{"arguments":[{"id":4014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"25977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4000,4034],"referencedDeclaration":4000,"src":"25972:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26000:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4021,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"26042:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":4020,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26025:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26055:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26064:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"26073:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4018,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26009:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26009:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4031,"nodeType":"Return","src":"25993:82:12"}]}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"25754:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:12","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"a","nameLocation":"25867:1:12","nodeType":"VariableDeclaration","scope":4034,"src":"25859:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:12","nodeType":"VariableDeclaration","scope":4034,"src":"25870:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":4005,"nodeType":"UserDefinedTypeName","pathNode":{"id":4004,"name":"Rounding","nameLocations":["25870:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"25870:8:12"},"referencedDeclaration":2847,"src":"25870:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:12"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4034,"src":"25912:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:12"},"scope":4456,"src":"25845:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"26281:2334:12","statements":[{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4042,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26363:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26383:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4043,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26367:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26367:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"26363:64:12"},{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26503:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26525:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4057,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26530:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4054,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26508:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26508:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4066,"nodeType":"ExpressionStatement","src":"26503:56:12"},{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4067,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26634:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26656:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4071,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26661:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4068,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26639:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26639:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"26634:48:12"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26757:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26779:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4085,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26784:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4082,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26762:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26762:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"26757:44:12"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26874:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4099,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26901:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4096,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26879:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26879:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"26874:42:12"},{"expression":{"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"26988:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"27010:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"27015:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4110,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"26993:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"26993:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4122,"nodeType":"ExpressionStatement","src":"26988:41:12"},{"AST":{"nativeSrc":"28490:119:12","nodeType":"YulBlock","src":"28490:119:12","statements":[{"nativeSrc":"28504:95:12","nodeType":"YulAssignment","src":"28504:95:12","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:12","nodeType":"YulIdentifier","src":"28512:1:12"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:12","nodeType":"YulIdentifier","src":"28524:1:12"},{"name":"x","nativeSrc":"28527:1:12","nodeType":"YulIdentifier","src":"28527:1:12"}],"functionName":{"name":"shr","nativeSrc":"28520:3:12","nodeType":"YulIdentifier","src":"28520:3:12"},"nativeSrc":"28520:9:12","nodeType":"YulFunctionCall","src":"28520:9:12"},{"kind":"number","nativeSrc":"28531:66:12","nodeType":"YulLiteral","src":"28531:66:12","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:12","nodeType":"YulIdentifier","src":"28515:4:12"},"nativeSrc":"28515:83:12","nodeType":"YulFunctionCall","src":"28515:83:12"}],"functionName":{"name":"or","nativeSrc":"28509:2:12","nodeType":"YulIdentifier","src":"28509:2:12"},"nativeSrc":"28509:90:12","nodeType":"YulFunctionCall","src":"28509:90:12"},"variableNames":[{"name":"r","nativeSrc":"28504:1:12","nodeType":"YulIdentifier","src":"28504:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4040,"isOffset":false,"isSlot":false,"src":"28504:1:12","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"28512:1:12","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"28524:1:12","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"28527:1:12","valueSize":1}],"flags":["memory-safe"],"id":4123,"nodeType":"InlineAssembly","src":"28465:144:12"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"26098:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:12","nodeType":"FunctionDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"x","nameLocation":"26244:1:12","nodeType":"VariableDeclaration","scope":4125,"src":"26236:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:12"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"r","nameLocation":"26278:1:12","nodeType":"VariableDeclaration","scope":4125,"src":"26270:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:12"},"scope":4456,"src":"26222:2393:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"28848:175:12","statements":[{"id":4157,"nodeType":"UncheckedBlock","src":"28858:159:12","statements":[{"assignments":[4137],"declarations":[{"constant":false,"id":4137,"mutability":"mutable","name":"result","nameLocation":"28890:6:12","nodeType":"VariableDeclaration","scope":4157,"src":"28882:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4141,"initialValue":{"arguments":[{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"28904:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4138,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4125,4159],"referencedDeclaration":4125,"src":"28899:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"28931:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"28973:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":4145,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"28956:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"28991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"29000:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"28940:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"28940:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4135,"id":4156,"nodeType":"Return","src":"28924:82:12"}]}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"28621:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:12","nodeType":"FunctionDefinition","parameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"value","nameLocation":"28790:5:12","nodeType":"VariableDeclaration","scope":4159,"src":"28782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4131,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:12","nodeType":"VariableDeclaration","scope":4159,"src":"28797:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":4130,"nodeType":"UserDefinedTypeName","pathNode":{"id":4129,"name":"Rounding","nameLocations":["28797:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"28797:8:12"},"referencedDeclaration":2847,"src":"28797:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:12"},"returnParameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"28839:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:12"},"scope":4456,"src":"28768:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4287,"nodeType":"Block","src":"29216:854:12","statements":[{"assignments":[4168],"declarations":[{"constant":false,"id":4168,"mutability":"mutable","name":"result","nameLocation":"29234:6:12","nodeType":"VariableDeclaration","scope":4287,"src":"29226:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4170,"initialValue":{"hexValue":"30","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:12"},{"id":4284,"nodeType":"UncheckedBlock","src":"29254:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29282:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4187,"nodeType":"IfStatement","src":"29278:103:12","trueBody":{"id":4186,"nodeType":"Block","src":"29301:80:12","statements":[{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29319:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"29319:17:12"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"29354:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29398:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4204,"nodeType":"IfStatement","src":"29394:103:12","trueBody":{"id":4203,"nodeType":"Block","src":"29417:80:12","statements":[{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29435:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"29435:17:12"},{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29470:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ExpressionStatement","src":"29470:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4221,"nodeType":"IfStatement","src":"29510:103:12","trueBody":{"id":4220,"nodeType":"Block","src":"29533:80:12","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"29551:17:12"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29586:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4219,"nodeType":"ExpressionStatement","src":"29586:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29630:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"29626:100:12","trueBody":{"id":4237,"nodeType":"Block","src":"29648:78:12","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29666:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"29666:16:12"},{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29700:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4236,"nodeType":"ExpressionStatement","src":"29700:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4255,"nodeType":"IfStatement","src":"29739:100:12","trueBody":{"id":4254,"nodeType":"Block","src":"29761:78:12","statements":[{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29779:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"29779:16:12"},{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29813:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ExpressionStatement","src":"29813:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29856:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"nodeType":"IfStatement","src":"29852:100:12","trueBody":{"id":4271,"nodeType":"Block","src":"29874:78:12","statements":[{"expression":{"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29892:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"nodeType":"ExpressionStatement","src":"29892:16:12"},{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29926:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"29926:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"29969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4283,"nodeType":"IfStatement","src":"29965:66:12","trueBody":{"id":4282,"nodeType":"Block","src":"29987:44:12","statements":[{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"30005:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"30005:11:12"}]}}]},{"expression":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"30057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4166,"id":4286,"nodeType":"Return","src":"30050:13:12"}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"29029:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4288,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:12","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"value","nameLocation":"29177:5:12","nodeType":"VariableDeclaration","scope":4288,"src":"29169:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:12"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4288,"src":"29207:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:12"},"scope":4456,"src":"29154:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"30305:177:12","statements":[{"id":4320,"nodeType":"UncheckedBlock","src":"30315:161:12","statements":[{"assignments":[4300],"declarations":[{"constant":false,"id":4300,"mutability":"mutable","name":"result","nameLocation":"30347:6:12","nodeType":"VariableDeclaration","scope":4320,"src":"30339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4304,"initialValue":{"arguments":[{"id":4302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4301,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4288,4322],"referencedDeclaration":4288,"src":"30356:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"30389:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4309,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"30431:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":4308,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"30414:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"30450:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"30459:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4306,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"30398:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"30398:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4298,"id":4319,"nodeType":"Return","src":"30382:83:12"}]}]},"documentation":{"id":4289,"nodeType":"StructuredDocumentation","src":"30076:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:12","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"value","nameLocation":"30247:5:12","nodeType":"VariableDeclaration","scope":4322,"src":"30239:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:12","nodeType":"VariableDeclaration","scope":4322,"src":"30254:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":4293,"nodeType":"UserDefinedTypeName","pathNode":{"id":4292,"name":"Rounding","nameLocations":["30254:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"30254:8:12"},"referencedDeclaration":2847,"src":"30254:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:12"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4322,"src":"30296:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:12"},"scope":4456,"src":"30224:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4398,"nodeType":"Block","src":"30800:675:12","statements":[{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"30882:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"30902:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4331,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"30886:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"30886:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"30882:64:12"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"31044:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4345,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31049:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4342,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"31027:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"31027:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"31022:56:12"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31153:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"31175:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4359,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31180:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4356,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"31158:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"31158:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"31153:48:12"},{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31276:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"31298:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4373,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31303:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4370,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"31281:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"31281:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"31276:44:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31426:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"31453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4390,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4387,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"31436:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"31436:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4329,"id":4397,"nodeType":"Return","src":"31418:50:12"}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"30488:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:12","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"x","nameLocation":"30763:1:12","nodeType":"VariableDeclaration","scope":4399,"src":"30755:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:12"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"r","nameLocation":"30797:1:12","nodeType":"VariableDeclaration","scope":4399,"src":"30789:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:12"},"scope":4456,"src":"30739:736:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"31712:184:12","statements":[{"id":4434,"nodeType":"UncheckedBlock","src":"31722:168:12","statements":[{"assignments":[4411],"declarations":[{"constant":false,"id":4411,"mutability":"mutable","name":"result","nameLocation":"31754:6:12","nodeType":"VariableDeclaration","scope":4434,"src":"31746:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4415,"initialValue":{"arguments":[{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"31770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4412,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4399,4436],"referencedDeclaration":4399,"src":"31763:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"31797:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4420,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"31839:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":4419,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"31822:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2847_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"31873:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4417,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"31806:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"31806:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4409,"id":4433,"nodeType":"Return","src":"31790:89:12"}]}]},"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"31481:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:12","nodeType":"FunctionDefinition","parameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"value","nameLocation":"31654:5:12","nodeType":"VariableDeclaration","scope":4436,"src":"31646:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4405,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:12","nodeType":"VariableDeclaration","scope":4436,"src":"31661:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":4404,"nodeType":"UserDefinedTypeName","pathNode":{"id":4403,"name":"Rounding","nameLocations":["31661:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"31661:8:12"},"referencedDeclaration":2847,"src":"31661:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:12"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4436,"src":"31703:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:12"},"scope":4456,"src":"31630:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4454,"nodeType":"Block","src":"32094:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4447,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"32117:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4445,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:12","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4444,"id":4453,"nodeType":"Return","src":"32104:31:12"}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"31902:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4455,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:12","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:12","nodeType":"VariableDeclaration","scope":4455,"src":"32046:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"},"typeName":{"id":4439,"nodeType":"UserDefinedTypeName","pathNode":{"id":4438,"name":"Rounding","nameLocations":["32046:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2847,"src":"32046:8:12"},"referencedDeclaration":2847,"src":"32046:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2847","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:12"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4455,"src":"32088:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:12"},"scope":4456,"src":"32020:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4457,"src":"281:31863:12","usedErrors":[],"usedEvents":[]}],"src":"103:32042:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6221]},"id":6222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4458,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4459,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6221,"linearizedBaseContracts":[6221],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4460,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4466,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4466,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4461,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4466,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4471,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4471,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4468,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4478,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4478,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4473,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4478,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4475,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4483,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4483,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4510,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4493,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4504,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4503,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4502,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4505,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4490,"id":4509,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4511,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4511,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4488,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":6221,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4538,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4521,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4532,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4531,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4530,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4533,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4518,"id":4537,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4539,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4539,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4516,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":6221,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4549,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4560,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4559,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4558,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4561,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4546,"id":4565,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4567,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4544,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":6221,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4577,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4588,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4587,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4586,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4589,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4574,"id":4593,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4595,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4595,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4572,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":6221,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4605,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4616,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4615,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4614,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4617,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4602,"id":4621,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4623,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4623,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4600,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":6221,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4633,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4644,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4643,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4642,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4645,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4630,"id":4649,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4624,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4651,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4628,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":6221,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4678,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4661,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4672,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4671,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4670,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4673,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4658,"id":4677,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4679,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4656,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":6221,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4689,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4700,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":4699,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4698,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4701,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4686,"id":4705,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":4707,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4707,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4684,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":6221,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4734,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4717,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4728,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":4727,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4726,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":4731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4729,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4714,"id":4733,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":4735,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4735,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4712,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":6221,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4745,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4756,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":4755,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4754,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4757,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4742,"id":4761,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":4763,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4740,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":6221,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4790,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4773,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4784,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":4783,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4782,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4785,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4770,"id":4789,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":4791,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4791,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4768,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":6221,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4818,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4801,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":4811,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4810,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4813,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4798,"id":4817,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":4819,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4796,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":6221,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4846,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4829,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4840,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":4839,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4838,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4841,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4826,"id":4845,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":4820,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":4847,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4824,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":6221,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4857,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4868,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":4867,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4866,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4869,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4854,"id":4873,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":4875,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4852,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":6221,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4902,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4885,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4896,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":4895,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4894,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4897,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4882,"id":4901,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":4903,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4903,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4880,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":6221,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4930,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4913,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4924,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":4923,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4922,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4925,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4910,"id":4929,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":4904,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":4931,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4931,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4908,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":6221,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4941,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4952,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":4951,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4950,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4953,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4938,"id":4957,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":4959,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4959,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4936,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":6221,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4986,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4969,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":4979,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4974,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4978,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4981,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4966,"id":4985,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":4987,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4987,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4964,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":6221,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5014,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4997,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5008,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":5007,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5006,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":5011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5009,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4994,"id":5013,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":4988,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5015,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":5015,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5015,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4992,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":6221,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5042,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5025,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":5035,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5030,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5034,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5037,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5022,"id":5041,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":5016,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5043,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":5043,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5043,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5020,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":6221,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5070,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5053,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5064,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":5063,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5058,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5062,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5065,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5050,"id":5069,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":5044,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5071,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":5071,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5071,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5048,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":6221,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5098,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5081,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5080,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5092,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":5091,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5086,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5090,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5093,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5078,"id":5097,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":5099,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5076,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":6221,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5126,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5109,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5120,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":5119,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5114,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5118,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5121,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5106,"id":5125,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":5127,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5127,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5104,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":6221,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5154,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5137,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5148,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":5147,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5146,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5149,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5134,"id":5153,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5155,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":5155,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5155,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5132,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":6221,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5182,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5165,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5164,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5176,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":5175,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5174,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5177,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5162,"id":5181,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5183,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":5183,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5183,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5160,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":6221,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5210,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5193,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5204,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":5203,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5202,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5205,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5190,"id":5209,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":5184,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5211,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":5211,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5211,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5188,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":6221,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5238,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5221,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5232,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":5231,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5226,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5230,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5233,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5218,"id":5237,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":5212,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5214,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":5239,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5239,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5216,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":6221,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5266,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5249,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5260,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":5259,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5254,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5258,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5261,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5246,"id":5265,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":5240,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":5267,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5267,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5244,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":6221,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5294,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5277,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5288,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":5287,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5282,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5286,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5289,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5274,"id":5293,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5295,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":5295,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5272,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":6221,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5322,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5305,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5304,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5316,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":5315,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5310,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5314,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5317,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5302,"id":5321,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5323,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":5323,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5300,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":6221,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5333,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5344,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5343,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5338,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5342,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5345,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5330,"id":5349,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":5324,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5351,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5351,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5328,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":6221,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5373,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5367,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5366,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5362,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5365,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5358,"id":5372,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5374,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5353,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5374,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":6221,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5383,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5388,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5397,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5396,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5400,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5376,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5400,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5379,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":6221,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5409,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5414,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5423,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5422,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5426,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5402,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5426,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5405,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":6221,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5435,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5440,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5450,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5449,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5448,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5452,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5428,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5452,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5431,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":6221,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5477,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5461,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5466,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5475,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5478,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5454,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5478,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5457,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":6221,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5503,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5487,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5492,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5502,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5501,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5500,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5479,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5504,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5480,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5504,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5483,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":6221,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5513,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5518,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5528,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5527,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5526,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5505,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5530,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5506,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5530,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5509,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":6221,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5555,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5539,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5544,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5554,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5553,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5552,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5556,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5532,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5556,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5535,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":6221,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5565,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5570,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5580,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5579,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5578,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5557,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5582,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5558,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5582,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5561,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":6221,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5607,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5591,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5596,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5606,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5605,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5604,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5608,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5584,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5608,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5587,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":6221,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5633,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5617,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5622,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5632,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5631,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5630,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5634,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5610,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5634,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5613,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":6221,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5643,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5648,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5657,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5656,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5660,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5636,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5660,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5639,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":6221,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5669,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5674,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5683,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5682,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5686,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5662,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5686,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5665,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":6221,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5711,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5695,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5700,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5710,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":5709,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5708,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":5712,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5688,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":5712,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5691,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":6221,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5721,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5726,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":5735,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5734,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":5713,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":5738,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5714,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":5738,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5717,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":6221,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5747,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5752,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":5761,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5756,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5760,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":5764,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5740,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":5764,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5743,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":6221,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5789,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5773,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5778,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5788,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":5787,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5782,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5786,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":5790,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5766,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":5790,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5769,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":6221,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5799,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5804,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5814,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":5813,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5808,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5812,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":5791,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":5816,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5792,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":5816,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5795,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":6221,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5841,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5825,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5830,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":5839,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5834,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5838,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":5842,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5818,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":5842,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5821,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":6221,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5867,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5851,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5856,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5866,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":5865,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5860,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5864,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5868,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":5868,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5844,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":5868,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5847,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":6221,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5893,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5877,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5882,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":5891,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5886,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5890,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":5869,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5894,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":5894,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5870,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":5894,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5873,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":6221,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5919,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5903,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5908,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5918,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":5917,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5912,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5916,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":5920,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5896,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":5920,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5899,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":6221,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5945,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5929,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5934,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5944,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":5943,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5938,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5942,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":5921,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5946,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":5946,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5922,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":5946,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5925,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":6221,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5971,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5955,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5960,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5970,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":5969,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5964,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5968,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":5947,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5972,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":5972,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5948,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":5972,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5951,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":6221,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5997,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5981,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5986,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":5995,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5990,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5994,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":5973,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":5998,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5974,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":5998,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5977,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":6221,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6023,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6007,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6012,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6022,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":6021,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6016,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6020,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":5999,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":6024,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6000,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":6024,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6003,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":6221,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6033,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6038,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6048,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":6047,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6042,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6046,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":6025,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":6050,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6026,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":6050,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6029,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":6221,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6075,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6059,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6064,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":6073,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6068,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6072,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":6076,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6052,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":6076,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6055,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":6221,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6101,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6085,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6090,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6100,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":6099,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6094,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6098,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":6077,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6079,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":6102,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6078,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":6102,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6081,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":6221,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6111,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6116,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6126,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":6125,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6120,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6124,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":6103,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":6128,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6104,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":6128,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6107,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":6221,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6153,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6137,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6142,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6152,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":6151,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6146,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6150,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6154,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":6154,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6130,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":6154,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6133,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":6221,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6179,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6163,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6168,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6178,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":6177,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6172,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6176,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":6155,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":6180,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6156,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":6180,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6159,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":6221,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6209,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6191,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6189,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6203,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":6202,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6201,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6204,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6187,"id":6208,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":6181,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":6210,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6182,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6210,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6185,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":6221,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6219,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nativeSrc":"34888:46:13","nodeType":"YulBlock","src":"34888:46:13","statements":[{"nativeSrc":"34902:22:13","nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:13","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:13","nodeType":"YulIdentifier","src":"34914:6:13"},"nativeSrc":"34914:9:13","nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:13","nodeType":"YulIdentifier","src":"34907:6:13"},"nativeSrc":"34907:17:13","nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nativeSrc":"34902:1:13","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6213,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":6216,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":6218,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":6211,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":6220,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6212,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":6220,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":6221,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6222,"src":"769:34173:13","usedErrors":[4466,4471,4478,4483],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6221],"SignedMath":[6365]},"id":6366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6223,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6366,"sourceUnit":6222,"src":"135:40:14","symbolAliases":[{"foreign":{"id":6224,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6365,"linearizedBaseContracts":[6365],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":6255,"nodeType":"Block","src":"746:215:14","statements":[{"id":6254,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6247,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6245,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6221_$","typeString":"type(library SafeCast)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6243,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6237,"id":6253,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":6227,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":6256,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6228,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6231,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":6256,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6230,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6233,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":6256,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6232,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6256,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6235,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6365,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6274,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6266,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6265,"id":6273,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":6275,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":6275,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6258,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6261,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":6275,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6260,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6275,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6263,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6365,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6293,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6285,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6284,"id":6292,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":6276,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":6294,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6277,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6280,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":6294,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6279,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6294,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6282,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6365,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[6305],"declarations":[{"constant":false,"id":6305,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6337,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6304,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6318,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6324,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6320,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6303,"id":6336,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6338,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6299,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6338,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6298,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6338,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6301,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6365,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6362,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6347],"declarations":[{"constant":false,"id":6347,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6362,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6346,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6351,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6348,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6355,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6358,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6345,"id":6361,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6364,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6340,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6365,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6366,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/SPGNFTCollection.sol":{"ast":{"absolutePath":"contracts/SPGNFTCollection.sol","exportedSymbols":{"Context":[202],"ECDSA":[2522],"EIP712":[2749],"ERC721A":[10402],"ERC721A__IERC721Receiver":[8320],"IERC5267":[172],"IERC6551Registry":[6431],"IERC721A":[10623],"ISPGNFT":[6414],"MessageHashUtils":[2835],"Ownable":[147],"Pausable":[362],"ReentrancyGuard":[431],"SPGNFTCollection":[8055],"ShortString":[437],"ShortStrings":[648]},"id":8056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6367,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"erc721a/contracts/ERC721A.sol","file":"erc721a/contracts/ERC721A.sol","id":6368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":10403,"src":"61:39:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":148,"src":"102:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":6370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":363,"src":"156:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":432,"src":"210:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":2523,"src":"271:62:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":6373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8056,"sourceUnit":2750,"src":"335:63:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISPGNFT","contractDependencies":[],"contractKind":"interface","documentation":{"id":6374,"nodeType":"StructuredDocumentation","src":"402:77:15","text":" @title ISPGNFT\n @dev Interface for Story Protocol Gateway NFT"},"fullyImplemented":false,"id":6414,"linearizedBaseContracts":[6414],"name":"ISPGNFT","nameLocation":"491:7:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISPGNFT.InitParams","id":6397,"members":[{"constant":false,"id":6376,"mutability":"mutable","name":"name","nameLocation":"542:4:15","nodeType":"VariableDeclaration","scope":6397,"src":"535:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6375,"name":"string","nodeType":"ElementaryTypeName","src":"535:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6378,"mutability":"mutable","name":"symbol","nameLocation":"564:6:15","nodeType":"VariableDeclaration","scope":6397,"src":"557:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6377,"name":"string","nodeType":"ElementaryTypeName","src":"557:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6380,"mutability":"mutable","name":"baseURI","nameLocation":"588:7:15","nodeType":"VariableDeclaration","scope":6397,"src":"581:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6379,"name":"string","nodeType":"ElementaryTypeName","src":"581:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6382,"mutability":"mutable","name":"contractURI","nameLocation":"613:11:15","nodeType":"VariableDeclaration","scope":6397,"src":"606:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6381,"name":"string","nodeType":"ElementaryTypeName","src":"606:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6384,"mutability":"mutable","name":"maxSupply","nameLocation":"643:9:15","nodeType":"VariableDeclaration","scope":6397,"src":"635:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6383,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6386,"mutability":"mutable","name":"mintFee","nameLocation":"671:7:15","nodeType":"VariableDeclaration","scope":6397,"src":"663:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"663:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6388,"mutability":"mutable","name":"mintFeeToken","nameLocation":"697:12:15","nodeType":"VariableDeclaration","scope":6397,"src":"689:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6387,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6390,"mutability":"mutable","name":"mintFeeRecipient","nameLocation":"728:16:15","nodeType":"VariableDeclaration","scope":6397,"src":"720:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6389,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6392,"mutability":"mutable","name":"owner","nameLocation":"763:5:15","nodeType":"VariableDeclaration","scope":6397,"src":"755:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6391,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6394,"mutability":"mutable","name":"mintOpen","nameLocation":"784:8:15","nodeType":"VariableDeclaration","scope":6397,"src":"779:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6393,"name":"bool","nodeType":"ElementaryTypeName","src":"779:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6396,"mutability":"mutable","name":"isPublicMinting","nameLocation":"808:15:15","nodeType":"VariableDeclaration","scope":6397,"src":"803:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6395,"name":"bool","nodeType":"ElementaryTypeName","src":"803:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitParams","nameLocation":"513:10:15","nodeType":"StructDefinition","scope":6414,"src":"506:325:15","visibility":"public"},{"functionSelector":"6a627842","id":6404,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"848:4:15","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"to","nameLocation":"861:2:15","nodeType":"VariableDeclaration","scope":6404,"src":"853:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6398,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:12:15"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6404,"src":"891:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:9:15"},"scope":6414,"src":"839:61:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"40c10f19","id":6413,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"915:4:15","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"to","nameLocation":"928:2:15","nodeType":"VariableDeclaration","scope":6413,"src":"920:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6405,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6408,"mutability":"mutable","name":"quantity","nameLocation":"940:8:15","nodeType":"VariableDeclaration","scope":6413,"src":"932:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"919:30:15"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6413,"src":"976:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"975:9:15"},"scope":6414,"src":"906:79:15","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8056,"src":"481:507:15","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":6415,"nodeType":"StructuredDocumentation","src":"992:76:15","text":" @title IERC6551Registry\n @dev Interface for ERC6551 registry"},"fullyImplemented":false,"id":6431,"linearizedBaseContracts":[6431],"name":"IERC6551Registry","nameLocation":"1080:16:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5e9bc536","id":6430,"implemented":false,"kind":"function","modifiers":[],"name":"account","nameLocation":"1115:7:15","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"implementation","nameLocation":"1141:14:15","nodeType":"VariableDeclaration","scope":6430,"src":"1133:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6416,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6419,"mutability":"mutable","name":"chainId","nameLocation":"1174:7:15","nodeType":"VariableDeclaration","scope":6430,"src":"1166:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6421,"mutability":"mutable","name":"tokenContract","nameLocation":"1200:13:15","nodeType":"VariableDeclaration","scope":6430,"src":"1192:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6420,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6423,"mutability":"mutable","name":"tokenId","nameLocation":"1232:7:15","nodeType":"VariableDeclaration","scope":6430,"src":"1224:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6425,"mutability":"mutable","name":"salt","nameLocation":"1258:4:15","nodeType":"VariableDeclaration","scope":6430,"src":"1250:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1122:147:15"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"1293:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6427,"name":"address","nodeType":"ElementaryTypeName","src":"1293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1292:9:15"},"scope":6431,"src":"1106:196:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8056,"src":"1070:235:15","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":6432,"name":"ERC721A","nameLocations":["1338:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10402,"src":"1338:7:15"},"id":6433,"nodeType":"InheritanceSpecifier","src":"1338:7:15"},{"baseName":{"id":6434,"name":"ISPGNFT","nameLocations":["1347:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6414,"src":"1347:7:15"},"id":6435,"nodeType":"InheritanceSpecifier","src":"1347:7:15"},{"baseName":{"id":6436,"name":"Ownable","nameLocations":["1356:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1356:7:15"},"id":6437,"nodeType":"InheritanceSpecifier","src":"1356:7:15"},{"baseName":{"id":6438,"name":"Pausable","nameLocations":["1365:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"1365:8:15"},"id":6439,"nodeType":"InheritanceSpecifier","src":"1365:8:15"},{"baseName":{"id":6440,"name":"ReentrancyGuard","nameLocations":["1375:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"1375:15:15"},"id":6441,"nodeType":"InheritanceSpecifier","src":"1375:15:15"},{"baseName":{"id":6442,"name":"EIP712","nameLocations":["1392:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2749,"src":"1392:6:15"},"id":6443,"nodeType":"InheritanceSpecifier","src":"1392:6:15"}],"canonicalName":"SPGNFTCollection","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8055,"linearizedBaseContracts":[8055,2749,172,431,362,147,202,6414,10402,10623],"name":"SPGNFTCollection","nameLocation":"1318:16:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6446,"libraryName":{"id":6444,"name":"ECDSA","nameLocations":["1412:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":2522,"src":"1412:5:15"},"nodeType":"UsingForDirective","src":"1406:24:15","typeName":{"id":6445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"id":6449,"mutability":"constant","name":"MAX_BATCH_SIZE","nameLocation":"1463:14:15","nodeType":"VariableDeclaration","scope":8055,"src":"1438:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1480:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"private"},{"constant":true,"id":6452,"mutability":"constant","name":"SAFE_BATCH_SIZE","nameLocation":"1515:15:15","nodeType":"VariableDeclaration","scope":8055,"src":"1490:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1533:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"private"},{"constant":true,"functionSelector":"e59ba924","id":6457,"mutability":"constant","name":"TRANSFER_PERMIT_TYPEHASH","nameLocation":"1572:24:15","nodeType":"VariableDeclaration","scope":8055,"src":"1548:170:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1548:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5472616e736665725065726d69742861646472657373206f776e65722c6164647265737320746f2c75696e743235365b5d20746f6b656e4964732c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:92:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c1","typeString":"literal_string \"TransferPermit(address owner,address to,uint256[] tokenIds,uint256 nonce,uint256 deadline)\""},"value":"TransferPermit(address owner,address to,uint256[] tokenIds,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c1","typeString":"literal_string \"TransferPermit(address owner,address to,uint256[] tokenIds,uint256 nonce,uint256 deadline)\""}],"id":6454,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1599:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1599:119:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"4c06baba","id":6462,"mutability":"constant","name":"BATCH_TRANSFER_TYPEHASH","nameLocation":"1755:23:15","nodeType":"VariableDeclaration","scope":8055,"src":"1731:193:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1731:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"42617463685472616e736665725065726d69742861646472657373206f776e65722c6164647265737320746f2c75696e74323536207374617274546f6b656e49642c75696e74323536207175616e746974792c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1801:116:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca09","typeString":"literal_string \"BatchTransferPermit(address owner,address to,uint256 startTokenId,uint256 quantity,uint256 nonce,uint256 deadline)\""},"value":"BatchTransferPermit(address owner,address to,uint256 startTokenId,uint256 quantity,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca09","typeString":"literal_string \"BatchTransferPermit(address owner,address to,uint256 startTokenId,uint256 quantity,uint256 nonce,uint256 deadline)\""}],"id":6459,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1781:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1781:143:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"SPGNFTCollection.TransferPermit","id":6474,"members":[{"constant":false,"id":6464,"mutability":"mutable","name":"owner","nameLocation":"1974:5:15","nodeType":"VariableDeclaration","scope":6474,"src":"1966:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6463,"name":"address","nodeType":"ElementaryTypeName","src":"1966:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6466,"mutability":"mutable","name":"to","nameLocation":"1998:2:15","nodeType":"VariableDeclaration","scope":6474,"src":"1990:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6465,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6469,"mutability":"mutable","name":"tokenIds","nameLocation":"2021:8:15","nodeType":"VariableDeclaration","scope":6474,"src":"2011:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6468,"nodeType":"ArrayTypeName","src":"2011:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6471,"mutability":"mutable","name":"nonce","nameLocation":"2048:5:15","nodeType":"VariableDeclaration","scope":6474,"src":"2040:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"deadline","nameLocation":"2072:8:15","nodeType":"VariableDeclaration","scope":6474,"src":"2064:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TransferPermit","nameLocation":"1940:14:15","nodeType":"StructDefinition","scope":8055,"src":"1933:155:15","visibility":"public"},{"canonicalName":"SPGNFTCollection.BatchTransferPermit","id":6487,"members":[{"constant":false,"id":6476,"mutability":"mutable","name":"owner","nameLocation":"2142:5:15","nodeType":"VariableDeclaration","scope":6487,"src":"2134:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6475,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6478,"mutability":"mutable","name":"to","nameLocation":"2166:2:15","nodeType":"VariableDeclaration","scope":6487,"src":"2158:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6477,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6480,"mutability":"mutable","name":"startTokenId","nameLocation":"2187:12:15","nodeType":"VariableDeclaration","scope":6487,"src":"2179:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6482,"mutability":"mutable","name":"quantity","nameLocation":"2218:8:15","nodeType":"VariableDeclaration","scope":6487,"src":"2210:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"nonce","nameLocation":"2245:5:15","nodeType":"VariableDeclaration","scope":6487,"src":"2237:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2237:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6486,"mutability":"mutable","name":"deadline","nameLocation":"2269:8:15","nodeType":"VariableDeclaration","scope":6487,"src":"2261:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BatchTransferPermit","nameLocation":"2103:19:15","nodeType":"StructDefinition","scope":8055,"src":"2096:189:15","visibility":"public"},{"constant":false,"functionSelector":"fa5c3375","id":6490,"mutability":"immutable","name":"TBARegistry","nameLocation":"2327:11:15","nodeType":"VariableDeclaration","scope":8055,"src":"2293:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"},"typeName":{"id":6489,"nodeType":"UserDefinedTypeName","pathNode":{"id":6488,"name":"IERC6551Registry","nameLocations":["2293:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6431,"src":"2293:16:15"},"referencedDeclaration":6431,"src":"2293:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"c3324b27","id":6492,"mutability":"immutable","name":"TBAImplementation","nameLocation":"2370:17:15","nodeType":"VariableDeclaration","scope":8055,"src":"2345:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6491,"name":"address","nodeType":"ElementaryTypeName","src":"2345:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":6494,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"2411:13:15","nodeType":"VariableDeclaration","scope":8055,"src":"2396:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6493,"name":"string","nodeType":"ElementaryTypeName","src":"2396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"e8a3d485","id":6496,"mutability":"mutable","name":"contractURI","nameLocation":"2445:11:15","nodeType":"VariableDeclaration","scope":8055,"src":"2431:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6495,"name":"string","nodeType":"ElementaryTypeName","src":"2431:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":6498,"mutability":"mutable","name":"maxSupply","nameLocation":"2478:9:15","nodeType":"VariableDeclaration","scope":8055,"src":"2463:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13966db5","id":6500,"mutability":"mutable","name":"mintFee","nameLocation":"2509:7:15","nodeType":"VariableDeclaration","scope":8055,"src":"2494:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c4c69033","id":6502,"mutability":"mutable","name":"mintFeeToken","nameLocation":"2538:12:15","nodeType":"VariableDeclaration","scope":8055,"src":"2523:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6501,"name":"address","nodeType":"ElementaryTypeName","src":"2523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"765b0c36","id":6504,"mutability":"mutable","name":"mintFeeRecipient","nameLocation":"2572:16:15","nodeType":"VariableDeclaration","scope":8055,"src":"2557:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6503,"name":"address","nodeType":"ElementaryTypeName","src":"2557:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"24bbd049","id":6506,"mutability":"mutable","name":"mintOpen","nameLocation":"2607:8:15","nodeType":"VariableDeclaration","scope":8055,"src":"2595:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6505,"name":"bool","nodeType":"ElementaryTypeName","src":"2595:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"2c673915","id":6508,"mutability":"mutable","name":"isPublicMinting","nameLocation":"2634:15:15","nodeType":"VariableDeclaration","scope":8055,"src":"2622:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6507,"name":"bool","nodeType":"ElementaryTypeName","src":"2622:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":6512,"mutability":"mutable","name":"_tokenURIs","nameLocation":"2693:10:15","nodeType":"VariableDeclaration","scope":8055,"src":"2658:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":6511,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2658:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6510,"name":"string","nodeType":"ElementaryTypeName","src":"2677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"functionSelector":"f46eccc4","id":6516,"mutability":"mutable","name":"minters","nameLocation":"2742:7:15","nodeType":"VariableDeclaration","scope":8055,"src":"2710:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6515,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6513,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2710:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6514,"name":"bool","nodeType":"ElementaryTypeName","src":"2729:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"afc0381d","id":6520,"mutability":"mutable","name":"isEscrowWallet","nameLocation":"2788:14:15","nodeType":"VariableDeclaration","scope":8055,"src":"2756:46:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6519,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6517,"name":"address","nodeType":"ElementaryTypeName","src":"2764:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2756:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6518,"name":"bool","nodeType":"ElementaryTypeName","src":"2775:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7ecebe00","id":6524,"mutability":"mutable","name":"nonces","nameLocation":"2844:6:15","nodeType":"VariableDeclaration","scope":8055,"src":"2809:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6523,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6521,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2809:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe","id":6530,"name":"Minted","nameLocation":"2865:6:15","nodeType":"EventDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2888:2:15","nodeType":"VariableDeclaration","scope":6530,"src":"2872:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6525,"name":"address","nodeType":"ElementaryTypeName","src":"2872:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6528,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2908:7:15","nodeType":"VariableDeclaration","scope":6530,"src":"2892:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2871:45:15"},"src":"2859:58:15"},{"anonymous":false,"eventSelector":"59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b2","id":6538,"name":"BatchMinted","nameLocation":"2929:11:15","nodeType":"EventDefinition","parameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2957:2:15","nodeType":"VariableDeclaration","scope":6538,"src":"2941:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6531,"name":"address","nodeType":"ElementaryTypeName","src":"2941:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6534,"indexed":true,"mutability":"mutable","name":"startTokenId","nameLocation":"2977:12:15","nodeType":"VariableDeclaration","scope":6538,"src":"2961:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6536,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"2999:8:15","nodeType":"VariableDeclaration","scope":6538,"src":"2991:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2940:68:15"},"src":"2923:86:15"},{"anonymous":false,"eventSelector":"b304fe5dd2d3c45e8ec87c1dd1bd2b3a773b3135e84a7b9151f5fb4bf1a06d0e","id":6542,"name":"MintStatusChanged","nameLocation":"3021:17:15","nodeType":"EventDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"indexed":false,"mutability":"mutable","name":"open","nameLocation":"3044:4:15","nodeType":"VariableDeclaration","scope":6542,"src":"3039:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6539,"name":"bool","nodeType":"ElementaryTypeName","src":"3039:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3038:11:15"},"src":"3015:35:15"},{"anonymous":false,"eventSelector":"545ecf6fbcc235df5fdfb676e1992025683c8097a8bd6e5a7c57b31f1c1b29d4","id":6546,"name":"PublicMintingStatusChanged","nameLocation":"3062:26:15","nodeType":"EventDefinition","parameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"indexed":false,"mutability":"mutable","name":"isPublic","nameLocation":"3094:8:15","nodeType":"VariableDeclaration","scope":6546,"src":"3089:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6543,"name":"bool","nodeType":"ElementaryTypeName","src":"3089:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3088:15:15"},"src":"3056:48:15"},{"anonymous":false,"eventSelector":"e427e272b122e738fd867ac5defcedb2bc9362341166a49d793d8b230f75670c","id":6550,"name":"MintFeeChanged","nameLocation":"3116:14:15","nodeType":"EventDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"3139:3:15","nodeType":"VariableDeclaration","scope":6550,"src":"3131:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3130:13:15"},"src":"3110:34:15"},{"anonymous":false,"eventSelector":"6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6","id":6554,"name":"MinterAdded","nameLocation":"3156:11:15","nodeType":"EventDefinition","parameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"indexed":true,"mutability":"mutable","name":"minter","nameLocation":"3184:6:15","nodeType":"VariableDeclaration","scope":6554,"src":"3168:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6551,"name":"address","nodeType":"ElementaryTypeName","src":"3168:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3167:24:15"},"src":"3150:42:15"},{"anonymous":false,"eventSelector":"e94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692","id":6558,"name":"MinterRemoved","nameLocation":"3204:13:15","nodeType":"EventDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"indexed":true,"mutability":"mutable","name":"minter","nameLocation":"3234:6:15","nodeType":"VariableDeclaration","scope":6558,"src":"3218:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"3218:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3217:24:15"},"src":"3198:44:15"},{"anonymous":false,"eventSelector":"f37f0cb2b2cc8066b1fa4738122412661ce5405cd9278f327d6905bb6d0e973f","id":6562,"name":"EscrowWalletAdded","nameLocation":"3254:17:15","nodeType":"EventDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"3288:6:15","nodeType":"VariableDeclaration","scope":6562,"src":"3272:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6559,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3271:24:15"},"src":"3248:48:15"},{"anonymous":false,"eventSelector":"566163b435df210872aafff6e352033418c951e1538d138dfbccd622c4b022d0","id":6566,"name":"EscrowWalletRemoved","nameLocation":"3308:19:15","nodeType":"EventDefinition","parameters":{"id":6565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"3344:6:15","nodeType":"VariableDeclaration","scope":6566,"src":"3328:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6563,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3327:24:15"},"src":"3302:50:15"},{"anonymous":false,"eventSelector":"b29502ff9b08df34ae7101bcaedae6124591b6f81d9ab5a4ba2bf20641fd2de2","id":6577,"name":"EscrowTransfer","nameLocation":"3364:14:15","nodeType":"EventDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3395:4:15","nodeType":"VariableDeclaration","scope":6577,"src":"3379:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6567,"name":"address","nodeType":"ElementaryTypeName","src":"3379:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6570,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3417:2:15","nodeType":"VariableDeclaration","scope":6577,"src":"3401:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6569,"name":"address","nodeType":"ElementaryTypeName","src":"3401:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6573,"indexed":false,"mutability":"mutable","name":"tokenIds","nameLocation":"3431:8:15","nodeType":"VariableDeclaration","scope":6577,"src":"3421:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6572,"nodeType":"ArrayTypeName","src":"3421:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6575,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"3457:8:15","nodeType":"VariableDeclaration","scope":6577,"src":"3441:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6574,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3378:88:15"},"src":"3358:109:15"},{"anonymous":false,"eventSelector":"670fe7cb14f68cf31d6e2012cadd6f5325904b6d23d2cadeb3607c96d8b1fec8","id":6589,"name":"BatchEscrowTransfer","nameLocation":"3479:19:15","nodeType":"EventDefinition","parameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3515:4:15","nodeType":"VariableDeclaration","scope":6589,"src":"3499:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6578,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6581,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3537:2:15","nodeType":"VariableDeclaration","scope":6589,"src":"3521:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6580,"name":"address","nodeType":"ElementaryTypeName","src":"3521:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6583,"indexed":false,"mutability":"mutable","name":"startTokenId","nameLocation":"3549:12:15","nodeType":"VariableDeclaration","scope":6589,"src":"3541:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6585,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"3571:8:15","nodeType":"VariableDeclaration","scope":6589,"src":"3563:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6587,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"3597:8:15","nodeType":"VariableDeclaration","scope":6589,"src":"3581:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6586,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3498:108:15"},"src":"3473:134:15"},{"body":{"id":6670,"nodeType":"Block","src":"3861:504:15","statements":[{"expression":{"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6613,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"3872:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6614,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3888:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3895:7:15","memberName":"baseURI","nodeType":"MemberAccess","referencedDeclaration":6380,"src":"3888:14:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3872:30:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6617,"nodeType":"ExpressionStatement","src":"3872:30:15"},{"expression":{"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6618,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"3913:11:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6619,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3927:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3934:11:15","memberName":"contractURI","nodeType":"MemberAccess","referencedDeclaration":6382,"src":"3927:18:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3913:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6622,"nodeType":"ExpressionStatement","src":"3913:32:15"},{"expression":{"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6623,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"3956:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6624,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3968:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3975:9:15","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":6384,"src":"3968:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3956:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6627,"nodeType":"ExpressionStatement","src":"3956:28:15"},{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"3995:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6629,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"4005:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4012:7:15","memberName":"mintFee","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"4005:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3995:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6632,"nodeType":"ExpressionStatement","src":"3995:24:15"},{"expression":{"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6633,"name":"mintFeeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"4030:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6634,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"4045:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4052:12:15","memberName":"mintFeeToken","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"4045:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4030:34:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6637,"nodeType":"ExpressionStatement","src":"4030:34:15"},{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6638,"name":"mintFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"4075:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6639,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"4094:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4101:16:15","memberName":"mintFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":6390,"src":"4094:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4075:42:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6642,"nodeType":"ExpressionStatement","src":"4075:42:15"},{"expression":{"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6643,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4128:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6644,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"4139:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4146:8:15","memberName":"mintOpen","nodeType":"MemberAccess","referencedDeclaration":6394,"src":"4139:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4128:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6647,"nodeType":"ExpressionStatement","src":"4128:26:15"},{"expression":{"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6648,"name":"isPublicMinting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"4165:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6649,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"4183:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4190:15:15","memberName":"isPublicMinting","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"4183:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4165:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6652,"nodeType":"ExpressionStatement","src":"4165:40:15"},{"expression":{"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6653,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"4218:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6656,"indexExpression":{"expression":{"id":6654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4233:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4237:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4233:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4218:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4218:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"ExpressionStatement","src":"4218:33:15"},{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6660,"name":"TBARegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"4264:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6662,"name":"_TBARegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"4295:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6661,"name":"IERC6551Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"4278:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6551Registry_$6431_$","typeString":"type(contract IERC6551Registry)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"}},"src":"4264:44:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"}},"id":6665,"nodeType":"ExpressionStatement","src":"4264:44:15"},{"expression":{"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6666,"name":"TBAImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"4319:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6667,"name":"_TBAImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"4339:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:38:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6669,"nodeType":"ExpressionStatement","src":"4319:38:15"}]},"id":6671,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6599,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3755:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3762:4:15","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6376,"src":"3755:11:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6601,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3768:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3775:6:15","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":6378,"src":"3768:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6603,"kind":"baseConstructorSpecifier","modifierName":{"id":6598,"name":"ERC721A","nameLocations":["3747:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10402,"src":"3747:7:15"},"nodeType":"ModifierInvocation","src":"3747:35:15"},{"arguments":[{"hexValue":"5350474e4654436f6c6c656374696f6e","id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3800:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_07c869da8679cc16520358b69f3463f9467fb85b20abac6be2b24f17afe8ca17","typeString":"literal_string \"SPGNFTCollection\""},"value":"SPGNFTCollection"},{"hexValue":"31","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3820:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":6607,"kind":"baseConstructorSpecifier","modifierName":{"id":6604,"name":"EIP712","nameLocations":["3793:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2749,"src":"3793:6:15"},"nodeType":"ModifierInvocation","src":"3793:31:15"},{"arguments":[{"expression":{"id":6609,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3842:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":6610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3849:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6392,"src":"3842:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6611,"kind":"baseConstructorSpecifier","modifierName":{"id":6608,"name":"Ownable","nameLocations":["3834:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3834:7:15"},"nodeType":"ModifierInvocation","src":"3834:21:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"params","nameLocation":"3655:6:15","nodeType":"VariableDeclaration","scope":6671,"src":"3637:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams"},"typeName":{"id":6591,"nodeType":"UserDefinedTypeName","pathNode":{"id":6590,"name":"InitParams","nameLocations":["3637:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":6397,"src":"3637:10:15"},"referencedDeclaration":6397,"src":"3637:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_storage_ptr","typeString":"struct ISPGNFT.InitParams"}},"visibility":"internal"},{"constant":false,"id":6594,"mutability":"mutable","name":"_TBARegistry","nameLocation":"3680:12:15","nodeType":"VariableDeclaration","scope":6671,"src":"3672:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6593,"name":"address","nodeType":"ElementaryTypeName","src":"3672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6596,"mutability":"mutable","name":"_TBAImplementation","nameLocation":"3711:18:15","nodeType":"VariableDeclaration","scope":6671,"src":"3703:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6595,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3626:110:15"},"returnParameters":{"id":6612,"nodeType":"ParameterList","parameters":[],"src":"3861:0:15"},"scope":8055,"src":"3615:750:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6691,"nodeType":"Block","src":"4436:182:15","statements":[{"expression":{"arguments":[{"id":6680,"name":"TBAImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"4488:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6681,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4520:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4526:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4520:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4556:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}],"id":6684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4548:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6683,"name":"address","nodeType":"ElementaryTypeName","src":"4548:7:15","typeDescriptions":{}}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"4576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":6678,"name":"TBARegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"4454:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC6551Registry_$6431","typeString":"contract IERC6551Registry"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4466:7:15","memberName":"account","nodeType":"MemberAccess","referencedDeclaration":6430,"src":"4454:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256,address,uint256,uint256) view external returns (address)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4454:156:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6677,"id":6690,"nodeType":"Return","src":"4447:163:15"}]},"functionSelector":"15d9756e","id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"getTBA","nameLocation":"4382:6:15","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"tokenId","nameLocation":"4397:7:15","nodeType":"VariableDeclaration","scope":6692,"src":"4389:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4388:17:15"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6692,"src":"4427:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6675,"name":"address","nodeType":"ElementaryTypeName","src":"4427:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4426:9:15"},"scope":8055,"src":"4373:245:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6817,"nodeType":"Block","src":"4765:916:15","statements":[{"expression":{"arguments":[{"id":6709,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4784:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74696e6720697320636c6f736564","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4794:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f","typeString":"literal_string \"Minting is closed\""},"value":"Minting is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f","typeString":"literal_string \"Minting is closed\""}],"id":6708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4776:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6712,"nodeType":"ExpressionStatement","src":"4776:38:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6714,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"4833:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4833:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6716,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"4849:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4833:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6718,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"4861:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4833:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206578636565646564","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4872:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""},"value":"Max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""}],"id":6713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4825:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4825:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6722,"nodeType":"ExpressionStatement","src":"4825:69:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6724,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"4913:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4923:6:15","memberName":"length","nodeType":"MemberAccess","src":"4913:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6726,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"4933:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e55524920636f756e74206d69736d61746368","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4943:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_11f304981a7eae43f6192b4239145225dd9d29aa23417cacf10ec6f275197f7a","typeString":"literal_string \"TokenURI count mismatch\""},"value":"TokenURI count mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11f304981a7eae43f6192b4239145225dd9d29aa23417cacf10ec6f275197f7a","typeString":"literal_string \"TokenURI count mismatch\""}],"id":6723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4905:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"ExpressionStatement","src":"4905:64:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"4988:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6733,"name":"MAX_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5000:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4988:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820746f6f206c61726765","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5016:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""},"value":"Batch too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""}],"id":6731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4980:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6737,"nodeType":"ExpressionStatement","src":"4980:54:15"},{"condition":{"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5059:16:15","subExpression":{"id":6738,"name":"isPublicMinting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"5060:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6755,"nodeType":"IfStatement","src":"5055:128:15","trueBody":{"id":6754,"nodeType":"Block","src":"5077:106:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6741,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"5100:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6744,"indexExpression":{"expression":{"id":6742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5108:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5112:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5108:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5100:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6745,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5123:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5134:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5138:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5134:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5123:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5100:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5146:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""},"value":"Not authorized to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""}],"id":6740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5092:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6753,"nodeType":"ExpressionStatement","src":"5092:79:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"5199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5209:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5199:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6764,"nodeType":"IfStatement","src":"5195:69:15","trueBody":{"id":6763,"nodeType":"Block","src":"5212:52:15","statements":[{"expression":{"arguments":[{"id":6760,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"5243:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6759,"name":"_processMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"5227:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6762,"nodeType":"ExpressionStatement","src":"5227:25:15"}]}},{"assignments":[6766],"declarations":[{"constant":false,"id":6766,"mutability":"mutable","name":"startTokenId","nameLocation":"5284:12:15","nodeType":"VariableDeclaration","scope":6817,"src":"5276:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"5276:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6767,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"5299:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5299:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5276:37:15"},{"expression":{"arguments":[{"id":6771,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"5330:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6772,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"5334:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6770,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"5324:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6774,"nodeType":"ExpressionStatement","src":"5324:19:15"},{"id":6808,"nodeType":"UncheckedBlock","src":"5356:231:15","statements":[{"body":{"id":6806,"nodeType":"Block","src":"5420:156:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":6787,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"5449:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":6789,"indexExpression":{"id":6788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5459:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5449:12:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5443:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6785,"name":"bytes","nodeType":"ElementaryTypeName","src":"5443:5:15","typeDescriptions":{}}},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5463:6:15","memberName":"length","nodeType":"MemberAccess","src":"5443:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5472:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5443:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6805,"nodeType":"IfStatement","src":"5439:122:15","trueBody":{"id":6804,"nodeType":"Block","src":"5475:86:15","statements":[{"expression":{"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6794,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"5498:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":6798,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6795,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"5509:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5524:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5509:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5498:28:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6799,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"5529:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":6801,"indexExpression":{"id":6800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5539:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5529:12:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"5498:43:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6803,"nodeType":"ExpressionStatement","src":"5498:43:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5401:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6780,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"5405:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5401:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6807,"initializationExpression":{"assignments":[6776],"declarations":[{"constant":false,"id":6776,"mutability":"mutable","name":"i","nameLocation":"5394:1:15","nodeType":"VariableDeclaration","scope":6807,"src":"5386:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5386:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6778,"initialValue":{"hexValue":"30","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5398:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5386:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5415:3:15","subExpression":{"id":6782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5417:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6784,"nodeType":"ExpressionStatement","src":"5415:3:15"},"nodeType":"ForStatement","src":"5381:195:15"}]},{"eventCall":{"arguments":[{"id":6810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"5616:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6811,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"5620:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6812,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"5634:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6809,"name":"BatchMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"5604:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5604:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6814,"nodeType":"EmitStatement","src":"5599:44:15"},{"expression":{"id":6815,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"5661:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6707,"id":6816,"nodeType":"Return","src":"5654:19:15"}]},"functionSelector":"22df11d8","id":6818,"implemented":true,"kind":"function","modifiers":[{"id":6702,"kind":"modifierInvocation","modifierName":{"id":6701,"name":"nonReentrant","nameLocations":["4720:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"4720:12:15"},"nodeType":"ModifierInvocation","src":"4720:12:15"},{"id":6704,"kind":"modifierInvocation","modifierName":{"id":6703,"name":"whenNotPaused","nameLocations":["4733:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"4733:13:15"},"nodeType":"ModifierInvocation","src":"4733:13:15"}],"name":"mint","nameLocation":"4639:4:15","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6694,"mutability":"mutable","name":"to","nameLocation":"4652:2:15","nodeType":"VariableDeclaration","scope":6818,"src":"4644:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6693,"name":"address","nodeType":"ElementaryTypeName","src":"4644:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6696,"mutability":"mutable","name":"quantity","nameLocation":"4664:8:15","nodeType":"VariableDeclaration","scope":6818,"src":"4656:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4656:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"tokenURIs","nameLocation":"4692:9:15","nodeType":"VariableDeclaration","scope":6818,"src":"4674:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6697,"name":"string","nodeType":"ElementaryTypeName","src":"4674:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6698,"nodeType":"ArrayTypeName","src":"4674:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4643:59:15"},"returnParameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6818,"src":"4756:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4755:9:15"},"scope":8055,"src":"4630:1051:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[6413],"body":{"id":6844,"nodeType":"Block","src":"5768:125:15","statements":[{"assignments":[6831],"declarations":[{"constant":false,"id":6831,"mutability":"mutable","name":"tokenURIs","nameLocation":"5795:9:15","nodeType":"VariableDeclaration","scope":6844,"src":"5779:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6829,"name":"string","nodeType":"ElementaryTypeName","src":"5779:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6830,"nodeType":"ArrayTypeName","src":"5779:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":6837,"initialValue":{"arguments":[{"id":6835,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"5820:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5807:12:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6832,"name":"string","nodeType":"ElementaryTypeName","src":"5811:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6833,"nodeType":"ArrayTypeName","src":"5811:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5807:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5779:50:15"},{"expression":{"arguments":[{"id":6839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"5861:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6840,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"5865:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6841,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"5875:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":6838,"name":"_mintWithURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"5847:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,string memory[] memory) returns (uint256)"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5847:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6826,"id":6843,"nodeType":"Return","src":"5840:45:15"}]},"functionSelector":"40c10f19","id":6845,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"5698:4:15","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"to","nameLocation":"5711:2:15","nodeType":"VariableDeclaration","scope":6845,"src":"5703:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6819,"name":"address","nodeType":"ElementaryTypeName","src":"5703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6822,"mutability":"mutable","name":"quantity","nameLocation":"5723:8:15","nodeType":"VariableDeclaration","scope":6845,"src":"5715:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5702:30:15"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"5759:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5758:9:15"},"scope":8055,"src":"5689:204:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[6404],"body":{"id":6869,"nodeType":"Block","src":"5966:111:15","statements":[{"assignments":[6856],"declarations":[{"constant":false,"id":6856,"mutability":"mutable","name":"tokenURIs","nameLocation":"5993:9:15","nodeType":"VariableDeclaration","scope":6869,"src":"5977:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6854,"name":"string","nodeType":"ElementaryTypeName","src":"5977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6855,"nodeType":"ArrayTypeName","src":"5977:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":6862,"initialValue":{"arguments":[{"hexValue":"31","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6018:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6005:12:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6857,"name":"string","nodeType":"ElementaryTypeName","src":"6009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6858,"nodeType":"ArrayTypeName","src":"6009:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5977:43:15"},{"expression":{"arguments":[{"id":6864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"6052:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6056:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":6866,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"6059:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":6863,"name":"_mintWithURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"6038:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,string memory[] memory) returns (uint256)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6851,"id":6868,"nodeType":"Return","src":"6031:38:15"}]},"functionSelector":"6a627842","id":6870,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"5914:4:15","nodeType":"FunctionDefinition","parameters":{"id":6848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6847,"mutability":"mutable","name":"to","nameLocation":"5927:2:15","nodeType":"VariableDeclaration","scope":6870,"src":"5919:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6846,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5918:12:15"},"returnParameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6870,"src":"5957:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5956:9:15"},"scope":8055,"src":"5905:172:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7020,"nodeType":"Block","src":"6219:1101:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6238:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6252:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6244:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6888,"name":"address","nodeType":"ElementaryTypeName","src":"6244:7:15","typeDescriptions":{}}},"id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6244:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6238:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6256:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""},"value":"Cannot mint to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""}],"id":6886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6230:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6230:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6895,"nodeType":"ExpressionStatement","src":"6230:56:15"},{"expression":{"arguments":[{"id":6897,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"6305:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74696e6720697320636c6f736564","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6315:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f","typeString":"literal_string \"Minting is closed\""},"value":"Minting is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f","typeString":"literal_string \"Minting is closed\""}],"id":6896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6297:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6297:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"ExpressionStatement","src":"6297:38:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6902,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"6354:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6904,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6370:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6354:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6906,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"6382:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6354:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206578636565646564","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6393:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""},"value":"Max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f","typeString":"literal_string \"Max supply exceeded\""}],"id":6901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6346:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6910,"nodeType":"ExpressionStatement","src":"6346:69:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6912,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"6434:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6444:6:15","memberName":"length","nodeType":"MemberAccess","src":"6434:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6454:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6434:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6916,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"6459:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6469:6:15","memberName":"length","nodeType":"MemberAccess","src":"6459:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6918,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6479:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6459:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6434:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e55524920636f756e74206d69736d61746368","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6489:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_11f304981a7eae43f6192b4239145225dd9d29aa23417cacf10ec6f275197f7a","typeString":"literal_string \"TokenURI count mismatch\""},"value":"TokenURI count mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11f304981a7eae43f6192b4239145225dd9d29aa23417cacf10ec6f275197f7a","typeString":"literal_string \"TokenURI count mismatch\""}],"id":6911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6426:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6426:89:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6923,"nodeType":"ExpressionStatement","src":"6426:89:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6925,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6534:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6545:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6534:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6928,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6550:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6929,"name":"MAX_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"6562:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6550:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6534:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207175616e74697479","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6578:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""},"value":"Invalid quantity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""}],"id":6924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6526:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6526:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6934,"nodeType":"ExpressionStatement","src":"6526:71:15"},{"condition":{"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6622:16:15","subExpression":{"id":6935,"name":"isPublicMinting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"6623:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"6618:128:15","trueBody":{"id":6951,"nodeType":"Block","src":"6640:106:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6938,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"6663:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6941,"indexExpression":{"expression":{"id":6939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6671:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6675:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6671:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6663:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6942,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6686:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6686:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6697:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6701:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6697:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6686:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6663:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6709:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""},"value":"Not authorized to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""}],"id":6937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6655:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6655:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6950,"nodeType":"ExpressionStatement","src":"6655:79:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6953,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"6762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6762:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6961,"nodeType":"IfStatement","src":"6758:69:15","trueBody":{"id":6960,"nodeType":"Block","src":"6775:52:15","statements":[{"expression":{"arguments":[{"id":6957,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6806:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6956,"name":"_processMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"6790:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6959,"nodeType":"ExpressionStatement","src":"6790:25:15"}]}},{"assignments":[6963],"declarations":[{"constant":false,"id":6963,"mutability":"mutable","name":"startTokenId","nameLocation":"6847:12:15","nodeType":"VariableDeclaration","scope":7020,"src":"6839:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6966,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6964,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"6862:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6839:37:15"},{"expression":{"arguments":[{"id":6968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6893:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6969,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"6897:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6967,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"6887:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6887:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6971,"nodeType":"ExpressionStatement","src":"6887:19:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6972,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"6923:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6933:6:15","memberName":"length","nodeType":"MemberAccess","src":"6923:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6942:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6923:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7011,"nodeType":"IfStatement","src":"6919:307:15","trueBody":{"id":7010,"nodeType":"Block","src":"6945:281:15","statements":[{"id":7009,"nodeType":"UncheckedBlock","src":"6960:255:15","statements":[{"body":{"id":7007,"nodeType":"Block","src":"7028:172:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":6988,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"7061:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6990,"indexExpression":{"id":6989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7071:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7061:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7055:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6986,"name":"bytes","nodeType":"ElementaryTypeName","src":"7055:5:15","typeDescriptions":{}}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7075:6:15","memberName":"length","nodeType":"MemberAccess","src":"7055:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7084:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7055:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"7051:130:15","trueBody":{"id":7005,"nodeType":"Block","src":"7087:94:15","statements":[{"expression":{"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6995,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"7114:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":6999,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6996,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"7125:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7140:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7125:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7114:28:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7000,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"7145:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7002,"indexExpression":{"id":7001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7145:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7114:43:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7004,"nodeType":"ExpressionStatement","src":"7114:43:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7009:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6981,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"7013:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7009:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"initializationExpression":{"assignments":[6977],"declarations":[{"constant":false,"id":6977,"mutability":"mutable","name":"i","nameLocation":"7002:1:15","nodeType":"VariableDeclaration","scope":7008,"src":"6994:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"6994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6979,"initialValue":{"hexValue":"30","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6994:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7023:3:15","subExpression":{"id":6983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7025:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6985,"nodeType":"ExpressionStatement","src":"7023:3:15"},"nodeType":"ForStatement","src":"6989:211:15"}]}]}},{"eventCall":{"arguments":[{"id":7013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7255:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7014,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"7259:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7015,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"7273:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7012,"name":"BatchMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"7243:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"EmitStatement","src":"7238:44:15"},{"expression":{"id":7018,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"7300:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6885,"id":7019,"nodeType":"Return","src":"7293:19:15"}]},"id":7021,"implemented":true,"kind":"function","modifiers":[{"id":6880,"kind":"modifierInvocation","modifierName":{"id":6879,"name":"nonReentrant","nameLocations":["6174:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"6174:12:15"},"nodeType":"ModifierInvocation","src":"6174:12:15"},{"id":6882,"kind":"modifierInvocation","modifierName":{"id":6881,"name":"whenNotPaused","nameLocations":["6187:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"6187:13:15"},"nodeType":"ModifierInvocation","src":"6187:13:15"}],"name":"_mintWithURIs","nameLocation":"6094:13:15","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"to","nameLocation":"6116:2:15","nodeType":"VariableDeclaration","scope":7021,"src":"6108:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6871,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6874,"mutability":"mutable","name":"quantity","nameLocation":"6128:8:15","nodeType":"VariableDeclaration","scope":7021,"src":"6120:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6877,"mutability":"mutable","name":"tokenURIs","nameLocation":"6154:9:15","nodeType":"VariableDeclaration","scope":7021,"src":"6138:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6875,"name":"string","nodeType":"ElementaryTypeName","src":"6138:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6876,"nodeType":"ArrayTypeName","src":"6138:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6107:57:15"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7021,"src":"6210:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6210:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6209:9:15"},"scope":8055,"src":"6085:1235:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7222,"nodeType":"Block","src":"7567:1580:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7044,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"7586:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7047,"indexExpression":{"expression":{"id":7045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7601:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:6:15","memberName":"sender","nodeType":"MemberAccess","src":"7601:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7586:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420657363726f772077616c6c6574","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7614:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""},"value":"Not authorized escrow wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""}],"id":7043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7578:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7050,"nodeType":"ExpressionStatement","src":"7578:67:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"7664:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7678:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7670:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7053,"name":"address","nodeType":"ElementaryTypeName","src":"7670:7:15","typeDescriptions":{}}},"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7664:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7682:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":7051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7656:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7656:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7060,"nodeType":"ExpressionStatement","src":"7656:60:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"7735:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7752:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7744:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7063,"name":"address","nodeType":"ElementaryTypeName","src":"7744:7:15","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7735:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7756:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7727:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7727:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7070,"nodeType":"ExpressionStatement","src":"7727:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7072,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7799:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7805:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"7799:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7074,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"7818:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7799:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7828:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":7071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7791:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7791:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7078,"nodeType":"ExpressionStatement","src":"7791:57:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7080,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"7867:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7876:6:15","memberName":"length","nodeType":"MemberAccess","src":"7867:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7867:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7084,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"7890:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7899:6:15","memberName":"length","nodeType":"MemberAccess","src":"7890:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7086,"name":"SAFE_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"7909:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7867:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062617463682073697a65","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7926:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782","typeString":"literal_string \"Invalid batch size\""},"value":"Invalid batch size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782","typeString":"literal_string \"Invalid batch size\""}],"id":7079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7859:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:88:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7091,"nodeType":"ExpressionStatement","src":"7859:88:15"},{"body":{"id":7123,"nodeType":"Block","src":"8006:152:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7105,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"8037:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7107,"indexExpression":{"id":7106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"8046:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8037:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7104,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"8029:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8029:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8051:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8021:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7111,"nodeType":"ExpressionStatement","src":"8021:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":7114,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"8105:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7116,"indexExpression":{"id":7115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"8114:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8105:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7113,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"8097:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7118,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8121:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8097:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8128:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":7112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8089:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8089:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7122,"nodeType":"ExpressionStatement","src":"8089:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"7980:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7097,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"7984:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7993:6:15","memberName":"length","nodeType":"MemberAccess","src":"7984:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7980:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7124,"initializationExpression":{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"i","nameLocation":"7973:1:15","nodeType":"VariableDeclaration","scope":7124,"src":"7965:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"7965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7095,"initialValue":{"hexValue":"30","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7965:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8001:3:15","subExpression":{"id":7100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"8001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7102,"nodeType":"ExpressionStatement","src":"8001:3:15"},"nodeType":"ForStatement","src":"7960:198:15"},{"assignments":[7127],"declarations":[{"constant":false,"id":7127,"mutability":"mutable","name":"permit","nameLocation":"8192:6:15","nodeType":"VariableDeclaration","scope":7222,"src":"8170:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit"},"typeName":{"id":7126,"nodeType":"UserDefinedTypeName","pathNode":{"id":7125,"name":"TransferPermit","nameLocations":["8170:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":6474,"src":"8170:14:15"},"referencedDeclaration":6474,"src":"8170:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_storage_ptr","typeString":"struct SPGNFTCollection.TransferPermit"}},"visibility":"internal"}],"id":7137,"initialValue":{"arguments":[{"id":7129,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8238:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7130,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"8262:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7131,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"8289:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"baseExpression":{"id":7132,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"8319:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7134,"indexExpression":{"id":7133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8319:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7135,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"8357:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7128,"name":"TransferPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"8201:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransferPermit_$6474_storage_ptr_$","typeString":"type(struct SPGNFTCollection.TransferPermit storage pointer)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8231:5:15","8258:2:15","8279:8:15","8312:5:15","8347:8:15"],"names":["owner","to","tokenIds","nonce","deadline"],"nodeType":"FunctionCall","src":"8201:176:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"nodeType":"VariableDeclarationStatement","src":"8170:207:15"},{"assignments":[7139],"declarations":[{"constant":false,"id":7139,"mutability":"mutable","name":"structHash","nameLocation":"8398:10:15","nodeType":"VariableDeclaration","scope":7222,"src":"8390:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8390:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7161,"initialValue":{"arguments":[{"arguments":[{"id":7143,"name":"TRANSFER_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"8464:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7144,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8507:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"id":7145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8514:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6464,"src":"8507:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7146,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8538:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"id":7147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8545:2:15","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":6466,"src":"8538:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":7151,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8593:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"id":7152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8600:8:15","memberName":"tokenIds","nodeType":"MemberAccess","referencedDeclaration":6469,"src":"8593:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":7149,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8576:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8580:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"8576:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8576:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8566:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7155,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8629:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"id":7156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8636:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6471,"src":"8629:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7157,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8660:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_TransferPermit_$6474_memory_ptr","typeString":"struct SPGNFTCollection.TransferPermit memory"}},"id":7158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8667:8:15","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6473,"src":"8660:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7141,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8435:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8439:6:15","memberName":"encode","nodeType":"MemberAccess","src":"8435:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8435:255:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8411:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:290:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8390:311:15"},{"assignments":[7163],"declarations":[{"constant":false,"id":7163,"mutability":"mutable","name":"hash","nameLocation":"8722:4:15","nodeType":"VariableDeclaration","scope":7222,"src":"8714:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8714:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7167,"initialValue":{"arguments":[{"id":7165,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"8746:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7164,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8729:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8729:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8714:43:15"},{"assignments":[7169],"declarations":[{"constant":false,"id":7169,"mutability":"mutable","name":"signer","nameLocation":"8776:6:15","nodeType":"VariableDeclaration","scope":7222,"src":"8768:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7168,"name":"address","nodeType":"ElementaryTypeName","src":"8768:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7177,"initialValue":{"arguments":[{"id":7172,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"8799:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7173,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"8805:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"8808:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7175,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"8811:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7170,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"8785:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2522_$","typeString":"type(library ECDSA)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8791:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"8785:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8785:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8768:45:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"8842:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8852:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8842:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8859:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8834:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8834:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"8834:45:15"},{"id":7190,"nodeType":"UncheckedBlock","src":"8892:52:15","statements":[{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8917:15:15","subExpression":{"baseExpression":{"id":7185,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"8917:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7187,"indexExpression":{"id":7186,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8924:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8917:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7189,"nodeType":"ExpressionStatement","src":"8917:15:15"}]},{"body":{"id":7212,"nodeType":"Block","src":"9002:73:15","statements":[{"expression":{"arguments":[{"id":7205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9040:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7206,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"9047:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7207,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"9051:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7209,"indexExpression":{"id":7208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"9060:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9051:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7202,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9017:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SPGNFTCollection_$8055_$","typeString":"type(contract super SPGNFTCollection)"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9023:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":9408,"src":"9017:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9017:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7211,"nodeType":"ExpressionStatement","src":"9017:46:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"8976:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7196,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"8980:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8989:6:15","memberName":"length","nodeType":"MemberAccess","src":"8980:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8976:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7213,"initializationExpression":{"assignments":[7192],"declarations":[{"constant":false,"id":7192,"mutability":"mutable","name":"i","nameLocation":"8969:1:15","nodeType":"VariableDeclaration","scope":7213,"src":"8961:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7194,"initialValue":{"hexValue":"30","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8973:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8961:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8997:3:15","subExpression":{"id":7199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"8997:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7201,"nodeType":"ExpressionStatement","src":"8997:3:15"},"nodeType":"ForStatement","src":"8956:119:15"},{"eventCall":{"arguments":[{"id":7215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9107:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"9114:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7217,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"9118:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":7218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9128:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9132:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9128:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7214,"name":"EscrowTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"9092:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address,uint256[] memory,address)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7221,"nodeType":"EmitStatement","src":"9087:52:15"}]},"functionSelector":"52b91226","id":7223,"implemented":true,"kind":"function","modifiers":[{"id":7039,"kind":"modifierInvocation","modifierName":{"id":7038,"name":"nonReentrant","nameLocations":["7540:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"7540:12:15"},"nodeType":"ModifierInvocation","src":"7540:12:15"},{"id":7041,"kind":"modifierInvocation","modifierName":{"id":7040,"name":"whenNotPaused","nameLocations":["7553:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"7553:13:15"},"nodeType":"ModifierInvocation","src":"7553:13:15"}],"name":"escrowTransfer","nameLocation":"7341:14:15","nodeType":"FunctionDefinition","parameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"owner","nameLocation":"7374:5:15","nodeType":"VariableDeclaration","scope":7223,"src":"7366:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7022,"name":"address","nodeType":"ElementaryTypeName","src":"7366:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7025,"mutability":"mutable","name":"to","nameLocation":"7398:2:15","nodeType":"VariableDeclaration","scope":7223,"src":"7390:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7024,"name":"address","nodeType":"ElementaryTypeName","src":"7390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7028,"mutability":"mutable","name":"tokenIds","nameLocation":"7430:8:15","nodeType":"VariableDeclaration","scope":7223,"src":"7411:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7026,"name":"uint256","nodeType":"ElementaryTypeName","src":"7411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7027,"nodeType":"ArrayTypeName","src":"7411:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7030,"mutability":"mutable","name":"deadline","nameLocation":"7457:8:15","nodeType":"VariableDeclaration","scope":7223,"src":"7449:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7032,"mutability":"mutable","name":"v","nameLocation":"7482:1:15","nodeType":"VariableDeclaration","scope":7223,"src":"7476:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7031,"name":"uint8","nodeType":"ElementaryTypeName","src":"7476:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"r","nameLocation":"7502:1:15","nodeType":"VariableDeclaration","scope":7223,"src":"7494:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7494:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"s","nameLocation":"7522:1:15","nodeType":"VariableDeclaration","scope":7223,"src":"7514:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7514:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7355:175:15"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[],"src":"7567:0:15"},"scope":8055,"src":"7332:1815:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7402,"nodeType":"Block","src":"9380:1335:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7242,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"9399:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7245,"indexExpression":{"expression":{"id":7243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9414:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9418:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9414:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9399:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420657363726f772077616c6c6574","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9427:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""},"value":"Not authorized escrow wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""}],"id":7241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9391:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9391:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7248,"nodeType":"ExpressionStatement","src":"9391:67:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"9477:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9491:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9483:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7251,"name":"address","nodeType":"ElementaryTypeName","src":"9483:7:15","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9483:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9477:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9495:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":7249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9469:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"ExpressionStatement","src":"9469:60:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7260,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"9548:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9565:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9557:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7261,"name":"address","nodeType":"ElementaryTypeName","src":"9557:7:15","typeDescriptions":{}}},"id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9557:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9548:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9569:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9540:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"9540:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7270,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9612:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9618:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"9612:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7272,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"9631:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9612:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9641:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":7269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9604:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9604:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7276,"nodeType":"ExpressionStatement","src":"9604:57:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7278,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"9680:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9689:6:15","memberName":"length","nodeType":"MemberAccess","src":"9680:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9698:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9680:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7282,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"9703:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9712:6:15","memberName":"length","nodeType":"MemberAccess","src":"9703:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7284,"name":"SAFE_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"9722:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9703:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9680:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062617463682073697a65","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9739:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782","typeString":"literal_string \"Invalid batch size\""},"value":"Invalid batch size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782","typeString":"literal_string \"Invalid batch size\""}],"id":7277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9672:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9672:88:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7289,"nodeType":"ExpressionStatement","src":"9672:88:15"},{"body":{"id":7321,"nodeType":"Block","src":"9819:152:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7303,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"9850:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7305,"indexExpression":{"id":7304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"9859:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9850:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7302,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"9842:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9842:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9864:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9834:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9834:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7309,"nodeType":"ExpressionStatement","src":"9834:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":7312,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"9918:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7314,"indexExpression":{"id":7313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"9927:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9918:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7311,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"9910:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7316,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"9934:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9910:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9941:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":7310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9902:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9902:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7320,"nodeType":"ExpressionStatement","src":"9902:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"9793:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7295,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"9797:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9806:6:15","memberName":"length","nodeType":"MemberAccess","src":"9797:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7322,"initializationExpression":{"assignments":[7291],"declarations":[{"constant":false,"id":7291,"mutability":"mutable","name":"i","nameLocation":"9786:1:15","nodeType":"VariableDeclaration","scope":7322,"src":"9778:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7290,"name":"uint256","nodeType":"ElementaryTypeName","src":"9778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7293,"initialValue":{"hexValue":"30","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9790:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9778:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9814:3:15","subExpression":{"id":7298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"9814:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7300,"nodeType":"ExpressionStatement","src":"9814:3:15"},"nodeType":"ForStatement","src":"9773:198:15"},{"assignments":[7324],"declarations":[{"constant":false,"id":7324,"mutability":"mutable","name":"structHash","nameLocation":"9991:10:15","nodeType":"VariableDeclaration","scope":7402,"src":"9983:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9983:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7343,"initialValue":{"arguments":[{"arguments":[{"id":7328,"name":"TRANSFER_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"10057:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10100:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7330,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"10124:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":7334,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"10172:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"expression":{"id":7332,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10155:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10159:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"10155:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10155:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7331,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10145:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10145:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":7337,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"10201:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7339,"indexExpression":{"id":7338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10208:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10201:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7340,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"10233:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10028:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10032:6:15","memberName":"encode","nodeType":"MemberAccess","src":"10028:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:228:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10004:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10004:263:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9983:284:15"},{"assignments":[7345],"declarations":[{"constant":false,"id":7345,"mutability":"mutable","name":"hash","nameLocation":"10288:4:15","nodeType":"VariableDeclaration","scope":7402,"src":"10280:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10280:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7349,"initialValue":{"arguments":[{"id":7347,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"10312:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7346,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"10295:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10280:43:15"},{"assignments":[7351],"declarations":[{"constant":false,"id":7351,"mutability":"mutable","name":"signer","nameLocation":"10342:6:15","nodeType":"VariableDeclaration","scope":7402,"src":"10334:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7350,"name":"address","nodeType":"ElementaryTypeName","src":"10334:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7357,"initialValue":{"arguments":[{"id":7354,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"10365:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7355,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"10371:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7352,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"10351:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2522_$","typeString":"type(library ECDSA)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10357:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2278,"src":"10351:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10351:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10334:47:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7359,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"10410:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7360,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10420:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10410:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10427:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10402:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10402:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7364,"nodeType":"ExpressionStatement","src":"10402:45:15"},{"id":7370,"nodeType":"UncheckedBlock","src":"10460:52:15","statements":[{"expression":{"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10485:15:15","subExpression":{"baseExpression":{"id":7365,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"10485:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7367,"indexExpression":{"id":7366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10492:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10485:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7369,"nodeType":"ExpressionStatement","src":"10485:15:15"}]},{"body":{"id":7392,"nodeType":"Block","src":"10570:73:15","statements":[{"expression":{"arguments":[{"id":7385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10608:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"10615:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7387,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"10619:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7389,"indexExpression":{"id":7388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"10628:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10619:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7382,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10585:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SPGNFTCollection_$8055_$","typeString":"type(contract super SPGNFTCollection)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10591:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":9408,"src":"10585:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10585:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7391,"nodeType":"ExpressionStatement","src":"10585:46:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"10544:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7376,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"10548:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10557:6:15","memberName":"length","nodeType":"MemberAccess","src":"10548:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10544:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"initializationExpression":{"assignments":[7372],"declarations":[{"constant":false,"id":7372,"mutability":"mutable","name":"i","nameLocation":"10537:1:15","nodeType":"VariableDeclaration","scope":7393,"src":"10529:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7371,"name":"uint256","nodeType":"ElementaryTypeName","src":"10529:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7374,"initialValue":{"hexValue":"30","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10541:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10529:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10565:3:15","subExpression":{"id":7379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"10565:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7381,"nodeType":"ExpressionStatement","src":"10565:3:15"},"nodeType":"ForStatement","src":"10524:119:15"},{"eventCall":{"arguments":[{"id":7395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"10675:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"10682:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7397,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"10686:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":7398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10696:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10700:6:15","memberName":"sender","nodeType":"MemberAccess","src":"10696:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7394,"name":"EscrowTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"10660:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address,uint256[] memory,address)"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10660:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"EmitStatement","src":"10655:52:15"}]},"functionSelector":"916f9ab4","id":7403,"implemented":true,"kind":"function","modifiers":[{"id":7237,"kind":"modifierInvocation","modifierName":{"id":7236,"name":"nonReentrant","nameLocations":["9353:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"9353:12:15"},"nodeType":"ModifierInvocation","src":"9353:12:15"},{"id":7239,"kind":"modifierInvocation","modifierName":{"id":7238,"name":"whenNotPaused","nameLocations":["9366:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"9366:13:15"},"nodeType":"ModifierInvocation","src":"9366:13:15"}],"name":"escrowTransferWithSignature","nameLocation":"9164:27:15","nodeType":"FunctionDefinition","parameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"owner","nameLocation":"9210:5:15","nodeType":"VariableDeclaration","scope":7403,"src":"9202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7224,"name":"address","nodeType":"ElementaryTypeName","src":"9202:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7227,"mutability":"mutable","name":"to","nameLocation":"9234:2:15","nodeType":"VariableDeclaration","scope":7403,"src":"9226:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7226,"name":"address","nodeType":"ElementaryTypeName","src":"9226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7230,"mutability":"mutable","name":"tokenIds","nameLocation":"9266:8:15","nodeType":"VariableDeclaration","scope":7403,"src":"9247:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7228,"name":"uint256","nodeType":"ElementaryTypeName","src":"9247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7229,"nodeType":"ArrayTypeName","src":"9247:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"deadline","nameLocation":"9293:8:15","nodeType":"VariableDeclaration","scope":7403,"src":"9285:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7231,"name":"uint256","nodeType":"ElementaryTypeName","src":"9285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7234,"mutability":"mutable","name":"signature","nameLocation":"9327:9:15","nodeType":"VariableDeclaration","scope":7403,"src":"9312:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7233,"name":"bytes","nodeType":"ElementaryTypeName","src":"9312:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9191:152:15"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[],"src":"9380:0:15"},"scope":8055,"src":"9155:1560:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7562,"nodeType":"Block","src":"10960:1567:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7423,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"10979:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7426,"indexExpression":{"expression":{"id":7424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10994:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10998:6:15","memberName":"sender","nodeType":"MemberAccess","src":"10994:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10979:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420657363726f772077616c6c6574","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11007:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""},"value":"Not authorized escrow wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9","typeString":"literal_string \"Not authorized escrow wallet\""}],"id":7422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10971:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"ExpressionStatement","src":"10971:67:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"11057:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11071:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11063:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7432,"name":"address","nodeType":"ElementaryTypeName","src":"11063:7:15","typeDescriptions":{}}},"id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11063:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11057:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11075:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":7430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11049:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11049:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7439,"nodeType":"ExpressionStatement","src":"11049:60:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"11128:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11137:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7442,"name":"address","nodeType":"ElementaryTypeName","src":"11137:7:15","typeDescriptions":{}}},"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11137:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11128:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11149:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11120:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11120:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7449,"nodeType":"ExpressionStatement","src":"11120:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7451,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11192:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11198:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"11192:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7453,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"11211:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11192:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":7455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11221:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":7450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11184:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11184:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7457,"nodeType":"ExpressionStatement","src":"11184:57:15"},{"assignments":[7459],"declarations":[{"constant":false,"id":7459,"mutability":"mutable","name":"maxBatch","nameLocation":"11270:8:15","nodeType":"VariableDeclaration","scope":7562,"src":"11262:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7458,"name":"uint256","nodeType":"ElementaryTypeName","src":"11262:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7466,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"11281:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3230","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11292:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"11281:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7464,"name":"MAX_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"11315:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11281:48:15","trueExpression":{"id":7463,"name":"SAFE_BATCH_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"11297:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11262:67:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7468,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"11348:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11359:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11348:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7471,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"11364:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7472,"name":"maxBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"11376:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11364:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11348:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207175616e74697479","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11386:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""},"value":"Invalid quantity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""}],"id":7467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11340:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11340:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7477,"nodeType":"ExpressionStatement","src":"11340:65:15"},{"expression":{"arguments":[{"id":7479,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"11454:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7480,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"11461:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7481,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"11475:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7478,"name":"_verifyConsecutiveOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"11426:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) view"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11426:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7483,"nodeType":"ExpressionStatement","src":"11426:58:15"},{"assignments":[7486],"declarations":[{"constant":false,"id":7486,"mutability":"mutable","name":"permit","nameLocation":"11532:6:15","nodeType":"VariableDeclaration","scope":7562,"src":"11505:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit"},"typeName":{"id":7485,"nodeType":"UserDefinedTypeName","pathNode":{"id":7484,"name":"BatchTransferPermit","nameLocations":["11505:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":6487,"src":"11505:19:15"},"referencedDeclaration":6487,"src":"11505:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_storage_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit"}},"visibility":"internal"}],"id":7497,"initialValue":{"arguments":[{"id":7488,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"11583:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"11607:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7490,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"11638:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7491,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"11675:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7492,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"11705:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7494,"indexExpression":{"id":7493,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"11712:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11705:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7495,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"11743:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7487,"name":"BatchTransferPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"11541:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BatchTransferPermit_$6487_storage_ptr_$","typeString":"type(struct SPGNFTCollection.BatchTransferPermit storage pointer)"}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11576:5:15","11603:2:15","11624:12:15","11665:8:15","11698:5:15","11733:8:15"],"names":["owner","to","startTokenId","quantity","nonce","deadline"],"nodeType":"FunctionCall","src":"11541:222:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"nodeType":"VariableDeclarationStatement","src":"11505:258:15"},{"assignments":[7499],"declarations":[{"constant":false,"id":7499,"mutability":"mutable","name":"structHash","nameLocation":"11792:10:15","nodeType":"VariableDeclaration","scope":7562,"src":"11784:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11784:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7518,"initialValue":{"arguments":[{"arguments":[{"id":7503,"name":"BATCH_TRANSFER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"11858:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7504,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"11900:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11907:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"11900:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7506,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"11931:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11938:2:15","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":6478,"src":"11931:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7508,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"11959:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11966:12:15","memberName":"startTokenId","nodeType":"MemberAccess","referencedDeclaration":6480,"src":"11959:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7510,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"11997:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12004:8:15","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":6482,"src":"11997:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7512,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"12031:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12038:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6484,"src":"12031:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7514,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"12062:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_BatchTransferPermit_$6487_memory_ptr","typeString":"struct SPGNFTCollection.BatchTransferPermit memory"}},"id":7515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12069:8:15","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"12062:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11829:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11833:6:15","memberName":"encode","nodeType":"MemberAccess","src":"11829:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11829:263:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7500,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11805:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11805:298:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11784:319:15"},{"assignments":[7520],"declarations":[{"constant":false,"id":7520,"mutability":"mutable","name":"hash","nameLocation":"12132:4:15","nodeType":"VariableDeclaration","scope":7562,"src":"12124:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12124:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7524,"initialValue":{"arguments":[{"id":7522,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"12156:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7521,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"12139:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12139:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12124:43:15"},{"assignments":[7526],"declarations":[{"constant":false,"id":7526,"mutability":"mutable","name":"signer","nameLocation":"12186:6:15","nodeType":"VariableDeclaration","scope":7562,"src":"12178:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7525,"name":"address","nodeType":"ElementaryTypeName","src":"12178:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7532,"initialValue":{"arguments":[{"id":7529,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"12209:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7530,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"12215:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7527,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"12195:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2522_$","typeString":"type(library ECDSA)"}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12201:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2278,"src":"12195:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12195:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12178:47:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7534,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"12244:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"12254:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12244:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12261:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12236:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12236:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7539,"nodeType":"ExpressionStatement","src":"12236:45:15"},{"id":7545,"nodeType":"UncheckedBlock","src":"12302:52:15","statements":[{"expression":{"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12327:15:15","subExpression":{"baseExpression":{"id":7540,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"12327:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7542,"indexExpression":{"id":7541,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"12334:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12327:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7544,"nodeType":"ExpressionStatement","src":"12327:15:15"}]},{"expression":{"arguments":[{"id":7547,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"12393:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"12400:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7549,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"12404:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7550,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"12418:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7546,"name":"_batchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"12374:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7552,"nodeType":"ExpressionStatement","src":"12374:53:15"},{"eventCall":{"arguments":[{"id":7554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"12473:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"12480:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7556,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"12484:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7557,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"12498:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12508:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12512:6:15","memberName":"sender","nodeType":"MemberAccess","src":"12508:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7553,"name":"BatchEscrowTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"12453:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint256,address)"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12453:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7561,"nodeType":"EmitStatement","src":"12448:71:15"}]},"functionSelector":"1d027aad","id":7563,"implemented":true,"kind":"function","modifiers":[{"id":7418,"kind":"modifierInvocation","modifierName":{"id":7417,"name":"nonReentrant","nameLocations":["10933:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"10933:12:15"},"nodeType":"ModifierInvocation","src":"10933:12:15"},{"id":7420,"kind":"modifierInvocation","modifierName":{"id":7419,"name":"whenNotPaused","nameLocations":["10946:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"10946:13:15"},"nodeType":"ModifierInvocation","src":"10946:13:15"}],"name":"escrowTransferBatch","nameLocation":"10732:19:15","nodeType":"FunctionDefinition","parameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7405,"mutability":"mutable","name":"owner","nameLocation":"10770:5:15","nodeType":"VariableDeclaration","scope":7563,"src":"10762:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7404,"name":"address","nodeType":"ElementaryTypeName","src":"10762:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7407,"mutability":"mutable","name":"to","nameLocation":"10794:2:15","nodeType":"VariableDeclaration","scope":7563,"src":"10786:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7406,"name":"address","nodeType":"ElementaryTypeName","src":"10786:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7409,"mutability":"mutable","name":"startTokenId","nameLocation":"10815:12:15","nodeType":"VariableDeclaration","scope":7563,"src":"10807:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7408,"name":"uint256","nodeType":"ElementaryTypeName","src":"10807:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7411,"mutability":"mutable","name":"quantity","nameLocation":"10846:8:15","nodeType":"VariableDeclaration","scope":7563,"src":"10838:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7410,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7413,"mutability":"mutable","name":"deadline","nameLocation":"10873:8:15","nodeType":"VariableDeclaration","scope":7563,"src":"10865:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7412,"name":"uint256","nodeType":"ElementaryTypeName","src":"10865:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7415,"mutability":"mutable","name":"signature","nameLocation":"10907:9:15","nodeType":"VariableDeclaration","scope":7563,"src":"10892:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7414,"name":"bytes","nodeType":"ElementaryTypeName","src":"10892:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10751:172:15"},"returnParameters":{"id":7421,"nodeType":"ParameterList","parameters":[],"src":"10960:0:15"},"scope":8055,"src":"10723:1804:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7595,"nodeType":"Block","src":"12681:172:15","statements":[{"id":7594,"nodeType":"UncheckedBlock","src":"12692:154:15","statements":[{"body":{"id":7592,"nodeType":"Block","src":"12756:79:15","statements":[{"expression":{"arguments":[{"id":7585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"12792:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"12798:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7587,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"12802:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"12817:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12802:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7584,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[9408,9448],"referencedDeclaration":9408,"src":"12775:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12775:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7591,"nodeType":"ExpressionStatement","src":"12775:44:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"12737:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7579,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"12741:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12737:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7593,"initializationExpression":{"assignments":[7575],"declarations":[{"constant":false,"id":7575,"mutability":"mutable","name":"i","nameLocation":"12730:1:15","nodeType":"VariableDeclaration","scope":7593,"src":"12722:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7574,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7577,"initialValue":{"hexValue":"30","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12734:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12722:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12751:3:15","subExpression":{"id":7581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"12753:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7583,"nodeType":"ExpressionStatement","src":"12751:3:15"},"nodeType":"ForStatement","src":"12717:118:15"}]}]},"id":7596,"implemented":true,"kind":"function","modifiers":[],"name":"_batchTransferFrom","nameLocation":"12544:18:15","nodeType":"FunctionDefinition","parameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"from","nameLocation":"12581:4:15","nodeType":"VariableDeclaration","scope":7596,"src":"12573:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7564,"name":"address","nodeType":"ElementaryTypeName","src":"12573:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7567,"mutability":"mutable","name":"to","nameLocation":"12604:2:15","nodeType":"VariableDeclaration","scope":7596,"src":"12596:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7566,"name":"address","nodeType":"ElementaryTypeName","src":"12596:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7569,"mutability":"mutable","name":"startTokenId","nameLocation":"12625:12:15","nodeType":"VariableDeclaration","scope":7596,"src":"12617:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"12617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7571,"mutability":"mutable","name":"quantity","nameLocation":"12656:8:15","nodeType":"VariableDeclaration","scope":7596,"src":"12648:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"12648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12562:109:15"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[],"src":"12681:0:15"},"scope":8055,"src":"12535:318:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7634,"nodeType":"Block","src":"13001:249:15","statements":[{"id":7633,"nodeType":"UncheckedBlock","src":"13012:231:15","statements":[{"assignments":[7606],"declarations":[{"constant":false,"id":7606,"mutability":"mutable","name":"end","nameLocation":"13045:3:15","nodeType":"VariableDeclaration","scope":7633,"src":"13037:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7605,"name":"uint256","nodeType":"ElementaryTypeName","src":"13037:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7607,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"13051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7608,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"13066:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13051:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13037:37:15"},{"body":{"id":7631,"nodeType":"Block","src":"13134:98:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"13174:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7622,"name":"_ownershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"13161:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$10468_memory_ptr_$","typeString":"function (uint256) view returns (struct IERC721A.TokenOwnership memory)"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13161:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":7625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13177:4:15","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":10461,"src":"13161:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"13185:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13161:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420636f6e7365637574697665206f776e6572","id":7628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13192:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7886b67779636208dda007f165e1c1c6ffed6f82ccef1d211de2c16b3230f35e","typeString":"literal_string \"Not consecutive owner\""},"value":"Not consecutive owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7886b67779636208dda007f165e1c1c6ffed6f82ccef1d211de2c16b3230f35e","typeString":"literal_string \"Not consecutive owner\""}],"id":7621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13153:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7630,"nodeType":"ExpressionStatement","src":"13153:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"13120:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7616,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"13124:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13120:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7632,"initializationExpression":{"assignments":[7612],"declarations":[{"constant":false,"id":7612,"mutability":"mutable","name":"i","nameLocation":"13102:1:15","nodeType":"VariableDeclaration","scope":7632,"src":"13094:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7611,"name":"uint256","nodeType":"ElementaryTypeName","src":"13094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7614,"initialValue":{"id":7613,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"13106:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13094:24:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13129:3:15","subExpression":{"id":7618,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"13131:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7620,"nodeType":"ExpressionStatement","src":"13129:3:15"},"nodeType":"ForStatement","src":"13089:143:15"}]}]},"id":7635,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyConsecutiveOwnership","nameLocation":"12870:27:15","nodeType":"FunctionDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7598,"mutability":"mutable","name":"owner","nameLocation":"12916:5:15","nodeType":"VariableDeclaration","scope":7635,"src":"12908:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7597,"name":"address","nodeType":"ElementaryTypeName","src":"12908:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7600,"mutability":"mutable","name":"startTokenId","nameLocation":"12940:12:15","nodeType":"VariableDeclaration","scope":7635,"src":"12932:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7602,"mutability":"mutable","name":"quantity","nameLocation":"12971:8:15","nodeType":"VariableDeclaration","scope":7635,"src":"12963:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7601,"name":"uint256","nodeType":"ElementaryTypeName","src":"12963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12897:89:15"},"returnParameters":{"id":7604,"nodeType":"ParameterList","parameters":[],"src":"13001:0:15"},"scope":8055,"src":"12861:389:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7740,"nodeType":"Block","src":"13310:1016:15","statements":[{"assignments":[7641],"declarations":[{"constant":false,"id":7641,"mutability":"mutable","name":"totalFee","nameLocation":"13329:8:15","nodeType":"VariableDeclaration","scope":7740,"src":"13321:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7640,"name":"uint256","nodeType":"ElementaryTypeName","src":"13321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7642,"nodeType":"VariableDeclarationStatement","src":"13321:16:15"},{"id":7649,"nodeType":"UncheckedBlock","src":"13348:66:15","statements":[{"expression":{"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7643,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"13373:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7644,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7645,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"13394:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13384:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13373:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7648,"nodeType":"ExpressionStatement","src":"13373:29:15"}]},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7650,"name":"mintFeeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"13438:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13454:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7651,"name":"address","nodeType":"ElementaryTypeName","src":"13454:7:15","typeDescriptions":{}}},"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13454:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13438:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7738,"nodeType":"Block","src":"14253:66:15","statements":[{"expression":{"arguments":[{"hexValue":"4552433230207061796d656e74206e6f7420696d706c656d656e746564","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14275:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d5fa66c94196735c67f2446266211f0802e00e6d76b3bdf432fc375279b468a","typeString":"literal_string \"ERC20 payment not implemented\""},"value":"ERC20 payment not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9d5fa66c94196735c67f2446266211f0802e00e6d76b3bdf432fc375279b468a","typeString":"literal_string \"ERC20 payment not implemented\""}],"id":7734,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14268:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14268:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7737,"nodeType":"ExpressionStatement","src":"14268:39:15"}]},"id":7739,"nodeType":"IfStatement","src":"13434:885:15","trueBody":{"id":7733,"nodeType":"Block","src":"13466:781:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13489:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13493:5:15","memberName":"value","nodeType":"MemberAccess","src":"13489:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7659,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"13502:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13512:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":7656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13481:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13481:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7663,"nodeType":"ExpressionStatement","src":"13481:54:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7664,"name":"mintFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"13568:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13596:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13588:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7665,"name":"address","nodeType":"ElementaryTypeName","src":"13588:7:15","typeDescriptions":{}}},"id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13588:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13568:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7670,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"13602:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13613:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13602:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13568:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7704,"nodeType":"IfStatement","src":"13564:364:15","trueBody":{"id":7703,"nodeType":"Block","src":"13616:312:15","statements":[{"assignments":[7675,null],"declarations":[{"constant":false,"id":7675,"mutability":"mutable","name":"success","nameLocation":"13641:7:15","nodeType":"VariableDeclaration","scope":7703,"src":"13636:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7674,"name":"bool","nodeType":"ElementaryTypeName","src":"13636:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7683,"initialValue":{"arguments":[{"hexValue":"","id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13705:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7676,"name":"mintFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"13654:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13671:4:15","memberName":"call","nodeType":"MemberAccess","src":"13654:21:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":7678,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"13683:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3330303030","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13698:5:15","typeDescriptions":{"typeIdentifier":"t_rational_30000_by_1","typeString":"int_const 30000"},"value":"30000"}],"src":"13654:50:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13654:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13635:73:15"},{"condition":{"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13731:8:15","subExpression":{"id":7684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"13732:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7702,"nodeType":"IfStatement","src":"13727:186:15","trueBody":{"id":7701,"nodeType":"Block","src":"13741:172:15","statements":[{"assignments":[7687,null],"declarations":[{"constant":false,"id":7687,"mutability":"mutable","name":"refundSuccess","nameLocation":"13770:13:15","nodeType":"VariableDeclaration","scope":7701,"src":"13765:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7686,"name":"bool","nodeType":"ElementaryTypeName","src":"13765:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7695,"initialValue":{"arguments":[{"hexValue":"","id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13822:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7688,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13789:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13793:6:15","memberName":"sender","nodeType":"MemberAccess","src":"13789:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13800:4:15","memberName":"call","nodeType":"MemberAccess","src":"13789:15:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7691,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"13812:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13789:32:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13789:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13764:61:15"},{"expression":{"arguments":[{"id":7697,"name":"refundSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"13856:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652068616e646c696e67206661696c6564","id":7698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13871:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24f73c583e35b3dd82e831bbf21e485de8ff1cc27407a5600270aa597e94f9bd","typeString":"literal_string \"Fee handling failed\""},"value":"Fee handling failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24f73c583e35b3dd82e831bbf21e485de8ff1cc27407a5600270aa597e94f9bd","typeString":"literal_string \"Fee handling failed\""}],"id":7696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13848:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13848:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7700,"nodeType":"ExpressionStatement","src":"13848:45:15"}]}}]}},{"id":7732,"nodeType":"UncheckedBlock","src":"13956:280:15","statements":[{"assignments":[7706],"declarations":[{"constant":false,"id":7706,"mutability":"mutable","name":"excess","nameLocation":"13993:6:15","nodeType":"VariableDeclaration","scope":7732,"src":"13985:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7705,"name":"uint256","nodeType":"ElementaryTypeName","src":"13985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7711,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14002:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14006:5:15","memberName":"value","nodeType":"MemberAccess","src":"14002:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7709,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"14014:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14002:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13985:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7712,"name":"excess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"14045:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14054:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14045:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7731,"nodeType":"IfStatement","src":"14041:180:15","trueBody":{"id":7730,"nodeType":"Block","src":"14057:164:15","statements":[{"assignments":[7716,null],"declarations":[{"constant":false,"id":7716,"mutability":"mutable","name":"refundSuccess","nameLocation":"14086:13:15","nodeType":"VariableDeclaration","scope":7730,"src":"14081:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7715,"name":"bool","nodeType":"ElementaryTypeName","src":"14081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7724,"initialValue":{"arguments":[{"hexValue":"","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14136:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14105:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14109:6:15","memberName":"sender","nodeType":"MemberAccess","src":"14105:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14116:4:15","memberName":"call","nodeType":"MemberAccess","src":"14105:15:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7720,"name":"excess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"14128:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"14105:30:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14105:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14080:59:15"},{"expression":{"arguments":[{"id":7726,"name":"refundSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"14170:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14185:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":7725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14162:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14162:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7729,"nodeType":"ExpressionStatement","src":"14162:39:15"}]}}]}]}}]},"id":7741,"implemented":true,"kind":"function","modifiers":[],"name":"_processMintFee","nameLocation":"13267:15:15","nodeType":"FunctionDefinition","parameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"quantity","nameLocation":"13291:8:15","nodeType":"VariableDeclaration","scope":7741,"src":"13283:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7636,"name":"uint256","nodeType":"ElementaryTypeName","src":"13283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13282:18:15"},"returnParameters":{"id":7639,"nodeType":"ParameterList","parameters":[],"src":"13310:0:15"},"scope":8055,"src":"13258:1068:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[8767],"body":{"id":7778,"nodeType":"Block","src":"14414:282:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"14441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7750,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"14433:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14433:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14451:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""},"value":"URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""}],"id":7749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14425:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14425:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7755,"nodeType":"ExpressionStatement","src":"14425:60:15"},{"assignments":[7757],"declarations":[{"constant":false,"id":7757,"mutability":"mutable","name":"_tokenURI","nameLocation":"14520:9:15","nodeType":"VariableDeclaration","scope":7778,"src":"14506:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7756,"name":"string","nodeType":"ElementaryTypeName","src":"14506:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7761,"initialValue":{"baseExpression":{"id":7758,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"14532:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":7760,"indexExpression":{"id":7759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"14543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14532:19:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14506:45:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7764,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"14572:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7762,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:15","typeDescriptions":{}}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14583:6:15","memberName":"length","nodeType":"MemberAccess","src":"14566:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14592:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7772,"nodeType":"IfStatement","src":"14562:76:15","trueBody":{"id":7771,"nodeType":"Block","src":"14595:43:15","statements":[{"expression":{"id":7769,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"14617:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7748,"id":7770,"nodeType":"Return","src":"14610:16:15"}]}},{"expression":{"arguments":[{"id":7775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"14680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7773,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"14665:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SPGNFTCollection_$8055_$","typeString":"type(contract super SPGNFTCollection)"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14671:8:15","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":8767,"src":"14665:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14665:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7748,"id":7777,"nodeType":"Return","src":"14658:30:15"}]},"functionSelector":"c87b56dd","id":7779,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"14343:8:15","nodeType":"FunctionDefinition","overrides":{"id":7745,"nodeType":"OverrideSpecifier","overrides":[],"src":"14381:8:15"},"parameters":{"id":7744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"tokenId","nameLocation":"14360:7:15","nodeType":"VariableDeclaration","scope":7779,"src":"14352:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7742,"name":"uint256","nodeType":"ElementaryTypeName","src":"14352:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14351:17:15"},"returnParameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7779,"src":"14399:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7746,"name":"string","nodeType":"ElementaryTypeName","src":"14399:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14398:15:15"},"scope":8055,"src":"14334:362:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7801,"nodeType":"Block","src":"14788:110:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":7790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"14815:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7789,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"14807:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14807:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14825:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7788,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14799:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14799:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"ExpressionStatement","src":"14799:49:15"},{"expression":{"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7795,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"14859:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":7797,"indexExpression":{"id":7796,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"14870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14859:19:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7798,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"14881:9:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"14859:31:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7800,"nodeType":"ExpressionStatement","src":"14859:31:15"}]},"functionSelector":"162094c4","id":7802,"implemented":true,"kind":"function","modifiers":[{"id":7786,"kind":"modifierInvocation","modifierName":{"id":7785,"name":"onlyOwner","nameLocations":["14778:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14778:9:15"},"nodeType":"ModifierInvocation","src":"14778:9:15"}],"name":"setTokenURI","nameLocation":"14713:11:15","nodeType":"FunctionDefinition","parameters":{"id":7784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7781,"mutability":"mutable","name":"tokenId","nameLocation":"14733:7:15","nodeType":"VariableDeclaration","scope":7802,"src":"14725:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7780,"name":"uint256","nodeType":"ElementaryTypeName","src":"14725:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7783,"mutability":"mutable","name":"_tokenURI","nameLocation":"14758:9:15","nodeType":"VariableDeclaration","scope":7802,"src":"14742:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7782,"name":"string","nodeType":"ElementaryTypeName","src":"14742:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14724:44:15"},"returnParameters":{"id":7787,"nodeType":"ParameterList","parameters":[],"src":"14788:0:15"},"scope":8055,"src":"14704:194:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7829,"nodeType":"Block","src":"14966:148:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7810,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"14985:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14995:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7811,"name":"address","nodeType":"ElementaryTypeName","src":"14995:7:15","typeDescriptions":{}}},"id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14995:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14985:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":7816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15007:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":7809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14977:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14977:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7818,"nodeType":"ExpressionStatement","src":"14977:48:15"},{"expression":{"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7819,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"15036:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7821,"indexExpression":{"id":7820,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"15051:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15036:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15061:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15036:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7824,"nodeType":"ExpressionStatement","src":"15036:29:15"},{"eventCall":{"arguments":[{"id":7826,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"15099:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7825,"name":"EscrowWalletAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"15081:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15081:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7828,"nodeType":"EmitStatement","src":"15076:30:15"}]},"functionSelector":"e31c6732","id":7830,"implemented":true,"kind":"function","modifiers":[{"id":7807,"kind":"modifierInvocation","modifierName":{"id":7806,"name":"onlyOwner","nameLocations":["14956:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14956:9:15"},"nodeType":"ModifierInvocation","src":"14956:9:15"}],"name":"addEscrowWallet","nameLocation":"14915:15:15","nodeType":"FunctionDefinition","parameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"wallet","nameLocation":"14939:6:15","nodeType":"VariableDeclaration","scope":7830,"src":"14931:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7803,"name":"address","nodeType":"ElementaryTypeName","src":"14931:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14930:16:15"},"returnParameters":{"id":7808,"nodeType":"ParameterList","parameters":[],"src":"14966:0:15"},"scope":8055,"src":"14906:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7847,"nodeType":"Block","src":"15185:92:15","statements":[{"expression":{"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7837,"name":"isEscrowWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"15196:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7839,"indexExpression":{"id":7838,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"15211:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15196:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15221:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15196:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7842,"nodeType":"ExpressionStatement","src":"15196:30:15"},{"eventCall":{"arguments":[{"id":7844,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"15262:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7843,"name":"EscrowWalletRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"15242:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7846,"nodeType":"EmitStatement","src":"15237:32:15"}]},"functionSelector":"280007bb","id":7848,"implemented":true,"kind":"function","modifiers":[{"id":7835,"kind":"modifierInvocation","modifierName":{"id":7834,"name":"onlyOwner","nameLocations":["15175:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15175:9:15"},"nodeType":"ModifierInvocation","src":"15175:9:15"}],"name":"removeEscrowWallet","nameLocation":"15131:18:15","nodeType":"FunctionDefinition","parameters":{"id":7833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7832,"mutability":"mutable","name":"wallet","nameLocation":"15158:6:15","nodeType":"VariableDeclaration","scope":7848,"src":"15150:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7831,"name":"address","nodeType":"ElementaryTypeName","src":"15150:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15149:16:15"},"returnParameters":{"id":7836,"nodeType":"ParameterList","parameters":[],"src":"15185:0:15"},"scope":8055,"src":"15122:155:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7863,"nodeType":"Block","src":"15341:83:15","statements":[{"expression":{"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7855,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"15352:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7856,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"15363:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15352:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7858,"nodeType":"ExpressionStatement","src":"15352:20:15"},{"eventCall":{"arguments":[{"id":7860,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"15406:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7859,"name":"MintStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"15388:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15388:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7862,"nodeType":"EmitStatement","src":"15383:33:15"}]},"functionSelector":"f8004d31","id":7864,"implemented":true,"kind":"function","modifiers":[{"id":7853,"kind":"modifierInvocation","modifierName":{"id":7852,"name":"onlyOwner","nameLocations":["15331:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15331:9:15"},"nodeType":"ModifierInvocation","src":"15331:9:15"}],"name":"setMintOpen","nameLocation":"15294:11:15","nodeType":"FunctionDefinition","parameters":{"id":7851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7850,"mutability":"mutable","name":"_mintOpen","nameLocation":"15311:9:15","nodeType":"VariableDeclaration","scope":7864,"src":"15306:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7849,"name":"bool","nodeType":"ElementaryTypeName","src":"15306:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15305:16:15"},"returnParameters":{"id":7854,"nodeType":"ParameterList","parameters":[],"src":"15341:0:15"},"scope":8055,"src":"15285:139:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7879,"nodeType":"Block","src":"15493:99:15","statements":[{"expression":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7871,"name":"isPublicMinting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"15504:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7872,"name":"_isPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"15522:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15504:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"ExpressionStatement","src":"15504:27:15"},{"eventCall":{"arguments":[{"id":7876,"name":"_isPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"15574:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7875,"name":"PublicMintingStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"15547:26:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15547:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7878,"nodeType":"EmitStatement","src":"15542:42:15"}]},"functionSelector":"254a4737","id":7880,"implemented":true,"kind":"function","modifiers":[{"id":7869,"kind":"modifierInvocation","modifierName":{"id":7868,"name":"onlyOwner","nameLocations":["15483:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15483:9:15"},"nodeType":"ModifierInvocation","src":"15483:9:15"}],"name":"setPublicMinting","nameLocation":"15441:16:15","nodeType":"FunctionDefinition","parameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"_isPublic","nameLocation":"15463:9:15","nodeType":"VariableDeclaration","scope":7880,"src":"15458:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7865,"name":"bool","nodeType":"ElementaryTypeName","src":"15458:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15457:16:15"},"returnParameters":{"id":7870,"nodeType":"ParameterList","parameters":[],"src":"15493:0:15"},"scope":8055,"src":"15432:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7897,"nodeType":"Block","src":"15654:76:15","statements":[{"expression":{"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7887,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"15665:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7889,"indexExpression":{"id":7888,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"15673:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15665:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15683:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15665:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7892,"nodeType":"ExpressionStatement","src":"15665:22:15"},{"eventCall":{"arguments":[{"id":7894,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"15715:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7893,"name":"MinterAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"15703:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15703:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7896,"nodeType":"EmitStatement","src":"15698:24:15"}]},"functionSelector":"983b2d56","id":7898,"implemented":true,"kind":"function","modifiers":[{"id":7885,"kind":"modifierInvocation","modifierName":{"id":7884,"name":"onlyOwner","nameLocations":["15644:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15644:9:15"},"nodeType":"ModifierInvocation","src":"15644:9:15"}],"name":"addMinter","nameLocation":"15609:9:15","nodeType":"FunctionDefinition","parameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"minter","nameLocation":"15627:6:15","nodeType":"VariableDeclaration","scope":7898,"src":"15619:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7881,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15618:16:15"},"returnParameters":{"id":7886,"nodeType":"ParameterList","parameters":[],"src":"15654:0:15"},"scope":8055,"src":"15600:130:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7915,"nodeType":"Block","src":"15795:79:15","statements":[{"expression":{"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7905,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"15806:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7907,"indexExpression":{"id":7906,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"15814:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15806:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15824:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15806:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7910,"nodeType":"ExpressionStatement","src":"15806:23:15"},{"eventCall":{"arguments":[{"id":7912,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"15859:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7911,"name":"MinterRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"15845:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15845:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"EmitStatement","src":"15840:26:15"}]},"functionSelector":"3092afd5","id":7916,"implemented":true,"kind":"function","modifiers":[{"id":7903,"kind":"modifierInvocation","modifierName":{"id":7902,"name":"onlyOwner","nameLocations":["15785:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15785:9:15"},"nodeType":"ModifierInvocation","src":"15785:9:15"}],"name":"removeMinter","nameLocation":"15747:12:15","nodeType":"FunctionDefinition","parameters":{"id":7901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"minter","nameLocation":"15768:6:15","nodeType":"VariableDeclaration","scope":7916,"src":"15760:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7899,"name":"address","nodeType":"ElementaryTypeName","src":"15760:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15759:16:15"},"returnParameters":{"id":7904,"nodeType":"ParameterList","parameters":[],"src":"15795:0:15"},"scope":8055,"src":"15738:136:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7931,"nodeType":"Block","src":"15939:77:15","statements":[{"expression":{"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7923,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"15950:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7924,"name":"_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"15960:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15950:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7926,"nodeType":"ExpressionStatement","src":"15950:18:15"},{"eventCall":{"arguments":[{"id":7928,"name":"_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"15999:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7927,"name":"MintFeeChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"15984:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7930,"nodeType":"EmitStatement","src":"15979:29:15"}]},"functionSelector":"eddd0d9c","id":7932,"implemented":true,"kind":"function","modifiers":[{"id":7921,"kind":"modifierInvocation","modifierName":{"id":7920,"name":"onlyOwner","nameLocations":["15929:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15929:9:15"},"nodeType":"ModifierInvocation","src":"15929:9:15"}],"name":"setMintFee","nameLocation":"15891:10:15","nodeType":"FunctionDefinition","parameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"_mintFee","nameLocation":"15910:8:15","nodeType":"VariableDeclaration","scope":7932,"src":"15902:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7917,"name":"uint256","nodeType":"ElementaryTypeName","src":"15902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15901:18:15"},"returnParameters":{"id":7922,"nodeType":"ParameterList","parameters":[],"src":"15939:0:15"},"scope":8055,"src":"15882:134:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7943,"nodeType":"Block","src":"16088:42:15","statements":[{"expression":{"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7939,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"16099:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7940,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"16115:7:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"16099:23:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7942,"nodeType":"ExpressionStatement","src":"16099:23:15"}]},"functionSelector":"55f804b3","id":7944,"implemented":true,"kind":"function","modifiers":[{"id":7937,"kind":"modifierInvocation","modifierName":{"id":7936,"name":"onlyOwner","nameLocations":["16078:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16078:9:15"},"nodeType":"ModifierInvocation","src":"16078:9:15"}],"name":"setBaseURI","nameLocation":"16033:10:15","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"baseURI","nameLocation":"16060:7:15","nodeType":"VariableDeclaration","scope":7944,"src":"16044:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7933,"name":"string","nodeType":"ElementaryTypeName","src":"16044:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16043:25:15"},"returnParameters":{"id":7938,"nodeType":"ParameterList","parameters":[],"src":"16088:0:15"},"scope":8055,"src":"16024:106:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7955,"nodeType":"Block","src":"16211:45:15","statements":[{"expression":{"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7951,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"16222:11:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7952,"name":"_contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"16236:12:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"16222:26:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7954,"nodeType":"ExpressionStatement","src":"16222:26:15"}]},"functionSelector":"938e3d7b","id":7956,"implemented":true,"kind":"function","modifiers":[{"id":7949,"kind":"modifierInvocation","modifierName":{"id":7948,"name":"onlyOwner","nameLocations":["16201:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16201:9:15"},"nodeType":"ModifierInvocation","src":"16201:9:15"}],"name":"setContractURI","nameLocation":"16147:14:15","nodeType":"FunctionDefinition","parameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"_contractURI","nameLocation":"16178:12:15","nodeType":"VariableDeclaration","scope":7956,"src":"16162:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7945,"name":"string","nodeType":"ElementaryTypeName","src":"16162:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16161:30:15"},"returnParameters":{"id":7950,"nodeType":"ParameterList","parameters":[],"src":"16211:0:15"},"scope":8055,"src":"16138:118:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7964,"nodeType":"Block","src":"16300:27:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7961,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"16311:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16311:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7963,"nodeType":"ExpressionStatement","src":"16311:8:15"}]},"functionSelector":"8456cb59","id":7965,"implemented":true,"kind":"function","modifiers":[{"id":7959,"kind":"modifierInvocation","modifierName":{"id":7958,"name":"onlyOwner","nameLocations":["16290:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16290:9:15"},"nodeType":"ModifierInvocation","src":"16290:9:15"}],"name":"pause","nameLocation":"16273:5:15","nodeType":"FunctionDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[],"src":"16278:2:15"},"returnParameters":{"id":7960,"nodeType":"ParameterList","parameters":[],"src":"16300:0:15"},"scope":8055,"src":"16264:63:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7973,"nodeType":"Block","src":"16373:29:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7970,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"16384:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16384:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7972,"nodeType":"ExpressionStatement","src":"16384:10:15"}]},"functionSelector":"3f4ba83a","id":7974,"implemented":true,"kind":"function","modifiers":[{"id":7968,"kind":"modifierInvocation","modifierName":{"id":7967,"name":"onlyOwner","nameLocations":["16363:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16363:9:15"},"nodeType":"ModifierInvocation","src":"16363:9:15"}],"name":"unpause","nameLocation":"16344:7:15","nodeType":"FunctionDefinition","parameters":{"id":7966,"nodeType":"ParameterList","parameters":[],"src":"16351:2:15"},"returnParameters":{"id":7969,"nodeType":"ParameterList","parameters":[],"src":"16373:0:15"},"scope":8055,"src":"16335:67:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8776],"body":{"id":7982,"nodeType":"Block","src":"16477:39:15","statements":[{"expression":{"id":7980,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"16495:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7979,"id":7981,"nodeType":"Return","src":"16488:20:15"}]},"id":7983,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"16419:8:15","nodeType":"FunctionDefinition","overrides":{"id":7976,"nodeType":"OverrideSpecifier","overrides":[],"src":"16444:8:15"},"parameters":{"id":7975,"nodeType":"ParameterList","parameters":[],"src":"16427:2:15"},"returnParameters":{"id":7979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7983,"src":"16462:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7977,"name":"string","nodeType":"ElementaryTypeName","src":"16462:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16461:15:15"},"scope":8055,"src":"16410:106:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8003,"nodeType":"Block","src":"16587:107:15","statements":[{"condition":{"id":7990,"name":"isPublicMinting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"16602:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7993,"nodeType":"IfStatement","src":"16598:32:15","trueBody":{"expression":{"hexValue":"74727565","id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16626:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7989,"id":7992,"nodeType":"Return","src":"16619:11:15"}},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7994,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"16648:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7996,"indexExpression":{"id":7995,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"16656:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16648:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7997,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"16668:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16668:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7999,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"16679:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16668:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16648:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7989,"id":8002,"nodeType":"Return","src":"16641:45:15"}]},"functionSelector":"c2ba4744","id":8004,"implemented":true,"kind":"function","modifiers":[],"name":"canMint","nameLocation":"16533:7:15","nodeType":"FunctionDefinition","parameters":{"id":7986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7985,"mutability":"mutable","name":"account","nameLocation":"16549:7:15","nodeType":"VariableDeclaration","scope":8004,"src":"16541:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7984,"name":"address","nodeType":"ElementaryTypeName","src":"16541:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16540:17:15"},"returnParameters":{"id":7989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8004,"src":"16581:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7987,"name":"bool","nodeType":"ElementaryTypeName","src":"16581:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16580:6:15"},"scope":8055,"src":"16524:170:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8015,"nodeType":"Block","src":"16774:44:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8011,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"16792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8012,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"16802:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16792:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8010,"id":8014,"nodeType":"Return","src":"16785:25:15"}]},"functionSelector":"559e775b","id":8016,"implemented":true,"kind":"function","modifiers":[],"name":"getMintPrice","nameLocation":"16711:12:15","nodeType":"FunctionDefinition","parameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"quantity","nameLocation":"16732:8:15","nodeType":"VariableDeclaration","scope":8016,"src":"16724:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8005,"name":"uint256","nodeType":"ElementaryTypeName","src":"16724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16723:18:15"},"returnParameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8016,"src":"16765:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8008,"name":"uint256","nodeType":"ElementaryTypeName","src":"16765:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16764:9:15"},"scope":8055,"src":"16702:116:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8026,"nodeType":"Block","src":"16885:51:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"16903:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8022,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"16915:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16915:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16903:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8020,"id":8025,"nodeType":"Return","src":"16896:32:15"}]},"functionSelector":"7ecc2b56","id":8027,"implemented":true,"kind":"function","modifiers":[],"name":"availableSupply","nameLocation":"16835:15:15","nodeType":"FunctionDefinition","parameters":{"id":8017,"nodeType":"ParameterList","parameters":[],"src":"16850:2:15"},"returnParameters":{"id":8020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8027,"src":"16876:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8018,"name":"uint256","nodeType":"ElementaryTypeName","src":"16876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16875:9:15"},"scope":8055,"src":"16826:110:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8038,"nodeType":"Block","src":"17008:38:15","statements":[{"expression":{"baseExpression":{"id":8034,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"17026:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8036,"indexExpression":{"id":8035,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"17033:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17026:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8033,"id":8037,"nodeType":"Return","src":"17019:19:15"}]},"functionSelector":"2d0335ab","id":8039,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"16953:8:15","nodeType":"FunctionDefinition","parameters":{"id":8030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8029,"mutability":"mutable","name":"user","nameLocation":"16970:4:15","nodeType":"VariableDeclaration","scope":8039,"src":"16962:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8028,"name":"address","nodeType":"ElementaryTypeName","src":"16962:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16961:14:15"},"returnParameters":{"id":8033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8039,"src":"16999:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8031,"name":"uint256","nodeType":"ElementaryTypeName","src":"16999:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16998:9:15"},"scope":8055,"src":"16944:102:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8702],"body":{"id":8053,"nodeType":"Block","src":"17146:62:15","statements":[{"expression":{"arguments":[{"id":8050,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"17188:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8048,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"17164:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SPGNFTCollection_$8055_$","typeString":"type(contract super SPGNFTCollection)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17170:17:15","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"17164:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17164:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8047,"id":8052,"nodeType":"Return","src":"17157:43:15"}]},"functionSelector":"01ffc9a7","id":8054,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"17063:17:15","nodeType":"FunctionDefinition","overrides":{"id":8044,"nodeType":"OverrideSpecifier","overrides":[{"id":8043,"name":"ERC721A","nameLocations":["17122:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":10402,"src":"17122:7:15"}],"src":"17113:17:15"},"parameters":{"id":8042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8041,"mutability":"mutable","name":"interfaceId","nameLocation":"17088:11:15","nodeType":"VariableDeclaration","scope":8054,"src":"17081:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17081:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17080:20:15"},"returnParameters":{"id":8047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8054,"src":"17140:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8045,"name":"bool","nodeType":"ElementaryTypeName","src":"17140:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17139:6:15"},"scope":8055,"src":"17054:154:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8056,"src":"1309:15902:15","usedErrors":[13,18,276,279,376,445,447,2185,2190,2195,10408,10411,10414,10417,10420,10423,10426,10429,10432,10435,10438,10441,10444,10447,10450,10453,10456,10459],"usedEvents":[24,152,268,273,6530,6538,6542,6546,6550,6554,6558,6562,6566,6577,6589,10491,10500,10509,10622]}],"src":"33:17182:15"},"id":15},"contracts/SPGNFTFactory.sol":{"ast":{"absolutePath":"contracts/SPGNFTFactory.sol","exportedSymbols":{"Context":[202],"ECDSA":[2522],"EIP712":[2749],"ERC721A":[10402],"ERC721A__IERC721Receiver":[8320],"IERC5267":[172],"IERC6551Registry":[6431],"IERC721A":[10623],"ISPGNFT":[6414],"MessageHashUtils":[2835],"Ownable":[147],"Pausable":[362],"ReentrancyGuard":[431],"SPGNFTCollection":[8055],"SPGNFTFactory":[8302],"ShortString":[437],"ShortStrings":[648]},"id":8303,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8057,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"contracts/SPGNFTCollection.sol","file":"./SPGNFTCollection.sol","id":8058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8303,"sourceUnit":8056,"src":"61:32:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SPGNFTFactory","contractDependencies":[8055],"contractKind":"contract","fullyImplemented":true,"id":8302,"linearizedBaseContracts":[8302],"name":"SPGNFTFactory","nameLocation":"106:13:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ebf595f8","id":8063,"mutability":"mutable","name":"deployedCollections","nameLocation":"164:19:16","nodeType":"VariableDeclaration","scope":8302,"src":"127:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":8062,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8059,"name":"address","nodeType":"ElementaryTypeName","src":"135:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"127:29:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8060,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8061,"nodeType":"ArrayTypeName","src":"146:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"167ef495","id":8066,"mutability":"mutable","name":"allCollections","nameLocation":"207:14:16","nodeType":"VariableDeclaration","scope":8302,"src":"190:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8064,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8065,"nodeType":"ArrayTypeName","src":"190:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"1309157dd19792bdfd72678ba7958d9d18ec4b35f3c362c6203332bb2c771e66","id":8078,"name":"CollectionDeployed","nameLocation":"240:18:16","nodeType":"EventDefinition","parameters":{"id":8077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8068,"indexed":true,"mutability":"mutable","name":"collection","nameLocation":"285:10:16","nodeType":"VariableDeclaration","scope":8078,"src":"269:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8067,"name":"address","nodeType":"ElementaryTypeName","src":"269:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8070,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"322:5:16","nodeType":"VariableDeclaration","scope":8078,"src":"306:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8069,"name":"address","nodeType":"ElementaryTypeName","src":"306:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8072,"indexed":true,"mutability":"mutable","name":"deployer","nameLocation":"354:8:16","nodeType":"VariableDeclaration","scope":8078,"src":"338:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8071,"name":"address","nodeType":"ElementaryTypeName","src":"338:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8074,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"380:4:16","nodeType":"VariableDeclaration","scope":8078,"src":"373:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8073,"name":"string","nodeType":"ElementaryTypeName","src":"373:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8076,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"402:6:16","nodeType":"VariableDeclaration","scope":8078,"src":"395:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8075,"name":"string","nodeType":"ElementaryTypeName","src":"395:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"258:157:16"},"src":"234:182:16"},{"body":{"id":8209,"nodeType":"Block","src":"606:896:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":8093,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"659:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"666:4:16","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6376,"src":"659:11:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"653:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8091,"name":"bytes","nodeType":"ElementaryTypeName","src":"653:5:16","typeDescriptions":{}}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"653:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"672:6:16","memberName":"length","nodeType":"MemberAccess","src":"653:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"653:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"645:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"645:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8100,"nodeType":"ExpressionStatement","src":"645:38:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":8104,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"708:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"715:6:16","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":6378,"src":"708:13:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"702:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8102,"name":"bytes","nodeType":"ElementaryTypeName","src":"702:5:16","typeDescriptions":{}}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"702:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:16","memberName":"length","nodeType":"MemberAccess","src":"702:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"702:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"694:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8111,"nodeType":"ExpressionStatement","src":"694:40:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8113,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"753:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"760:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6392,"src":"753:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"769:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8115,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:16","typeDescriptions":{}}},"id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"769:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"753:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"745:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8121,"nodeType":"ExpressionStatement","src":"745:35:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8123,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"799:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"806:9:16","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":6384,"src":"799:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"799:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"791:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"791:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8128,"nodeType":"ExpressionStatement","src":"791:29:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8130,"name":"tbaRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"839:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"862:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"854:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8131,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:16","typeDescriptions":{}}},"id":8134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"854:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"839:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"831:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"831:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8137,"nodeType":"ExpressionStatement","src":"831:34:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8139,"name":"tbaImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"884:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"913:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"905:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8140,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:16","typeDescriptions":{}}},"id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"905:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"884:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"876:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8146,"nodeType":"ExpressionStatement","src":"876:40:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8147,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"941:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"948:7:16","memberName":"mintFee","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"941:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"958:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8162,"nodeType":"IfStatement","src":"937:97:16","trueBody":{"id":8161,"nodeType":"Block","src":"961:73:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8152,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"984:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"991:16:16","memberName":"mintFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":6390,"src":"984:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1019:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1011:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8154,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:16","typeDescriptions":{}}},"id":8157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1011:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"984:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"976:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8160,"nodeType":"ExpressionStatement","src":"976:46:16"}]}},{"assignments":[8165],"declarations":[{"constant":false,"id":8165,"mutability":"mutable","name":"newCollection","nameLocation":"1071:13:16","nodeType":"VariableDeclaration","scope":8209,"src":"1054:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"},"typeName":{"id":8164,"nodeType":"UserDefinedTypeName","pathNode":{"id":8163,"name":"SPGNFTCollection","nameLocations":["1054:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":8055,"src":"1054:16:16"},"referencedDeclaration":8055,"src":"1054:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}},"visibility":"internal"}],"id":8173,"initialValue":{"arguments":[{"id":8169,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1122:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},{"id":8170,"name":"tbaRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"1143:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8171,"name":"tbaImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"1169:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1087:20:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_struct$_InitParams_$6397_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_SPGNFTCollection_$8055_$","typeString":"function (struct ISPGNFT.InitParams memory,address,address) returns (contract SPGNFTCollection)"},"typeName":{"id":8167,"nodeType":"UserDefinedTypeName","pathNode":{"id":8166,"name":"SPGNFTCollection","nameLocations":["1091:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":8055,"src":"1091:16:16"},"referencedDeclaration":8055,"src":"1091:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1087:110:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}},"nodeType":"VariableDeclarationStatement","src":"1054:143:16"},{"expression":{"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8174,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1208:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8177,"name":"newCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"1229:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SPGNFTCollection_$8055","typeString":"contract SPGNFTCollection"}],"id":8176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1221:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8175,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:16","typeDescriptions":{}}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8180,"nodeType":"ExpressionStatement","src":"1208:35:16"},{"expression":{"arguments":[{"id":8186,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1303:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":8181,"name":"deployedCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"1264:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":8184,"indexExpression":{"expression":{"id":8182,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1284:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1291:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6392,"src":"1284:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1264:33:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1298:4:16","memberName":"push","nodeType":"MemberAccess","src":"1264:38:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1264:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8188,"nodeType":"ExpressionStatement","src":"1264:50:16"},{"expression":{"arguments":[{"id":8192,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1345:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8189,"name":"allCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"1325:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1340:4:16","memberName":"push","nodeType":"MemberAccess","src":"1325:19:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8194,"nodeType":"ExpressionStatement","src":"1325:31:16"},{"eventCall":{"arguments":[{"id":8196,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1401:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8197,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1413:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1420:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6392,"src":"1413:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1427:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1431:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1427:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8201,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1439:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1446:4:16","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6376,"src":"1439:11:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8203,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"1452:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"id":8204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1459:6:16","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":6378,"src":"1452:13:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8195,"name":"CollectionDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"1382:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,address,string memory,string memory)"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1382:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8206,"nodeType":"EmitStatement","src":"1377:89:16"},{"expression":{"id":8207,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1484:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8089,"id":8208,"nodeType":"Return","src":"1477:17:16"}]},"functionSelector":"637c4458","id":8210,"implemented":true,"kind":"function","modifiers":[],"name":"deployCollection","nameLocation":"437:16:16","nodeType":"FunctionDefinition","parameters":{"id":8086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"params","nameLocation":"490:6:16","nodeType":"VariableDeclaration","scope":8210,"src":"464:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams"},"typeName":{"id":8080,"nodeType":"UserDefinedTypeName","pathNode":{"id":8079,"name":"ISPGNFT.InitParams","nameLocations":["464:7:16","472:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":6397,"src":"464:18:16"},"referencedDeclaration":6397,"src":"464:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_storage_ptr","typeString":"struct ISPGNFT.InitParams"}},"visibility":"internal"},{"constant":false,"id":8083,"mutability":"mutable","name":"tbaRegistry","nameLocation":"515:11:16","nodeType":"VariableDeclaration","scope":8210,"src":"507:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8082,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8085,"mutability":"mutable","name":"tbaImplementation","nameLocation":"545:17:16","nodeType":"VariableDeclaration","scope":8210,"src":"537:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8084,"name":"address","nodeType":"ElementaryTypeName","src":"537:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"453:116:16"},"returnParameters":{"id":8089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"collection","nameLocation":"594:10:16","nodeType":"VariableDeclaration","scope":8210,"src":"586:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8087,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"585:20:16"},"scope":8302,"src":"428:1074:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8258,"nodeType":"Block","src":"1804:509:16","statements":[{"assignments":[8233],"declarations":[{"constant":false,"id":8233,"mutability":"mutable","name":"params","nameLocation":"1841:6:16","nodeType":"VariableDeclaration","scope":8258,"src":"1815:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams"},"typeName":{"id":8232,"nodeType":"UserDefinedTypeName","pathNode":{"id":8231,"name":"ISPGNFT.InitParams","nameLocations":["1815:7:16","1823:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":6397,"src":"1815:18:16"},"referencedDeclaration":6397,"src":"1815:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_storage_ptr","typeString":"struct ISPGNFT.InitParams"}},"visibility":"internal"}],"id":8251,"initialValue":{"arguments":[{"id":8236,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"1890:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8237,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"1917:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8238,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8216,"src":"1947:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8239,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"1982:11:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3130303030","id":8240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2019:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},{"hexValue":"30","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":8244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2086:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2078:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8242,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:16","typeDescriptions":{}}},"id":8245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2078:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2121:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2148:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":8248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2178:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":8249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2214:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8234,"name":"ISPGNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"1850:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISPGNFT_$6414_$","typeString":"type(contract ISPGNFT)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1858:10:16","memberName":"InitParams","nodeType":"MemberAccess","referencedDeclaration":6397,"src":"1850:18:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InitParams_$6397_storage_ptr_$","typeString":"type(struct ISPGNFT.InitParams storage pointer)"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1884:4:16","1909:6:16","1938:7:16","1969:11:16","2008:9:16","2039:7:16","2064:12:16","2103:16:16","2141:5:16","2168:8:16","2197:15:16"],"names":["name","symbol","baseURI","contractURI","maxSupply","mintFee","mintFeeToken","mintFeeRecipient","owner","mintOpen","isPublicMinting"],"nodeType":"FunctionCall","src":"1850:381:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1815:416:16"},{"expression":{"arguments":[{"id":8253,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"2266:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"}},{"id":8254,"name":"tbaRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"2274:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8255,"name":"tbaImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"2287:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_InitParams_$6397_memory_ptr","typeString":"struct ISPGNFT.InitParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8252,"name":"deployCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"2249:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_InitParams_$6397_memory_ptr_$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (struct ISPGNFT.InitParams memory,address,address) returns (address)"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8228,"id":8257,"nodeType":"Return","src":"2242:63:16"}]},"functionSelector":"2470ea1b","id":8259,"implemented":true,"kind":"function","modifiers":[],"name":"deployStoryCollection","nameLocation":"1519:21:16","nodeType":"FunctionDefinition","parameters":{"id":8225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8212,"mutability":"mutable","name":"name","nameLocation":"1565:4:16","nodeType":"VariableDeclaration","scope":8259,"src":"1551:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8211,"name":"string","nodeType":"ElementaryTypeName","src":"1551:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8214,"mutability":"mutable","name":"symbol","nameLocation":"1594:6:16","nodeType":"VariableDeclaration","scope":8259,"src":"1580:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8213,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8216,"mutability":"mutable","name":"baseURI","nameLocation":"1625:7:16","nodeType":"VariableDeclaration","scope":8259,"src":"1611:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8215,"name":"string","nodeType":"ElementaryTypeName","src":"1611:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8218,"mutability":"mutable","name":"contractURI","nameLocation":"1657:11:16","nodeType":"VariableDeclaration","scope":8259,"src":"1643:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8217,"name":"string","nodeType":"ElementaryTypeName","src":"1643:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8220,"mutability":"mutable","name":"owner","nameLocation":"1687:5:16","nodeType":"VariableDeclaration","scope":8259,"src":"1679:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8219,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8222,"mutability":"mutable","name":"tbaRegistry","nameLocation":"1711:11:16","nodeType":"VariableDeclaration","scope":8259,"src":"1703:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8221,"name":"address","nodeType":"ElementaryTypeName","src":"1703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8224,"mutability":"mutable","name":"tbaImplementation","nameLocation":"1741:17:16","nodeType":"VariableDeclaration","scope":8259,"src":"1733:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8223,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1540:225:16"},"returnParameters":{"id":8228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8227,"mutability":"mutable","name":"collection","nameLocation":"1792:10:16","nodeType":"VariableDeclaration","scope":8259,"src":"1784:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8226,"name":"address","nodeType":"ElementaryTypeName","src":"1784:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1783:20:16"},"scope":8302,"src":"1510:803:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8271,"nodeType":"Block","src":"2413:52:16","statements":[{"expression":{"baseExpression":{"id":8267,"name":"deployedCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"2431:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":8269,"indexExpression":{"id":8268,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"2451:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2431:26:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":8266,"id":8270,"nodeType":"Return","src":"2424:33:16"}]},"functionSelector":"3b688672","id":8272,"implemented":true,"kind":"function","modifiers":[],"name":"getDeployedCollections","nameLocation":"2334:22:16","nodeType":"FunctionDefinition","parameters":{"id":8262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8261,"mutability":"mutable","name":"owner","nameLocation":"2365:5:16","nodeType":"VariableDeclaration","scope":8272,"src":"2357:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8260,"name":"address","nodeType":"ElementaryTypeName","src":"2357:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2356:15:16"},"returnParameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8272,"src":"2395:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8263,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8264,"nodeType":"ArrayTypeName","src":"2395:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2394:18:16"},"scope":8302,"src":"2325:140:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8280,"nodeType":"Block","src":"2543:47:16","statements":[{"expression":{"expression":{"id":8277,"name":"allCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"2561:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2576:6:16","memberName":"length","nodeType":"MemberAccess","src":"2561:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8276,"id":8279,"nodeType":"Return","src":"2554:28:16"}]},"functionSelector":"a4f0a9b9","id":8281,"implemented":true,"kind":"function","modifiers":[],"name":"getAllCollectionsCount","nameLocation":"2486:22:16","nodeType":"FunctionDefinition","parameters":{"id":8273,"nodeType":"ParameterList","parameters":[],"src":"2508:2:16"},"returnParameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8281,"src":"2534:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2533:9:16"},"scope":8302,"src":"2477:113:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8300,"nodeType":"Block","src":"2674:119:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8289,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"2693:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8290,"name":"allCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"2701:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2716:6:16","memberName":"length","nodeType":"MemberAccess","src":"2701:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2693:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e4445585f4f55545f4f465f424f554e4453","id":8293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2724:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd62915","typeString":"literal_string \"INDEX_OUT_OF_BOUNDS\""},"value":"INDEX_OUT_OF_BOUNDS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd62915","typeString":"literal_string \"INDEX_OUT_OF_BOUNDS\""}],"id":8288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2685:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8295,"nodeType":"ExpressionStatement","src":"2685:61:16"},{"expression":{"baseExpression":{"id":8296,"name":"allCollections","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"2764:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8298,"indexExpression":{"id":8297,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"2779:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2764:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8287,"id":8299,"nodeType":"Return","src":"2757:28:16"}]},"functionSelector":"ad8e8253","id":8301,"implemented":true,"kind":"function","modifiers":[],"name":"getCollectionAt","nameLocation":"2611:15:16","nodeType":"FunctionDefinition","parameters":{"id":8284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"index","nameLocation":"2635:5:16","nodeType":"VariableDeclaration","scope":8301,"src":"2627:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2626:15:16"},"returnParameters":{"id":8287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8301,"src":"2665:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8285,"name":"address","nodeType":"ElementaryTypeName","src":"2665:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2664:9:16"},"scope":8302,"src":"2602:191:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8303,"src":"97:2699:16","usedErrors":[],"usedEvents":[8078]}],"src":"33:2764:16"},"id":16},"erc721a/contracts/ERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/ERC721A.sol","exportedSymbols":{"ERC721A":[10402],"ERC721A__IERC721Receiver":[8320],"IERC721A":[10623]},"id":10403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8304,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:17"},{"absolutePath":"erc721a/contracts/IERC721A.sol","file":"./IERC721A.sol","id":8305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10403,"sourceUnit":10624,"src":"109:24:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721A__IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":8306,"nodeType":"StructuredDocumentation","src":"135:51:17","text":" @dev Interface of ERC721 token receiver."},"fullyImplemented":false,"id":8320,"linearizedBaseContracts":[8320],"name":"ERC721A__IERC721Receiver","nameLocation":"197:24:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"150b7a02","id":8319,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"237:16:17","nodeType":"FunctionDefinition","parameters":{"id":8315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8308,"mutability":"mutable","name":"operator","nameLocation":"271:8:17","nodeType":"VariableDeclaration","scope":8319,"src":"263:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8307,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8310,"mutability":"mutable","name":"from","nameLocation":"297:4:17","nodeType":"VariableDeclaration","scope":8319,"src":"289:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8309,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8312,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:17","nodeType":"VariableDeclaration","scope":8319,"src":"311:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8311,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8314,"mutability":"mutable","name":"data","nameLocation":"351:4:17","nodeType":"VariableDeclaration","scope":8319,"src":"336:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8313,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"253:108:17"},"returnParameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8319,"src":"380:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8316,"name":"bytes4","nodeType":"ElementaryTypeName","src":"380:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"379:8:17"},"scope":8320,"src":"228:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10403,"src":"187:203:17","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8322,"name":"IERC721A","nameLocations":["1073:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":10623,"src":"1073:8:17"},"id":8323,"nodeType":"InheritanceSpecifier","src":"1073:8:17"}],"canonicalName":"ERC721A","contractDependencies":[],"contractKind":"contract","documentation":{"id":8321,"nodeType":"StructuredDocumentation","src":"392:660:17","text":" @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n The `_sequentialUpTo()` function can be overriden to enable spot mints\n (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."},"fullyImplemented":true,"id":10402,"linearizedBaseContracts":[10402,10623],"name":"ERC721A","nameLocation":"1062:7:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC721A.TokenApprovalRef","id":8326,"members":[{"constant":false,"id":8325,"mutability":"mutable","name":"value","nameLocation":"1215:5:17","nodeType":"VariableDeclaration","scope":8326,"src":"1207:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8324,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenApprovalRef","nameLocation":"1180:16:17","nodeType":"StructDefinition","scope":10402,"src":"1173:54:17","visibility":"public"},{"constant":true,"id":8334,"mutability":"constant","name":"_BITMASK_ADDRESS_DATA_ENTRY","nameLocation":"1488:27:17","nodeType":"VariableDeclaration","scope":10402,"src":"1463:68:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":8333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1524:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1519:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":8331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1518:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1518:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"visibility":"private"},{"constant":true,"id":8337,"mutability":"constant","name":"_BITPOS_NUMBER_MINTED","nameLocation":"1629:21:17","nodeType":"VariableDeclaration","scope":10402,"src":"1604:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3634","id":8336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1653:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"visibility":"private"},{"constant":true,"id":8340,"mutability":"constant","name":"_BITPOS_NUMBER_BURNED","nameLocation":"1753:21:17","nodeType":"VariableDeclaration","scope":10402,"src":"1728:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313238","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"private"},{"constant":true,"id":8343,"mutability":"constant","name":"_BITPOS_AUX","nameLocation":"1869:11:17","nodeType":"VariableDeclaration","scope":10402,"src":"1844:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313932","id":8342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"private"},{"constant":true,"id":8351,"mutability":"constant","name":"_BITMASK_AUX_COMPLEMENT","nameLocation":"1999:23:17","nodeType":"VariableDeclaration","scope":10402,"src":"1974:65:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":8350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":8347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":8346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2031:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"2026:8:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}}],"id":8348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2025:10:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2025:14:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"constant":true,"id":8354,"mutability":"constant","name":"_BITPOS_START_TIMESTAMP","nameLocation":"2136:23:17","nodeType":"VariableDeclaration","scope":10402,"src":"2111:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":8353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":8359,"mutability":"constant","name":"_BITMASK_BURNED","nameLocation":"2258:15:17","nodeType":"VariableDeclaration","scope":10402,"src":"2233:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"},"id":8358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323234","id":8357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2281:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"src":"2276:8:17","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"}},"visibility":"private"},{"constant":true,"id":8362,"mutability":"constant","name":"_BITPOS_NEXT_INITIALIZED","nameLocation":"2390:24:17","nodeType":"VariableDeclaration","scope":10402,"src":"2365:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323235","id":8361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2417:3:17","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"visibility":"private"},{"constant":true,"id":8367,"mutability":"constant","name":"_BITMASK_NEXT_INITIALIZED","nameLocation":"2522:25:17","nodeType":"VariableDeclaration","scope":10402,"src":"2497:61:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"},"id":8366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323235","id":8365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:3:17","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"src":"2550:8:17","typeDescriptions":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"}},"visibility":"private"},{"constant":true,"id":8370,"mutability":"constant","name":"_BITPOS_EXTRA_DATA","nameLocation":"2650:18:17","nodeType":"VariableDeclaration","scope":10402,"src":"2625:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323332","id":8369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"visibility":"private"},{"constant":true,"id":8378,"mutability":"constant","name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nameLocation":"2792:30:17","nodeType":"VariableDeclaration","scope":10402,"src":"2767:72:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"},"id":8377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"},"id":8374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2826:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323332","id":8373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2831:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"src":"2826:8:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}}],"id":8375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2825:10:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2825:14:17","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"}},"visibility":"private"},{"constant":true,"id":8386,"mutability":"constant","name":"_BITMASK_ADDRESS","nameLocation":"2924:16:17","nodeType":"VariableDeclaration","scope":10402,"src":"2899:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":8385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":8382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2944:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":8381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2944:8:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":8383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2943:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2943:14:17","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"constant":true,"id":8389,"mutability":"constant","name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nameLocation":"3265:32:17","nodeType":"VariableDeclaration","scope":10402,"src":"3240:64:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8387,"name":"uint256","nodeType":"ElementaryTypeName","src":"3240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":8388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3300:4:17","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":8392,"mutability":"constant","name":"_TRANSFER_EVENT_SIGNATURE","nameLocation":"3451:25:17","nodeType":"VariableDeclaration","scope":10402,"src":"3426:127:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3426:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:66:17","typeDescriptions":{"typeIdentifier":"t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1","typeString":"int_const 1003...(70 digits omitted)...2991"},"value":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"visibility":"private"},{"constant":false,"id":8394,"mutability":"mutable","name":"_currentIndex","nameLocation":"3796:13:17","nodeType":"VariableDeclaration","scope":10402,"src":"3780:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8396,"mutability":"mutable","name":"_burnCounter","nameLocation":"3868:12:17","nodeType":"VariableDeclaration","scope":10402,"src":"3852:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8398,"mutability":"mutable","name":"_name","nameLocation":"3920:5:17","nodeType":"VariableDeclaration","scope":10402,"src":"3905:20:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8397,"name":"string","nodeType":"ElementaryTypeName","src":"3905:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":8400,"mutability":"mutable","name":"_symbol","nameLocation":"3967:7:17","nodeType":"VariableDeclaration","scope":10402,"src":"3952:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8399,"name":"string","nodeType":"ElementaryTypeName","src":"3952:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":8404,"mutability":"mutable","name":"_packedOwnerships","nameLocation":"4394:17:17","nodeType":"VariableDeclaration","scope":10402,"src":"4358:53:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8403,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"4366:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4358:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8408,"mutability":"mutable","name":"_packedAddressData","nameLocation":"4653:18:17","nodeType":"VariableDeclaration","scope":10402,"src":"4617:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8407,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8405,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4617:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8413,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"4773:15:17","nodeType":"VariableDeclaration","scope":10402,"src":"4728:60:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8326_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"typeName":{"id":8412,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4728:36:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8326_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8411,"nodeType":"UserDefinedTypeName","pathNode":{"id":8410,"name":"TokenApprovalRef","nameLocations":["4747:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8326,"src":"4747:16:17"},"referencedDeclaration":8326,"src":"4747:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}}},"visibility":"private"},{"constant":false,"id":8419,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"4896:18:17","nodeType":"VariableDeclaration","scope":10402,"src":"4843:71:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":8418,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8414,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4843:44:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8417,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8415,"name":"address","nodeType":"ElementaryTypeName","src":"4870:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4862:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8416,"name":"bool","nodeType":"ElementaryTypeName","src":"4881:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":8421,"mutability":"mutable","name":"_spotMinted","nameLocation":"5060:11:17","nodeType":"VariableDeclaration","scope":10402,"src":"5044:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":8452,"nodeType":"Block","src":"5317:190:17","statements":[{"expression":{"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8428,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"5327:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8429,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"5335:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5327:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8431,"nodeType":"ExpressionStatement","src":"5327:13:17"},{"expression":{"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8432,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"5350:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8433,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"5360:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5350:17:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8435,"nodeType":"ExpressionStatement","src":"5350:17:17"},{"expression":{"id":8439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8436,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"5377:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":8437,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5393:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5377:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8440,"nodeType":"ExpressionStatement","src":"5377:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8441,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"5423:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8443,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5443:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5423:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8451,"nodeType":"IfStatement","src":"5419:81:17","trueBody":{"expression":{"arguments":[{"expression":{"id":8447,"name":"SequentialUpToTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10447,"src":"5468:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:8:17","memberName":"selector","nodeType":"MemberAccess","src":"5468:31:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8446,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"5460:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5460:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8450,"nodeType":"ExpressionStatement","src":"5460:40:17"}}]},"id":8453,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8423,"mutability":"mutable","name":"name_","nameLocation":"5287:5:17","nodeType":"VariableDeclaration","scope":8453,"src":"5273:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8422,"name":"string","nodeType":"ElementaryTypeName","src":"5273:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8425,"mutability":"mutable","name":"symbol_","nameLocation":"5308:7:17","nodeType":"VariableDeclaration","scope":8453,"src":"5294:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8424,"name":"string","nodeType":"ElementaryTypeName","src":"5294:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5272:44:17"},"returnParameters":{"id":8427,"nodeType":"ParameterList","parameters":[],"src":"5317:0:17"},"scope":10402,"src":"5261:246:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8461,"nodeType":"Block","src":"6031:25:17","statements":[{"expression":{"hexValue":"30","id":8459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8458,"id":8460,"nodeType":"Return","src":"6041:8:17"}]},"documentation":{"id":8454,"nodeType":"StructuredDocumentation","src":"5703:258:17","text":" @dev Returns the starting token ID for sequential mints.\n Override this function to change the starting token ID for sequential mints.\n Note: The value returned must never change after any tokens have been minted."},"id":8462,"implemented":true,"kind":"function","modifiers":[],"name":"_startTokenId","nameLocation":"5975:13:17","nodeType":"FunctionDefinition","parameters":{"id":8455,"nodeType":"ParameterList","parameters":[],"src":"5988:2:17"},"returnParameters":{"id":8458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8462,"src":"6022:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6022:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6021:9:17"},"scope":10402,"src":"5966:90:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8474,"nodeType":"Block","src":"6471:41:17","statements":[{"expression":{"expression":{"arguments":[{"id":8470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6493:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6488:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6488:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6502:3:17","memberName":"max","nodeType":"MemberAccess","src":"6488:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8467,"id":8473,"nodeType":"Return","src":"6481:24:17"}]},"documentation":{"id":8463,"nodeType":"StructuredDocumentation","src":"6062:337:17","text":" @dev Returns the maximum token ID (inclusive) for sequential mints.\n Override this function to return a value less than 2**256 - 1,\n but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n Note: The value returned must never change after any tokens have been minted."},"id":8475,"implemented":true,"kind":"function","modifiers":[],"name":"_sequentialUpTo","nameLocation":"6413:15:17","nodeType":"FunctionDefinition","parameters":{"id":8464,"nodeType":"ParameterList","parameters":[],"src":"6428:2:17"},"returnParameters":{"id":8467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8475,"src":"6462:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8465,"name":"uint256","nodeType":"ElementaryTypeName","src":"6462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6461:9:17"},"scope":10402,"src":"6404:108:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8483,"nodeType":"Block","src":"6650:37:17","statements":[{"expression":{"id":8481,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"6667:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8480,"id":8482,"nodeType":"Return","src":"6660:20:17"}]},"documentation":{"id":8476,"nodeType":"StructuredDocumentation","src":"6518:63:17","text":" @dev Returns the next token ID to be minted."},"id":8484,"implemented":true,"kind":"function","modifiers":[],"name":"_nextTokenId","nameLocation":"6595:12:17","nodeType":"FunctionDefinition","parameters":{"id":8477,"nodeType":"ParameterList","parameters":[],"src":"6607:2:17"},"returnParameters":{"id":8480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8484,"src":"6641:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8478,"name":"uint256","nodeType":"ElementaryTypeName","src":"6641:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6640:9:17"},"scope":10402,"src":"6586:101:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[10474],"body":{"id":8514,"nodeType":"Block","src":"6967:487:17","statements":[{"id":8513,"nodeType":"UncheckedBlock","src":"7136:312:17","statements":[{"expression":{"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7303:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8492,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"7312:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8493,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8396,"src":"7328:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8495,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"7343:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7303:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8499,"nodeType":"ExpressionStatement","src":"7303:55:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8500,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"7376:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":8504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7402:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8503,"name":"uint256","nodeType":"ElementaryTypeName","src":"7402:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7397:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7397:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7411:3:17","memberName":"max","nodeType":"MemberAccess","src":"7397:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7376:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8512,"nodeType":"IfStatement","src":"7372:65:17","trueBody":{"expression":{"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7416:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8509,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"7426:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7416:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8511,"nodeType":"ExpressionStatement","src":"7416:21:17"}}]}]},"documentation":{"id":8485,"nodeType":"StructuredDocumentation","src":"6693:192:17","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":8515,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"6899:11:17","nodeType":"FunctionDefinition","overrides":{"id":8487,"nodeType":"OverrideSpecifier","overrides":[],"src":"6933:8:17"},"parameters":{"id":8486,"nodeType":"ParameterList","parameters":[],"src":"6910:2:17"},"returnParameters":{"id":8490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8489,"mutability":"mutable","name":"result","nameLocation":"6959:6:17","nodeType":"VariableDeclaration","scope":8515,"src":"6951:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6950:16:17"},"scope":10402,"src":"6890:564:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8542,"nodeType":"Block","src":"7618:307:17","statements":[{"id":8541,"nodeType":"UncheckedBlock","src":"7765:154:17","statements":[{"expression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"7789:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8522,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"7798:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8523,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"7814:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7789:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8527,"nodeType":"ExpressionStatement","src":"7789:40:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8528,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"7847:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":8532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7873:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":8530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7868:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7868:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7882:3:17","memberName":"max","nodeType":"MemberAccess","src":"7868:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7847:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8540,"nodeType":"IfStatement","src":"7843:65:17","trueBody":{"expression":{"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"7887:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8537,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"7897:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7887:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8539,"nodeType":"ExpressionStatement","src":"7887:21:17"}}]}]},"documentation":{"id":8516,"nodeType":"StructuredDocumentation","src":"7460:82:17","text":" @dev Returns the total amount of tokens minted in the contract."},"id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"_totalMinted","nameLocation":"7556:12:17","nodeType":"FunctionDefinition","parameters":{"id":8517,"nodeType":"ParameterList","parameters":[],"src":"7568:2:17"},"returnParameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8519,"mutability":"mutable","name":"result","nameLocation":"7610:6:17","nodeType":"VariableDeclaration","scope":8543,"src":"7602:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8518,"name":"uint256","nodeType":"ElementaryTypeName","src":"7602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7601:16:17"},"scope":10402,"src":"7547:378:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8551,"nodeType":"Block","src":"8066:36:17","statements":[{"expression":{"id":8549,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8396,"src":"8083:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8548,"id":8550,"nodeType":"Return","src":"8076:19:17"}]},"documentation":{"id":8544,"nodeType":"StructuredDocumentation","src":"7931:66:17","text":" @dev Returns the total number of tokens burned."},"id":8552,"implemented":true,"kind":"function","modifiers":[],"name":"_totalBurned","nameLocation":"8011:12:17","nodeType":"FunctionDefinition","parameters":{"id":8545,"nodeType":"ParameterList","parameters":[],"src":"8023:2:17"},"returnParameters":{"id":8548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8552,"src":"8057:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"8057:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8056:9:17"},"scope":10402,"src":"8002:100:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8560,"nodeType":"Block","src":"8261:35:17","statements":[{"expression":{"id":8558,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"8278:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8557,"id":8559,"nodeType":"Return","src":"8271:18:17"}]},"documentation":{"id":8553,"nodeType":"StructuredDocumentation","src":"8108:80:17","text":" @dev Returns the total number of tokens that are spot-minted."},"id":8561,"implemented":true,"kind":"function","modifiers":[],"name":"_totalSpotMinted","nameLocation":"8202:16:17","nodeType":"FunctionDefinition","parameters":{"id":8554,"nodeType":"ParameterList","parameters":[],"src":"8218:2:17"},"returnParameters":{"id":8557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8561,"src":"8252:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:9:17"},"scope":10402,"src":"8193:103:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[10517],"body":{"id":8588,"nodeType":"Block","src":"8651:158:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"8665:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8674:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8571,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:17","typeDescriptions":{}}},"id":8574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8665:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8581,"nodeType":"IfStatement","src":"8661:69:17","trueBody":{"expression":{"arguments":[{"expression":{"id":8577,"name":"BalanceQueryForZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"8694:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8721:8:17","memberName":"selector","nodeType":"MemberAccess","src":"8694:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8576,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"8686:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8686:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8580,"nodeType":"ExpressionStatement","src":"8686:44:17"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8582,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"8747:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8584,"indexExpression":{"id":8583,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"8766:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8747:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8585,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"8775:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8569,"id":8587,"nodeType":"Return","src":"8740:62:17"}]},"documentation":{"id":8562,"nodeType":"StructuredDocumentation","src":"8491:74:17","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":8589,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8579:9:17","nodeType":"FunctionDefinition","overrides":{"id":8566,"nodeType":"OverrideSpecifier","overrides":[],"src":"8624:8:17"},"parameters":{"id":8565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8564,"mutability":"mutable","name":"owner","nameLocation":"8597:5:17","nodeType":"VariableDeclaration","scope":8589,"src":"8589:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8563,"name":"address","nodeType":"ElementaryTypeName","src":"8589:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8588:15:17"},"returnParameters":{"id":8569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8589,"src":"8642:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8567,"name":"uint256","nodeType":"ElementaryTypeName","src":"8642:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8641:9:17"},"scope":10402,"src":"8570:239:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8606,"nodeType":"Block","src":"8956:106:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8597,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"8974:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8599,"indexExpression":{"id":8598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8592,"src":"8993:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8974:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8600,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"9003:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8974:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8973:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8603,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"9028:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8973:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8596,"id":8605,"nodeType":"Return","src":"8966:89:17"}]},"documentation":{"id":8590,"nodeType":"StructuredDocumentation","src":"8815:66:17","text":" Returns the number of tokens minted by `owner`."},"id":8607,"implemented":true,"kind":"function","modifiers":[],"name":"_numberMinted","nameLocation":"8895:13:17","nodeType":"FunctionDefinition","parameters":{"id":8593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8592,"mutability":"mutable","name":"owner","nameLocation":"8917:5:17","nodeType":"VariableDeclaration","scope":8607,"src":"8909:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8591,"name":"address","nodeType":"ElementaryTypeName","src":"8909:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8908:15:17"},"returnParameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8607,"src":"8947:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8594,"name":"uint256","nodeType":"ElementaryTypeName","src":"8947:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8946:9:17"},"scope":10402,"src":"8886:176:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8624,"nodeType":"Block","src":"9225:106:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8615,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"9243:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8617,"indexExpression":{"id":8616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8610,"src":"9262:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9243:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8618,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"9272:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9243:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9242:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8621,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"9297:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9242:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8614,"id":8623,"nodeType":"Return","src":"9235:89:17"}]},"documentation":{"id":8608,"nodeType":"StructuredDocumentation","src":"9068:82:17","text":" Returns the number of tokens burned by or on behalf of `owner`."},"id":8625,"implemented":true,"kind":"function","modifiers":[],"name":"_numberBurned","nameLocation":"9164:13:17","nodeType":"FunctionDefinition","parameters":{"id":8611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8610,"mutability":"mutable","name":"owner","nameLocation":"9186:5:17","nodeType":"VariableDeclaration","scope":8625,"src":"9178:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8609,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9177:15:17"},"returnParameters":{"id":8614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8625,"src":"9216:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"9216:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9215:9:17"},"scope":10402,"src":"9155:176:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8642,"nodeType":"Block","src":"9507:72:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8635,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"9531:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8637,"indexExpression":{"id":8636,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"9550:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9531:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8638,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"9560:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9531:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9524:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8633,"name":"uint64","nodeType":"ElementaryTypeName","src":"9524:6:17","typeDescriptions":{}}},"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9524:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8632,"id":8641,"nodeType":"Return","src":"9517:55:17"}]},"documentation":{"id":8626,"nodeType":"StructuredDocumentation","src":"9337:102:17","text":" Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."},"id":8643,"implemented":true,"kind":"function","modifiers":[],"name":"_getAux","nameLocation":"9453:7:17","nodeType":"FunctionDefinition","parameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8628,"mutability":"mutable","name":"owner","nameLocation":"9469:5:17","nodeType":"VariableDeclaration","scope":8643,"src":"9461:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8627,"name":"address","nodeType":"ElementaryTypeName","src":"9461:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9460:15:17"},"returnParameters":{"id":8632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8643,"src":"9499:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8630,"name":"uint64","nodeType":"ElementaryTypeName","src":"9499:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9498:8:17"},"scope":10402,"src":"9444:135:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8679,"nodeType":"Block","src":"9822:334:17","statements":[{"assignments":[8652],"declarations":[{"constant":false,"id":8652,"mutability":"mutable","name":"packed","nameLocation":"9840:6:17","nodeType":"VariableDeclaration","scope":8679,"src":"9832:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8651,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8656,"initialValue":{"baseExpression":{"id":8653,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"9849:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8655,"indexExpression":{"id":8654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"9868:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9849:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9832:42:17"},{"assignments":[8658],"declarations":[{"constant":false,"id":8658,"mutability":"mutable","name":"auxCasted","nameLocation":"9892:9:17","nodeType":"VariableDeclaration","scope":8679,"src":"9884:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9884:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8659,"nodeType":"VariableDeclarationStatement","src":"9884:17:17"},{"AST":{"nativeSrc":"9984:40:17","nodeType":"YulBlock","src":"9984:40:17","statements":[{"nativeSrc":"9998:16:17","nodeType":"YulAssignment","src":"9998:16:17","value":{"name":"aux","nativeSrc":"10011:3:17","nodeType":"YulIdentifier","src":"10011:3:17"},"variableNames":[{"name":"auxCasted","nativeSrc":"9998:9:17","nodeType":"YulIdentifier","src":"9998:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8648,"isOffset":false,"isSlot":false,"src":"10011:3:17","valueSize":1},{"declaration":8658,"isOffset":false,"isSlot":false,"src":"9998:9:17","valueSize":1}],"id":8660,"nodeType":"InlineAssembly","src":"9975:49:17"},{"expression":{"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8661,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"10033:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8662,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"10043:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8663,"name":"_BITMASK_AUX_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"10052:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10043:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10042:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8666,"name":"auxCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"10080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8667,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"10093:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10080:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10079:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10042:63:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8672,"nodeType":"ExpressionStatement","src":"10033:72:17"},{"expression":{"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8673,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"10115:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8675,"indexExpression":{"id":8674,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"10134:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10115:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8676,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"10143:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10115:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8678,"nodeType":"ExpressionStatement","src":"10115:34:17"}]},"documentation":{"id":8644,"nodeType":"StructuredDocumentation","src":"9585:171:17","text":" Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."},"id":8680,"implemented":true,"kind":"function","modifiers":[],"name":"_setAux","nameLocation":"9770:7:17","nodeType":"FunctionDefinition","parameters":{"id":8649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8646,"mutability":"mutable","name":"owner","nameLocation":"9786:5:17","nodeType":"VariableDeclaration","scope":8680,"src":"9778:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8645,"name":"address","nodeType":"ElementaryTypeName","src":"9778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8648,"mutability":"mutable","name":"aux","nameLocation":"9800:3:17","nodeType":"VariableDeclaration","scope":8680,"src":"9793:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8647,"name":"uint64","nodeType":"ElementaryTypeName","src":"9793:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9777:27:17"},"returnParameters":{"id":8650,"nodeType":"ParameterList","parameters":[],"src":"9822:0:17"},"scope":10402,"src":"9761:395:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[10482],"body":{"id":8701,"nodeType":"Block","src":"10780:539:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8689,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"11092:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031666663396137","id":8690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:10:17","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"src":"11092:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8692,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"11168:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783830616335386364","id":8693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:10:17","typeDescriptions":{"typeIdentifier":"t_rational_2158778573_by_1","typeString":"int_const 2158778573"},"value":"0x80ac58cd"},"src":"11168:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:101:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8696,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"11244:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562356531333966","id":8697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11259:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1532892063_by_1","typeString":"int_const 1532892063"},"value":"0x5b5e139f"},"src":"11244:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:177:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8688,"id":8700,"nodeType":"Return","src":"11073:196:17"}]},"documentation":{"id":8681,"nodeType":"StructuredDocumentation","src":"10343:341:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":8702,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10698:17:17","nodeType":"FunctionDefinition","overrides":{"id":8685,"nodeType":"OverrideSpecifier","overrides":[],"src":"10756:8:17"},"parameters":{"id":8684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8683,"mutability":"mutable","name":"interfaceId","nameLocation":"10723:11:17","nodeType":"VariableDeclaration","scope":8702,"src":"10716:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8682,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10716:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10715:20:17"},"returnParameters":{"id":8688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8702,"src":"10774:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8686,"name":"bool","nodeType":"ElementaryTypeName","src":"10774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10773:6:17"},"scope":10402,"src":"10689:630:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[10597],"body":{"id":8711,"nodeType":"Block","src":"11642:29:17","statements":[{"expression":{"id":8709,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"11659:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8708,"id":8710,"nodeType":"Return","src":"11652:12:17"}]},"documentation":{"id":8703,"nodeType":"StructuredDocumentation","src":"11510:58:17","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":8712,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"11582:4:17","nodeType":"FunctionDefinition","overrides":{"id":8705,"nodeType":"OverrideSpecifier","overrides":[],"src":"11609:8:17"},"parameters":{"id":8704,"nodeType":"ParameterList","parameters":[],"src":"11586:2:17"},"returnParameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8712,"src":"11627:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8706,"name":"string","nodeType":"ElementaryTypeName","src":"11627:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11626:15:17"},"scope":10402,"src":"11573:98:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[10603],"body":{"id":8721,"nodeType":"Block","src":"11813:31:17","statements":[{"expression":{"id":8719,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"11830:7:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8718,"id":8720,"nodeType":"Return","src":"11823:14:17"}]},"documentation":{"id":8713,"nodeType":"StructuredDocumentation","src":"11677:60:17","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":8722,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"11751:6:17","nodeType":"FunctionDefinition","overrides":{"id":8715,"nodeType":"OverrideSpecifier","overrides":[],"src":"11780:8:17"},"parameters":{"id":8714,"nodeType":"ParameterList","parameters":[],"src":"11757:2:17"},"returnParameters":{"id":8718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8722,"src":"11798:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8716,"name":"string","nodeType":"ElementaryTypeName","src":"11798:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11797:15:17"},"scope":10402,"src":"11742:102:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[10611],"body":{"id":8766,"nodeType":"Block","src":"12033:234:17","statements":[{"condition":{"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12047:17:17","subExpression":{"arguments":[{"id":8732,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"12056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8731,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"12048:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8740,"nodeType":"IfStatement","src":"12043:68:17","trueBody":{"expression":{"arguments":[{"expression":{"id":8736,"name":"URIQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10438,"src":"12074:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12102:8:17","memberName":"selector","nodeType":"MemberAccess","src":"12074:36:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8735,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"12066:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8739,"nodeType":"ExpressionStatement","src":"12066:45:17"}},{"assignments":[8742],"declarations":[{"constant":false,"id":8742,"mutability":"mutable","name":"baseURI","nameLocation":"12136:7:17","nodeType":"VariableDeclaration","scope":8766,"src":"12122:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8741,"name":"string","nodeType":"ElementaryTypeName","src":"12122:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8745,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8743,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"12146:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12146:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"12122:34:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8748,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"12179:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12173:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8746,"name":"bytes","nodeType":"ElementaryTypeName","src":"12173:5:17","typeDescriptions":{}}},"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12173:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12188:6:17","memberName":"length","nodeType":"MemberAccess","src":"12173:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12198:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12173:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":8763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12258:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12173:87:17","trueExpression":{"arguments":[{"arguments":[{"id":8757,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"12226:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":8759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"12245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8758,"name":"_toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"12235:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12209:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12213:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"12209:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12202:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8753,"name":"string","nodeType":"ElementaryTypeName","src":"12202:6:17","typeDescriptions":{}}},"id":8762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12202:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8730,"id":8765,"nodeType":"Return","src":"12166:94:17"}]},"documentation":{"id":8723,"nodeType":"StructuredDocumentation","src":"11850:90:17","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":8767,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"11954:8:17","nodeType":"FunctionDefinition","overrides":{"id":8727,"nodeType":"OverrideSpecifier","overrides":[],"src":"12000:8:17"},"parameters":{"id":8726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8725,"mutability":"mutable","name":"tokenId","nameLocation":"11971:7:17","nodeType":"VariableDeclaration","scope":8767,"src":"11963:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11963:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11962:17:17"},"returnParameters":{"id":8730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8767,"src":"12018:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8728,"name":"string","nodeType":"ElementaryTypeName","src":"12018:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12017:15:17"},"scope":10402,"src":"11945:322:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8775,"nodeType":"Block","src":"12578:26:17","statements":[{"expression":{"hexValue":"","id":8773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12595:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":8772,"id":8774,"nodeType":"Return","src":"12588:9:17"}]},"documentation":{"id":8768,"nodeType":"StructuredDocumentation","src":"12273:234:17","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."},"id":8776,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"12521:8:17","nodeType":"FunctionDefinition","parameters":{"id":8769,"nodeType":"ParameterList","parameters":[],"src":"12529:2:17"},"returnParameters":{"id":8772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8776,"src":"12563:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8770,"name":"string","nodeType":"ElementaryTypeName","src":"12563:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12562:15:17"},"scope":10402,"src":"12512:92:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[10525],"body":{"id":8795,"nodeType":"Block","src":"13015:69:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":8790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"13067:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8789,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"13048:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13040:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8787,"name":"uint160","nodeType":"ElementaryTypeName","src":"13040:7:17","typeDescriptions":{}}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13040:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8785,"name":"address","nodeType":"ElementaryTypeName","src":"13032:7:17","typeDescriptions":{}}},"id":8793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8784,"id":8794,"nodeType":"Return","src":"13025:52:17"}]},"documentation":{"id":8777,"nodeType":"StructuredDocumentation","src":"12798:131:17","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":8796,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"12943:7:17","nodeType":"FunctionDefinition","overrides":{"id":8781,"nodeType":"OverrideSpecifier","overrides":[],"src":"12988:8:17"},"parameters":{"id":8780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8779,"mutability":"mutable","name":"tokenId","nameLocation":"12959:7:17","nodeType":"VariableDeclaration","scope":8796,"src":"12951:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8778,"name":"uint256","nodeType":"ElementaryTypeName","src":"12951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12950:17:17"},"returnParameters":{"id":8784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8796,"src":"13006:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8782,"name":"address","nodeType":"ElementaryTypeName","src":"13006:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13005:9:17"},"scope":10402,"src":"12934:150:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8811,"nodeType":"Block","src":"13360:71:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":8807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8799,"src":"13415:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8806,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"13396:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13396:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8805,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"13377:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$10468_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":8804,"id":8810,"nodeType":"Return","src":"13370:54:17"}]},"documentation":{"id":8797,"nodeType":"StructuredDocumentation","src":"13090:172:17","text":" @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."},"id":8812,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipOf","nameLocation":"13276:12:17","nodeType":"FunctionDefinition","parameters":{"id":8800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8799,"mutability":"mutable","name":"tokenId","nameLocation":"13297:7:17","nodeType":"VariableDeclaration","scope":8812,"src":"13289:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8798,"name":"uint256","nodeType":"ElementaryTypeName","src":"13289:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13288:17:17"},"returnParameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8812,"src":"13337:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":8802,"nodeType":"UserDefinedTypeName","pathNode":{"id":8801,"name":"TokenOwnership","nameLocations":["13337:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":10468,"src":"13337:14:17"},"referencedDeclaration":10468,"src":"13337:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13336:23:17"},"scope":10402,"src":"13267:164:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8827,"nodeType":"Block","src":"13613:68:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":8822,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"13649:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8824,"indexExpression":{"id":8823,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"13667:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13649:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8821,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"13630:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$10468_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13630:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":8820,"id":8826,"nodeType":"Return","src":"13623:51:17"}]},"documentation":{"id":8813,"nodeType":"StructuredDocumentation","src":"13437:80:17","text":" @dev Returns the unpacked `TokenOwnership` struct at `index`."},"id":8828,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipAt","nameLocation":"13531:12:17","nodeType":"FunctionDefinition","parameters":{"id":8816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8815,"mutability":"mutable","name":"index","nameLocation":"13552:5:17","nodeType":"VariableDeclaration","scope":8828,"src":"13544:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8814,"name":"uint256","nodeType":"ElementaryTypeName","src":"13544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13543:15:17"},"returnParameters":{"id":8820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8828,"src":"13590:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":8818,"nodeType":"UserDefinedTypeName","pathNode":{"id":8817,"name":"TokenOwnership","nameLocations":["13590:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":10468,"src":"13590:14:17"},"referencedDeclaration":10468,"src":"13590:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13589:23:17"},"scope":10402,"src":"13522:159:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8842,"nodeType":"Block","src":"13945:53:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8836,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"13962:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8838,"indexExpression":{"id":8837,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"13980:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13962:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13962:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8835,"id":8841,"nodeType":"Return","src":"13955:36:17"}]},"documentation":{"id":8829,"nodeType":"StructuredDocumentation","src":"13687:168:17","text":" @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."},"id":8843,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipIsInitialized","nameLocation":"13869:23:17","nodeType":"FunctionDefinition","parameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8831,"mutability":"mutable","name":"index","nameLocation":"13901:5:17","nodeType":"VariableDeclaration","scope":8843,"src":"13893:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8830,"name":"uint256","nodeType":"ElementaryTypeName","src":"13893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13892:15:17"},"returnParameters":{"id":8835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8843,"src":"13939:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8833,"name":"bool","nodeType":"ElementaryTypeName","src":"13939:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13938:6:17"},"scope":10402,"src":"13860:138:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8864,"nodeType":"Block","src":"14170:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8849,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"14184:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8851,"indexExpression":{"id":8850,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14202:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14184:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14184:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8863,"nodeType":"IfStatement","src":"14180:112:17","trueBody":{"id":8862,"nodeType":"Block","src":"14215:77:17","statements":[{"expression":{"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8854,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"14229:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8856,"indexExpression":{"id":8855,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14247:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14229:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8858,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14275:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8857,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"14256:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14256:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14229:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8861,"nodeType":"ExpressionStatement","src":"14229:52:17"}]}}]},"documentation":{"id":8844,"nodeType":"StructuredDocumentation","src":"14004:97:17","text":" @dev Initializes the ownership slot minted at `index` for efficiency purposes."},"id":8865,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeOwnershipAt","nameLocation":"14115:22:17","nodeType":"FunctionDefinition","parameters":{"id":8847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8846,"mutability":"mutable","name":"index","nameLocation":"14146:5:17","nodeType":"VariableDeclaration","scope":8865,"src":"14138:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"14138:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14137:15:17"},"returnParameters":{"id":8848,"nodeType":"ParameterList","parameters":[],"src":"14170:0:17"},"scope":10402,"src":"14106:192:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8957,"nodeType":"Block","src":"14463:2090:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8873,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"14477:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14477:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"14496:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8951,"nodeType":"IfStatement","src":"14473:2017:17","trueBody":{"id":8950,"nodeType":"Block","src":"14505:1985:17","statements":[{"expression":{"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8877,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"14519:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8878,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"14528:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8880,"indexExpression":{"id":8879,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"14546:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14528:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14519:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8882,"nodeType":"ExpressionStatement","src":"14519:35:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"14573:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8884,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"14583:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14583:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14573:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8899,"nodeType":"IfStatement","src":"14569:180:17","trueBody":{"id":8898,"nodeType":"Block","src":"14602:147:17","statements":[{"condition":{"arguments":[{"id":8888,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"14647:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8887,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"14624:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14624:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8892,"nodeType":"IfStatement","src":"14620:49:17","trueBody":{"expression":{"id":8890,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"14663:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8872,"id":8891,"nodeType":"Return","src":"14656:13:17"}},{"expression":{"arguments":[{"expression":{"id":8894,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"14695:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14725:8:17","memberName":"selector","nodeType":"MemberAccess","src":"14695:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8893,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"14687:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8897,"nodeType":"ExpressionStatement","src":"14687:47:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8900,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"14847:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14857:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14847:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8941,"nodeType":"IfStatement","src":"14843:1270:17","trueBody":{"id":8940,"nodeType":"Block","src":"14860:1253:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8903,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"14882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8904,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"14893:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14882:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8911,"nodeType":"IfStatement","src":"14878:77:17","trueBody":{"expression":{"arguments":[{"expression":{"id":8907,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"14916:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14946:8:17","memberName":"selector","nodeType":"MemberAccess","src":"14916:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8906,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"14908:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14908:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8910,"nodeType":"ExpressionStatement","src":"14908:47:17"}},{"body":{"id":8938,"nodeType":"Block","src":"15511:588:17","statements":[{"id":8919,"nodeType":"UncheckedBlock","src":"15533:96:17","statements":[{"expression":{"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8912,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"15569:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8913,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"15578:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8916,"indexExpression":{"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"15596:9:17","subExpression":{"id":8914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8868,"src":"15598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15578:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15569:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8918,"nodeType":"ExpressionStatement","src":"15569:37:17"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8920,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"15654:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15664:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15654:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8924,"nodeType":"IfStatement","src":"15650:25:17","trueBody":{"id":8923,"nodeType":"Continue","src":"15667:8:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8925,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"15701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8926,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"15710:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15701:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15729:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15701:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8932,"nodeType":"IfStatement","src":"15697:48:17","trueBody":{"expression":{"id":8930,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"15739:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8872,"id":8931,"nodeType":"Return","src":"15732:13:17"}},{"expression":{"arguments":[{"expression":{"id":8934,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"16041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16071:8:17","memberName":"selector","nodeType":"MemberAccess","src":"16041:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8933,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"16033:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16033:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8937,"nodeType":"ExpressionStatement","src":"16033:47:17"}]},"id":8939,"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"15502:597:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8942,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"16435:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8943,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"16444:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16435:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16463:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16435:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8949,"nodeType":"IfStatement","src":"16431:48:17","trueBody":{"expression":{"id":8947,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"16473:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8872,"id":8948,"nodeType":"Return","src":"16466:13:17"}}]}},{"expression":{"arguments":[{"expression":{"id":8953,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"16507:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16537:8:17","memberName":"selector","nodeType":"MemberAccess","src":"16507:38:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8952,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"16499:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16499:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8956,"nodeType":"ExpressionStatement","src":"16499:47:17"}]},"documentation":{"id":8866,"nodeType":"StructuredDocumentation","src":"14304:71:17","text":" @dev Returns the packed ownership data of `tokenId`."},"id":8958,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipOf","nameLocation":"14389:18:17","nodeType":"FunctionDefinition","parameters":{"id":8869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8868,"mutability":"mutable","name":"tokenId","nameLocation":"14416:7:17","nodeType":"VariableDeclaration","scope":8958,"src":"14408:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8867,"name":"uint256","nodeType":"ElementaryTypeName","src":"14408:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14407:17:17"},"returnParameters":{"id":8872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8871,"mutability":"mutable","name":"packed","nameLocation":"14455:6:17","nodeType":"VariableDeclaration","scope":8958,"src":"14447:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8870,"name":"uint256","nodeType":"ElementaryTypeName","src":"14447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14446:16:17"},"scope":10402,"src":"14380:2173:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9011,"nodeType":"Block","src":"16746:262:17","statements":[{"expression":{"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8967,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"16756:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":8969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16766:4:17","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":10461,"src":"16756:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":8974,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"16789:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16781:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8972,"name":"uint160","nodeType":"ElementaryTypeName","src":"16781:7:17","typeDescriptions":{}}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16781:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16773:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8970,"name":"address","nodeType":"ElementaryTypeName","src":"16773:7:17","typeDescriptions":{}}},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16773:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16756:41:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8978,"nodeType":"ExpressionStatement","src":"16756:41:17"},{"expression":{"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8979,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"16807:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":8981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16817:14:17","memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":10463,"src":"16807:24:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8984,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"16841:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8985,"name":"_BITPOS_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"16851:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16841:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16834:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8982,"name":"uint64","nodeType":"ElementaryTypeName","src":"16834:6:17","typeDescriptions":{}}},"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16834:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16807:68:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":8989,"nodeType":"ExpressionStatement","src":"16807:68:17"},{"expression":{"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8990,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"16885:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":8992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16895:6:17","memberName":"burned","nodeType":"MemberAccess","referencedDeclaration":10465,"src":"16885:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8993,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"16904:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8994,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"16913:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16904:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16904:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16885:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8999,"nodeType":"ExpressionStatement","src":"16885:48:17"},{"expression":{"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9000,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8965,"src":"16943:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16953:9:17","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":10467,"src":"16943:19:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9005,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"16972:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9006,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"16982:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16972:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16965:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9003,"name":"uint24","nodeType":"ElementaryTypeName","src":"16965:6:17","typeDescriptions":{}}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16943:58:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":9010,"nodeType":"ExpressionStatement","src":"16943:58:17"}]},"documentation":{"id":8959,"nodeType":"StructuredDocumentation","src":"16559:83:17","text":" @dev Returns the unpacked `TokenOwnership` struct from `packed`."},"id":9012,"implemented":true,"kind":"function","modifiers":[],"name":"_unpackedOwnership","nameLocation":"16656:18:17","nodeType":"FunctionDefinition","parameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8961,"mutability":"mutable","name":"packed","nameLocation":"16683:6:17","nodeType":"VariableDeclaration","scope":9012,"src":"16675:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8960,"name":"uint256","nodeType":"ElementaryTypeName","src":"16675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16674:16:17"},"returnParameters":{"id":8966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8965,"mutability":"mutable","name":"ownership","nameLocation":"16735:9:17","nodeType":"VariableDeclaration","scope":9012,"src":"16713:31:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":8964,"nodeType":"UserDefinedTypeName","pathNode":{"id":8963,"name":"TokenOwnership","nameLocations":["16713:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":10468,"src":"16713:14:17"},"referencedDeclaration":10468,"src":"16713:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$10468_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"16712:33:17"},"scope":10402,"src":"16647:361:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9023,"nodeType":"Block","src":"17182:347:17","statements":[{"AST":{"nativeSrc":"17201:322:17","nodeType":"YulBlock","src":"17201:322:17","statements":[{"nativeSrc":"17311:37:17","nodeType":"YulAssignment","src":"17311:37:17","value":{"arguments":[{"name":"owner","nativeSrc":"17324:5:17","nodeType":"YulIdentifier","src":"17324:5:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"17331:16:17","nodeType":"YulIdentifier","src":"17331:16:17"}],"functionName":{"name":"and","nativeSrc":"17320:3:17","nodeType":"YulIdentifier","src":"17320:3:17"},"nativeSrc":"17320:28:17","nodeType":"YulFunctionCall","src":"17320:28:17"},"variableNames":[{"name":"owner","nativeSrc":"17311:5:17","nodeType":"YulIdentifier","src":"17311:5:17"}]},{"nativeSrc":"17440:73:17","nodeType":"YulAssignment","src":"17440:73:17","value":{"arguments":[{"name":"owner","nativeSrc":"17453:5:17","nodeType":"YulIdentifier","src":"17453:5:17"},{"arguments":[{"arguments":[{"name":"_BITPOS_START_TIMESTAMP","nativeSrc":"17467:23:17","nodeType":"YulIdentifier","src":"17467:23:17"},{"arguments":[],"functionName":{"name":"timestamp","nativeSrc":"17492:9:17","nodeType":"YulIdentifier","src":"17492:9:17"},"nativeSrc":"17492:11:17","nodeType":"YulFunctionCall","src":"17492:11:17"}],"functionName":{"name":"shl","nativeSrc":"17463:3:17","nodeType":"YulIdentifier","src":"17463:3:17"},"nativeSrc":"17463:41:17","nodeType":"YulFunctionCall","src":"17463:41:17"},{"name":"flags","nativeSrc":"17506:5:17","nodeType":"YulIdentifier","src":"17506:5:17"}],"functionName":{"name":"or","nativeSrc":"17460:2:17","nodeType":"YulIdentifier","src":"17460:2:17"},"nativeSrc":"17460:52:17","nodeType":"YulFunctionCall","src":"17460:52:17"}],"functionName":{"name":"or","nativeSrc":"17450:2:17","nodeType":"YulIdentifier","src":"17450:2:17"},"nativeSrc":"17450:63:17","nodeType":"YulFunctionCall","src":"17450:63:17"},"variableNames":[{"name":"result","nativeSrc":"17440:6:17","nodeType":"YulIdentifier","src":"17440:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8386,"isOffset":false,"isSlot":false,"src":"17331:16:17","valueSize":1},{"declaration":8354,"isOffset":false,"isSlot":false,"src":"17467:23:17","valueSize":1},{"declaration":9017,"isOffset":false,"isSlot":false,"src":"17506:5:17","valueSize":1},{"declaration":9015,"isOffset":false,"isSlot":false,"src":"17311:5:17","valueSize":1},{"declaration":9015,"isOffset":false,"isSlot":false,"src":"17324:5:17","valueSize":1},{"declaration":9015,"isOffset":false,"isSlot":false,"src":"17453:5:17","valueSize":1},{"declaration":9020,"isOffset":false,"isSlot":false,"src":"17440:6:17","valueSize":1}],"id":9022,"nodeType":"InlineAssembly","src":"17192:331:17"}]},"documentation":{"id":9013,"nodeType":"StructuredDocumentation","src":"17014:67:17","text":" @dev Packs ownership data into a single uint256."},"id":9024,"implemented":true,"kind":"function","modifiers":[],"name":"_packOwnershipData","nameLocation":"17095:18:17","nodeType":"FunctionDefinition","parameters":{"id":9018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"mutability":"mutable","name":"owner","nameLocation":"17122:5:17","nodeType":"VariableDeclaration","scope":9024,"src":"17114:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9014,"name":"address","nodeType":"ElementaryTypeName","src":"17114:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9017,"mutability":"mutable","name":"flags","nameLocation":"17137:5:17","nodeType":"VariableDeclaration","scope":9024,"src":"17129:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9016,"name":"uint256","nodeType":"ElementaryTypeName","src":"17129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17113:30:17"},"returnParameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9020,"mutability":"mutable","name":"result","nameLocation":"17174:6:17","nodeType":"VariableDeclaration","scope":9024,"src":"17166:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9019,"name":"uint256","nodeType":"ElementaryTypeName","src":"17166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17165:16:17"},"scope":10402,"src":"17086:443:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9033,"nodeType":"Block","src":"17712:232:17","statements":[{"AST":{"nativeSrc":"17796:142:17","nodeType":"YulBlock","src":"17796:142:17","statements":[{"nativeSrc":"17872:56:17","nodeType":"YulAssignment","src":"17872:56:17","value":{"arguments":[{"name":"_BITPOS_NEXT_INITIALIZED","nativeSrc":"17886:24:17","nodeType":"YulIdentifier","src":"17886:24:17"},{"arguments":[{"name":"quantity","nativeSrc":"17915:8:17","nodeType":"YulIdentifier","src":"17915:8:17"},{"kind":"number","nativeSrc":"17925:1:17","nodeType":"YulLiteral","src":"17925:1:17","type":"","value":"1"}],"functionName":{"name":"eq","nativeSrc":"17912:2:17","nodeType":"YulIdentifier","src":"17912:2:17"},"nativeSrc":"17912:15:17","nodeType":"YulFunctionCall","src":"17912:15:17"}],"functionName":{"name":"shl","nativeSrc":"17882:3:17","nodeType":"YulIdentifier","src":"17882:3:17"},"nativeSrc":"17882:46:17","nodeType":"YulFunctionCall","src":"17882:46:17"},"variableNames":[{"name":"result","nativeSrc":"17872:6:17","nodeType":"YulIdentifier","src":"17872:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8362,"isOffset":false,"isSlot":false,"src":"17886:24:17","valueSize":1},{"declaration":9027,"isOffset":false,"isSlot":false,"src":"17915:8:17","valueSize":1},{"declaration":9030,"isOffset":false,"isSlot":false,"src":"17872:6:17","valueSize":1}],"id":9032,"nodeType":"InlineAssembly","src":"17787:151:17"}]},"documentation":{"id":9025,"nodeType":"StructuredDocumentation","src":"17535:86:17","text":" @dev Returns the `nextInitialized` flag set if `quantity` equals 1."},"id":9034,"implemented":true,"kind":"function","modifiers":[],"name":"_nextInitializedFlag","nameLocation":"17635:20:17","nodeType":"FunctionDefinition","parameters":{"id":9028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9027,"mutability":"mutable","name":"quantity","nameLocation":"17664:8:17","nodeType":"VariableDeclaration","scope":9034,"src":"17656:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9026,"name":"uint256","nodeType":"ElementaryTypeName","src":"17656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17655:18:17"},"returnParameters":{"id":9031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9030,"mutability":"mutable","name":"result","nameLocation":"17704:6:17","nodeType":"VariableDeclaration","scope":9034,"src":"17696:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9029,"name":"uint256","nodeType":"ElementaryTypeName","src":"17696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17695:16:17"},"scope":10402,"src":"17626:318:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[10565],"body":{"id":9049,"nodeType":"Block","src":"18442:44:17","statements":[{"expression":{"arguments":[{"id":9044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"18461:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"18465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18474:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9043,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10065,10115],"referencedDeclaration":10115,"src":"18452:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18452:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9048,"nodeType":"ExpressionStatement","src":"18452:27:17"}]},"documentation":{"id":9035,"nodeType":"StructuredDocumentation","src":"18137:222:17","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."},"functionSelector":"095ea7b3","id":9050,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"18373:7:17","nodeType":"FunctionDefinition","overrides":{"id":9041,"nodeType":"OverrideSpecifier","overrides":[],"src":"18433:8:17"},"parameters":{"id":9040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9037,"mutability":"mutable","name":"to","nameLocation":"18389:2:17","nodeType":"VariableDeclaration","scope":9050,"src":"18381:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9036,"name":"address","nodeType":"ElementaryTypeName","src":"18381:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9039,"mutability":"mutable","name":"tokenId","nameLocation":"18401:7:17","nodeType":"VariableDeclaration","scope":9050,"src":"18393:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9038,"name":"uint256","nodeType":"ElementaryTypeName","src":"18393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18380:29:17"},"returnParameters":{"id":9042,"nodeType":"ParameterList","parameters":[],"src":"18442:0:17"},"scope":10402,"src":"18364:122:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[10581],"body":{"id":9074,"nodeType":"Block","src":"18721:138:17","statements":[{"condition":{"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18735:17:17","subExpression":{"arguments":[{"id":9060,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"18744:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9059,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"18736:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18736:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9068,"nodeType":"IfStatement","src":"18731:73:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9064,"name":"ApprovalQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10411,"src":"18762:32:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18795:8:17","memberName":"selector","nodeType":"MemberAccess","src":"18762:41:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9063,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"18754:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18754:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9067,"nodeType":"ExpressionStatement","src":"18754:50:17"}},{"expression":{"expression":{"baseExpression":{"id":9069,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"18822:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8326_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":9071,"indexExpression":{"id":9070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"18838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18822:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":9072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18847:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":8325,"src":"18822:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9058,"id":9073,"nodeType":"Return","src":"18815:37:17"}]},"documentation":{"id":9051,"nodeType":"StructuredDocumentation","src":"18492:139:17","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":9075,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"18645:11:17","nodeType":"FunctionDefinition","overrides":{"id":9055,"nodeType":"OverrideSpecifier","overrides":[],"src":"18694:8:17"},"parameters":{"id":9054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9053,"mutability":"mutable","name":"tokenId","nameLocation":"18665:7:17","nodeType":"VariableDeclaration","scope":9075,"src":"18657:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9052,"name":"uint256","nodeType":"ElementaryTypeName","src":"18657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18656:17:17"},"returnParameters":{"id":9058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9075,"src":"18712:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9056,"name":"address","nodeType":"ElementaryTypeName","src":"18712:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18711:9:17"},"scope":10402,"src":"18636:223:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[10573],"body":{"id":9100,"nodeType":"Block","src":"19270:147:17","statements":[{"expression":{"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9084,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"19280:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9088,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9085,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"19299:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19299:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19280:39:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9089,"indexExpression":{"id":9087,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"19320:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19280:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9090,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9080,"src":"19332:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19280:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9092,"nodeType":"ExpressionStatement","src":"19280:60:17"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9094,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"19370:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19370:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9096,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"19391:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9097,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9080,"src":"19401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9093,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"19355:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19355:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9099,"nodeType":"EmitStatement","src":"19350:60:17"}]},"documentation":{"id":9076,"nodeType":"StructuredDocumentation","src":"18865:316:17","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":9101,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"19195:17:17","nodeType":"FunctionDefinition","overrides":{"id":9082,"nodeType":"OverrideSpecifier","overrides":[],"src":"19261:8:17"},"parameters":{"id":9081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9078,"mutability":"mutable","name":"operator","nameLocation":"19221:8:17","nodeType":"VariableDeclaration","scope":9101,"src":"19213:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9077,"name":"address","nodeType":"ElementaryTypeName","src":"19213:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9080,"mutability":"mutable","name":"approved","nameLocation":"19236:8:17","nodeType":"VariableDeclaration","scope":9101,"src":"19231:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9079,"name":"bool","nodeType":"ElementaryTypeName","src":"19231:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19212:33:17"},"returnParameters":{"id":9083,"nodeType":"ParameterList","parameters":[],"src":"19270:0:17"},"scope":10402,"src":"19186:231:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[10591],"body":{"id":9118,"nodeType":"Block","src":"19670:59:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9112,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"19687:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9114,"indexExpression":{"id":9113,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"19706:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9116,"indexExpression":{"id":9115,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"19713:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9111,"id":9117,"nodeType":"Return","src":"19680:42:17"}]},"documentation":{"id":9102,"nodeType":"StructuredDocumentation","src":"19423:139:17","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":9119,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"19576:16:17","nodeType":"FunctionDefinition","overrides":{"id":9108,"nodeType":"OverrideSpecifier","overrides":[],"src":"19646:8:17"},"parameters":{"id":9107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9104,"mutability":"mutable","name":"owner","nameLocation":"19601:5:17","nodeType":"VariableDeclaration","scope":9119,"src":"19593:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9103,"name":"address","nodeType":"ElementaryTypeName","src":"19593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9106,"mutability":"mutable","name":"operator","nameLocation":"19616:8:17","nodeType":"VariableDeclaration","scope":9119,"src":"19608:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9105,"name":"address","nodeType":"ElementaryTypeName","src":"19608:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19592:33:17"},"returnParameters":{"id":9111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9119,"src":"19664:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9109,"name":"bool","nodeType":"ElementaryTypeName","src":"19664:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19663:6:17"},"scope":10402,"src":"19567:162:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9172,"nodeType":"Block","src":"20056:387:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9127,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"20070:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20070:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20070:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9171,"nodeType":"IfStatement","src":"20066:371:17","trueBody":{"id":9170,"nodeType":"Block","src":"20098:339:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9132,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"20126:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20126:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9141,"nodeType":"IfStatement","src":"20112:90:17","trueBody":{"expression":{"arguments":[{"baseExpression":{"id":9136,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"20175:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9138,"indexExpression":{"id":9137,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20175:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9135,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"20152:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20152:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9126,"id":9140,"nodeType":"Return","src":"20145:57:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20221:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9143,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"20231:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20221:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9169,"nodeType":"IfStatement","src":"20217:210:17","trueBody":{"id":9168,"nodeType":"Block","src":"20246:181:17","statements":[{"assignments":[9146],"declarations":[{"constant":false,"id":9146,"mutability":"mutable","name":"packed","nameLocation":"20272:6:17","nodeType":"VariableDeclaration","scope":9168,"src":"20264:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9145,"name":"uint256","nodeType":"ElementaryTypeName","src":"20264:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9147,"nodeType":"VariableDeclarationStatement","src":"20264:14:17"},{"body":{"expression":{"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"20347:9:17","subExpression":{"id":9156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20349:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9158,"nodeType":"ExpressionStatement","src":"20347:9:17"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9148,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"20304:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9149,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"20313:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9151,"indexExpression":{"id":9150,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"20331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20313:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20304:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20303:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20303:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9159,"nodeType":"WhileStatement","src":"20296:60:17"},{"expression":{"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"20374:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9161,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"20383:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9162,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"20392:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20383:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20411:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20383:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20374:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9167,"nodeType":"ExpressionStatement","src":"20374:38:17"}]}}]}}]},"documentation":{"id":9120,"nodeType":"StructuredDocumentation","src":"19735:238:17","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."},"id":9173,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"19987:7:17","nodeType":"FunctionDefinition","parameters":{"id":9123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9122,"mutability":"mutable","name":"tokenId","nameLocation":"20003:7:17","nodeType":"VariableDeclaration","scope":9173,"src":"19995:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9121,"name":"uint256","nodeType":"ElementaryTypeName","src":"19995:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19994:17:17"},"returnParameters":{"id":9126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9125,"mutability":"mutable","name":"result","nameLocation":"20048:6:17","nodeType":"VariableDeclaration","scope":9173,"src":"20043:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9124,"name":"bool","nodeType":"ElementaryTypeName","src":"20043:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20042:13:17"},"scope":10402,"src":"19978:465:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9182,"nodeType":"Block","src":"20617:246:17","statements":[{"AST":{"nativeSrc":"20636:221:17","nodeType":"YulBlock","src":"20636:221:17","statements":[{"nativeSrc":"20774:73:17","nodeType":"YulAssignment","src":"20774:73:17","value":{"arguments":[{"arguments":[{"name":"packed","nativeSrc":"20791:6:17","nodeType":"YulIdentifier","src":"20791:6:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"20799:16:17","nodeType":"YulIdentifier","src":"20799:16:17"}],"functionName":{"name":"and","nativeSrc":"20787:3:17","nodeType":"YulIdentifier","src":"20787:3:17"},"nativeSrc":"20787:29:17","nodeType":"YulFunctionCall","src":"20787:29:17"},{"arguments":[{"name":"packed","nativeSrc":"20822:6:17","nodeType":"YulIdentifier","src":"20822:6:17"},{"name":"_BITMASK_BURNED","nativeSrc":"20830:15:17","nodeType":"YulIdentifier","src":"20830:15:17"}],"functionName":{"name":"and","nativeSrc":"20818:3:17","nodeType":"YulIdentifier","src":"20818:3:17"},"nativeSrc":"20818:28:17","nodeType":"YulFunctionCall","src":"20818:28:17"}],"functionName":{"name":"gt","nativeSrc":"20784:2:17","nodeType":"YulIdentifier","src":"20784:2:17"},"nativeSrc":"20784:63:17","nodeType":"YulFunctionCall","src":"20784:63:17"},"variableNames":[{"name":"result","nativeSrc":"20774:6:17","nodeType":"YulIdentifier","src":"20774:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8386,"isOffset":false,"isSlot":false,"src":"20799:16:17","valueSize":1},{"declaration":8359,"isOffset":false,"isSlot":false,"src":"20830:15:17","valueSize":1},{"declaration":9176,"isOffset":false,"isSlot":false,"src":"20791:6:17","valueSize":1},{"declaration":9176,"isOffset":false,"isSlot":false,"src":"20822:6:17","valueSize":1},{"declaration":9179,"isOffset":false,"isSlot":false,"src":"20774:6:17","valueSize":1}],"id":9181,"nodeType":"InlineAssembly","src":"20627:230:17"}]},"documentation":{"id":9174,"nodeType":"StructuredDocumentation","src":"20449:80:17","text":" @dev Returns whether `packed` represents a token that exists."},"id":9183,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipExists","nameLocation":"20543:22:17","nodeType":"FunctionDefinition","parameters":{"id":9177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9176,"mutability":"mutable","name":"packed","nameLocation":"20574:6:17","nodeType":"VariableDeclaration","scope":9183,"src":"20566:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9175,"name":"uint256","nodeType":"ElementaryTypeName","src":"20566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20565:16:17"},"returnParameters":{"id":9180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9179,"mutability":"mutable","name":"result","nameLocation":"20609:6:17","nodeType":"VariableDeclaration","scope":9183,"src":"20604:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9178,"name":"bool","nodeType":"ElementaryTypeName","src":"20604:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20603:13:17"},"scope":10402,"src":"20534:329:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9196,"nodeType":"Block","src":"21125:488:17","statements":[{"AST":{"nativeSrc":"21144:463:17","nodeType":"YulBlock","src":"21144:463:17","statements":[{"nativeSrc":"21254:37:17","nodeType":"YulAssignment","src":"21254:37:17","value":{"arguments":[{"name":"owner","nativeSrc":"21267:5:17","nodeType":"YulIdentifier","src":"21267:5:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21274:16:17","nodeType":"YulIdentifier","src":"21274:16:17"}],"functionName":{"name":"and","nativeSrc":"21263:3:17","nodeType":"YulIdentifier","src":"21263:3:17"},"nativeSrc":"21263:28:17","nodeType":"YulFunctionCall","src":"21263:28:17"},"variableNames":[{"name":"owner","nativeSrc":"21254:5:17","nodeType":"YulIdentifier","src":"21254:5:17"}]},{"nativeSrc":"21404:45:17","nodeType":"YulAssignment","src":"21404:45:17","value":{"arguments":[{"name":"msgSender","nativeSrc":"21421:9:17","nodeType":"YulIdentifier","src":"21421:9:17"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21432:16:17","nodeType":"YulIdentifier","src":"21432:16:17"}],"functionName":{"name":"and","nativeSrc":"21417:3:17","nodeType":"YulIdentifier","src":"21417:3:17"},"nativeSrc":"21417:32:17","nodeType":"YulFunctionCall","src":"21417:32:17"},"variableNames":[{"name":"msgSender","nativeSrc":"21404:9:17","nodeType":"YulIdentifier","src":"21404:9:17"}]},{"nativeSrc":"21531:66:17","nodeType":"YulAssignment","src":"21531:66:17","value":{"arguments":[{"arguments":[{"name":"msgSender","nativeSrc":"21547:9:17","nodeType":"YulIdentifier","src":"21547:9:17"},{"name":"owner","nativeSrc":"21558:5:17","nodeType":"YulIdentifier","src":"21558:5:17"}],"functionName":{"name":"eq","nativeSrc":"21544:2:17","nodeType":"YulIdentifier","src":"21544:2:17"},"nativeSrc":"21544:20:17","nodeType":"YulFunctionCall","src":"21544:20:17"},{"arguments":[{"name":"msgSender","nativeSrc":"21569:9:17","nodeType":"YulIdentifier","src":"21569:9:17"},{"name":"approvedAddress","nativeSrc":"21580:15:17","nodeType":"YulIdentifier","src":"21580:15:17"}],"functionName":{"name":"eq","nativeSrc":"21566:2:17","nodeType":"YulIdentifier","src":"21566:2:17"},"nativeSrc":"21566:30:17","nodeType":"YulFunctionCall","src":"21566:30:17"}],"functionName":{"name":"or","nativeSrc":"21541:2:17","nodeType":"YulIdentifier","src":"21541:2:17"},"nativeSrc":"21541:56:17","nodeType":"YulFunctionCall","src":"21541:56:17"},"variableNames":[{"name":"result","nativeSrc":"21531:6:17","nodeType":"YulIdentifier","src":"21531:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8386,"isOffset":false,"isSlot":false,"src":"21274:16:17","valueSize":1},{"declaration":8386,"isOffset":false,"isSlot":false,"src":"21432:16:17","valueSize":1},{"declaration":9186,"isOffset":false,"isSlot":false,"src":"21580:15:17","valueSize":1},{"declaration":9190,"isOffset":false,"isSlot":false,"src":"21404:9:17","valueSize":1},{"declaration":9190,"isOffset":false,"isSlot":false,"src":"21421:9:17","valueSize":1},{"declaration":9190,"isOffset":false,"isSlot":false,"src":"21547:9:17","valueSize":1},{"declaration":9190,"isOffset":false,"isSlot":false,"src":"21569:9:17","valueSize":1},{"declaration":9188,"isOffset":false,"isSlot":false,"src":"21254:5:17","valueSize":1},{"declaration":9188,"isOffset":false,"isSlot":false,"src":"21267:5:17","valueSize":1},{"declaration":9188,"isOffset":false,"isSlot":false,"src":"21558:5:17","valueSize":1},{"declaration":9193,"isOffset":false,"isSlot":false,"src":"21531:6:17","valueSize":1}],"id":9195,"nodeType":"InlineAssembly","src":"21135:472:17"}]},"documentation":{"id":9184,"nodeType":"StructuredDocumentation","src":"20869:93:17","text":" @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."},"id":9197,"implemented":true,"kind":"function","modifiers":[],"name":"_isSenderApprovedOrOwner","nameLocation":"20976:24:17","nodeType":"FunctionDefinition","parameters":{"id":9191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9186,"mutability":"mutable","name":"approvedAddress","nameLocation":"21018:15:17","nodeType":"VariableDeclaration","scope":9197,"src":"21010:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9185,"name":"address","nodeType":"ElementaryTypeName","src":"21010:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9188,"mutability":"mutable","name":"owner","nameLocation":"21051:5:17","nodeType":"VariableDeclaration","scope":9197,"src":"21043:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9187,"name":"address","nodeType":"ElementaryTypeName","src":"21043:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9190,"mutability":"mutable","name":"msgSender","nameLocation":"21074:9:17","nodeType":"VariableDeclaration","scope":9197,"src":"21066:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9189,"name":"address","nodeType":"ElementaryTypeName","src":"21066:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21000:89:17"},"returnParameters":{"id":9194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9193,"mutability":"mutable","name":"result","nameLocation":"21117:6:17","nodeType":"VariableDeclaration","scope":9197,"src":"21112:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9192,"name":"bool","nodeType":"ElementaryTypeName","src":"21112:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21111:13:17"},"scope":10402,"src":"20967:646:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9215,"nodeType":"Block","src":"21878:317:17","statements":[{"assignments":[9209],"declarations":[{"constant":false,"id":9209,"mutability":"mutable","name":"tokenApproval","nameLocation":"21913:13:17","nodeType":"VariableDeclaration","scope":9215,"src":"21888:38:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"},"typeName":{"id":9208,"nodeType":"UserDefinedTypeName","pathNode":{"id":9207,"name":"TokenApprovalRef","nameLocations":["21888:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8326,"src":"21888:16:17"},"referencedDeclaration":8326,"src":"21888:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}},"visibility":"internal"}],"id":9213,"initialValue":{"baseExpression":{"id":9210,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"21929:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8326_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":9212,"indexExpression":{"id":9211,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"21945:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21929:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21888:65:17"},{"AST":{"nativeSrc":"22066:123:17","nodeType":"YulBlock","src":"22066:123:17","statements":[{"nativeSrc":"22080:41:17","nodeType":"YulAssignment","src":"22080:41:17","value":{"name":"tokenApproval.slot","nativeSrc":"22103:18:17","nodeType":"YulIdentifier","src":"22103:18:17"},"variableNames":[{"name":"approvedAddressSlot","nativeSrc":"22080:19:17","nodeType":"YulIdentifier","src":"22080:19:17"}]},{"nativeSrc":"22134:45:17","nodeType":"YulAssignment","src":"22134:45:17","value":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"22159:19:17","nodeType":"YulIdentifier","src":"22159:19:17"}],"functionName":{"name":"sload","nativeSrc":"22153:5:17","nodeType":"YulIdentifier","src":"22153:5:17"},"nativeSrc":"22153:26:17","nodeType":"YulFunctionCall","src":"22153:26:17"},"variableNames":[{"name":"approvedAddress","nativeSrc":"22134:15:17","nodeType":"YulIdentifier","src":"22134:15:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9205,"isOffset":false,"isSlot":false,"src":"22134:15:17","valueSize":1},{"declaration":9203,"isOffset":false,"isSlot":false,"src":"22080:19:17","valueSize":1},{"declaration":9203,"isOffset":false,"isSlot":false,"src":"22159:19:17","valueSize":1},{"declaration":9209,"isOffset":false,"isSlot":true,"src":"22103:18:17","suffix":"slot","valueSize":1}],"id":9214,"nodeType":"InlineAssembly","src":"22057:132:17"}]},"documentation":{"id":9198,"nodeType":"StructuredDocumentation","src":"21619:97:17","text":" @dev Returns the storage slot and value for the approved address of `tokenId`."},"id":9216,"implemented":true,"kind":"function","modifiers":[],"name":"_getApprovedSlotAndAddress","nameLocation":"21730:26:17","nodeType":"FunctionDefinition","parameters":{"id":9201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9200,"mutability":"mutable","name":"tokenId","nameLocation":"21765:7:17","nodeType":"VariableDeclaration","scope":9216,"src":"21757:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9199,"name":"uint256","nodeType":"ElementaryTypeName","src":"21757:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21756:17:17"},"returnParameters":{"id":9206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9203,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"21828:19:17","nodeType":"VariableDeclaration","scope":9216,"src":"21820:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9202,"name":"uint256","nodeType":"ElementaryTypeName","src":"21820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9205,"mutability":"mutable","name":"approvedAddress","nameLocation":"21857:15:17","nodeType":"VariableDeclaration","scope":9216,"src":"21849:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9204,"name":"address","nodeType":"ElementaryTypeName","src":"21849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21819:54:17"},"scope":10402,"src":"21721:474:17","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[10557],"body":{"id":9388,"nodeType":"Block","src":"22923:3320:17","statements":[{"assignments":[9228],"declarations":[{"constant":false,"id":9228,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"22941:19:17","nodeType":"VariableDeclaration","scope":9388,"src":"22933:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9227,"name":"uint256","nodeType":"ElementaryTypeName","src":"22933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9232,"initialValue":{"arguments":[{"id":9230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"22982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9229,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"22963:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22963:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22933:57:17"},{"expression":{"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9233,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23092:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9242,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23131:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23123:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9240,"name":"uint160","nodeType":"ElementaryTypeName","src":"23123:7:17","typeDescriptions":{}}},"id":9243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23123:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23115:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9238,"name":"uint256","nodeType":"ElementaryTypeName","src":"23115:7:17","typeDescriptions":{}}},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23115:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9245,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"23140:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23115:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23107:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9236,"name":"uint160","nodeType":"ElementaryTypeName","src":"23107:7:17","typeDescriptions":{}}},"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23107:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23099:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9234,"name":"address","nodeType":"ElementaryTypeName","src":"23099:7:17","typeDescriptions":{}}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23099:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23092:66:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9250,"nodeType":"ExpressionStatement","src":"23092:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9255,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9228,"src":"23189:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23181:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9253,"name":"uint160","nodeType":"ElementaryTypeName","src":"23181:7:17","typeDescriptions":{}}},"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23181:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23173:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9251,"name":"address","nodeType":"ElementaryTypeName","src":"23173:7:17","typeDescriptions":{}}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23173:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23214:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23173:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9265,"nodeType":"IfStatement","src":"23169:95:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9261,"name":"TransferFromIncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"23228:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23255:8:17","memberName":"selector","nodeType":"MemberAccess","src":"23228:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9260,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"23220:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23220:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9264,"nodeType":"ExpressionStatement","src":"23220:44:17"}},{"assignments":[9267,9269],"declarations":[{"constant":false,"id":9267,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"23284:19:17","nodeType":"VariableDeclaration","scope":9388,"src":"23276:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9266,"name":"uint256","nodeType":"ElementaryTypeName","src":"23276:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9269,"mutability":"mutable","name":"approvedAddress","nameLocation":"23313:15:17","nodeType":"VariableDeclaration","scope":9388,"src":"23305:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9268,"name":"address","nodeType":"ElementaryTypeName","src":"23305:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9273,"initialValue":{"arguments":[{"id":9271,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"23359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9270,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"23332:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23332:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"23275:92:17"},{"condition":{"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23463:69:17","subExpression":{"arguments":[{"id":9275,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"23489:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9276,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23506:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9277,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"23512:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23512:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9274,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"23464:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23464:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9293,"nodeType":"IfStatement","src":"23459:188:17","trueBody":{"condition":{"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23550:44:17","subExpression":{"arguments":[{"id":9282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23568:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9283,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"23574:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23574:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9281,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"23551:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23551:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9292,"nodeType":"IfStatement","src":"23546:101:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9288,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10426,"src":"23604:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23638:8:17","memberName":"selector","nodeType":"MemberAccess","src":"23604:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9287,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"23596:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23596:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9291,"nodeType":"ExpressionStatement","src":"23596:51:17"}}},{"expression":{"arguments":[{"id":9295,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"23680:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9296,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"23686:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9297,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"23690:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23699:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9294,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"23658:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23658:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9300,"nodeType":"ExpressionStatement","src":"23658:43:17"},{"AST":{"nativeSrc":"23773:181:17","nodeType":"YulBlock","src":"23773:181:17","statements":[{"body":{"nativeSrc":"23806:138:17","nodeType":"YulBlock","src":"23806:138:17","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"23907:19:17","nodeType":"YulIdentifier","src":"23907:19:17"},{"kind":"number","nativeSrc":"23928:1:17","nodeType":"YulLiteral","src":"23928:1:17","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"23900:6:17","nodeType":"YulIdentifier","src":"23900:6:17"},"nativeSrc":"23900:30:17","nodeType":"YulFunctionCall","src":"23900:30:17"},"nativeSrc":"23900:30:17","nodeType":"YulExpressionStatement","src":"23900:30:17"}]},"condition":{"name":"approvedAddress","nativeSrc":"23790:15:17","nodeType":"YulIdentifier","src":"23790:15:17"},"nativeSrc":"23787:157:17","nodeType":"YulIf","src":"23787:157:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":9269,"isOffset":false,"isSlot":false,"src":"23790:15:17","valueSize":1},{"declaration":9267,"isOffset":false,"isSlot":false,"src":"23907:19:17","valueSize":1}],"id":9301,"nodeType":"InlineAssembly","src":"23764:190:17"},{"id":9358,"nodeType":"UncheckedBlock","src":"24221:1361:17","statements":[{"expression":{"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"24314:26:17","subExpression":{"baseExpression":{"id":9302,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"24316:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9304,"indexExpression":{"id":9303,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"24335:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24316:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9306,"nodeType":"ExpressionStatement","src":"24314:26:17"},{"expression":{"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24382:24:17","subExpression":{"baseExpression":{"id":9307,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"24384:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9309,"indexExpression":{"id":9308,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"24403:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24384:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9311,"nodeType":"ExpressionStatement","src":"24382:24:17"},{"expression":{"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9312,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"24670:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9314,"indexExpression":{"id":9313,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"24688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24670:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"24735:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9317,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"24755:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"24798:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9320,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"24804:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9321,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9228,"src":"24808:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9318,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10373,"src":"24783:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24783:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24755:73:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9315,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"24699:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24699:143:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24670:172:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9326,"nodeType":"ExpressionStatement","src":"24670:172:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9327,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9228,"src":"24959:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9328,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"24981:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24959:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25010:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24959:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9357,"nodeType":"IfStatement","src":"24955:617:17","trueBody":{"id":9356,"nodeType":"Block","src":"25013:559:17","statements":[{"assignments":[9333],"declarations":[{"constant":false,"id":9333,"mutability":"mutable","name":"nextTokenId","nameLocation":"25039:11:17","nodeType":"VariableDeclaration","scope":9356,"src":"25031:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9332,"name":"uint256","nodeType":"ElementaryTypeName","src":"25031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9337,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"25053:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25063:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25053:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25031:33:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9338,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"25184:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9340,"indexExpression":{"id":9339,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9333,"src":"25202:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25184:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25218:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25184:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9355,"nodeType":"IfStatement","src":"25180:378:17","trueBody":{"id":9354,"nodeType":"Block","src":"25221:337:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9343,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9333,"src":"25305:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9344,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"25320:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25305:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9353,"nodeType":"IfStatement","src":"25301:239:17","trueBody":{"id":9352,"nodeType":"Block","src":"25335:205:17","statements":[{"expression":{"id":9350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9346,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"25465:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9348,"indexExpression":{"id":9347,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9333,"src":"25483:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25465:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9349,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9228,"src":"25498:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25465:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9351,"nodeType":"ExpressionStatement","src":"25465:52:17"}]}}]}}]}}]},{"assignments":[9360],"declarations":[{"constant":false,"id":9360,"mutability":"mutable","name":"toMasked","nameLocation":"25689:8:17","nodeType":"VariableDeclaration","scope":9388,"src":"25681:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9359,"name":"uint256","nodeType":"ElementaryTypeName","src":"25681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"25716:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25708:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9363,"name":"uint160","nodeType":"ElementaryTypeName","src":"25708:7:17","typeDescriptions":{}}},"id":9366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25708:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25700:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9361,"name":"uint256","nodeType":"ElementaryTypeName","src":"25700:7:17","typeDescriptions":{}}},"id":9367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25700:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9368,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"25723:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25700:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25681:58:17"},{"AST":{"nativeSrc":"25758:358:17","nodeType":"YulBlock","src":"25758:358:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25836:1:17","nodeType":"YulLiteral","src":"25836:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"25892:1:17","nodeType":"YulLiteral","src":"25892:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"25946:25:17","nodeType":"YulIdentifier","src":"25946:25:17"},{"name":"from","nativeSrc":"26003:4:17","nodeType":"YulIdentifier","src":"26003:4:17"},{"name":"toMasked","nativeSrc":"26036:8:17","nodeType":"YulIdentifier","src":"26036:8:17"},{"name":"tokenId","nativeSrc":"26071:7:17","nodeType":"YulIdentifier","src":"26071:7:17"}],"functionName":{"name":"log4","nativeSrc":"25814:4:17","nodeType":"YulIdentifier","src":"25814:4:17"},"nativeSrc":"25814:292:17","nodeType":"YulFunctionCall","src":"25814:292:17"},"nativeSrc":"25814:292:17","nodeType":"YulExpressionStatement","src":"25814:292:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8392,"isOffset":false,"isSlot":false,"src":"25946:25:17","valueSize":1},{"declaration":9219,"isOffset":false,"isSlot":false,"src":"26003:4:17","valueSize":1},{"declaration":9360,"isOffset":false,"isSlot":false,"src":"26036:8:17","valueSize":1},{"declaration":9223,"isOffset":false,"isSlot":false,"src":"26071:7:17","valueSize":1}],"id":9371,"nodeType":"InlineAssembly","src":"25749:367:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9372,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"26129:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26129:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9380,"nodeType":"IfStatement","src":"26125:58:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9376,"name":"TransferToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10435,"src":"26152:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26174:8:17","memberName":"selector","nodeType":"MemberAccess","src":"26152:30:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9375,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"26144:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26144:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9379,"nodeType":"ExpressionStatement","src":"26144:39:17"}},{"expression":{"arguments":[{"id":9382,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"26215:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"26221:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"26225:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26234:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9381,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"26194:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26194:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9387,"nodeType":"ExpressionStatement","src":"26194:42:17"}]},"documentation":{"id":9217,"nodeType":"StructuredDocumentation","src":"22388:403:17","text":" @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":9389,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"22805:12:17","nodeType":"FunctionDefinition","overrides":{"id":9225,"nodeType":"OverrideSpecifier","overrides":[],"src":"22914:8:17"},"parameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9219,"mutability":"mutable","name":"from","nameLocation":"22835:4:17","nodeType":"VariableDeclaration","scope":9389,"src":"22827:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9218,"name":"address","nodeType":"ElementaryTypeName","src":"22827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9221,"mutability":"mutable","name":"to","nameLocation":"22857:2:17","nodeType":"VariableDeclaration","scope":9389,"src":"22849:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9220,"name":"address","nodeType":"ElementaryTypeName","src":"22849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9223,"mutability":"mutable","name":"tokenId","nameLocation":"22877:7:17","nodeType":"VariableDeclaration","scope":9389,"src":"22869:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9222,"name":"uint256","nodeType":"ElementaryTypeName","src":"22869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22817:73:17"},"returnParameters":{"id":9226,"nodeType":"ParameterList","parameters":[],"src":"22923:0:17"},"scope":10402,"src":"22796:3447:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[10547],"body":{"id":9407,"nodeType":"Block","src":"26465:56:17","statements":[{"expression":{"arguments":[{"id":9401,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"26492:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"26498:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9403,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"26502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":9404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26511:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9400,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[9408,9448],"referencedDeclaration":9448,"src":"26475:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26475:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9406,"nodeType":"ExpressionStatement","src":"26475:39:17"}]},"documentation":{"id":9390,"nodeType":"StructuredDocumentation","src":"26249:80:17","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":9408,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"26343:16:17","nodeType":"FunctionDefinition","overrides":{"id":9398,"nodeType":"OverrideSpecifier","overrides":[],"src":"26456:8:17"},"parameters":{"id":9397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9392,"mutability":"mutable","name":"from","nameLocation":"26377:4:17","nodeType":"VariableDeclaration","scope":9408,"src":"26369:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9391,"name":"address","nodeType":"ElementaryTypeName","src":"26369:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9394,"mutability":"mutable","name":"to","nameLocation":"26399:2:17","nodeType":"VariableDeclaration","scope":9408,"src":"26391:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9393,"name":"address","nodeType":"ElementaryTypeName","src":"26391:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9396,"mutability":"mutable","name":"tokenId","nameLocation":"26419:7:17","nodeType":"VariableDeclaration","scope":9408,"src":"26411:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9395,"name":"uint256","nodeType":"ElementaryTypeName","src":"26411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26359:73:17"},"returnParameters":{"id":9399,"nodeType":"ParameterList","parameters":[],"src":"26465:0:17"},"scope":10402,"src":"26334:187:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[10537],"body":{"id":9447,"nodeType":"Block","src":"27261:246:17","statements":[{"expression":{"arguments":[{"id":9422,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"27284:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9413,"src":"27290:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"27294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9421,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"27271:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27271:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9426,"nodeType":"ExpressionStatement","src":"27271:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9413,"src":"27316:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27319:4:17","memberName":"code","nodeType":"MemberAccess","src":"27316:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27324:6:17","memberName":"length","nodeType":"MemberAccess","src":"27316:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27316:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9446,"nodeType":"IfStatement","src":"27312:189:17","trueBody":{"condition":{"id":9438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27353:57:17","subExpression":{"arguments":[{"id":9433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"27385:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9413,"src":"27391:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9435,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"27395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9436,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9417,"src":"27404:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9432,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"27354:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27354:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9445,"nodeType":"IfStatement","src":"27349:152:17","trueBody":{"id":9444,"nodeType":"Block","src":"27412:89:17","statements":[{"expression":{"arguments":[{"expression":{"id":9440,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10432,"src":"27438:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27477:8:17","memberName":"selector","nodeType":"MemberAccess","src":"27438:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9439,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"27430:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27430:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9443,"nodeType":"ExpressionStatement","src":"27430:56:17"}]}}}]},"documentation":{"id":9409,"nodeType":"StructuredDocumentation","src":"26527:570:17","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":9448,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"27111:16:17","nodeType":"FunctionDefinition","overrides":{"id":9419,"nodeType":"OverrideSpecifier","overrides":[],"src":"27252:8:17"},"parameters":{"id":9418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9411,"mutability":"mutable","name":"from","nameLocation":"27145:4:17","nodeType":"VariableDeclaration","scope":9448,"src":"27137:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9410,"name":"address","nodeType":"ElementaryTypeName","src":"27137:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9413,"mutability":"mutable","name":"to","nameLocation":"27167:2:17","nodeType":"VariableDeclaration","scope":9448,"src":"27159:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9412,"name":"address","nodeType":"ElementaryTypeName","src":"27159:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9415,"mutability":"mutable","name":"tokenId","nameLocation":"27187:7:17","nodeType":"VariableDeclaration","scope":9448,"src":"27179:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9414,"name":"uint256","nodeType":"ElementaryTypeName","src":"27179:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9417,"mutability":"mutable","name":"_data","nameLocation":"27217:5:17","nodeType":"VariableDeclaration","scope":9448,"src":"27204:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9416,"name":"bytes","nodeType":"ElementaryTypeName","src":"27204:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27127:101:17"},"returnParameters":{"id":9420,"nodeType":"ParameterList","parameters":[],"src":"27261:0:17"},"scope":10402,"src":"27102:405:17","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":9460,"nodeType":"Block","src":"28303:2:17","statements":[]},"documentation":{"id":9449,"nodeType":"StructuredDocumentation","src":"27513:633:17","text":" @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":9461,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfers","nameLocation":"28160:21:17","nodeType":"FunctionDefinition","parameters":{"id":9458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9451,"mutability":"mutable","name":"from","nameLocation":"28199:4:17","nodeType":"VariableDeclaration","scope":9461,"src":"28191:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9450,"name":"address","nodeType":"ElementaryTypeName","src":"28191:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9453,"mutability":"mutable","name":"to","nameLocation":"28221:2:17","nodeType":"VariableDeclaration","scope":9461,"src":"28213:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9452,"name":"address","nodeType":"ElementaryTypeName","src":"28213:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9455,"mutability":"mutable","name":"startTokenId","nameLocation":"28241:12:17","nodeType":"VariableDeclaration","scope":9461,"src":"28233:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9454,"name":"uint256","nodeType":"ElementaryTypeName","src":"28233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9457,"mutability":"mutable","name":"quantity","nameLocation":"28271:8:17","nodeType":"VariableDeclaration","scope":9461,"src":"28263:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9456,"name":"uint256","nodeType":"ElementaryTypeName","src":"28263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28181:104:17"},"returnParameters":{"id":9459,"nodeType":"ParameterList","parameters":[],"src":"28303:0:17"},"scope":10402,"src":"28151:154:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9473,"nodeType":"Block","src":"29103:2:17","statements":[]},"documentation":{"id":9462,"nodeType":"StructuredDocumentation","src":"28311:636:17","text":" @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."},"id":9474,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfers","nameLocation":"28961:20:17","nodeType":"FunctionDefinition","parameters":{"id":9471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9464,"mutability":"mutable","name":"from","nameLocation":"28999:4:17","nodeType":"VariableDeclaration","scope":9474,"src":"28991:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9463,"name":"address","nodeType":"ElementaryTypeName","src":"28991:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9466,"mutability":"mutable","name":"to","nameLocation":"29021:2:17","nodeType":"VariableDeclaration","scope":9474,"src":"29013:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9465,"name":"address","nodeType":"ElementaryTypeName","src":"29013:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9468,"mutability":"mutable","name":"startTokenId","nameLocation":"29041:12:17","nodeType":"VariableDeclaration","scope":9474,"src":"29033:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9467,"name":"uint256","nodeType":"ElementaryTypeName","src":"29033:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9470,"mutability":"mutable","name":"quantity","nameLocation":"29071:8:17","nodeType":"VariableDeclaration","scope":9474,"src":"29063:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9469,"name":"uint256","nodeType":"ElementaryTypeName","src":"29063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28981:104:17"},"returnParameters":{"id":9472,"nodeType":"ParameterList","parameters":[],"src":"29103:0:17"},"scope":10402,"src":"28952:153:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9529,"nodeType":"Block","src":"29697:509:17","statements":[{"clauses":[{"block":{"id":9509,"nodeType":"Block","src":"29846:96:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9501,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9499,"src":"29867:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"arguments":[{"id":9503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9479,"src":"29902:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9502,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"29877:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$8320_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":9504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29877:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$8320","typeString":"contract ERC721A__IERC721Receiver"}},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29906:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":8319,"src":"29877:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29923:8:17","memberName":"selector","nodeType":"MemberAccess","src":"29877:54:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"29867:64:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9487,"id":9508,"nodeType":"Return","src":"29860:71:17"}]},"errorName":"","id":9510,"nodeType":"TryCatchClause","parameters":{"id":9500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9499,"mutability":"mutable","name":"retval","nameLocation":"29829:6:17","nodeType":"VariableDeclaration","scope":9510,"src":"29822:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9498,"name":"bytes4","nodeType":"ElementaryTypeName","src":"29822:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"29808:37:17"},"src":"29800:142:17"},{"block":{"id":9526,"nodeType":"Block","src":"29971:229:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9514,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"29989:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29996:6:17","memberName":"length","nodeType":"MemberAccess","src":"29989:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29989:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9524,"nodeType":"IfStatement","src":"29985:113:17","trueBody":{"id":9523,"nodeType":"Block","src":"30009:89:17","statements":[{"expression":{"arguments":[{"expression":{"id":9519,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10432,"src":"30035:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30074:8:17","memberName":"selector","nodeType":"MemberAccess","src":"30035:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9518,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"30027:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30027:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9522,"nodeType":"ExpressionStatement","src":"30027:56:17"}]}},{"AST":{"nativeSrc":"30120:70:17","nodeType":"YulBlock","src":"30120:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"30149:2:17","nodeType":"YulLiteral","src":"30149:2:17","type":"","value":"32"},{"name":"reason","nativeSrc":"30153:6:17","nodeType":"YulIdentifier","src":"30153:6:17"}],"functionName":{"name":"add","nativeSrc":"30145:3:17","nodeType":"YulIdentifier","src":"30145:3:17"},"nativeSrc":"30145:15:17","nodeType":"YulFunctionCall","src":"30145:15:17"},{"arguments":[{"name":"reason","nativeSrc":"30168:6:17","nodeType":"YulIdentifier","src":"30168:6:17"}],"functionName":{"name":"mload","nativeSrc":"30162:5:17","nodeType":"YulIdentifier","src":"30162:5:17"},"nativeSrc":"30162:13:17","nodeType":"YulFunctionCall","src":"30162:13:17"}],"functionName":{"name":"revert","nativeSrc":"30138:6:17","nodeType":"YulIdentifier","src":"30138:6:17"},"nativeSrc":"30138:38:17","nodeType":"YulFunctionCall","src":"30138:38:17"},"nativeSrc":"30138:38:17","nodeType":"YulExpressionStatement","src":"30138:38:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":9512,"isOffset":false,"isSlot":false,"src":"30153:6:17","valueSize":1},{"declaration":9512,"isOffset":false,"isSlot":false,"src":"30168:6:17","valueSize":1}],"id":9525,"nodeType":"InlineAssembly","src":"30111:79:17"}]},"errorName":"","id":9527,"nodeType":"TryCatchClause","parameters":{"id":9513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9512,"mutability":"mutable","name":"reason","nameLocation":"29963:6:17","nodeType":"VariableDeclaration","scope":9527,"src":"29950:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9511,"name":"bytes","nodeType":"ElementaryTypeName","src":"29950:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29949:21:17"},"src":"29943:257:17"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9492,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"29757:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29757:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9494,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"29778:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9495,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"29784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9496,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"29793:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":9489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9479,"src":"29736:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9488,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"29711:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$8320_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$8320","typeString":"contract ERC721A__IERC721Receiver"}},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29740:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":8319,"src":"29711:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:88:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":9528,"nodeType":"TryStatement","src":"29707:493:17"}]},"documentation":{"id":9475,"nodeType":"StructuredDocumentation","src":"29111:417:17","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."},"id":9530,"implemented":true,"kind":"function","modifiers":[],"name":"_checkContractOnERC721Received","nameLocation":"29542:30:17","nodeType":"FunctionDefinition","parameters":{"id":9484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9477,"mutability":"mutable","name":"from","nameLocation":"29590:4:17","nodeType":"VariableDeclaration","scope":9530,"src":"29582:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9476,"name":"address","nodeType":"ElementaryTypeName","src":"29582:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9479,"mutability":"mutable","name":"to","nameLocation":"29612:2:17","nodeType":"VariableDeclaration","scope":9530,"src":"29604:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9478,"name":"address","nodeType":"ElementaryTypeName","src":"29604:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9481,"mutability":"mutable","name":"tokenId","nameLocation":"29632:7:17","nodeType":"VariableDeclaration","scope":9530,"src":"29624:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9480,"name":"uint256","nodeType":"ElementaryTypeName","src":"29624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9483,"mutability":"mutable","name":"_data","nameLocation":"29662:5:17","nodeType":"VariableDeclaration","scope":9530,"src":"29649:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9482,"name":"bytes","nodeType":"ElementaryTypeName","src":"29649:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29572:101:17"},"returnParameters":{"id":9487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9530,"src":"29691:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9485,"name":"bool","nodeType":"ElementaryTypeName","src":"29691:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29690:6:17"},"scope":10402,"src":"29533:673:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9660,"nodeType":"Block","src":"30714:2281:17","statements":[{"assignments":[9539],"declarations":[{"constant":false,"id":9539,"mutability":"mutable","name":"startTokenId","nameLocation":"30732:12:17","nodeType":"VariableDeclaration","scope":9660,"src":"30724:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9538,"name":"uint256","nodeType":"ElementaryTypeName","src":"30724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9541,"initialValue":{"id":9540,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"30747:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30724:36:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9542,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"30774:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30774:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9550,"nodeType":"IfStatement","src":"30770:53:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9546,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"30797:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30814:8:17","memberName":"selector","nodeType":"MemberAccess","src":"30797:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9545,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"30789:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30789:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9549,"nodeType":"ExpressionStatement","src":"30789:34:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30864:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30856:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9552,"name":"address","nodeType":"ElementaryTypeName","src":"30856:7:17","typeDescriptions":{}}},"id":9555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30856:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"30868:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9557,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"30872:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9558,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"30886:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9551,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"30834:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30834:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9560,"nodeType":"ExpressionStatement","src":"30834:61:17"},{"id":9649,"nodeType":"UncheckedBlock","src":"31078:1841:17","statements":[{"expression":{"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9561,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"31323:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9563,"indexExpression":{"id":9562,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"31341:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31323:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"31393:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9567,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"31434:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9566,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"31413:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31413:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":9572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9570,"name":"address","nodeType":"ElementaryTypeName","src":"31461:7:17","typeDescriptions":{}}},"id":9573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"31473:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31477:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9569,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10373,"src":"31446:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31446:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31413:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9564,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"31357:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31357:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31323:170:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9580,"nodeType":"ExpressionStatement","src":"31323:170:17"},{"expression":{"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9581,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"31704:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9583,"indexExpression":{"id":9582,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"31723:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31704:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9584,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"31730:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31743:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":9586,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"31748:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31743:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31742:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":9589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31773:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"31742:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31741:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31730:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31704:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9594,"nodeType":"ExpressionStatement","src":"31704:71:17"},{"assignments":[9596],"declarations":[{"constant":false,"id":9596,"mutability":"mutable","name":"toMasked","nameLocation":"31891:8:17","nodeType":"VariableDeclaration","scope":9649,"src":"31883:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9595,"name":"uint256","nodeType":"ElementaryTypeName","src":"31883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"31918:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31910:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9599,"name":"uint160","nodeType":"ElementaryTypeName","src":"31910:7:17","typeDescriptions":{}}},"id":9602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31910:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31902:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9597,"name":"uint256","nodeType":"ElementaryTypeName","src":"31902:7:17","typeDescriptions":{}}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31902:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9604,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"31925:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31902:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31883:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9607,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9596,"src":"31960:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31972:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31960:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9615,"nodeType":"IfStatement","src":"31956:54:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9611,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"31983:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32001:8:17","memberName":"selector","nodeType":"MemberAccess","src":"31983:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9610,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"31975:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31975:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9614,"nodeType":"ExpressionStatement","src":"31975:35:17"}},{"assignments":[9617],"declarations":[{"constant":false,"id":9617,"mutability":"mutable","name":"end","nameLocation":"32033:3:17","nodeType":"VariableDeclaration","scope":9649,"src":"32025:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9616,"name":"uint256","nodeType":"ElementaryTypeName","src":"32025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9618,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"32039:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9619,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"32054:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32039:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32025:37:17"},{"assignments":[9623],"declarations":[{"constant":false,"id":9623,"mutability":"mutable","name":"tokenId","nameLocation":"32084:7:17","nodeType":"VariableDeclaration","scope":9649,"src":"32076:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9622,"name":"uint256","nodeType":"ElementaryTypeName","src":"32076:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9625,"initialValue":{"id":9624,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"32094:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32076:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9626,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9617,"src":"32125:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32131:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9629,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"32135:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32135:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32125:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9637,"nodeType":"IfStatement","src":"32121:77:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9633,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10450,"src":"32162:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32189:8:17","memberName":"selector","nodeType":"MemberAccess","src":"32162:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9632,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"32154:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32154:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9636,"nodeType":"ExpressionStatement","src":"32154:44:17"}},{"body":{"id":9639,"nodeType":"Block","src":"32216:633:17","statements":[{"AST":{"nativeSrc":"32243:441:17","nodeType":"YulBlock","src":"32243:441:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32345:1:17","nodeType":"YulLiteral","src":"32345:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"32409:1:17","nodeType":"YulLiteral","src":"32409:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"32471:25:17","nodeType":"YulIdentifier","src":"32471:25:17"},{"kind":"number","nativeSrc":"32536:1:17","nodeType":"YulLiteral","src":"32536:1:17","type":"","value":"0"},{"name":"toMasked","nativeSrc":"32580:8:17","nodeType":"YulIdentifier","src":"32580:8:17"},{"name":"tokenId","nativeSrc":"32623:7:17","nodeType":"YulIdentifier","src":"32623:7:17"}],"functionName":{"name":"log4","nativeSrc":"32315:4:17","nodeType":"YulIdentifier","src":"32315:4:17"},"nativeSrc":"32315:351:17","nodeType":"YulFunctionCall","src":"32315:351:17"},"nativeSrc":"32315:351:17","nodeType":"YulExpressionStatement","src":"32315:351:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8392,"isOffset":false,"isSlot":false,"src":"32471:25:17","valueSize":1},{"declaration":9596,"isOffset":false,"isSlot":false,"src":"32580:8:17","valueSize":1},{"declaration":9623,"isOffset":false,"isSlot":false,"src":"32623:7:17","valueSize":1}],"id":9638,"nodeType":"InlineAssembly","src":"32234:450:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"32857:9:17","subExpression":{"id":9640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"32859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9617,"src":"32870:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32857:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9644,"nodeType":"DoWhileStatement","src":"32213:662:17"},{"expression":{"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9645,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"32889:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9617,"src":"32905:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32889:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9648,"nodeType":"ExpressionStatement","src":"32889:19:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32957:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32949:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9651,"name":"address","nodeType":"ElementaryTypeName","src":"32949:7:17","typeDescriptions":{}}},"id":9654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32949:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"32961:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9656,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"32965:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9657,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"32979:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9650,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"32928:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32928:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9659,"nodeType":"ExpressionStatement","src":"32928:60:17"}]},"documentation":{"id":9531,"nodeType":"StructuredDocumentation","src":"30397:250:17","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."},"id":9661,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"30661:5:17","nodeType":"FunctionDefinition","parameters":{"id":9536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9533,"mutability":"mutable","name":"to","nameLocation":"30675:2:17","nodeType":"VariableDeclaration","scope":9661,"src":"30667:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9532,"name":"address","nodeType":"ElementaryTypeName","src":"30667:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9535,"mutability":"mutable","name":"quantity","nameLocation":"30687:8:17","nodeType":"VariableDeclaration","scope":9661,"src":"30679:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9534,"name":"uint256","nodeType":"ElementaryTypeName","src":"30679:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30666:30:17"},"returnParameters":{"id":9537,"nodeType":"ParameterList","parameters":[],"src":"30714:0:17"},"scope":10402,"src":"30652:2343:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9792,"nodeType":"Block","src":"33904:1513:17","statements":[{"assignments":[9670],"declarations":[{"constant":false,"id":9670,"mutability":"mutable","name":"startTokenId","nameLocation":"33922:12:17","nodeType":"VariableDeclaration","scope":9792,"src":"33914:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9669,"name":"uint256","nodeType":"ElementaryTypeName","src":"33914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9672,"initialValue":{"id":9671,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"33937:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33914:36:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"33964:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33978:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9674,"name":"address","nodeType":"ElementaryTypeName","src":"33970:7:17","typeDescriptions":{}}},"id":9677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33970:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33964:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9684,"nodeType":"IfStatement","src":"33960:57:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9680,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"33990:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34008:8:17","memberName":"selector","nodeType":"MemberAccess","src":"33990:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9679,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"33982:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33982:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9683,"nodeType":"ExpressionStatement","src":"33982:35:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9685,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"34031:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34031:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9693,"nodeType":"IfStatement","src":"34027:53:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9689,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"34054:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34071:8:17","memberName":"selector","nodeType":"MemberAccess","src":"34054:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9688,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"34046:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34046:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9692,"nodeType":"ExpressionStatement","src":"34046:34:17"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9694,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"34094:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9695,"name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"34105:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34094:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9702,"nodeType":"IfStatement","src":"34090:98:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9698,"name":"MintERC2309QuantityExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"34147:31:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34179:8:17","memberName":"selector","nodeType":"MemberAccess","src":"34147:40:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9697,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"34139:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34139:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9701,"nodeType":"ExpressionStatement","src":"34139:49:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34221:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9704,"name":"address","nodeType":"ElementaryTypeName","src":"34221:7:17","typeDescriptions":{}}},"id":9707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34221:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"34233:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9709,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"34237:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9710,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"34251:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9703,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"34199:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34199:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9712,"nodeType":"ExpressionStatement","src":"34199:61:17"},{"id":9781,"nodeType":"UncheckedBlock","src":"34369:972:17","statements":[{"expression":{"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9713,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"34589:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9715,"indexExpression":{"id":9714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"34608:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34589:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9716,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"34615:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":9718,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"34633:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34628:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34627:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":9721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"34627:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34626:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34615:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34589:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9726,"nodeType":"ExpressionStatement","src":"34589:71:17"},{"expression":{"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9727,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"34896:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9729,"indexExpression":{"id":9728,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"34914:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34896:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"34966:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9733,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"35007:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9732,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"34986:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34986:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":9738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35034:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9736,"name":"address","nodeType":"ElementaryTypeName","src":"35034:7:17","typeDescriptions":{}}},"id":9739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35034:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"35046:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":9741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35050:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9735,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10373,"src":"35019:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":9742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35019:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34986:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9730,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"34930:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34930:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34896:170:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9746,"nodeType":"ExpressionStatement","src":"34896:170:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9747,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"35085:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9748,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"35100:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35085:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9752,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"35115:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35115:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9760,"nodeType":"IfStatement","src":"35081:97:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9756,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10450,"src":"35142:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35169:8:17","memberName":"selector","nodeType":"MemberAccess","src":"35142:35:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9755,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"35134:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35134:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9759,"nodeType":"ExpressionStatement","src":"35134:44:17"}},{"eventCall":{"arguments":[{"id":9762,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"35218:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9763,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"35232:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9764,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"35247:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35232:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35232:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":9770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35269:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35261:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9768,"name":"address","nodeType":"ElementaryTypeName","src":"35261:7:17","typeDescriptions":{}}},"id":9771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35261:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9772,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"35273:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9761,"name":"ConsecutiveTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10622,"src":"35198:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35198:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9774,"nodeType":"EmitStatement","src":"35193:83:17"},{"expression":{"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9775,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"35291:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9776,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"35307:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9777,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"35322:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35307:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35291:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9780,"nodeType":"ExpressionStatement","src":"35291:39:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35379:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9783,"name":"address","nodeType":"ElementaryTypeName","src":"35371:7:17","typeDescriptions":{}}},"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35371:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9787,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"35383:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9788,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"35387:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9789,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"35401:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9782,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"35350:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35350:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9791,"nodeType":"ExpressionStatement","src":"35350:60:17"}]},"documentation":{"id":9662,"nodeType":"StructuredDocumentation","src":"33001:829:17","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."},"id":9793,"implemented":true,"kind":"function","modifiers":[],"name":"_mintERC2309","nameLocation":"33844:12:17","nodeType":"FunctionDefinition","parameters":{"id":9667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9664,"mutability":"mutable","name":"to","nameLocation":"33865:2:17","nodeType":"VariableDeclaration","scope":9793,"src":"33857:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9663,"name":"address","nodeType":"ElementaryTypeName","src":"33857:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9666,"mutability":"mutable","name":"quantity","nameLocation":"33877:8:17","nodeType":"VariableDeclaration","scope":9793,"src":"33869:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9665,"name":"uint256","nodeType":"ElementaryTypeName","src":"33869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33856:30:17"},"returnParameters":{"id":9668,"nodeType":"ParameterList","parameters":[],"src":"33904:0:17"},"scope":10402,"src":"33835:1582:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9856,"nodeType":"Block","src":"35932:650:17","statements":[{"expression":{"arguments":[{"id":9804,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9796,"src":"35948:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9805,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9798,"src":"35952:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9803,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"35942:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35942:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9807,"nodeType":"ExpressionStatement","src":"35942:19:17"},{"id":9855,"nodeType":"UncheckedBlock","src":"35972:604:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9796,"src":"36000:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36003:4:17","memberName":"code","nodeType":"MemberAccess","src":"36000:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36008:6:17","memberName":"length","nodeType":"MemberAccess","src":"36000:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36018:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36000:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9854,"nodeType":"IfStatement","src":"35996:570:17","trueBody":{"id":9853,"nodeType":"Block","src":"36021:545:17","statements":[{"assignments":[9814],"declarations":[{"constant":false,"id":9814,"mutability":"mutable","name":"end","nameLocation":"36047:3:17","nodeType":"VariableDeclaration","scope":9853,"src":"36039:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9813,"name":"uint256","nodeType":"ElementaryTypeName","src":"36039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9816,"initialValue":{"id":9815,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"36053:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36039:27:17"},{"assignments":[9818],"declarations":[{"constant":false,"id":9818,"mutability":"mutable","name":"index","nameLocation":"36092:5:17","nodeType":"VariableDeclaration","scope":9853,"src":"36084:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9817,"name":"uint256","nodeType":"ElementaryTypeName","src":"36084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9819,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"36100:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9820,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9798,"src":"36106:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36100:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36084:30:17"},{"body":{"id":9841,"nodeType":"Block","src":"36135:214:17","statements":[{"condition":{"id":9833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"36161:63:17","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":9826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36201:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36193:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9824,"name":"address","nodeType":"ElementaryTypeName","src":"36193:7:17","typeDescriptions":{}}},"id":9827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36193:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9796,"src":"36205:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"36209:7:17","subExpression":{"id":9829,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9818,"src":"36209:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9831,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9800,"src":"36218:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9823,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"36162:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36162:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9840,"nodeType":"IfStatement","src":"36157:174:17","trueBody":{"id":9839,"nodeType":"Block","src":"36226:105:17","statements":[{"expression":{"arguments":[{"expression":{"id":9835,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10432,"src":"36260:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36299:8:17","memberName":"selector","nodeType":"MemberAccess","src":"36260:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9834,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"36252:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36252:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9838,"nodeType":"ExpressionStatement","src":"36252:56:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9842,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9818,"src":"36357:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9843,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"36365:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36357:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9845,"nodeType":"DoWhileStatement","src":"36132:238:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9846,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"36521:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9847,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"36538:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36521:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9852,"nodeType":"IfStatement","src":"36517:34:17","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"36543:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":9850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36543:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9851,"nodeType":"ExpressionStatement","src":"36543:8:17"}}]}}]}]},"documentation":{"id":9794,"nodeType":"StructuredDocumentation","src":"35423:388:17","text":" @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."},"id":9857,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"35825:9:17","nodeType":"FunctionDefinition","parameters":{"id":9801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9796,"mutability":"mutable","name":"to","nameLocation":"35852:2:17","nodeType":"VariableDeclaration","scope":9857,"src":"35844:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9795,"name":"address","nodeType":"ElementaryTypeName","src":"35844:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9798,"mutability":"mutable","name":"quantity","nameLocation":"35872:8:17","nodeType":"VariableDeclaration","scope":9857,"src":"35864:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9797,"name":"uint256","nodeType":"ElementaryTypeName","src":"35864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9800,"mutability":"mutable","name":"_data","nameLocation":"35903:5:17","nodeType":"VariableDeclaration","scope":9857,"src":"35890:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9799,"name":"bytes","nodeType":"ElementaryTypeName","src":"35890:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35834:80:17"},"returnParameters":{"id":9802,"nodeType":"ParameterList","parameters":[],"src":"35932:0:17"},"scope":10402,"src":"35816:766:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9871,"nodeType":"Block","src":"36727:44:17","statements":[{"expression":{"arguments":[{"id":9866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"36747:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9867,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"36751:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":9868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36761:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9865,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[9857,9872],"referencedDeclaration":9857,"src":"36737:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":9869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36737:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9870,"nodeType":"ExpressionStatement","src":"36737:27:17"}]},"documentation":{"id":9858,"nodeType":"StructuredDocumentation","src":"36588:68:17","text":" @dev Equivalent to `_safeMint(to, quantity, '')`."},"id":9872,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"36670:9:17","nodeType":"FunctionDefinition","parameters":{"id":9863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9860,"mutability":"mutable","name":"to","nameLocation":"36688:2:17","nodeType":"VariableDeclaration","scope":9872,"src":"36680:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9859,"name":"address","nodeType":"ElementaryTypeName","src":"36680:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9862,"mutability":"mutable","name":"quantity","nameLocation":"36700:8:17","nodeType":"VariableDeclaration","scope":9872,"src":"36692:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9861,"name":"uint256","nodeType":"ElementaryTypeName","src":"36692:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36679:30:17"},"returnParameters":{"id":9864,"nodeType":"ParameterList","parameters":[],"src":"36727:0:17"},"scope":10402,"src":"36661:110:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9982,"nodeType":"Block","src":"37221:1992:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"37235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9881,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"37246:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37246:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37235:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9889,"nodeType":"IfStatement","src":"37231:75:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9885,"name":"SpotMintTokenIdTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10453,"src":"37273:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37297:8:17","memberName":"selector","nodeType":"MemberAccess","src":"37273:32:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9884,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"37265:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37265:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9888,"nodeType":"ExpressionStatement","src":"37265:41:17"}},{"assignments":[9891],"declarations":[{"constant":false,"id":9891,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"37324:19:17","nodeType":"VariableDeclaration","scope":9982,"src":"37316:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9890,"name":"uint256","nodeType":"ElementaryTypeName","src":"37316:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9895,"initialValue":{"baseExpression":{"id":9892,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"37346:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9894,"indexExpression":{"id":9893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"37364:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37346:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37316:56:17"},{"condition":{"arguments":[{"id":9897,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"37409:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9896,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"37386:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37386:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9904,"nodeType":"IfStatement","src":"37382:85:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9900,"name":"TokenAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"37439:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37458:8:17","memberName":"selector","nodeType":"MemberAccess","src":"37439:27:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9899,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"37431:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37431:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9903,"nodeType":"ExpressionStatement","src":"37431:36:17"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37508:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37500:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9906,"name":"address","nodeType":"ElementaryTypeName","src":"37500:7:17","typeDescriptions":{}}},"id":9909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37500:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9910,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"37512:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"37516:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9905,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"37478:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37478:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9914,"nodeType":"ExpressionStatement","src":"37478:49:17"},{"id":9971,"nodeType":"UncheckedBlock","src":"37762:1386:17","statements":[{"expression":{"id":9933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9915,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"38019:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9917,"indexExpression":{"id":9916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"38037:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38019:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"38084:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31","id":9921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38125:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9920,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"38104:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38104:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":9926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38145:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9924,"name":"address","nodeType":"ElementaryTypeName","src":"38145:7:17","typeDescriptions":{}}},"id":9927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38145:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9928,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"38157:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9929,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"38161:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9923,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10373,"src":"38130:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":9930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38130:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38104:77:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9918,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"38048:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38048:147:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38019:176:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9934,"nodeType":"ExpressionStatement","src":"38019:176:17"},{"expression":{"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9935,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"38392:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9937,"indexExpression":{"id":9936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"38411:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38392:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38419:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":9939,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"38424:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38419:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38418:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38449:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"38418:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38392:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9945,"nodeType":"ExpressionStatement","src":"38392:58:17"},{"assignments":[9947],"declarations":[{"constant":false,"id":9947,"mutability":"mutable","name":"toMasked","nameLocation":"38566:8:17","nodeType":"VariableDeclaration","scope":9971,"src":"38558:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9946,"name":"uint256","nodeType":"ElementaryTypeName","src":"38558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"38593:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38585:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9950,"name":"uint160","nodeType":"ElementaryTypeName","src":"38585:7:17","typeDescriptions":{}}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38585:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38577:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9948,"name":"uint256","nodeType":"ElementaryTypeName","src":"38577:7:17","typeDescriptions":{}}},"id":9954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38577:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9955,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"38600:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38577:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"38558:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9958,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"38635:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"38635:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9966,"nodeType":"IfStatement","src":"38631:54:17","trueBody":{"expression":{"arguments":[{"expression":{"id":9962,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"38658:17:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38676:8:17","memberName":"selector","nodeType":"MemberAccess","src":"38658:26:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9961,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"38650:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38650:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9965,"nodeType":"ExpressionStatement","src":"38650:35:17"}},{"AST":{"nativeSrc":"38709:401:17","nodeType":"YulBlock","src":"38709:401:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"38799:1:17","nodeType":"YulLiteral","src":"38799:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"38859:1:17","nodeType":"YulLiteral","src":"38859:1:17","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"38917:25:17","nodeType":"YulIdentifier","src":"38917:25:17"},{"kind":"number","nativeSrc":"38978:1:17","nodeType":"YulLiteral","src":"38978:1:17","type":"","value":"0"},{"name":"toMasked","nativeSrc":"39018:8:17","nodeType":"YulIdentifier","src":"39018:8:17"},{"name":"tokenId","nativeSrc":"39057:7:17","nodeType":"YulIdentifier","src":"39057:7:17"}],"functionName":{"name":"log4","nativeSrc":"38773:4:17","nodeType":"YulIdentifier","src":"38773:4:17"},"nativeSrc":"38773:323:17","nodeType":"YulFunctionCall","src":"38773:323:17"},"nativeSrc":"38773:323:17","nodeType":"YulExpressionStatement","src":"38773:323:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":8392,"isOffset":false,"isSlot":false,"src":"38917:25:17","valueSize":1},{"declaration":9947,"isOffset":false,"isSlot":false,"src":"39018:8:17","valueSize":1},{"declaration":9877,"isOffset":false,"isSlot":false,"src":"39057:7:17","valueSize":1}],"id":9967,"nodeType":"InlineAssembly","src":"38700:410:17"},{"expression":{"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"39124:13:17","subExpression":{"id":9968,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"39126:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9970,"nodeType":"ExpressionStatement","src":"39124:13:17"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39187:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39179:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9973,"name":"address","nodeType":"ElementaryTypeName","src":"39179:7:17","typeDescriptions":{}}},"id":9976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39179:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"39191:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"39195:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39204:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9972,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"39158:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39158:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9981,"nodeType":"ExpressionStatement","src":"39158:48:17"}]},"documentation":{"id":9873,"nodeType":"StructuredDocumentation","src":"36777:374:17","text":" @dev Mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n Emits a {Transfer} event for each mint."},"id":9983,"implemented":true,"kind":"function","modifiers":[],"name":"_mintSpot","nameLocation":"37165:9:17","nodeType":"FunctionDefinition","parameters":{"id":9878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9875,"mutability":"mutable","name":"to","nameLocation":"37183:2:17","nodeType":"VariableDeclaration","scope":9983,"src":"37175:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9874,"name":"address","nodeType":"ElementaryTypeName","src":"37175:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9877,"mutability":"mutable","name":"tokenId","nameLocation":"37195:7:17","nodeType":"VariableDeclaration","scope":9983,"src":"37187:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9876,"name":"uint256","nodeType":"ElementaryTypeName","src":"37187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37174:29:17"},"returnParameters":{"id":9879,"nodeType":"ParameterList","parameters":[],"src":"37221:0:17"},"scope":10402,"src":"37156:2057:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10034,"nodeType":"Block","src":"39798:557:17","statements":[{"expression":{"arguments":[{"id":9994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"39818:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9988,"src":"39822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9993,"name":"_mintSpot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"39808:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39808:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9997,"nodeType":"ExpressionStatement","src":"39808:22:17"},{"id":10033,"nodeType":"UncheckedBlock","src":"39841:508:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9998,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"39869:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39872:4:17","memberName":"code","nodeType":"MemberAccess","src":"39869:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39877:6:17","memberName":"length","nodeType":"MemberAccess","src":"39869:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39887:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39869:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10032,"nodeType":"IfStatement","src":"39865:474:17","trueBody":{"id":10031,"nodeType":"Block","src":"39890:449:17","statements":[{"assignments":[10004],"declarations":[{"constant":false,"id":10004,"mutability":"mutable","name":"currentSpotMinted","nameLocation":"39916:17:17","nodeType":"VariableDeclaration","scope":10031,"src":"39908:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10003,"name":"uint256","nodeType":"ElementaryTypeName","src":"39908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10006,"initialValue":{"id":10005,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"39936:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39908:39:17"},{"condition":{"id":10016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"39969:63:17","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40009:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40001:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10008,"name":"address","nodeType":"ElementaryTypeName","src":"40001:7:17","typeDescriptions":{}}},"id":10011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40001:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"40013:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9988,"src":"40017:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10014,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9990,"src":"40026:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10007,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"39970:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39970:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10023,"nodeType":"IfStatement","src":"39965:166:17","trueBody":{"id":10022,"nodeType":"Block","src":"40034:97:17","statements":[{"expression":{"arguments":[{"expression":{"id":10018,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10432,"src":"40064:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40103:8:17","memberName":"selector","nodeType":"MemberAccess","src":"40064:47:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10017,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"40056:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40056:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10021,"nodeType":"ExpressionStatement","src":"40056:56:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10024,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"40282:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10025,"name":"currentSpotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"40297:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40282:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10030,"nodeType":"IfStatement","src":"40278:46:17","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10027,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"40316:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40316:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10029,"nodeType":"ExpressionStatement","src":"40316:8:17"}}]}}]}]},"documentation":{"id":9984,"nodeType":"StructuredDocumentation","src":"39219:455:17","text":" @dev Safely mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n See {_mintSpot}.\n Emits a {Transfer} event."},"id":10035,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"39688:13:17","nodeType":"FunctionDefinition","parameters":{"id":9991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9986,"mutability":"mutable","name":"to","nameLocation":"39719:2:17","nodeType":"VariableDeclaration","scope":10035,"src":"39711:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9985,"name":"address","nodeType":"ElementaryTypeName","src":"39711:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9988,"mutability":"mutable","name":"tokenId","nameLocation":"39739:7:17","nodeType":"VariableDeclaration","scope":10035,"src":"39731:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9987,"name":"uint256","nodeType":"ElementaryTypeName","src":"39731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9990,"mutability":"mutable","name":"_data","nameLocation":"39769:5:17","nodeType":"VariableDeclaration","scope":10035,"src":"39756:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9989,"name":"bytes","nodeType":"ElementaryTypeName","src":"39756:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39701:79:17"},"returnParameters":{"id":9992,"nodeType":"ParameterList","parameters":[],"src":"39798:0:17"},"scope":10402,"src":"39679:676:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10049,"nodeType":"Block","src":"40506:47:17","statements":[{"expression":{"arguments":[{"id":10044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10038,"src":"40530:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10040,"src":"40534:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40543:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10043,"name":"_safeMintSpot","nodeType":"Identifier","overloadedDeclarations":[10035,10050],"referencedDeclaration":10035,"src":"40516:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40516:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10048,"nodeType":"ExpressionStatement","src":"40516:30:17"}]},"documentation":{"id":10036,"nodeType":"StructuredDocumentation","src":"40361:71:17","text":" @dev Equivalent to `_safeMintSpot(to, tokenId, '')`."},"id":10050,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"40446:13:17","nodeType":"FunctionDefinition","parameters":{"id":10041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10038,"mutability":"mutable","name":"to","nameLocation":"40468:2:17","nodeType":"VariableDeclaration","scope":10050,"src":"40460:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10037,"name":"address","nodeType":"ElementaryTypeName","src":"40460:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10040,"mutability":"mutable","name":"tokenId","nameLocation":"40480:7:17","nodeType":"VariableDeclaration","scope":10050,"src":"40472:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10039,"name":"uint256","nodeType":"ElementaryTypeName","src":"40472:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40459:29:17"},"returnParameters":{"id":10042,"nodeType":"ParameterList","parameters":[],"src":"40506:0:17"},"scope":10402,"src":"40437:116:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10064,"nodeType":"Block","src":"40885:45:17","statements":[{"expression":{"arguments":[{"id":10059,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10053,"src":"40904:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10060,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10055,"src":"40908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"40917:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10058,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10065,10115],"referencedDeclaration":10115,"src":"40895:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40895:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10063,"nodeType":"ExpressionStatement","src":"40895:28:17"}]},"documentation":{"id":10051,"nodeType":"StructuredDocumentation","src":"40747:69:17","text":" @dev Equivalent to `_approve(to, tokenId, false)`."},"id":10065,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"40830:8:17","nodeType":"FunctionDefinition","parameters":{"id":10056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10053,"mutability":"mutable","name":"to","nameLocation":"40847:2:17","nodeType":"VariableDeclaration","scope":10065,"src":"40839:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10052,"name":"address","nodeType":"ElementaryTypeName","src":"40839:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10055,"mutability":"mutable","name":"tokenId","nameLocation":"40859:7:17","nodeType":"VariableDeclaration","scope":10065,"src":"40851:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10054,"name":"uint256","nodeType":"ElementaryTypeName","src":"40851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40838:29:17"},"returnParameters":{"id":10057,"nodeType":"ParameterList","parameters":[],"src":"40885:0:17"},"scope":10402,"src":"40821:109:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10114,"nodeType":"Block","src":"41447:346:17","statements":[{"assignments":[10076],"declarations":[{"constant":false,"id":10076,"mutability":"mutable","name":"owner","nameLocation":"41465:5:17","nodeType":"VariableDeclaration","scope":10114,"src":"41457:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10075,"name":"address","nodeType":"ElementaryTypeName","src":"41457:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10080,"initialValue":{"arguments":[{"id":10078,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"41481:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10077,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"41473:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41473:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"41457:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10081,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10072,"src":"41504:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10082,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"41521:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41521:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10084,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"41544:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41521:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41504:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10100,"nodeType":"IfStatement","src":"41500:198:17","trueBody":{"condition":{"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"41567:45:17","subExpression":{"arguments":[{"id":10088,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"41585:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10089,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"41592:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41592:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10087,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"41568:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41568:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10099,"nodeType":"IfStatement","src":"41563:135:17","trueBody":{"id":10098,"nodeType":"Block","src":"41614:84:17","statements":[{"expression":{"arguments":[{"expression":{"id":10094,"name":"ApprovalCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"41640:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41674:8:17","memberName":"selector","nodeType":"MemberAccess","src":"41640:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10093,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"41632:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41632:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10097,"nodeType":"ExpressionStatement","src":"41632:51:17"}]}}},{"expression":{"id":10106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":10101,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"41708:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$8326_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":10103,"indexExpression":{"id":10102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"41724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41708:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$8326_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":10104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"41733:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":8325,"src":"41708:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"41741:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41708:35:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10107,"nodeType":"ExpressionStatement","src":"41708:35:17"},{"eventCall":{"arguments":[{"id":10109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"41767:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"41774:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"41778:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10108,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"41758:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41758:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10113,"nodeType":"EmitStatement","src":"41753:33:17"}]},"documentation":{"id":10066,"nodeType":"StructuredDocumentation","src":"40936:392:17","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."},"id":10115,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"41342:8:17","nodeType":"FunctionDefinition","parameters":{"id":10073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10068,"mutability":"mutable","name":"to","nameLocation":"41368:2:17","nodeType":"VariableDeclaration","scope":10115,"src":"41360:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10067,"name":"address","nodeType":"ElementaryTypeName","src":"41360:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10070,"mutability":"mutable","name":"tokenId","nameLocation":"41388:7:17","nodeType":"VariableDeclaration","scope":10115,"src":"41380:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10069,"name":"uint256","nodeType":"ElementaryTypeName","src":"41380:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10072,"mutability":"mutable","name":"approvalCheck","nameLocation":"41410:13:17","nodeType":"VariableDeclaration","scope":10115,"src":"41405:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10071,"name":"bool","nodeType":"ElementaryTypeName","src":"41405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41350:79:17"},"returnParameters":{"id":10074,"nodeType":"ParameterList","parameters":[],"src":"41447:0:17"},"scope":10402,"src":"41333:460:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10126,"nodeType":"Block","src":"42100:38:17","statements":[{"expression":{"arguments":[{"id":10122,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10118,"src":"42116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"42125:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10121,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[10127,10281],"referencedDeclaration":10281,"src":"42110:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":10124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42110:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10125,"nodeType":"ExpressionStatement","src":"42110:21:17"}]},"documentation":{"id":10116,"nodeType":"StructuredDocumentation","src":"41984:62:17","text":" @dev Equivalent to `_burn(tokenId, false)`."},"id":10127,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42060:5:17","nodeType":"FunctionDefinition","parameters":{"id":10119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10118,"mutability":"mutable","name":"tokenId","nameLocation":"42074:7:17","nodeType":"VariableDeclaration","scope":10127,"src":"42066:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10117,"name":"uint256","nodeType":"ElementaryTypeName","src":"42066:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42065:17:17"},"returnParameters":{"id":10120,"nodeType":"ParameterList","parameters":[],"src":"42100:0:17"},"scope":10402,"src":"42051:87:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10280,"nodeType":"Block","src":"42424:2973:17","statements":[{"assignments":[10136],"declarations":[{"constant":false,"id":10136,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"42442:19:17","nodeType":"VariableDeclaration","scope":10280,"src":"42434:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10135,"name":"uint256","nodeType":"ElementaryTypeName","src":"42434:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10140,"initialValue":{"arguments":[{"id":10138,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"42483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10137,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"42464:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42464:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"42434:57:17"},{"assignments":[10142],"declarations":[{"constant":false,"id":10142,"mutability":"mutable","name":"from","nameLocation":"42510:4:17","nodeType":"VariableDeclaration","scope":10280,"src":"42502:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10141,"name":"address","nodeType":"ElementaryTypeName","src":"42502:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10150,"initialValue":{"arguments":[{"arguments":[{"id":10147,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"42533:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42525:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10145,"name":"uint160","nodeType":"ElementaryTypeName","src":"42525:7:17","typeDescriptions":{}}},"id":10148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42525:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42517:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10143,"name":"address","nodeType":"ElementaryTypeName","src":"42517:7:17","typeDescriptions":{}}},"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42517:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"42502:52:17"},{"assignments":[10152,10154],"declarations":[{"constant":false,"id":10152,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"42574:19:17","nodeType":"VariableDeclaration","scope":10280,"src":"42566:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10151,"name":"uint256","nodeType":"ElementaryTypeName","src":"42566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10154,"mutability":"mutable","name":"approvedAddress","nameLocation":"42603:15:17","nodeType":"VariableDeclaration","scope":10280,"src":"42595:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10153,"name":"address","nodeType":"ElementaryTypeName","src":"42595:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10158,"initialValue":{"arguments":[{"id":10156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"42649:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10155,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"42622:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":10157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42622:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"42565:92:17"},{"condition":{"id":10159,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10132,"src":"42672:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10181,"nodeType":"IfStatement","src":"42668:321:17","trueBody":{"id":10180,"nodeType":"Block","src":"42687:302:17","statements":[{"condition":{"id":10166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42790:69:17","subExpression":{"arguments":[{"id":10161,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"42816:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10162,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"42833:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10163,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"42839:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42839:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10160,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"42791:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42791:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10179,"nodeType":"IfStatement","src":"42786:192:17","trueBody":{"condition":{"id":10172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42881:44:17","subExpression":{"arguments":[{"id":10168,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"42899:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10169,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"42905:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42905:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10167,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"42882:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42882:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10178,"nodeType":"IfStatement","src":"42877:101:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10174,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10426,"src":"42935:33:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42969:8:17","memberName":"selector","nodeType":"MemberAccess","src":"42935:42:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10173,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"42927:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42927:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10177,"nodeType":"ExpressionStatement","src":"42927:51:17"}}}]}},{"expression":{"arguments":[{"id":10183,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"43021:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43035:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43027:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10184,"name":"address","nodeType":"ElementaryTypeName","src":"43027:7:17","typeDescriptions":{}}},"id":10187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43027:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"43039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10182,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"42999:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42999:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10191,"nodeType":"ExpressionStatement","src":"42999:51:17"},{"AST":{"nativeSrc":"43122:181:17","nodeType":"YulBlock","src":"43122:181:17","statements":[{"body":{"nativeSrc":"43155:138:17","nodeType":"YulBlock","src":"43155:138:17","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"43256:19:17","nodeType":"YulIdentifier","src":"43256:19:17"},{"kind":"number","nativeSrc":"43277:1:17","nodeType":"YulLiteral","src":"43277:1:17","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"43249:6:17","nodeType":"YulIdentifier","src":"43249:6:17"},"nativeSrc":"43249:30:17","nodeType":"YulFunctionCall","src":"43249:30:17"},"nativeSrc":"43249:30:17","nodeType":"YulExpressionStatement","src":"43249:30:17"}]},"condition":{"name":"approvedAddress","nativeSrc":"43139:15:17","nodeType":"YulIdentifier","src":"43139:15:17"},"nativeSrc":"43136:157:17","nodeType":"YulIf","src":"43136:157:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10154,"isOffset":false,"isSlot":false,"src":"43139:15:17","valueSize":1},{"declaration":10152,"isOffset":false,"isSlot":false,"src":"43256:19:17","valueSize":1}],"id":10192,"nodeType":"InlineAssembly","src":"43113:190:17"},{"id":10256,"nodeType":"UncheckedBlock","src":"43570:1545:17","statements":[{"expression":{"id":10202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10193,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"43882:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10195,"indexExpression":{"id":10194,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"43901:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43882:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43911:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10197,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"43916:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43911:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"43910:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43941:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"43910:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43882:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10203,"nodeType":"ExpressionStatement","src":"43882:60:17"},{"expression":{"id":10223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10204,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"44173:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10206,"indexExpression":{"id":10205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"44191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44173:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"44238:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":10209,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"44261:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":10210,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"44279:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44261:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"44260:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":10214,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"44323:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44337:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44329:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10215,"name":"address","nodeType":"ElementaryTypeName","src":"44329:7:17","typeDescriptions":{}}},"id":10218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44329:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10219,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"44341:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10213,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10373,"src":"44308:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44308:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44260:101:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10207,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"44202:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44202:173:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44173:202:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10224,"nodeType":"ExpressionStatement","src":"44173:202:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10225,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"44492:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10226,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"44514:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44492:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44543:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44492:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10255,"nodeType":"IfStatement","src":"44488:617:17","trueBody":{"id":10254,"nodeType":"Block","src":"44546:559:17","statements":[{"assignments":[10231],"declarations":[{"constant":false,"id":10231,"mutability":"mutable","name":"nextTokenId","nameLocation":"44572:11:17","nodeType":"VariableDeclaration","scope":10254,"src":"44564:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10230,"name":"uint256","nodeType":"ElementaryTypeName","src":"44564:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10235,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"44586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"44586:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"44564:33:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10236,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"44717:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10238,"indexExpression":{"id":10237,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"44735:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"44717:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44751:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44717:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10253,"nodeType":"IfStatement","src":"44713:378:17","trueBody":{"id":10252,"nodeType":"Block","src":"44754:337:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10241,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"44838:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10242,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"44853:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44838:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10251,"nodeType":"IfStatement","src":"44834:239:17","trueBody":{"id":10250,"nodeType":"Block","src":"44868:205:17","statements":[{"expression":{"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10244,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"44998:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10246,"indexExpression":{"id":10245,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"45016:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44998:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10247,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"45031:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44998:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10249,"nodeType":"ExpressionStatement","src":"44998:52:17"}]}}]}}]}}]},{"eventCall":{"arguments":[{"id":10258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"45139:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45145:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10259,"name":"address","nodeType":"ElementaryTypeName","src":"45145:7:17","typeDescriptions":{}}},"id":10262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45145:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"45157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10257,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"45130:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45130:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10265,"nodeType":"EmitStatement","src":"45125:40:17"},{"expression":{"arguments":[{"id":10267,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"45196:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45210:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45202:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10268,"name":"address","nodeType":"ElementaryTypeName","src":"45202:7:17","typeDescriptions":{}}},"id":10271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45202:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"45214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45223:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10266,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"45175:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45175:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10275,"nodeType":"ExpressionStatement","src":"45175:50:17"},{"id":10279,"nodeType":"UncheckedBlock","src":"45342:49:17","statements":[{"expression":{"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"45366:14:17","subExpression":{"id":10276,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8396,"src":"45366:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10278,"nodeType":"ExpressionStatement","src":"45366:14:17"}]}]},"documentation":{"id":10128,"nodeType":"StructuredDocumentation","src":"42144:206:17","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":10281,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42364:5:17","nodeType":"FunctionDefinition","parameters":{"id":10133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10130,"mutability":"mutable","name":"tokenId","nameLocation":"42378:7:17","nodeType":"VariableDeclaration","scope":10281,"src":"42370:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10129,"name":"uint256","nodeType":"ElementaryTypeName","src":"42370:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10132,"mutability":"mutable","name":"approvalCheck","nameLocation":"42392:13:17","nodeType":"VariableDeclaration","scope":10281,"src":"42387:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10131,"name":"bool","nodeType":"ElementaryTypeName","src":"42387:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42369:37:17"},"returnParameters":{"id":10134,"nodeType":"ParameterList","parameters":[],"src":"42424:0:17"},"scope":10402,"src":"42355:3042:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10326,"nodeType":"Block","src":"45755:456:17","statements":[{"assignments":[10290],"declarations":[{"constant":false,"id":10290,"mutability":"mutable","name":"packed","nameLocation":"45773:6:17","nodeType":"VariableDeclaration","scope":10326,"src":"45765:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10289,"name":"uint256","nodeType":"ElementaryTypeName","src":"45765:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10294,"initialValue":{"baseExpression":{"id":10291,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"45782:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10293,"indexExpression":{"id":10292,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10284,"src":"45800:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45782:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"45765:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10295,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"45820:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45830:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45820:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10303,"nodeType":"IfStatement","src":"45816:70:17","trueBody":{"expression":{"arguments":[{"expression":{"id":10299,"name":"OwnershipNotInitializedForExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10444,"src":"45841:35:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45877:8:17","memberName":"selector","nodeType":"MemberAccess","src":"45841:44:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10298,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"45833:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45833:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10302,"nodeType":"ExpressionStatement","src":"45833:53:17"}},{"assignments":[10305],"declarations":[{"constant":false,"id":10305,"mutability":"mutable","name":"extraDataCasted","nameLocation":"45904:15:17","nodeType":"VariableDeclaration","scope":10326,"src":"45896:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10304,"name":"uint256","nodeType":"ElementaryTypeName","src":"45896:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10306,"nodeType":"VariableDeclarationStatement","src":"45896:23:17"},{"AST":{"nativeSrc":"46008:52:17","nodeType":"YulBlock","src":"46008:52:17","statements":[{"nativeSrc":"46022:28:17","nodeType":"YulAssignment","src":"46022:28:17","value":{"name":"extraData","nativeSrc":"46041:9:17","nodeType":"YulIdentifier","src":"46041:9:17"},"variableNames":[{"name":"extraDataCasted","nativeSrc":"46022:15:17","nodeType":"YulIdentifier","src":"46022:15:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10286,"isOffset":false,"isSlot":false,"src":"46041:9:17","valueSize":1},{"declaration":10305,"isOffset":false,"isSlot":false,"src":"46022:15:17","valueSize":1}],"id":10307,"nodeType":"InlineAssembly","src":"45999:61:17"},{"expression":{"id":10318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10308,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"46069:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10309,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"46079:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10310,"name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"46088:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46079:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46078:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10313,"name":"extraDataCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"46123:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10314,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"46142:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46123:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46122:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46078:83:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46069:92:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10319,"nodeType":"ExpressionStatement","src":"46069:92:17"},{"expression":{"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10320,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"46171:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10322,"indexExpression":{"id":10321,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10284,"src":"46189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"46171:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10323,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10290,"src":"46198:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46171:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10325,"nodeType":"ExpressionStatement","src":"46171:33:17"}]},"documentation":{"id":10282,"nodeType":"StructuredDocumentation","src":"45591:84:17","text":" @dev Directly sets the extra data for the ownership data `index`."},"id":10327,"implemented":true,"kind":"function","modifiers":[],"name":"_setExtraDataAt","nameLocation":"45689:15:17","nodeType":"FunctionDefinition","parameters":{"id":10287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10284,"mutability":"mutable","name":"index","nameLocation":"45713:5:17","nodeType":"VariableDeclaration","scope":10327,"src":"45705:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10283,"name":"uint256","nodeType":"ElementaryTypeName","src":"45705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10286,"mutability":"mutable","name":"extraData","nameLocation":"45727:9:17","nodeType":"VariableDeclaration","scope":10327,"src":"45720:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10285,"name":"uint24","nodeType":"ElementaryTypeName","src":"45720:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"45704:33:17"},"returnParameters":{"id":10288,"nodeType":"ParameterList","parameters":[],"src":"45755:0:17"},"scope":10402,"src":"45680:531:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10339,"nodeType":"Block","src":"46912:2:17","statements":[]},"documentation":{"id":10328,"nodeType":"StructuredDocumentation","src":"46217:549:17","text":" @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":10340,"implemented":true,"kind":"function","modifiers":[],"name":"_extraData","nameLocation":"46780:10:17","nodeType":"FunctionDefinition","parameters":{"id":10335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10330,"mutability":"mutable","name":"from","nameLocation":"46808:4:17","nodeType":"VariableDeclaration","scope":10340,"src":"46800:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10329,"name":"address","nodeType":"ElementaryTypeName","src":"46800:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10332,"mutability":"mutable","name":"to","nameLocation":"46830:2:17","nodeType":"VariableDeclaration","scope":10340,"src":"46822:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10331,"name":"address","nodeType":"ElementaryTypeName","src":"46822:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10334,"mutability":"mutable","name":"previousExtraData","nameLocation":"46849:17:17","nodeType":"VariableDeclaration","scope":10340,"src":"46842:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10333,"name":"uint24","nodeType":"ElementaryTypeName","src":"46842:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46790:82:17"},"returnParameters":{"id":10338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10340,"src":"46904:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10336,"name":"uint24","nodeType":"ElementaryTypeName","src":"46904:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46903:8:17"},"scope":10402,"src":"46771:143:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":10372,"nodeType":"Block","src":"47200:164:17","statements":[{"assignments":[10353],"declarations":[{"constant":false,"id":10353,"mutability":"mutable","name":"extraData","nameLocation":"47217:9:17","nodeType":"VariableDeclaration","scope":10372,"src":"47210:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10352,"name":"uint24","nodeType":"ElementaryTypeName","src":"47210:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":10360,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10356,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10347,"src":"47236:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":10357,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"47259:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47236:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47229:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":10354,"name":"uint24","nodeType":"ElementaryTypeName","src":"47229:6:17","typeDescriptions":{}}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47229:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"47210:68:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10343,"src":"47314:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10345,"src":"47320:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10366,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10353,"src":"47324:9:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":10363,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10340,"src":"47303:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$","typeString":"function (address,address,uint24) view returns (uint24)"}},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47303:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":10362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47295:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10361,"name":"uint256","nodeType":"ElementaryTypeName","src":"47295:7:17","typeDescriptions":{}}},"id":10368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47295:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10369,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"47339:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47295:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10351,"id":10371,"nodeType":"Return","src":"47288:69:17"}]},"documentation":{"id":10341,"nodeType":"StructuredDocumentation","src":"46920:135:17","text":" @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."},"id":10373,"implemented":true,"kind":"function","modifiers":[],"name":"_nextExtraData","nameLocation":"47069:14:17","nodeType":"FunctionDefinition","parameters":{"id":10348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10343,"mutability":"mutable","name":"from","nameLocation":"47101:4:17","nodeType":"VariableDeclaration","scope":10373,"src":"47093:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10342,"name":"address","nodeType":"ElementaryTypeName","src":"47093:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10345,"mutability":"mutable","name":"to","nameLocation":"47123:2:17","nodeType":"VariableDeclaration","scope":10373,"src":"47115:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10344,"name":"address","nodeType":"ElementaryTypeName","src":"47115:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10347,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"47143:19:17","nodeType":"VariableDeclaration","scope":10373,"src":"47135:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10346,"name":"uint256","nodeType":"ElementaryTypeName","src":"47135:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47083:85:17"},"returnParameters":{"id":10351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10373,"src":"47191:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10349,"name":"uint256","nodeType":"ElementaryTypeName","src":"47191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47190:9:17"},"scope":10402,"src":"47060:304:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10382,"nodeType":"Block","src":"47802:34:17","statements":[{"expression":{"expression":{"id":10379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"47819:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47823:6:17","memberName":"sender","nodeType":"MemberAccess","src":"47819:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10378,"id":10381,"nodeType":"Return","src":"47812:17:17"}]},"documentation":{"id":10374,"nodeType":"StructuredDocumentation","src":"47555:173:17","text":" @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."},"id":10383,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSenderERC721A","nameLocation":"47742:17:17","nodeType":"FunctionDefinition","parameters":{"id":10375,"nodeType":"ParameterList","parameters":[],"src":"47759:2:17"},"returnParameters":{"id":10378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10383,"src":"47793:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10376,"name":"address","nodeType":"ElementaryTypeName","src":"47793:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47792:9:17"},"scope":10402,"src":"47733:103:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":10392,"nodeType":"Block","src":"48017:1624:17","statements":[{"AST":{"nativeSrc":"48036:1599:17","nodeType":"YulBlock","src":"48036:1599:17","statements":[{"nativeSrc":"48400:31:17","nodeType":"YulVariableDeclaration","src":"48400:31:17","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"48419:4:17","nodeType":"YulLiteral","src":"48419:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"48413:5:17","nodeType":"YulIdentifier","src":"48413:5:17"},"nativeSrc":"48413:11:17","nodeType":"YulFunctionCall","src":"48413:11:17"},{"kind":"number","nativeSrc":"48426:4:17","nodeType":"YulLiteral","src":"48426:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"48409:3:17","nodeType":"YulIdentifier","src":"48409:3:17"},"nativeSrc":"48409:22:17","nodeType":"YulFunctionCall","src":"48409:22:17"},"variables":[{"name":"m","nativeSrc":"48404:1:17","nodeType":"YulTypedName","src":"48404:1:17","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"48510:4:17","nodeType":"YulLiteral","src":"48510:4:17","type":"","value":"0x40"},{"name":"m","nativeSrc":"48516:1:17","nodeType":"YulIdentifier","src":"48516:1:17"}],"functionName":{"name":"mstore","nativeSrc":"48503:6:17","nodeType":"YulIdentifier","src":"48503:6:17"},"nativeSrc":"48503:15:17","nodeType":"YulFunctionCall","src":"48503:15:17"},"nativeSrc":"48503:15:17","nodeType":"YulExpressionStatement","src":"48503:15:17"},{"nativeSrc":"48575:19:17","nodeType":"YulAssignment","src":"48575:19:17","value":{"arguments":[{"name":"m","nativeSrc":"48586:1:17","nodeType":"YulIdentifier","src":"48586:1:17"},{"kind":"number","nativeSrc":"48589:4:17","nodeType":"YulLiteral","src":"48589:4:17","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"48582:3:17","nodeType":"YulIdentifier","src":"48582:3:17"},"nativeSrc":"48582:12:17","nodeType":"YulFunctionCall","src":"48582:12:17"},"variableNames":[{"name":"str","nativeSrc":"48575:3:17","nodeType":"YulIdentifier","src":"48575:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"48664:3:17","nodeType":"YulIdentifier","src":"48664:3:17"},{"kind":"number","nativeSrc":"48669:1:17","nodeType":"YulLiteral","src":"48669:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"48657:6:17","nodeType":"YulIdentifier","src":"48657:6:17"},"nativeSrc":"48657:14:17","nodeType":"YulFunctionCall","src":"48657:14:17"},"nativeSrc":"48657:14:17","nodeType":"YulExpressionStatement","src":"48657:14:17"},{"nativeSrc":"48759:14:17","nodeType":"YulVariableDeclaration","src":"48759:14:17","value":{"name":"str","nativeSrc":"48770:3:17","nodeType":"YulIdentifier","src":"48770:3:17"},"variables":[{"name":"end","nativeSrc":"48763:3:17","nodeType":"YulTypedName","src":"48763:3:17","type":""}]},{"body":{"nativeSrc":"49017:388:17","nodeType":"YulBlock","src":"49017:388:17","statements":[{"nativeSrc":"49035:18:17","nodeType":"YulAssignment","src":"49035:18:17","value":{"arguments":[{"name":"str","nativeSrc":"49046:3:17","nodeType":"YulIdentifier","src":"49046:3:17"},{"kind":"number","nativeSrc":"49051:1:17","nodeType":"YulLiteral","src":"49051:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"49042:3:17","nodeType":"YulIdentifier","src":"49042:3:17"},"nativeSrc":"49042:11:17","nodeType":"YulFunctionCall","src":"49042:11:17"},"variableNames":[{"name":"str","nativeSrc":"49035:3:17","nodeType":"YulIdentifier","src":"49035:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49196:3:17","nodeType":"YulIdentifier","src":"49196:3:17"},{"arguments":[{"kind":"number","nativeSrc":"49205:2:17","nodeType":"YulLiteral","src":"49205:2:17","type":"","value":"48"},{"arguments":[{"name":"temp","nativeSrc":"49213:4:17","nodeType":"YulIdentifier","src":"49213:4:17"},{"kind":"number","nativeSrc":"49219:2:17","nodeType":"YulLiteral","src":"49219:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"49209:3:17","nodeType":"YulIdentifier","src":"49209:3:17"},"nativeSrc":"49209:13:17","nodeType":"YulFunctionCall","src":"49209:13:17"}],"functionName":{"name":"add","nativeSrc":"49201:3:17","nodeType":"YulIdentifier","src":"49201:3:17"},"nativeSrc":"49201:22:17","nodeType":"YulFunctionCall","src":"49201:22:17"}],"functionName":{"name":"mstore8","nativeSrc":"49188:7:17","nodeType":"YulIdentifier","src":"49188:7:17"},"nativeSrc":"49188:36:17","nodeType":"YulFunctionCall","src":"49188:36:17"},"nativeSrc":"49188:36:17","nodeType":"YulExpressionStatement","src":"49188:36:17"},{"nativeSrc":"49293:21:17","nodeType":"YulAssignment","src":"49293:21:17","value":{"arguments":[{"name":"temp","nativeSrc":"49305:4:17","nodeType":"YulIdentifier","src":"49305:4:17"},{"kind":"number","nativeSrc":"49311:2:17","nodeType":"YulLiteral","src":"49311:2:17","type":"","value":"10"}],"functionName":{"name":"div","nativeSrc":"49301:3:17","nodeType":"YulIdentifier","src":"49301:3:17"},"nativeSrc":"49301:13:17","nodeType":"YulFunctionCall","src":"49301:13:17"},"variableNames":[{"name":"temp","nativeSrc":"49293:4:17","nodeType":"YulIdentifier","src":"49293:4:17"}]},{"body":{"nativeSrc":"49382:9:17","nodeType":"YulBlock","src":"49382:9:17","statements":[{"nativeSrc":"49384:5:17","nodeType":"YulBreak","src":"49384:5:17"}]},"condition":{"arguments":[{"name":"temp","nativeSrc":"49376:4:17","nodeType":"YulIdentifier","src":"49376:4:17"}],"functionName":{"name":"iszero","nativeSrc":"49369:6:17","nodeType":"YulIdentifier","src":"49369:6:17"},"nativeSrc":"49369:12:17","nodeType":"YulFunctionCall","src":"49369:12:17"},"nativeSrc":"49366:25:17","nodeType":"YulIf","src":"49366:25:17"}]},"condition":{"kind":"number","nativeSrc":"49012:1:17","nodeType":"YulLiteral","src":"49012:1:17","type":"","value":"1"},"nativeSrc":"48986:419:17","nodeType":"YulForLoop","post":{"nativeSrc":"49014:2:17","nodeType":"YulBlock","src":"49014:2:17","statements":[]},"pre":{"nativeSrc":"48990:21:17","nodeType":"YulBlock","src":"48990:21:17","statements":[{"nativeSrc":"48992:17:17","nodeType":"YulVariableDeclaration","src":"48992:17:17","value":{"name":"value","nativeSrc":"49004:5:17","nodeType":"YulIdentifier","src":"49004:5:17"},"variables":[{"name":"temp","nativeSrc":"48996:4:17","nodeType":"YulTypedName","src":"48996:4:17","type":""}]}]},"src":"48986:419:17"},{"nativeSrc":"49419:27:17","nodeType":"YulVariableDeclaration","src":"49419:27:17","value":{"arguments":[{"name":"end","nativeSrc":"49437:3:17","nodeType":"YulIdentifier","src":"49437:3:17"},{"name":"str","nativeSrc":"49442:3:17","nodeType":"YulIdentifier","src":"49442:3:17"}],"functionName":{"name":"sub","nativeSrc":"49433:3:17","nodeType":"YulIdentifier","src":"49433:3:17"},"nativeSrc":"49433:13:17","nodeType":"YulFunctionCall","src":"49433:13:17"},"variables":[{"name":"length","nativeSrc":"49423:6:17","nodeType":"YulTypedName","src":"49423:6:17","type":""}]},{"nativeSrc":"49539:21:17","nodeType":"YulAssignment","src":"49539:21:17","value":{"arguments":[{"name":"str","nativeSrc":"49550:3:17","nodeType":"YulIdentifier","src":"49550:3:17"},{"kind":"number","nativeSrc":"49555:4:17","nodeType":"YulLiteral","src":"49555:4:17","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"49546:3:17","nodeType":"YulIdentifier","src":"49546:3:17"},"nativeSrc":"49546:14:17","nodeType":"YulFunctionCall","src":"49546:14:17"},"variableNames":[{"name":"str","nativeSrc":"49539:3:17","nodeType":"YulIdentifier","src":"49539:3:17"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49613:3:17","nodeType":"YulIdentifier","src":"49613:3:17"},{"name":"length","nativeSrc":"49618:6:17","nodeType":"YulIdentifier","src":"49618:6:17"}],"functionName":{"name":"mstore","nativeSrc":"49606:6:17","nodeType":"YulIdentifier","src":"49606:6:17"},"nativeSrc":"49606:19:17","nodeType":"YulFunctionCall","src":"49606:19:17"},"nativeSrc":"49606:19:17","nodeType":"YulExpressionStatement","src":"49606:19:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10389,"isOffset":false,"isSlot":false,"src":"48575:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"48664:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"48770:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49035:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49046:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49196:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49442:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49539:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49550:3:17","valueSize":1},{"declaration":10389,"isOffset":false,"isSlot":false,"src":"49613:3:17","valueSize":1},{"declaration":10386,"isOffset":false,"isSlot":false,"src":"49004:5:17","valueSize":1}],"id":10391,"nodeType":"InlineAssembly","src":"48027:1608:17"}]},"documentation":{"id":10384,"nodeType":"StructuredDocumentation","src":"47842:86:17","text":" @dev Converts a uint256 to its ASCII string decimal representation."},"id":10393,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"47942:9:17","nodeType":"FunctionDefinition","parameters":{"id":10387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10386,"mutability":"mutable","name":"value","nameLocation":"47960:5:17","nodeType":"VariableDeclaration","scope":10393,"src":"47952:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10385,"name":"uint256","nodeType":"ElementaryTypeName","src":"47952:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47951:15:17"},"returnParameters":{"id":10390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10389,"mutability":"mutable","name":"str","nameLocation":"48012:3:17","nodeType":"VariableDeclaration","scope":10393,"src":"47998:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10388,"name":"string","nodeType":"ElementaryTypeName","src":"47998:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47997:19:17"},"scope":10402,"src":"47933:1708:17","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":10400,"nodeType":"Block","src":"49756:107:17","statements":[{"AST":{"nativeSrc":"49775:82:17","nodeType":"YulBlock","src":"49775:82:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"49796:4:17","nodeType":"YulLiteral","src":"49796:4:17","type":"","value":"0x00"},{"name":"errorSelector","nativeSrc":"49802:13:17","nodeType":"YulIdentifier","src":"49802:13:17"}],"functionName":{"name":"mstore","nativeSrc":"49789:6:17","nodeType":"YulIdentifier","src":"49789:6:17"},"nativeSrc":"49789:27:17","nodeType":"YulFunctionCall","src":"49789:27:17"},"nativeSrc":"49789:27:17","nodeType":"YulExpressionStatement","src":"49789:27:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"49836:4:17","nodeType":"YulLiteral","src":"49836:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"49842:4:17","nodeType":"YulLiteral","src":"49842:4:17","type":"","value":"0x04"}],"functionName":{"name":"revert","nativeSrc":"49829:6:17","nodeType":"YulIdentifier","src":"49829:6:17"},"nativeSrc":"49829:18:17","nodeType":"YulFunctionCall","src":"49829:18:17"},"nativeSrc":"49829:18:17","nodeType":"YulExpressionStatement","src":"49829:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":10396,"isOffset":false,"isSlot":false,"src":"49802:13:17","valueSize":1}],"id":10399,"nodeType":"InlineAssembly","src":"49766:91:17"}]},"documentation":{"id":10394,"nodeType":"StructuredDocumentation","src":"49647:51:17","text":" @dev For more efficient reverts."},"id":10401,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"49712:7:17","nodeType":"FunctionDefinition","parameters":{"id":10397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10396,"mutability":"mutable","name":"errorSelector","nameLocation":"49727:13:17","nodeType":"VariableDeclaration","scope":10401,"src":"49720:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10395,"name":"bytes4","nodeType":"ElementaryTypeName","src":"49720:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"49719:22:17"},"returnParameters":{"id":10398,"nodeType":"ParameterList","parameters":[],"src":"49756:0:17"},"scope":10402,"src":"49703:160:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10403,"src":"1053:48812:17","usedErrors":[10408,10411,10414,10417,10420,10423,10426,10429,10432,10435,10438,10441,10444,10447,10450,10453,10456,10459],"usedEvents":[10491,10500,10509,10622]}],"src":"84:49782:17"},"id":17},"erc721a/contracts/IERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/IERC721A.sol","exportedSymbols":{"IERC721A":[10623]},"id":10624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10404,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721A","contractDependencies":[],"contractKind":"interface","documentation":{"id":10405,"nodeType":"StructuredDocumentation","src":"109:37:18","text":" @dev Interface of ERC721A."},"fullyImplemented":false,"id":10623,"linearizedBaseContracts":[10623],"name":"IERC721A","nameLocation":"157:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":10406,"nodeType":"StructuredDocumentation","src":"172:76:18","text":" The caller must own the token or be an approved operator."},"errorSelector":"cfb3b942","id":10408,"name":"ApprovalCallerNotOwnerNorApproved","nameLocation":"259:33:18","nodeType":"ErrorDefinition","parameters":{"id":10407,"nodeType":"ParameterList","parameters":[],"src":"292:2:18"},"src":"253:42:18"},{"documentation":{"id":10409,"nodeType":"StructuredDocumentation","src":"301:44:18","text":" The token does not exist."},"errorSelector":"cf4700e4","id":10411,"name":"ApprovalQueryForNonexistentToken","nameLocation":"356:32:18","nodeType":"ErrorDefinition","parameters":{"id":10410,"nodeType":"ParameterList","parameters":[],"src":"388:2:18"},"src":"350:41:18"},{"documentation":{"id":10412,"nodeType":"StructuredDocumentation","src":"397:65:18","text":" Cannot query the balance for the zero address."},"errorSelector":"8f4eb604","id":10414,"name":"BalanceQueryForZeroAddress","nameLocation":"473:26:18","nodeType":"ErrorDefinition","parameters":{"id":10413,"nodeType":"ParameterList","parameters":[],"src":"499:2:18"},"src":"467:35:18"},{"documentation":{"id":10415,"nodeType":"StructuredDocumentation","src":"508:51:18","text":" Cannot mint to the zero address."},"errorSelector":"2e076300","id":10417,"name":"MintToZeroAddress","nameLocation":"570:17:18","nodeType":"ErrorDefinition","parameters":{"id":10416,"nodeType":"ParameterList","parameters":[],"src":"587:2:18"},"src":"564:26:18"},{"documentation":{"id":10418,"nodeType":"StructuredDocumentation","src":"596:72:18","text":" The quantity of tokens minted must be more than zero."},"errorSelector":"b562e8dd","id":10420,"name":"MintZeroQuantity","nameLocation":"679:16:18","nodeType":"ErrorDefinition","parameters":{"id":10419,"nodeType":"ParameterList","parameters":[],"src":"695:2:18"},"src":"673:25:18"},{"documentation":{"id":10421,"nodeType":"StructuredDocumentation","src":"704:44:18","text":" The token does not exist."},"errorSelector":"df2d9b42","id":10423,"name":"OwnerQueryForNonexistentToken","nameLocation":"759:29:18","nodeType":"ErrorDefinition","parameters":{"id":10422,"nodeType":"ParameterList","parameters":[],"src":"788:2:18"},"src":"753:38:18"},{"documentation":{"id":10424,"nodeType":"StructuredDocumentation","src":"797:76:18","text":" The caller must own the token or be an approved operator."},"errorSelector":"59c896be","id":10426,"name":"TransferCallerNotOwnerNorApproved","nameLocation":"884:33:18","nodeType":"ErrorDefinition","parameters":{"id":10425,"nodeType":"ParameterList","parameters":[],"src":"917:2:18"},"src":"878:42:18"},{"documentation":{"id":10427,"nodeType":"StructuredDocumentation","src":"926:53:18","text":" The token must be owned by `from`."},"errorSelector":"a1148100","id":10429,"name":"TransferFromIncorrectOwner","nameLocation":"990:26:18","nodeType":"ErrorDefinition","parameters":{"id":10428,"nodeType":"ParameterList","parameters":[],"src":"1016:2:18"},"src":"984:35:18"},{"documentation":{"id":10430,"nodeType":"StructuredDocumentation","src":"1025:116:18","text":" Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."},"errorSelector":"d1a57ed6","id":10432,"name":"TransferToNonERC721ReceiverImplementer","nameLocation":"1152:38:18","nodeType":"ErrorDefinition","parameters":{"id":10431,"nodeType":"ParameterList","parameters":[],"src":"1190:2:18"},"src":"1146:47:18"},{"documentation":{"id":10433,"nodeType":"StructuredDocumentation","src":"1199:55:18","text":" Cannot transfer to the zero address."},"errorSelector":"ea553b34","id":10435,"name":"TransferToZeroAddress","nameLocation":"1265:21:18","nodeType":"ErrorDefinition","parameters":{"id":10434,"nodeType":"ParameterList","parameters":[],"src":"1286:2:18"},"src":"1259:30:18"},{"documentation":{"id":10436,"nodeType":"StructuredDocumentation","src":"1295:44:18","text":" The token does not exist."},"errorSelector":"a14c4b50","id":10438,"name":"URIQueryForNonexistentToken","nameLocation":"1350:27:18","nodeType":"ErrorDefinition","parameters":{"id":10437,"nodeType":"ParameterList","parameters":[],"src":"1377:2:18"},"src":"1344:36:18"},{"documentation":{"id":10439,"nodeType":"StructuredDocumentation","src":"1386:79:18","text":" The `quantity` minted with ERC2309 exceeds the safety limit."},"errorSelector":"3db1f9af","id":10441,"name":"MintERC2309QuantityExceedsLimit","nameLocation":"1476:31:18","nodeType":"ErrorDefinition","parameters":{"id":10440,"nodeType":"ParameterList","parameters":[],"src":"1507:2:18"},"src":"1470:40:18"},{"documentation":{"id":10442,"nodeType":"StructuredDocumentation","src":"1516:83:18","text":" The `extraData` cannot be set on an unintialized ownership slot."},"errorSelector":"00d58153","id":10444,"name":"OwnershipNotInitializedForExtraData","nameLocation":"1610:35:18","nodeType":"ErrorDefinition","parameters":{"id":10443,"nodeType":"ParameterList","parameters":[],"src":"1645:2:18"},"src":"1604:44:18"},{"documentation":{"id":10445,"nodeType":"StructuredDocumentation","src":"1654:78:18","text":" `_sequentialUpTo()` must be greater than `_startTokenId()`."},"errorSelector":"fed8210f","id":10447,"name":"SequentialUpToTooSmall","nameLocation":"1743:22:18","nodeType":"ErrorDefinition","parameters":{"id":10446,"nodeType":"ParameterList","parameters":[],"src":"1765:2:18"},"src":"1737:31:18"},{"documentation":{"id":10448,"nodeType":"StructuredDocumentation","src":"1774:82:18","text":" The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."},"errorSelector":"81647e3a","id":10450,"name":"SequentialMintExceedsLimit","nameLocation":"1867:26:18","nodeType":"ErrorDefinition","parameters":{"id":10449,"nodeType":"ParameterList","parameters":[],"src":"1893:2:18"},"src":"1861:35:18"},{"documentation":{"id":10451,"nodeType":"StructuredDocumentation","src":"1902:86:18","text":" Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."},"errorSelector":"524a12cc","id":10453,"name":"SpotMintTokenIdTooSmall","nameLocation":"1999:23:18","nodeType":"ErrorDefinition","parameters":{"id":10452,"nodeType":"ParameterList","parameters":[],"src":"2022:2:18"},"src":"1993:32:18"},{"documentation":{"id":10454,"nodeType":"StructuredDocumentation","src":"2031:64:18","text":" Cannot mint over a token that already exists."},"errorSelector":"c991cbb1","id":10456,"name":"TokenAlreadyExists","nameLocation":"2106:18:18","nodeType":"ErrorDefinition","parameters":{"id":10455,"nodeType":"ParameterList","parameters":[],"src":"2124:2:18"},"src":"2100:27:18"},{"documentation":{"id":10457,"nodeType":"StructuredDocumentation","src":"2133:65:18","text":" The feature is not compatible with spot mints."},"errorSelector":"bdba09d7","id":10459,"name":"NotCompatibleWithSpotMints","nameLocation":"2209:26:18","nodeType":"ErrorDefinition","parameters":{"id":10458,"nodeType":"ParameterList","parameters":[],"src":"2235:2:18"},"src":"2203:35:18"},{"canonicalName":"IERC721A.TokenOwnership","id":10468,"members":[{"constant":false,"id":10461,"mutability":"mutable","name":"addr","nameLocation":"2502:4:18","nodeType":"VariableDeclaration","scope":10468,"src":"2494:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10460,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10463,"mutability":"mutable","name":"startTimestamp","nameLocation":"2607:14:18","nodeType":"VariableDeclaration","scope":10468,"src":"2600:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":10462,"name":"uint64","nodeType":"ElementaryTypeName","src":"2600:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":10465,"mutability":"mutable","name":"burned","nameLocation":"2682:6:18","nodeType":"VariableDeclaration","scope":10468,"src":"2677:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10464,"name":"bool","nodeType":"ElementaryTypeName","src":"2677:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10467,"mutability":"mutable","name":"extraData","nameLocation":"2793:9:18","nodeType":"VariableDeclaration","scope":10468,"src":"2786:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":10466,"name":"uint24","nodeType":"ElementaryTypeName","src":"2786:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"TokenOwnership","nameLocation":"2432:14:18","nodeType":"StructDefinition","scope":10623,"src":"2425:384:18","visibility":"public"},{"documentation":{"id":10469,"nodeType":"StructuredDocumentation","src":"3000:192:18","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":10474,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3206:11:18","nodeType":"FunctionDefinition","parameters":{"id":10470,"nodeType":"ParameterList","parameters":[],"src":"3217:2:18"},"returnParameters":{"id":10473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10474,"src":"3243:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3242:9:18"},"scope":10623,"src":"3197:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10475,"nodeType":"StructuredDocumentation","src":"3439:341:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":10482,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3794:17:18","nodeType":"FunctionDefinition","parameters":{"id":10478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10477,"mutability":"mutable","name":"interfaceId","nameLocation":"3819:11:18","nodeType":"VariableDeclaration","scope":10482,"src":"3812:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3812:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3811:20:18"},"returnParameters":{"id":10481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10482,"src":"3855:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10479,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:18"},"scope":10623,"src":"3785:76:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":10483,"nodeType":"StructuredDocumentation","src":"4048:88:18","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":10491,"name":"Transfer","nameLocation":"4147:8:18","nodeType":"EventDefinition","parameters":{"id":10490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10485,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"4172:4:18","nodeType":"VariableDeclaration","scope":10491,"src":"4156:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10484,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10487,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4194:2:18","nodeType":"VariableDeclaration","scope":10491,"src":"4178:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10486,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10489,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4214:7:18","nodeType":"VariableDeclaration","scope":10491,"src":"4198:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4155:67:18"},"src":"4141:82:18"},{"anonymous":false,"documentation":{"id":10492,"nodeType":"StructuredDocumentation","src":"4229:94:18","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":10500,"name":"Approval","nameLocation":"4334:8:18","nodeType":"EventDefinition","parameters":{"id":10499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10494,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4359:5:18","nodeType":"VariableDeclaration","scope":10500,"src":"4343:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10493,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10496,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"4382:8:18","nodeType":"VariableDeclaration","scope":10500,"src":"4366:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10495,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10498,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4408:7:18","nodeType":"VariableDeclaration","scope":10500,"src":"4392:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4392:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:74:18"},"src":"4328:89:18"},{"anonymous":false,"documentation":{"id":10501,"nodeType":"StructuredDocumentation","src":"4423:124:18","text":" @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":10509,"name":"ApprovalForAll","nameLocation":"4558:14:18","nodeType":"EventDefinition","parameters":{"id":10508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10503,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4589:5:18","nodeType":"VariableDeclaration","scope":10509,"src":"4573:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10502,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10505,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"4612:8:18","nodeType":"VariableDeclaration","scope":10509,"src":"4596:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10504,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10507,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"4627:8:18","nodeType":"VariableDeclaration","scope":10509,"src":"4622:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10506,"name":"bool","nodeType":"ElementaryTypeName","src":"4622:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4572:64:18"},"src":"4552:85:18"},{"documentation":{"id":10510,"nodeType":"StructuredDocumentation","src":"4643:74:18","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":10517,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4731:9:18","nodeType":"FunctionDefinition","parameters":{"id":10513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10512,"mutability":"mutable","name":"owner","nameLocation":"4749:5:18","nodeType":"VariableDeclaration","scope":10517,"src":"4741:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10511,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4740:15:18"},"returnParameters":{"id":10516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10515,"mutability":"mutable","name":"balance","nameLocation":"4787:7:18","nodeType":"VariableDeclaration","scope":10517,"src":"4779:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4779:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:17:18"},"scope":10623,"src":"4722:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10518,"nodeType":"StructuredDocumentation","src":"4802:131:18","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":10525,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"4947:7:18","nodeType":"FunctionDefinition","parameters":{"id":10521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10520,"mutability":"mutable","name":"tokenId","nameLocation":"4963:7:18","nodeType":"VariableDeclaration","scope":10525,"src":"4955:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10519,"name":"uint256","nodeType":"ElementaryTypeName","src":"4955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4954:17:18"},"returnParameters":{"id":10524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10523,"mutability":"mutable","name":"owner","nameLocation":"5003:5:18","nodeType":"VariableDeclaration","scope":10525,"src":"4995:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10522,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4994:15:18"},"scope":10623,"src":"4938:72:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10526,"nodeType":"StructuredDocumentation","src":"5016:711:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":10537,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5741:16:18","nodeType":"FunctionDefinition","parameters":{"id":10535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10528,"mutability":"mutable","name":"from","nameLocation":"5775:4:18","nodeType":"VariableDeclaration","scope":10537,"src":"5767:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10527,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10530,"mutability":"mutable","name":"to","nameLocation":"5797:2:18","nodeType":"VariableDeclaration","scope":10537,"src":"5789:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10529,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10532,"mutability":"mutable","name":"tokenId","nameLocation":"5817:7:18","nodeType":"VariableDeclaration","scope":10537,"src":"5809:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10534,"mutability":"mutable","name":"data","nameLocation":"5849:4:18","nodeType":"VariableDeclaration","scope":10537,"src":"5834:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10533,"name":"bytes","nodeType":"ElementaryTypeName","src":"5834:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5757:102:18"},"returnParameters":{"id":10536,"nodeType":"ParameterList","parameters":[],"src":"5876:0:18"},"scope":10623,"src":"5732:145:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":10538,"nodeType":"StructuredDocumentation","src":"5883:80:18","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":10547,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5977:16:18","nodeType":"FunctionDefinition","parameters":{"id":10545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10540,"mutability":"mutable","name":"from","nameLocation":"6011:4:18","nodeType":"VariableDeclaration","scope":10547,"src":"6003:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10539,"name":"address","nodeType":"ElementaryTypeName","src":"6003:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10542,"mutability":"mutable","name":"to","nameLocation":"6033:2:18","nodeType":"VariableDeclaration","scope":10547,"src":"6025:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10541,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10544,"mutability":"mutable","name":"tokenId","nameLocation":"6053:7:18","nodeType":"VariableDeclaration","scope":10547,"src":"6045:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10543,"name":"uint256","nodeType":"ElementaryTypeName","src":"6045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5993:73:18"},"returnParameters":{"id":10546,"nodeType":"ParameterList","parameters":[],"src":"6083:0:18"},"scope":10623,"src":"5968:116:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":10548,"nodeType":"StructuredDocumentation","src":"6090:512:18","text":" @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":10557,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6616:12:18","nodeType":"FunctionDefinition","parameters":{"id":10555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10550,"mutability":"mutable","name":"from","nameLocation":"6646:4:18","nodeType":"VariableDeclaration","scope":10557,"src":"6638:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10549,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10552,"mutability":"mutable","name":"to","nameLocation":"6668:2:18","nodeType":"VariableDeclaration","scope":10557,"src":"6660:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10551,"name":"address","nodeType":"ElementaryTypeName","src":"6660:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10554,"mutability":"mutable","name":"tokenId","nameLocation":"6688:7:18","nodeType":"VariableDeclaration","scope":10557,"src":"6680:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6680:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6628:73:18"},"returnParameters":{"id":10556,"nodeType":"ParameterList","parameters":[],"src":"6718:0:18"},"scope":10623,"src":"6607:112:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":10558,"nodeType":"StructuredDocumentation","src":"6725:459:18","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":10565,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"7198:7:18","nodeType":"FunctionDefinition","parameters":{"id":10563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10560,"mutability":"mutable","name":"to","nameLocation":"7214:2:18","nodeType":"VariableDeclaration","scope":10565,"src":"7206:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10559,"name":"address","nodeType":"ElementaryTypeName","src":"7206:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10562,"mutability":"mutable","name":"tokenId","nameLocation":"7226:7:18","nodeType":"VariableDeclaration","scope":10565,"src":"7218:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10561,"name":"uint256","nodeType":"ElementaryTypeName","src":"7218:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7205:29:18"},"returnParameters":{"id":10564,"nodeType":"ParameterList","parameters":[],"src":"7251:0:18"},"scope":10623,"src":"7189:63:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":10566,"nodeType":"StructuredDocumentation","src":"7258:316:18","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":10573,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"7588:17:18","nodeType":"FunctionDefinition","parameters":{"id":10571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10568,"mutability":"mutable","name":"operator","nameLocation":"7614:8:18","nodeType":"VariableDeclaration","scope":10573,"src":"7606:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10567,"name":"address","nodeType":"ElementaryTypeName","src":"7606:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10570,"mutability":"mutable","name":"_approved","nameLocation":"7629:9:18","nodeType":"VariableDeclaration","scope":10573,"src":"7624:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10569,"name":"bool","nodeType":"ElementaryTypeName","src":"7624:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7605:34:18"},"returnParameters":{"id":10572,"nodeType":"ParameterList","parameters":[],"src":"7648:0:18"},"scope":10623,"src":"7579:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":10574,"nodeType":"StructuredDocumentation","src":"7655:139:18","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":10581,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"7808:11:18","nodeType":"FunctionDefinition","parameters":{"id":10577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10576,"mutability":"mutable","name":"tokenId","nameLocation":"7828:7:18","nodeType":"VariableDeclaration","scope":10581,"src":"7820:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10575,"name":"uint256","nodeType":"ElementaryTypeName","src":"7820:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7819:17:18"},"returnParameters":{"id":10580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10579,"mutability":"mutable","name":"operator","nameLocation":"7868:8:18","nodeType":"VariableDeclaration","scope":10581,"src":"7860:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10578,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7859:18:18"},"scope":10623,"src":"7799:79:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10582,"nodeType":"StructuredDocumentation","src":"7884:139:18","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":10591,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"8037:16:18","nodeType":"FunctionDefinition","parameters":{"id":10587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10584,"mutability":"mutable","name":"owner","nameLocation":"8062:5:18","nodeType":"VariableDeclaration","scope":10591,"src":"8054:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10583,"name":"address","nodeType":"ElementaryTypeName","src":"8054:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10586,"mutability":"mutable","name":"operator","nameLocation":"8077:8:18","nodeType":"VariableDeclaration","scope":10591,"src":"8069:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10585,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8053:33:18"},"returnParameters":{"id":10590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10591,"src":"8110:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10588,"name":"bool","nodeType":"ElementaryTypeName","src":"8110:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8109:6:18"},"scope":10623,"src":"8028:88:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10592,"nodeType":"StructuredDocumentation","src":"8307:58:18","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":10597,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"8379:4:18","nodeType":"FunctionDefinition","parameters":{"id":10593,"nodeType":"ParameterList","parameters":[],"src":"8383:2:18"},"returnParameters":{"id":10596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10597,"src":"8409:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10594,"name":"string","nodeType":"ElementaryTypeName","src":"8409:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8408:15:18"},"scope":10623,"src":"8370:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10598,"nodeType":"StructuredDocumentation","src":"8430:60:18","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":10603,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"8504:6:18","nodeType":"FunctionDefinition","parameters":{"id":10599,"nodeType":"ParameterList","parameters":[],"src":"8510:2:18"},"returnParameters":{"id":10602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10603,"src":"8536:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10600,"name":"string","nodeType":"ElementaryTypeName","src":"8536:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8535:15:18"},"scope":10623,"src":"8495:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10604,"nodeType":"StructuredDocumentation","src":"8557:90:18","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":10611,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8661:8:18","nodeType":"FunctionDefinition","parameters":{"id":10607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10606,"mutability":"mutable","name":"tokenId","nameLocation":"8678:7:18","nodeType":"VariableDeclaration","scope":10611,"src":"8670:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10605,"name":"uint256","nodeType":"ElementaryTypeName","src":"8670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8669:17:18"},"returnParameters":{"id":10610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10611,"src":"8710:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10608,"name":"string","nodeType":"ElementaryTypeName","src":"8710:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8709:15:18"},"scope":10623,"src":"8652:73:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":10612,"nodeType":"StructuredDocumentation","src":"8912:267:18","text":" @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."},"eventSelector":"deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d","id":10622,"name":"ConsecutiveTransfer","nameLocation":"9190:19:18","nodeType":"EventDefinition","parameters":{"id":10621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10614,"indexed":true,"mutability":"mutable","name":"fromTokenId","nameLocation":"9226:11:18","nodeType":"VariableDeclaration","scope":10622,"src":"9210:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10613,"name":"uint256","nodeType":"ElementaryTypeName","src":"9210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10616,"indexed":false,"mutability":"mutable","name":"toTokenId","nameLocation":"9247:9:18","nodeType":"VariableDeclaration","scope":10622,"src":"9239:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10615,"name":"uint256","nodeType":"ElementaryTypeName","src":"9239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10618,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"9274:4:18","nodeType":"VariableDeclaration","scope":10622,"src":"9258:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10617,"name":"address","nodeType":"ElementaryTypeName","src":"9258:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10620,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"9296:2:18","nodeType":"VariableDeclaration","scope":10622,"src":"9280:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10619,"name":"address","nodeType":"ElementaryTypeName","src":"9280:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9209:90:18"},"src":"9184:116:18"}],"scope":10624,"src":"147:9155:18","usedErrors":[10408,10411,10414,10417,10420,10423,10426,10429,10432,10435,10438,10441,10444,10447,10450,10453,10456,10459],"usedEvents":[10491,10500,10509,10622]}],"src":"84:9219:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220de3a2226fb566108fa281438e3de31b3c35181d14daf8fd53dafdc2176c5065864736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE GASPRICE 0x22 0x26 0xFB JUMP PUSH2 0x8FA 0x28 EQ CODESIZE 0xE3 0xDE BALANCE 0xB3 0xC3 MLOAD DUP2 0xD1 0x4D 0xAF DUP16 0xD5 RETURNDATASIZE 0xAF 0xDC 0x21 PUSH23 0xC5065864736F6C634300081C0033000000000000000000 ","sourceMap":"657:1315:3:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220de3a2226fb566108fa281438e3de31b3c35181d14daf8fd53dafdc2176c5065864736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE GASPRICE 0x22 0x26 0xFB JUMP PUSH2 0x8FA 0x28 EQ CODESIZE 0xE3 0xDE BALANCE 0xB3 0xC3 MLOAD DUP2 0xD1 0x4D 0xAF DUP16 0xD5 RETURNDATASIZE 0xAF 0xDC 0x21 PUSH23 0xC5065864736F6C634300081C0033000000000000000000 ","sourceMap":"657:1315:3:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":373,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220646c94c80f3c4db434ac714f4971316ce52445bb0bd6b814566bd487d43ae16664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6C94C80F3C 0x4D 0xB4 CALLVALUE 0xAC PUSH18 0x4F4971316CE52445BB0BD6B814566BD487D4 GASPRICE 0xE1 PUSH7 0x64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"1255:3046:6:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220646c94c80f3c4db434ac714f4971316ce52445bb0bd6b814566bd487d43ae16664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6C94C80F3C 0x4D 0xB4 CALLVALUE 0xAC PUSH18 0x4F4971316CE52445BB0BD6B814566BD487D4 GASPRICE 0xE1 PUSH7 0x64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"1255:3046:6:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212204144c4fdb7bbc54f884bfbaaade724bbb27469da0da545c6257df49b06dcbc7164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PREVRANDAO 0xC4 REVERT 0xB7 0xBB 0xC5 0x4F DUP9 0x4B 0xFB 0xAA 0xAD 0xE7 0x24 0xBB 0xB2 PUSH21 0x69DA0DA545C6257DF49B06DCBC7164736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:7:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212204144c4fdb7bbc54f884bfbaaade724bbb27469da0da545c6257df49b06dcbc7164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PREVRANDAO 0xC4 REVERT 0xB7 0xBB 0xC5 0x4F DUP9 0x4B 0xFB 0xAA 0xAD 0xE7 0x24 0xBB 0xB2 PUSH21 0x69DA0DA545C6257DF49B06DCBC7164736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:7:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220bad934c422a5e1a5a9ac8de1491e480d38b2beb7b229997ea037f249e01722bb64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xD9 CALLVALUE 0xC4 0x22 0xA5 0xE1 0xA5 0xA9 0xAC DUP14 0xE1 BLOBHASH 0x1E BASEFEE 0xD CODESIZE 0xB2 0xBE 0xB7 0xB2 0x29 SWAP10 PUSH31 0xA037F249E01722BB64736F6C634300081C0033000000000000000000000000 ","sourceMap":"297:18980:8:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220bad934c422a5e1a5a9ac8de1491e480d38b2beb7b229997ea037f249e01722bb64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xD9 CALLVALUE 0xC4 0x22 0xA5 0xE1 0xA5 0xA9 0xAC DUP14 0xE1 BLOBHASH 0x1E BASEFEE 0xD CODESIZE 0xB2 0xBE 0xB7 0xB2 0x29 SWAP10 PUSH31 0xA037F249E01722BB64736F6C634300081C0033000000000000000000000000 ","sourceMap":"297:18980:8:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122053bab1a09d7e45c08001a27c27d48566c8414da18b5a3d36313f8711f7ad841564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xBA 0xB1 LOG0 SWAP14 PUSH31 0x45C08001A27C27D48566C8414DA18B5A3D36313F8711F7AD841564736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:9:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122053bab1a09d7e45c08001a27c27d48566c8414da18b5a3d36313f8711f7ad841564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xBA 0xB1 LOG0 SWAP14 PUSH31 0x45C08001A27C27D48566C8414DA18B5A3D36313F8711F7AD841564736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:9:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2559,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2561,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220173298ff4d94759dad981c5ee0172dfc884cc7f75e196f9299efd47635eeceaa64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN SWAP9 SELFDESTRUCT 0x4D SWAP5 PUSH22 0x9DAD981C5EE0172DFC884CC7F75E196F9299EFD47635 0xEE 0xCE 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3729:11:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220173298ff4d94759dad981c5ee0172dfc884cc7f75e196f9299efd47635eeceaa64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ORIGIN SWAP9 SELFDESTRUCT 0x4D SWAP5 PUSH22 0x9DAD981C5EE0172DFC884CC7F75E196F9299EFD47635 0xEE 0xCE 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"521:3729:11:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212207787f526048b0c4d19051a666e7d218535ef0da00a38cc5a7c5266b94dc3884164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x87F526048B0C4D19051A666E7D218535EF0DA00A38CC5A7C MSTORE PUSH7 0xB94DC388416473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212207787f526048b0c4d19051a666e7d218535ef0da00a38cc5a7c5266b94dc3884164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x87F526048B0C4D19051A666E7D218535EF0DA00A38CC5A7C MSTORE PUSH7 0xB94DC388416473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"281:31863:12:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220b47ca6fedefa32f6bddec4345c8bcfc812f6092e4176fd3373db6e513f34d00164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH29 0xA6FEDEFA32F6BDDEC4345C8BCFC812F6092E4176FD3373DB6E513F34D0 ADD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b47ca6fedefa32f6bddec4345c8bcfc812f6092e4176fd3373db6e513f34d00164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH29 0xA6FEDEFA32F6BDDEC4345C8BCFC812F6092E4176FD3373DB6E513F34D0 ADD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122094648df2c0ff7f5ea4c0316c1ed684bdfa91dcb7568fea0975d091d7be6cd57f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH5 0x8DF2C0FF7F MCOPY LOG4 0xC0 BALANCE PUSH13 0x1ED684BDFA91DCB7568FEA0975 0xD0 SWAP2 0xD7 0xBE PUSH13 0xD57F64736F6C634300081C0033 ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122094648df2c0ff7f5ea4c0316c1ed684bdfa91dcb7568fea0975d091d7be6cd57f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH5 0x8DF2C0FF7F MCOPY LOG4 0xC0 BALANCE PUSH13 0x1ED684BDFA91DCB7568FEA0975 0xD0 SWAP2 0xD7 0xBE PUSH13 0xD57F64736F6C634300081C0033 ","sourceMap":"258:2354:14:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/SPGNFTCollection.sol":{"IERC6551Registry":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"account(address,uint256,address,uint256,uint256)":"5e9bc536"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for ERC6551 registry\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IERC6551Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SPGNFTCollection.sol\":\"IERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SPGNFTCollection.sol\":{\"keccak256\":\"0x4340d98ff56aeec85f08b56566897fc04836fe6b3b7c6343b873a54f8121a9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4305a82a786dac62e6295c3bb7a72032b6eb82b49654d4fffdae695d25d62af4\",\"dweb:/ipfs/QmRsnAmauXKAzjGTXsRaswsHRYUq2S1S4rKutVkHWymZGj\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"ISPGNFT":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"mint(address)":"6a627842","mint(address,uint256)":"40c10f19"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Story Protocol Gateway NFT\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ISPGNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SPGNFTCollection.sol\":\"ISPGNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SPGNFTCollection.sol\":{\"keccak256\":\"0x4340d98ff56aeec85f08b56566897fc04836fe6b3b7c6343b873a54f8121a9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4305a82a786dac62e6295c3bb7a72032b6eb82b49654d4fffdae695d25d62af4\",\"dweb:/ipfs/QmRsnAmauXKAzjGTXsRaswsHRYUq2S1S4rKutVkHWymZGj\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"SPGNFTCollection":{"abi":[{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"mintFee","type":"uint256"},{"internalType":"address","name":"mintFeeToken","type":"address"},{"internalType":"address","name":"mintFeeRecipient","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"mintOpen","type":"bool"},{"internalType":"bool","name":"isPublicMinting","type":"bool"}],"internalType":"struct ISPGNFT.InitParams","name":"params","type":"tuple"},{"internalType":"address","name":"_TBARegistry","type":"address"},{"internalType":"address","name":"_TBAImplementation","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"},{"indexed":true,"internalType":"address","name":"executor","type":"address"}],"name":"BatchEscrowTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"startTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"BatchMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":true,"internalType":"address","name":"executor","type":"address"}],"name":"EscrowTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"}],"name":"EscrowWalletAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"}],"name":"EscrowWalletRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"MintFeeChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"open","type":"bool"}],"name":"MintStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"minter","type":"address"}],"name":"MinterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"minter","type":"address"}],"name":"MinterRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPublic","type":"bool"}],"name":"PublicMintingStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"BATCH_TRANSFER_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TBAImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TBARegistry","outputs":[{"internalType":"contract IERC6551Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"addEscrowWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"availableSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"canMint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"escrowTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"startTokenId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"escrowTransferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"escrowTransferWithSignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"getMintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTBA","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isEscrowWallet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPublicMinting","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"string[]","name":"tokenURIs","type":"string[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintFeeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"minters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"removeEscrowWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"name":"removeMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_contractURI","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_mintFee","type":"uint256"}],"name":"setMintFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_mintOpen","type":"bool"}],"name":"setMintOpen","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isPublic","type":"bool"}],"name":"setPublicMinting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":298,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_InitParams_fromMemory":{"entryPoint":457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_InitParamst_addresst_address_fromMemory":{"entryPoint":754,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256_fromMemory":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_bytes32_uint256_address":{"entryPoint":2385,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_string":{"entryPoint":2737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":209,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":855,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":231,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1125,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":396,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":0},"constant_FALLBACK_SENTINEL":{"entryPoint":2315,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":2067,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TYPE_HASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_Context":{"entryPoint":2230,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_EIP712":{"entryPoint":1934,"id":2619,"parameterSlots":5,"returnSlots":0},"constructor_ERC721A":{"entryPoint":null,"id":8453,"parameterSlots":2,"returnSlots":0},"constructor_IERC5267":{"entryPoint":2056,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_ISPGNFT":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_Ownable":{"entryPoint":2139,"id":50,"parameterSlots":3,"returnSlots":0},"constructor_Pausable":{"entryPoint":2106,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":2077,"id":384,"parameterSlots":3,"returnSlots":0},"constructor_SPGNFTCollection":{"entryPoint":1663,"id":6671,"parameterSlots":3,"returnSlots":0},"convert_address_to_address":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC6551Registry":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":2814,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_bytes_to_bytes32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2130,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":2117,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_07c8_to_string":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_c89e_to_string":{"entryPoint":942,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1490,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1470,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":1040,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_SPGNFTCollection":{"entryPoint":820,"id":null,"parameterSlots":0,"returnSlots":3},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":1202,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_07c869da8679cc16520358b69f3463f9467fb85b20abac6be2b24f17afe8ca17":{"entryPoint":873,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":919,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":263,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":972,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":2565,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":171,"id":null,"parameterSlots":2,"returnSlots":0},"fun_buildDomainSeparator":{"entryPoint":2457,"id":2666,"parameterSlots":0,"returnSlots":1},"fun_revert":{"entryPoint":2676,"id":10401,"parameterSlots":1,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":8475,"parameterSlots":0,"returnSlots":1},"fun_startTokenId":{"entryPoint":2666,"id":8462,"parameterSlots":0,"returnSlots":1},"fun_toShortString":{"entryPoint":2823,"id":491,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":2325,"id":589,"parameterSlots":2,"returnSlots":1},"fun_transferOwnership":{"entryPoint":2584,"id":146,"parameterSlots":1,"returnSlots":0},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":1607,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":950,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":149,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":2574,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_168":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":1082,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_07c869da8679cc16520358b69f3463f9467fb85b20abac6be2b24f17afe8ca17":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":1455,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":1014,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1422,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":1631,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_20":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_21":{"entryPoint":1569,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_0_bool_to_bool":{"entryPoint":1640,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":1508,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":1546,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":1412,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":1584,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":1432,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":1053,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":408,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":436,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6101a0604052346100905761001b610015610334565b9161067f565b60405161481a610b6d823960805181614200015260a0518161422d015260c051816141cd015260e05181614716015261010051816146f501526101205181613f4c01526101405181613f7901526101605181818161129a01526113e5015261018051818181610f96015261140b015261481a90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176100cc57604052565b610095565b906100e56100de60405190565b92836100ab565b565b6001600160401b0381116100cc57602090601f01601f19160190565b0190565b60005b83811061011a5750506000910152565b818101518382015260200161010a565b9092919261013f61013a826100e7565b6100d1565b9381855281830111610090576100e5916020850190610107565b9080601f830112156100905781516101739260200161012a565b90565b805b0361009057565b905051906100e582610176565b6001600160a01b031690565b6001600160a01b038116610178565b905051906100e582610198565b801515610178565b905051906100e5826101b4565b91909161016081840312610090576101e26101606100d1565b81519093906001600160401b0381116100905781610201918401610159565b845260208201516001600160401b0381116100905781610222918401610159565b602085015260408201516001600160401b0381116100905781610246918401610159565b60408501526060820151906001600160401b0382116100905761026e816102ec938501610159565b6060860152610280816080850161017f565b60808601526102928160a0850161017f565b60a08601526102a48160c085016101a7565b60c08601526102b68160e085016101a7565b60e08601526101006102ca828286016101a7565b908601526101206102dd828286016101bc565b908601526101408093016101bc565b90830152565b90916060828403126100905781516001600160401b0381116100905761031d846101739285016101c9565b93604061032d82602087016101a7565b94016101a7565b61035261538780380380610347816100d1565b9283398101906102f2565b909192565b9061036461013a836100e7565b918252565b6103736010610357565b6f29a823a7232a21b7b63632b1ba34b7b760811b602082015290565b610173610369565b6103a16001610357565b603160f81b602082015290565b610173610397565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156103ec575b60208310146103e757565b6103b6565b91607f16916103dc565b9160001960089290920291821b911b5b9181191691161790565b6101736101736101739290565b919061042e61017361043693610410565b9083546103f6565b9055565b6100e59160009161041d565b818110610451575050565b8061045f600060019361043a565b01610446565b9190601f811161047457505050565b6104866100e593600052602060002090565b906020601f8401819004830193106104a8575b6020601f909101040190610446565b9091508190610499565b906104bb815190565b906001600160401b0382116100cc576104de826104d885546103cc565b85610465565b602090601f83116001146105195761043692916000918361050e575b5050600019600883021c1916906002021790565b0151905038806104fa565b601f1983169161052e85600052602060002090565b9260005b81811061056c57509160029391856001969410610553575b50505002019055565b01516000196008601f8516021c1916905538808061054a565b91936020600181928787015181550195019201610532565b906100e5916104b2565b9060001990610406565b906105a861017361043692610410565b825461058e565b906001600160a01b0390610406565b6101739061018c906001600160a01b031682565b610173906105be565b610173906105d2565b906105f4610173610436926105db565b82546105af565b9060ff60a01b9060a01b610406565b9061061a61017361043692151590565b82546105fb565b9060ff60a81b9060a81b610406565b9061064061017361043692151590565b8254610621565b90610651906105db565b600052602052604060002090565b9060ff90610406565b9061067861017361043692151590565b825461065f565b9061076a610763610140610784946106c061069861038f565b6106a06103ae565b6101008401516001600160a01b031660008501519160208601519361078e565b6106cf6040820151600d610584565b6106de6060820151600e610584565b6106f36106ec608083015190565b600f610598565b61070861070160a083015190565b6010610598565b61072661071f60c08301516001600160a01b031690565b60116105e4565b61074461073d60e08301516001600160a01b031690565b60126105e4565b61075c610755610120830151151590565b601261060a565b0151151590565b6012610630565b61077f600161077a336015610647565b610668565b6105db565b6101605261018052565b90926107db946107a1916107c294610808565b6107ac600b82610915565b610120526107bb600c84610915565b6101405290565b6107d46107cd825190565b9160200190565b2060e05290565b6107e66107cd825190565b20610100524660a0526107f7610999565b608052610803306105db565b60c052565b906100e5929161081d565b6101736001610410565b90610828929161083a565b6100e5610833610813565b600a610598565b906100e5929161085b565b61018c6101736101739290565b61017390610845565b91610865916108b6565b600061087081610852565b6001600160a01b0381166001600160a01b038416146108945750506100e590610a18565b631e4fbdf760e01b82526001600160a01b0316600482015280602481015b0390fd5b6100e59182916108d391906108cc906002610584565b6003610584565b6108db610a6a565b6108e6816000610598565b6108f76108f36000199290565b9190565b106108fe57565b63fed8210f60e01b610a74565b61017360ff610410565b80516109246108f36020610410565b1015610934576101739150610b07565b60006109406109469390565b01610584565b61017361017361090b565b909594926100e59461098361098a9261097c60809661097560a088019c6000890152565b6020870152565b6040850152565b6060830152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6109f66109c660e05190565b61010051906109ea6109d7306105db565b6040519586946020860194469286610951565b908103825203826100ab565b610a016107cd825190565b2090565b6101739061018c565b6101739054610a05565b610a39610a33610a286009610a0e565b61077f8460096105e4565b916105db565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610a6460405190565b600090a3565b6101736000610410565b60005260046000fd5b610a9e610aa760209361010393610a92815190565b80835293849260200190565b95869101610107565b601f01601f191690565b602080825261017392910190610a7d565b610adb610ad7610ad0835190565b9260200190565b5190565b9060208110610ae8575090565b610afa90600019906020036008021b90565b1690565b61017390610410565b80610b10825190565b610b1d6108f3601f610410565b11610b49575061017381610b43610b3e610b3961017395610ac2565b610afe565b915190565b17610410565b6108b290610b5660405190565b63305a27a960e01b815291829160048301610ab156fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461039257806306fdde031461038d578063081812fc14610388578063095ea7b31461038357806313966db51461037e57806315d9756e14610379578063162094c41461037457806318160ddd1461036f5780631d027aad1461036a57806322df11d81461036557806323b872dd1461036057806324bbd0491461035b578063254a473714610356578063280007bb146103515780632c6739151461034c5780632d0335ab146103475780633092afd5146103425780633f4ba83a1461033d57806340c10f191461033857806342842e0e146103335780634c06baba1461032e57806352b9122614610329578063559e775b1461032457806355f804b31461031f5780635c975abb1461031a5780636352211e146103155780636a6278421461031057806370a082311461030b578063715018a614610306578063765b0c36146103015780637ecc2b56146102fc5780637ecebe00146102f75780638456cb59146102f257806384b0196e146102ed5780638da5cb5b146102e8578063916f9ab4146102e3578063938e3d7b146102de57806395d89b41146102d9578063983b2d56146102d4578063a22cb465146102cf578063afc0381d146102ca578063b88d4fde146102c5578063c2ba4744146102c0578063c3324b27146102bb578063c4c69033146102b6578063c87b56dd146102b1578063d5abeb01146102ac578063e31c6732146102a7578063e59ba924146102a2578063e8a3d4851461029d578063e985e9c514610298578063eddd0d9c14610293578063f2fde38b1461028e578063f46eccc414610289578063f8004d31146102845763fa5c33750361039757611281565b611250565b611235565b61120d565b6111f5565b6111d9565b61119b565b61103b565b611023565b611008565b610fe1565b610fc6565b610f81565b610f66565b610f4f565b610e20565b610df2565b610db7565b610d9c565b610d83565b610d64565b610cd7565b610ca3565b610ba1565b610b86565b610b16565b610afb565b610ab8565b610a9d565b610a87565b610a6c565b610a51565b610a38565b6109f7565b6109d5565b61090f565b6108fb565b6108e4565b6108cc565b6108b4565b610899565b61087e565b61085a565b61082e565b6107ea565b6107b0565b61076d565b6106dc565b610655565b61063c565b6105b7565b61058b565b610550565b6104dc565b610482565b6103d9565b600080fd5b6001600160e01b031981165b0361039757565b905035906103bc8261039c565b565b90602082820312610397576103d2916103af565b90565b9052565b34610397576104076103f46103ef3660046103be565b6112bf565b6040515b91829182901515815260200190565b0390f35b600091031261039757565b60005b8381106104295750506000910152565b8181015183820152602001610419565b61045a61046360209361046d9361044e815190565b80835293849260200190565b95869101610416565b601f01601f191690565b0190565b60208082526103d292910190610439565b346103975761049236600461040b565b61040761049d6112d1565b60405191829182610471565b806103a8565b905035906103bc826104a9565b90602082820312610397576103d2916104af565b6001600160a01b031690565b34610397576104076104f76104f23660046104bc565b611305565b604051918291826001600160a01b03909116815260200190565b6001600160a01b0381166103a8565b905035906103bc82610511565b9190604083820312610397576103d29060206105498286610520565b94016104af565b61056461055e36600461052d565b9061133c565b604051005b6103d2916008021c81565b906103d29154610569565b6103d260006010610574565b346103975761059b36600461040b565b6104076105a661057f565b6040515b9182918290815260200190565b34610397576104076104f76105cd3660046104bc565b6113d2565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926001830284011161039757565b9190916040818403126103975761061983826104af565b92602082013567ffffffffffffffff81116103975761063892016105d2565b9091565b346103975761056461064f366004610602565b916116b0565b346103975761066536600461040b565b6104076105a66116cc565b9160c083830312610397576106858284610520565b926106938360208301610520565b926106a181604084016104af565b926106af82606085016104af565b926106bd83608083016104af565b9260a082013567ffffffffffffffff81116103975761063892016105d2565b34610397576105646106ef366004610670565b95949094939193611c97565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926020830284011161039757565b91606083830312610397576107408284610520565b9261074e83602083016104af565b92604082013567ffffffffffffffff81116103975761063892016106fb565b6104076105a661077e36600461072b565b929190916120bc565b9091606082840312610397576103d26107a08484610520565b9360406105498260208701610520565b6105646107be366004610787565b916120fd565b6103d2916008021c5b60ff1690565b906103d291546107c4565b6103d2601460126107d3565b34610397576107fa36600461040b565b6104076103f46107de565b8015156103a8565b905035906103bc82610805565b90602082820312610397576103d29161080d565b346103975761056461084136600461081a565b612372565b90602082820312610397576103d291610520565b346103975761056461086d366004610846565b6123f5565b6103d2601560126107d3565b346103975761088e36600461040b565b6104076103f4610872565b34610397576104076105a66108af366004610846565b6123fe565b34610397576105646108c7366004610846565b61245f565b34610397576108dc36600461040b565b61056461247b565b6104076105a66108f536600461052d565b906124ed565b610564610909366004610787565b9161251f565b346103975761091f36600461040b565b6104077fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca096105a6565b60ff81166103a8565b905035906103bc82610948565b91909160e081840312610397576109758382610520565b926109838160208401610520565b92604083013567ffffffffffffffff811161039757826109a49185016106fb565b9290936109b482606083016104af565b926103d26109c58460808501610951565b9360c06105498260a087016104af565b34610397576105646109e836600461095e565b96959095949194939293612a32565b34610397576104076105a6610a0d3660046104bc565b612a55565b9060208282031261039757813567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610a4b366004610a12565b90612a81565b3461039757610a6136600461040b565b6104076103f4612a8b565b34610397576104076104f7610a823660046104bc565b612a95565b6104076105a6610a98366004610846565b612ab2565b34610397576104076105a6610ab3366004610846565b612ada565b3461039757610ac836600461040b565b610564612b3a565b6103d2916008021c6001600160a01b031690565b906103d29154610ad0565b6103d260006012610ae4565b3461039757610b0b36600461040b565b6104076104f7610aef565b3461039757610b2636600461040b565b6104076105a6612b4f565b6104d06103d26103d2926001600160a01b031690565b6103d290610b31565b6103d290610b47565b90610b6390610b50565b600052602052604060002090565b6000610b816103d2926016610b59565b610574565b34610397576104076105a6610b9c366004610846565b610b71565b3461039757610bb136600461040b565b610564612b7d565b90610bd9610bd2610bc8845190565b8084529260200190565b9260200190565b9060005b818110610bea5750505090565b909192610c07610c006001928651815260200190565b9460200190565b929101610bdd565b93959194610c7f610c77610c9695610c69610c8f956103d29c9a610c5c60e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c0152610439565b9088820360408a0152610439565b976060870152565b6001600160a01b03166080850152565b60a0830152565b60c0818403910152610bb9565b3461039757610cb336600461040b565b610407610cbe612ba7565b93610cce97959793919360405190565b97889788610c0f565b3461039757610ce736600461040b565b6104076104f7612bed565b60a08183031261039757610d068282610520565b92610d148360208401610520565b92604083013567ffffffffffffffff81116103975781610d359185016106fb565b929093610d4583606083016104af565b92608082013567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610d77366004610cf2565b95949094939193612dbd565b3461039757610564610d96366004610a12565b90612de5565b3461039757610dac36600461040b565b61040761049d612def565b3461039757610564610dca366004610846565b612e43565b9190604083820312610397576103d2906020610deb8286610520565b940161080d565b3461039757610564610e05366004610dcf565b90612e4c565b6000610e1b6103d2926015610b59565b6107d3565b34610397576104076103f4610e36366004610846565b610e0b565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e7357604052565b610e3b565b906103bc610e8560405190565b9283610e51565b67ffffffffffffffff8111610e7357602090601f01601f19160190565b90826000939282370152565b90929192610eca610ec582610e8c565b610e78565b9381855281830111610397576103bc916020850190610ea9565b9080601f83011215610397578160206103d293359101610eb5565b9060808282031261039757610f148183610520565b92610f228260208501610520565b92610f3083604083016104af565b92606082013567ffffffffffffffff8111610397576103d29201610ee4565b610564610f5d366004610eff565b92919091612ea4565b34610397576104076103f4610f7c366004610846565b612ef5565b3461039757610f9136600461040b565b6104077f00000000000000000000000000000000000000000000000000000000000000006104f7565b6103d260006011610ae4565b3461039757610fd636600461040b565b6104076104f7610fba565b346103975761040761049d610ff73660046104bc565b612f82565b6103d26000600f610574565b346103975761101836600461040b565b6104076105a6610ffc565b3461039757610564611036366004610846565b61308b565b346103975761104b36600461040b565b6104077f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16105a6565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156110c0575b60208310146110bb57565b61108a565b91607f16916110b0565b805460009392916110e76110dd836110a0565b8085529360200190565b9160018116908115611139575060011461110057505050565b6111139192939450600052602060002090565b916000925b8184106111255750500190565b805484840152602090930192600101611118565b92949550505060ff1916825215156020020190565b906103d2916110ca565b906103bc6111729261116960405190565b9384809261114e565b0383610e51565b9060001061118a576103d290611158565b611074565b6103d26000600e611179565b34610397576111ab36600461040b565b61040761049d61118f565b9190604083820312610397576103d29060206111d28286610520565b9401610520565b34610397576104076103f46111ef3660046111b6565b90613094565b34610397576105646112083660046104bc565b6130eb565b3461039757610564611220366004610846565b61314c565b6000610e1b6103d2926014610b59565b34610397576104076103f461124b366004610846565b611225565b346103975761056461126336600461081a565b6131bc565b6103d590610b50565b6020810192916103bc9190611268565b346103975761129136600461040b565b604051806104077f000000000000000000000000000000000000000000000000000000000000000082611271565b6103d2906131e5565b6103d290611158565b6103d260026112c8565b6103d26103d26103d29290565b90610b63906112db565b6103d2906104d0565b6103d290546112f2565b6113156113118261326b565b1590565b61132f5760006113296103d29260066112e8565b016112fb565b6333d1c03960e21b6132eb565b6103bc9160019161331a565b905051906103bc82610511565b90602082820312610397576103d291611348565b6103d5906112db565b909594926103bc946113b86113bf926113a86080966113a160a088019c60008901906001600160a01b03169052565b6020870152565b6001600160a01b03166040850152565b6060830152565b0190611369565b6040513d6000823e3d90fd5b60206000916113df600090565b506114097f0000000000000000000000000000000000000000000000000000000000000000610b50565b7f000000000000000000000000000000000000000000000000000000000000000061143330610b50565b9061145c61144060405190565b96879586948594632f4de29b60e11b8652469060048701611372565b03915afa90811561149b57600091611472575090565b6103d2915060203d602011611494575b61148c8183610e51565b810190611355565b503d611482565b6113c6565b906103bc92916114ae6133c3565b61168a565b156114ba57565b60405162461bcd60e51b815260206004820152601460248201527f546f6b656e20646f6573206e6f74206578697374000000000000000000000000604482015280606481015b0390fd5b9160001960089290920291821b911b5b9181191691161790565b919061152f6103d2611537936112db565b908354611504565b9055565b6103bc9160009161151e565b818110611552575050565b80611560600060019361153b565b01611547565b9190601f811161157557505050565b6115876103bc93600052602060002090565b906020601f8401819004830193106115a9575b6020601f909101040190611547565b909150819061159a565b919067ffffffffffffffff8211610e73576115d8826115d285546110a0565b85611566565b600090601f831160011461161357611537929160009183611608575b5050600019600883021c1916906002021790565b0135905038806115f4565b90601f1983169161162985600052602060002090565b92825b8181106116675750916002939185600196941061164d575b50505002019055565b0135600019601f84166008021c19165b9055388080611644565b9293602060018192878601358155019501930161162c565b906103bc92916115b3565b906116ab6103bc93926116a461169f8261326b565b6114b3565b60136112e8565b61167f565b906103bc92916114a0565b6103d29081565b6103d290546116bb565b6116f36116eb6116dc60006116c2565b6116e660016116c2565b900390565b6116e6613400565b908160001980611702565b9190565b0361170a5750565b6103d291925061046d60086116c2565b9061173196959493929161172c613414565b611739565b6103bc613454565b906103bc96959493929161174b613466565b6119a6565b6103d2906107cd565b6103d29054611750565b1561176a57565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420617574686f72697a656420657363726f772077616c6c6574000000006044820152606490fd5b6104d06103d26103d29290565b6103d2906117af565b156117cc57565b60405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f2061646472657373006044820152606490fd5b1561181857565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f776e6572206164647265737300000000000000000000006044820152606490fd5b1561186457565b60405162461bcd60e51b815260206004820152601160248201527f5369676e617475726520657870697265640000000000000000000000000000006044820152606490fd5b6103d260646112db565b6103d260326112db565b156118c457565b60405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e74697479000000000000000000000000000000006044820152606490fd5b6103d260c0610e78565b5190565b6103d2913691610eb5565b1561192957565b60405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606490fd5b9060001990611514565b906119886103d2611537926112db565b825461196e565b9081526040810192916103bc9160200152565b0152565b611c1a611bf98597611bf3869a611bed611ae3611bd589611aff611c519b9e611af87f670fe7cb14f68cf31d6e2012cadd6f5325904b6d23d2cadeb3607c96d8b1fec89f611c579f8e91611aea611af192611a12611a0d611a08336015610b59565b611759565b611763565b60009a8b99611a57611a45611a268d6117bc565b6104d06001600160a01b0382166001600160a01b0386165b14156117c5565b6001600160a01b0389165b1415611811565b611a64895b42111561185d565b611a6e60146112db565b851115611c8757611a98611a806118b3565b611a898d6112db565b87119081611c7c575b506118bd565b611aa38584896134d2565b611ad3611ab9611ab4896016610b59565b6116c2565b97611ac2611909565b9e8f01906001600160a01b03169052565b6001600160a01b031660208d0152565b60408b0152565b6060890152565b6080870152565b60a0850152565b8201517fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca09906001600160a01b031690611bc9611b4560208601516001600160a01b031690565b94611b51604082015190565b90611b5d606082015190565b611b7360a0611b6d608085015190565b93015190565b92611b7d60405190565b9889976020890197889081526001600160a01b03909116602082015260e081019695949093909290916001600160a01b031660408501526060840152608083015260a082015260c00152565b90810382520382610e51565b611be7611be0825190565b9160200190565b2061352d565b92611917565b90613556565b611c146001600160a01b0384165b916001600160a01b031690565b14611922565b611c40611c28826016610b59565b611c3a611c34826116c2565b60010190565b90611978565b611c4c8688878461356c565b610b50565b92610b50565b92611c6133610b50565b94611c77611c6e60405190565b9283928361198f565b0390a4565b905086111538611a92565b611a98611c926118a9565b611a80565b906103bc96959493929161171a565b90611cbb94939291611cb6613414565b611cc4565b906103bc613454565b906103d294939291611cd4613466565b611f10565b6103d29060a01c6107cd565b6103d29054611cd9565b15611cf657565b60405162461bcd60e51b815260206004820152601160248201527f4d696e74696e6720697320636c6f7365640000000000000000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211611d5e57565b611d3b565b15611d6a57565b60405162461bcd60e51b815260206004820152601360248201527f4d617820737570706c79206578636565646564000000000000000000000000006044820152606490fd5b15611db657565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e55524920636f756e74206d69736d617463680000000000000000006044820152606490fd5b15611e0257565b60405162461bcd60e51b815260206004820152600f60248201527f426174636820746f6f206c6172676500000000000000000000000000000000006044820152606490fd5b6103d29060a81c6107cd565b6103d29054611e47565b15611e6457565b60405162461bcd60e51b815260206004820152601660248201527f4e6f7420617574686f72697a656420746f206d696e74000000000000000000006044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b903590601e193682900301821215610397570180359067ffffffffffffffff8211610397576020019136829003831361039757565b90821015611f0b5760206106389202810190611ebf565b611ea9565b509293909190611f28611f236012611ce5565b611cef565b611f53611f3c84611f376116cc565b611d51565b611f4c6116fe6103d2600f6116c2565b1115611d63565b611f5e838614611daf565b611f74611f6c6103d26118a9565b841115611dfb565b611f816113116012611e53565b61207c575b611f9060106116c2565b90600091611fa16116fe60006112db565b1161206e575b611faf6137fd565b93611fba8187613827565b611fc460006112db565b818110156120205780611fe6611fe1610638611ffd948c8a611ef4565b905090565b611ff26116fe876112db565b116120025760010190565b611fc4565b611c34612010828b89611ef4565b906116ab60138b86015b906112e8565b509394915094506120319150610b50565b7f59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b261206861205e856112db565b936105aa60405190565b0390a390565b6120778461369f565b611fa7565b61208a611a08336014610b59565b801561209f575b61209a90611e5d565b611f86565b5061209a6120ab612bed565b6120b433611c07565b149050612091565b6103d2939291906000611ca6565b6103d26103d26103d2926001600160a01b031690565b6103d26001600160a01b036112db565b6103d2600160e11b6112db565b61211761211261210c8561398c565b92610b47565b6120ca565b9261213361212e6121266120e0565b8096166117af565b610b47565b9361214061212e846117af565b6121526001600160a01b038716611c07565b036122fa5761216082613a56565b949033612171611311828a8a613a73565b6122cc575b506121126116fe959493926122239261224f986122c2575b506121b061219d8a6005610b59565b611c3a6121a9826116c2565b6000190190565b6121be611c28826005610b59565b6121c66120f0565b956121eb6121d582848d613adb565b8817836001600160a01b0316904260a01b171790565b906122016004926121fc89856112e8565b611978565b6000976122166122108a6112db565b91831690565b14612263575b5050610b47565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a46112db565b1461225657565b633a954ecd60e21b6132eb565b61227561227060016112db565b880190565b91612283611ab484836112e8565b61228f6116fe8b6112db565b1461229b575b5061221c565b6122a76103d28a6116c2565b8314612295576122ba926121fc916112e8565b388080612295565b600090553861218e565b6113116122de91899796959497613094565b6122ed57389491929394612176565b632ce44b5f60e11b6132eb565b62a1148160e81b6132eb565b6103bc906123126133c3565b61233d565b9060ff60a81b9060a81b611514565b906123366103d261153792151590565b8254612317565b61236d7f545ecf6fbcc235df5fdfb676e1992025683c8097a8bd6e5a7c57b31f1c1b29d4916103f4816012612326565b0390a1565b6103bc90612306565b6103bc906123876133c3565b6123ac565b9060ff90611514565b906123a56103d261153792151590565b825461238c565b6123c590611c4c60006123c0836015610b59565b612395565b7f566163b435df210872aafff6e352033418c951e1538d138dfbccd622c4b022d06123ef60405190565b600090a2565b6103bc9061237b565b611ab46103d29161240d600090565b506016610b59565b6103bc906124216133c3565b61243590611c4c60006123c0836014610b59565b7fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666926123ef60405190565b6103bc90612415565b6124706133c3565b6103bc6103bc613b5b565b6103bc612468565b67ffffffffffffffff8111610e735760208091020190565b906124a8610ec583612483565b918252565b60005b8281106124bc57505050565b6060828201526020016124b0565b906103bc6124e06124da8461249b565b93612483565b601f1901602084016124ad565b6103d2916124fa816124ca565b91613e86565b906124a8610ec583610e8c565b6103d26000612500565b6103d261250d565b90916103bc9261252d612517565b92612ea4565b9061173197969594939291612546613414565b906103bc97969594939291612559613466565b61276a565b1561256557565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642062617463682073697a6500000000000000000000000000006044820152606490fd5b9190811015611f0b576020020190565b356103d2816104a9565b156125cb57565b60405162461bcd60e51b815260206004820152600f60248201527f4e6f7420746f6b656e206f776e657200000000000000000000000000000000006044820152606490fd5b6103d260a0610e78565b9092919261262a610ec582612483565b938185526020808601920283019281841161039757915b83831061264e5750505050565b6020809161265c84866104af565b815201920191612641565b6103d291369161261a565b90612685610bd2612681845190565b9290565b9060005b8181106126965750505090565b9091926126ac610c006001928651815260200190565b929101612689565b6103d291612672565b919461270c6119a29298979561270560a0966126f56103bc9a6126e560c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b9037565b81835290916020015b917f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610397578291602061046d9202938491612713565b60208082526103d293910191612717565b959092949396979197612784611a0d611a08336015610b59565b6000916127c16127b2612796856117bc565b6104d06001600160a01b0382166001600160a01b038a16611a3e565b6001600160a01b038a16611a50565b6127ca89611a5c565b86956127d5846112db565b871180612a19575b6127e69061255e565b6127ef846112db565b8b8882101561284f5790611c348b612844611c07612837610a828f87818a61283261169f61282d61282861284a9f6128289888916125aa565b6125ba565b61326b565b6125aa565b926001600160a01b031690565b146125c4565b6127ef565b6129739391509161296e866128c28c9b9e61270c8f8d9f6128bb6129989e9f916129859d9b6128b6612705946128a661288c611ab4896016610b59565b97612895612610565b9c8d01906001600160a01b03169052565b6001600160a01b031660208b0152565b612667565b6040870152565b611bd57f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16128f98a8401516001600160a01b031690565b90611bc961291160208601516001600160a01b031690565b94604081015161293361292360405190565b8092611bc96020830191826126b4565b61293e611be0825190565b20906129566080612950606084015190565b92015190565b9161296060405190565b9788966020880196876126bd565b613e93565b611c146001600160a01b038916611c07565b612993611c28876016610b59565b6112db565b855b8110156129c7576129c081611c346129b961282861299a95888d6125aa565b878961251f565b9050612998565b50949350916129f9611c517fb29502ff9b08df34ae7101bcaedae6124591b6f81d9ab5a4ba2bf20641fd2de292610b50565b92612a0333610b50565b94611c77612a1060405190565b92839283612759565b506127e6612a286103d26118b3565b88111590506127dd565b906103bc97969594939291612533565b81810292918115918404141715611d5e57565b6103d290612a6360106116c2565b612a42565b906103bc91612a756133c3565b906103bc91600d61167f565b906103bc91612a68565b6103d26009611ce5565b61212e612aad6103d292612aa7600090565b5061398c565b6117af565b6103d290612ac060016112db565b6124fa816124ca565b6103d267ffffffffffffffff6112db565b612ae76104d060006117bc565b6001600160a01b03821614612b1057611ab4612b04916005610b59565b612b0c612ac9565b1690565b6323d3ad8160e21b6132eb565b612b256133c3565b6103bc6103bc612b3560006117bc565b613eab565b6103bc612b1d565b91908203918211611d5e57565b6103d2612b5c600f6116c2565b612b646116cc565b90612b42565b612b726133c3565b6103bc6103bc613f3f565b6103bc612b6a565b369037565b906103bc612b9a6124da8461249b565b601f190160208401612b85565b612baf613f47565b90612bb8613f74565b90612bc230610b50565b612bcc60006112db565b612bde612bd960006112db565b612b8a565b600f60f81b9594934693929190565b6103d260096112fb565b90611731969594939291612c09613414565b906103bc969594939291612c1b613466565b612c32565b9091612720565b90916103d292612c20565b9496909193959296612c4b611a0d611a08336015610b59565b600090612c79611a45612c5d846117bc565b6104d06001600160a01b0382166001600160a01b038916611a3e565b612c8288611a5c565b8894612c8d836112db565b861180612da4575b612c9e9061255e565b612ca7836112db565b86811015612cee5780611c34612cd7610a826128288f95868e61283261169f61282d61282886612ce99d866125aa565b6128446001600160a01b038d16611c07565b612ca7565b5061298591611bf361297392611bed88611bd58c9f9b9e612d7c9a9b9d8f91611bc9908f612d58611bc991612d407f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c190565b95612d4a60405190565b938492602084019283612c27565b612d63611be0825190565b20612d72611ab4866016610b59565b9061296060405190565b855b8110156129c757612d9d81611c346129b9612828612d7e95888d6125aa565b9050612d7c565b50612c9e612db36103d26118b3565b8711159050612c95565b906103bc969594939291612bf7565b906103bc91612dd96133c3565b906103bc91600e61167f565b906103bc91612dcc565b6103d260036112c8565b6103bc90612e056133c3565b612e1990611c4c60016123c0836014610b59565b7f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f66123ef60405190565b6103bc90612df9565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31612e9f612e95612e8f33611c4c876123c088612e8a856007610b59565b610b59565b93610b50565b936103f860405190565b0390a3565b91929092612eb38185856120fd565b833b612ec26116fe60006112db565b03612ece575b50505050565b612edb936113119361400c565b612ee85738808080612ec8565b6368d2bf6b60e11b6132eb565b612eff6012611e53565b612f3057612f11611a08826014610b59565b908115612f1c575090565b9050612f2c611c07612837612bed565b1490565b50600190565b15612f3d57565b60405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152606490fd5b612f93612f8e8261326b565b612f36565b612fa6612fa18260136112e8565b6112c8565b90612faf825190565b612fbc6116fe60006112db565b11612fcb576103d29150614100565b5090565b6103bc90612fdb6133c3565b61302c565b15612fe757565b60405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606490fd5b613061906130516130406104d060006117bc565b6001600160a01b0383161415612fe0565b611c4c60016123c0836015610b59565b7ff37f0cb2b2cc8066b1fa4738122412661ce5405cd9278f327d6905bb6d0e973f6123ef60405190565b6103bc90612fcf565b6103d291612e8a611a08926130a7600090565b506007610b59565b6103bc906130bb6133c3565b61236d7fe427e272b122e738fd867ac5defcedb2bc9362341166a49d793d8b230f75670c916105a6816010611978565b6103bc906130af565b6103bc906131006133c3565b600061310b816117bc565b6001600160a01b0381166001600160a01b0384161461312f5750506103bc90613eab565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6103bc906130f4565b6103bc906131616133c3565b61318c565b9060ff60a01b9060a01b611514565b906131856103d261153792151590565b8254613166565b61236d7fb304fe5dd2d3c45e8ec87c1dd1bd2b3a773b3135e84a7b9151f5fb4bf1a06d0e916103f4816012613175565b6103bc90613155565b6131d86131d26103d29290565b60e01b90565b6001600160e01b03191690565b6131f26301ffc9a76131c5565b6001600160e01b0319821614908115613230575b8115613210575090565b9050612f2c613222635b5e139f6131c5565b916001600160e01b03191690565b905061323f6380ac58cd6131c5565b6001600160e01b031982161490613206565b8015611d5e576000190190565b6103d2600160e01b6112db565b9060009182613278613400565b821015613283575050565b6132906103d260006116c2565b821061329a575050565b509091505b6132ad611ab48260046112e8565b90816132bc6116fe60006112db565b036132d0576132cb9150613251565b61329f565b50612f2c6132dc61325e565b6132e660006112db565b921690565b60005260046000fd5b906001600160a01b0390611514565b906133136103d261153792610b50565b82546132f4565b9161332482612a95565b90806133a8575b613389575b613351612e8f61335792611c4c86600061334b8860066112e8565b01613303565b916112db565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561338260405190565b8080611c77565b6133966113113383613094565b15613330576367d9dca160e11b6132eb565b50336133bc6001600160a01b038316611c07565b141561332b565b6133cb612bed565b33906133d682611c07565b036133de5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b6103d260006112db565b6103d260026112db565b61341e600a6116c2565b61342661340a565b908114613438576103bc90600a611978565b633ee5aeb560e01b6000908152600490fd5b6103d260016112db565b6103bc61345f61344a565b600a611978565b61346e612a8b565b61347457565b63d93c066560e01b6000908152600490fd5b1561348d57565b60405162461bcd60e51b815260206004820152601560248201527f4e6f7420636f6e7365637574697665206f776e657200000000000000000000006044820152606490fd5b9290918201915b825b8110156135275761352081611c3461350860006134fa6134db966141a3565b01516001600160a01b031690565b61351a6001600160a01b038916611c07565b14613486565b90506134d9565b50915050565b6103d2906135396141b7565b6042916040519161190160f01b8352600283015260228201522090565b6103d29161356391614253565b909291926142ee565b9391909161357a60006112db565b845b8110156135a45761359d81611c3461359661357c94870190565b878a61251f565b905061357a565b509350505050565b156135b357565b60405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152606490fd5b3d15613612576136073d612500565b903d6000602084013e565b606090565b1561361e57565b60405162461bcd60e51b815260206004820152601360248201527f4665652068616e646c696e67206661696c6564000000000000000000000000006044820152606490fd5b1561366a57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b6136b1906136ad60106116c2565b0290565b6136bb60116112fb565b6000916136c7836117bc565b916136da6001600160a01b038416611c07565b036137b857613711916136ef823410156135ac565b6136ff611c0761283760126112fb565b1415806137a7575b613747575b340390565b9061371b816112db565b8211613725575050565b806103bc9261373360405190565b600091335af16137416135f8565b50613663565b61377f838061375660126112fb565b6137616175306112db565b908561376c60405190565b9182800393f161377a6135f8565b501590565b1561370c5761370c838061379260405190565b60009085335af16137a16135f8565b50613617565b506137b1836112db565b8111613707565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230207061796d656e74206e6f7420696d706c656d656e7465640000006044820152606490fd5b6103d260006116c2565b6103d260406112db565b6103d2906138226116fe6103d29490565b901b90565b61383160006116c2565b9160009161383e836112db565b821461397f57808261389961388e61385c6138c39660011460e11b90565b613879613868896117bc565b6138718a6112db565b978891613adb565b17846001600160a01b0316904260a01b171790565b6121fc8860046112e8565b6138e161211260019361212e6138c96138b0613807565b6138ba60016112db565b998a9182613811565b17860290565b611c3a6138d7846005610b59565b9161046d836116c2565b6138e96120e0565b16928314613973578501949285036139026000196116fe565b11613966576001815b61391e575b50505050906103bc91611978565b15613954575b83908383867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4908161390b565b91600101918483036139245780613910565b6340b23f1d60e11b6132eb565b622e076360e81b6132eb565b63b562e8dd60e01b6132eb565b613994613400565b8110156139a9575b636f96cda160e11b6132eb565b6004906139ba611ab48260046112e8565b916000916139c7836112db565b84146139eb5750506139e36122106139dd61325e565b926112db565b0361399c5790565b909192506139fb6103d2846116c2565b81101561399c57909190600019015b91613a18611ab484836112e8565b92613a22836112db565b8414613a4a575050613a386122106139dd61325e565b146103d257636f96cda160e11b6132eb565b90925060001901613a0a565b6103d2613a6d91613a65600090565b5060066112e8565b90815490565b91906001600160a01b038091613a87600090565b5016911691821491141790565b6103d260e86112db565b6103d290613aaf6116fe6103d29490565b901c90565b613ac16103d26103d29290565b62ffffff1690565b6103d26103d26103d29262ffffff1690565b613b10613b15916103d29493613aef600090565b50613b0a613b05613afe613a94565b8097613a9e565b613ab4565b916143a1565b613ac9565b613811565b613b226143ac565b6103bc613b3160006009613175565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61236d336104f7565b6103bc613b1a565b90611cbb939291613b72613414565b906103d2939291613b81613466565b613cbc565b15613b8d57565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606490fd5b90613bdb825190565b811015611f0b576020809102010190565b90613bf5815190565b9067ffffffffffffffff8211610e7357613c13826115d285546110a0565b602090601f8311600114613c4d57611537929160009183613c42575050600019600883021c1916906002021790565b0151905038806115f4565b601f19831691613c6285600052602060002090565b9260005b818110613c9a57509160029391856001969410613c865750505002019055565b01516000196008601f8516021c191661165d565b91936020600181928787015181550195019201613c66565b906103bc91613bec565b506000613cdf613cce6104d0836117bc565b6001600160a01b0384161415613b86565b613cec611f236012611ce5565b613cfb611f3c84611f376116cc565b8351613d096116fe836112db565b148015613e71575b613d1a90611daf565b613d23816112db565b831180613e58575b613d34906118bd565b613d416113116012611e53565b613e18575b613d5060106116c2565b613d5c6116fe836112db565b11613e0a575b613d6a6137fd565b93613d758484613827565b8051613d836116fe846112db565b11613d94575b505061203190610b50565b92613da38296929593956112db565b81811015613dfb5780613dbf611913611913613dd69489613bd2565b613dcb6116fe8a6112db565b11613ddb5760010190565b613da3565b611c34613de88288613bd2565b51613df6601388850161201a565b613cb2565b50925093509161203138613d89565b613e138361369f565b613d62565b613e26611a08336014610b59565b8015613e3b575b613e3690611e5d565b613d46565b50613e36613e47612bed565b613e5033611c07565b149050613e2d565b50613d34613e676103d26118a9565b8411159050613d2b565b50613d1a613e7d855190565b84149050613d11565b6103d29291906000613b63565b916103d2939161356393613ea5600090565b506143f8565b613ecc613ec6613ebb60096112fb565b611c4c846009613303565b91610b50565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0613ef760405190565b8080612e9f565b613f06613466565b6103bc613f1560016009613175565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861236d336104f7565b6103bc613efe565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600b5b9061455b565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600c613f6e565b905051906103bc8261039c565b90602082820312610397576103d291613f9f565b6001600160a01b039182168152911660208201526103d2926080820192909190613fec905b6040830152565b6060818403910152610439565b6131d86131d26103d29263ffffffff1690565b91614024611c4c60209361401e600090565b50610b50565b63150b7a029360003361405561403960405190565b9889968795869461404a8c60e01b90565b865260048601613fc0565b03925af16000928161409a575b5061408b5761406f6135f8565b805161407e6116fe60006112db565b14612ee857805190602001fd5b6132226131d8612f2c92613ff9565b6140bd91935060203d6020116140c4575b6140b58183610e51565b810190613fac565b9138614062565b503d6140ab565b61046d6140e3926020926140dd815190565b94859290565b93849101610416565b6140fa906103d293926140cb565b906140cb565b61410c6113118261326b565b61416157614118614584565b80516141276116fe60006112db565b14614157576103d2611bc99161413f6103d29461458e565b9061414960405190565b9384926020840192836140ec565b50506103d2612517565b630a14c4b560e41b6132eb565b6103d26080610e78565b61418061416e565b60008082526020820181905260408201819052606082015290565b6103d2614178565b6141b26103d291612aa761419b565b6145f7565b6141c030610b50565b6141f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611c07565b148061422a575b15614222577f000000000000000000000000000000000000000000000000000000000000000090565b6103d26146cf565b507f000000000000000000000000000000000000000000000000000000000000000046146141f9565b9060009161425f825190565b61426c6116fe60416112db565b036142965761428f92506020820151906060604084015193015160001a906143f8565b9192909190565b5090506142ae6129936142a960006117bc565b925190565b909160029190565b634e487b7160e01b600052602160045260246000fd5b600411156142d657565b6142b6565b906103bc826142cc565b6103d2906112db565b906000916142fb836142db565b614304826142db565b0361430e57505050565b61431860016142db565b614321826142db565b036143355763f645eedf60e01b8352600483fd5b61433f60026142db565b614348826142db565b03614371575061150061435b83926142e5565b63fce698f760e01b835260048301526024820190565b61438461437e60036142db565b916142db565b1461438d575050565b6335e2f38360e21b82526004820152602490fd5b5050506103d2600090565b6143b7611311612a8b565b6143bd57565b638dfc202b60e01b6000908152600490fd5b6119a26103bc94613fe56060949897956143ee608086019a6000870152565b60ff166020850152565b9091614403846142e5565b61442f6116fe7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06112db565b116144ab57906144516020946000949361444860405190565b948594856143cf565b838052039060015afa1561149b5760005160009161446e836117bc565b6001600160a01b0381166001600160a01b038416146144975750614491836112db565b91929190565b9150916144a3906112db565b909160019190565b5050506144b860006117bc565b9160039190565b6103d260ff6112db565b805460009392916144dc6110dd836110a0565b916001811690811561113957506001146144f557505050565b6145089192939450600052602060002090565b916000925b81841061451a5750500190565b80548484015260209093019260010161450d565b906103d2916144c9565b906103bc6111729261454960405190565b9384809261452e565b6103d290614538565b908161456b6116fe6103d26144bf565b1461457a57506103d290614779565b6103d29150614552565b6103d2600d6112c8565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156145c5576001600a916145a9565b809350602091039203918252565b6103d260a06112db565b6145ea6103d26103d29290565b67ffffffffffffffff1690565b906103bc61460361419b565b606061468b613b05839661462961461c61212e836117af565b6001600160a01b03168652565b61465661464561464061463a6145d3565b84613a9e565b6145dd565b67ffffffffffffffff166020870152565b61467d61466161325e565b61467461466e60006112db565b91841690565b14156040870152565b614685613a94565b90613a9e565b62ffffff16910152565b909594926103bc946113b86146c0926146b96080966113a160a088019c6000890152565b6040850152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6147547f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611bc961474130610b50565b6040519586946020860194469286614695565b61475f611be0825190565b2090565b906103bc612b9a61477384612500565b93610e8c565b614782816147a0565b9061479561479060206112db565b614763565b918252602082015290565b6147af6147b491612fcb600090565b6142e5565b6147be60ff6112db565b166147c9601f6112db565b81116147d25790565b632cd44ac360e21b6000908152600490fdfea26469706673582212200fa5426ad3e7a6342dd43281a96f77133bef595aab11878c2420c6cae816383964736f6c634300081c0033","opcodes":"PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x90 JUMPI PUSH2 0x1B PUSH2 0x15 PUSH2 0x334 JUMP JUMPDEST SWAP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481A PUSH2 0xB6D DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x4200 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x422D ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x41CD ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x4716 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x46F5 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x3F4C ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x3F79 ADD MSTORE PUSH2 0x160 MLOAD DUP2 DUP2 DUP2 PUSH2 0x129A ADD MSTORE PUSH2 0x13E5 ADD MSTORE PUSH2 0x180 MLOAD DUP2 DUP2 DUP2 PUSH2 0xF96 ADD MSTORE PUSH2 0x140B ADD MSTORE PUSH2 0x481A SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0xDE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xAB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xCC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x11A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x13F PUSH2 0x13A DUP3 PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x90 JUMPI PUSH2 0xE5 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x107 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x90 JUMPI DUP2 MLOAD PUSH2 0x173 SWAP3 PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x90 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x198 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x1B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SLT PUSH2 0x90 JUMPI PUSH2 0x1E2 PUSH2 0x160 PUSH2 0xD1 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x201 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x222 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x246 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x90 JUMPI PUSH2 0x26E DUP2 PUSH2 0x2EC SWAP4 DUP6 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x280 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x292 DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2A4 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2B6 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x2CA DUP3 DUP3 DUP7 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x2DD DUP3 DUP3 DUP7 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 SWAP4 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x90 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI PUSH2 0x31D DUP5 PUSH2 0x173 SWAP3 DUP6 ADD PUSH2 0x1C9 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x32D DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x5387 DUP1 CODESIZE SUB DUP1 PUSH2 0x347 DUP2 PUSH2 0xD1 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x2F2 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP1 PUSH2 0x364 PUSH2 0x13A DUP4 PUSH2 0xE7 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x373 PUSH1 0x10 PUSH2 0x357 JUMP JUMPDEST PUSH16 0x29A823A7232A21B7B63632B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x1 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x397 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x3EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3E7 JUMPI JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3DC JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x42E PUSH2 0x173 PUSH2 0x436 SWAP4 PUSH2 0x410 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3F6 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x451 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x45F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x43A JUMP JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x474 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x486 PUSH2 0xE5 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x4A8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x446 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 PUSH2 0x4BB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC JUMPI PUSH2 0x4DE DUP3 PUSH2 0x4D8 DUP6 SLOAD PUSH2 0x3CC JUMP JUMPDEST DUP6 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x519 JUMPI PUSH2 0x436 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x50E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x52E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x56C JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x553 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x532 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP2 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x5A8 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x410 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x406 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5D2 JUMP JUMPDEST SWAP1 PUSH2 0x5F4 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x5DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5AF JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x61A PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5FB JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x640 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x621 JUMP JUMPDEST SWAP1 PUSH2 0x651 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x678 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x65F JUMP JUMPDEST SWAP1 PUSH2 0x76A PUSH2 0x763 PUSH2 0x140 PUSH2 0x784 SWAP5 PUSH2 0x6C0 PUSH2 0x698 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 ADD MLOAD SWAP2 PUSH1 0x20 DUP7 ADD MLOAD SWAP4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6DE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xE PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6EC PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH2 0x598 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x701 PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x726 PUSH2 0x71F PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x73D PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0x755 PUSH2 0x120 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x60A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x630 JUMP JUMPDEST PUSH2 0x77F PUSH1 0x1 PUSH2 0x77A CALLER PUSH1 0x15 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x7DB SWAP5 PUSH2 0x7A1 SWAP2 PUSH2 0x7C2 SWAP5 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x7AC PUSH1 0xB DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x7BB PUSH1 0xC DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x140 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE0 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x7F7 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0x803 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xC0 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x81D JUMP JUMPDEST PUSH2 0x173 PUSH1 0x1 PUSH2 0x410 JUMP JUMPDEST SWAP1 PUSH2 0x828 SWAP3 SWAP2 PUSH2 0x83A JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x833 PUSH2 0x813 JUMP JUMPDEST PUSH1 0xA PUSH2 0x598 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x18C PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x845 JUMP JUMPDEST SWAP2 PUSH2 0x865 SWAP2 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP2 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x894 JUMPI POP POP PUSH2 0xE5 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE DUP1 PUSH1 0x24 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5 SWAP2 DUP3 SWAP2 PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x8CC SWAP1 PUSH1 0x2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x8E6 DUP2 PUSH1 0x0 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x8F3 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x8FE JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x173 PUSH1 0xFF PUSH2 0x410 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x924 PUSH2 0x8F3 PUSH1 0x20 PUSH2 0x410 JUMP JUMPDEST LT ISZERO PUSH2 0x934 JUMPI PUSH2 0x173 SWAP2 POP PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 PUSH2 0x946 SWAP4 SWAP1 JUMP JUMPDEST ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x90B JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0xE5 SWAP5 PUSH2 0x983 PUSH2 0x98A SWAP3 PUSH2 0x97C PUSH1 0x80 SWAP7 PUSH2 0x975 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x9F6 PUSH2 0x9C6 PUSH1 0xE0 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100 MLOAD SWAP1 PUSH2 0x9EA PUSH2 0x9D7 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x951 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA01 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH2 0x173 SWAP1 SLOAD PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0xA33 PUSH2 0xA28 PUSH1 0x9 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x77F DUP5 PUSH1 0x9 PUSH2 0x5E4 JUMP JUMPDEST SWAP2 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA64 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x0 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA9E PUSH2 0xAA7 PUSH1 0x20 SWAP4 PUSH2 0x103 SWAP4 PUSH2 0xA92 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x173 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xADB PUSH2 0xAD7 PUSH2 0xAD0 DUP4 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0xAE8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xAFA SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x8 MUL SHL SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x410 JUMP JUMPDEST DUP1 PUSH2 0xB10 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x8F3 PUSH1 0x1F PUSH2 0x410 JUMP JUMPDEST GT PUSH2 0xB49 JUMPI POP PUSH2 0x173 DUP2 PUSH2 0xB43 PUSH2 0xB3E PUSH2 0xB39 PUSH2 0x173 SWAP6 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST OR PUSH2 0x410 JUMP JUMPDEST PUSH2 0x8B2 SWAP1 PUSH2 0xB56 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xAB1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x13966DB5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x15D9756E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x1D027AAD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x22DF11D8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x254A4737 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x280007BB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x2C673915 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x4C06BABA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52B91226 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x559E775B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x765B0C36 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7ECC2B56 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x916F9AB4 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAFC0381D EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC2BA4744 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3324B27 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC4C69033 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xE31C6732 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE59BA924 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF8004D31 EQ PUSH2 0x284 JUMPI PUSH4 0xFA5C3375 SUB PUSH2 0x397 JUMPI PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x120D JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x119B JUMP JUMPDEST PUSH2 0x103B JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x397 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x429 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x45A PUSH2 0x463 PUSH1 0x20 SWAP4 PUSH2 0x46D SWAP4 PUSH2 0x44E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x439 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x471 JUMP JUMPDEST DUP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x549 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x564 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x10 PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x619 DUP4 DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x602 JUMP JUMPDEST SWAP2 PUSH2 0x16B0 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x16CC JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x685 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x693 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x6A1 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6AF DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6BD DUP4 PUSH1 0x80 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x740 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x74E DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20BC JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 PUSH2 0x7A0 DUP5 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x549 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x14 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x7FA CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x86D CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x15 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x872 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8AF CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23FE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x245F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x564 PUSH2 0x909 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x251F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x91F CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x975 DUP4 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x983 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 PUSH2 0x9A4 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x9B4 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x3D2 PUSH2 0x9C5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x549 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x4AF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x9E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2A32 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA0D CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A55 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xA4B CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2A81 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xA61 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x2A8B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xA82 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2AB2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2ADA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xAC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x12 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB26 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 PUSH2 0x3D2 SWAP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xB9C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 PUSH2 0xBD9 PUSH2 0xBD2 PUSH2 0xBC8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBEA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC07 PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0xC7F PUSH2 0xC77 PUSH2 0xC96 SWAP6 PUSH2 0xC69 PUSH2 0xC8F SWAP6 PUSH2 0x3D2 SWAP13 SWAP11 PUSH2 0xC5C PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0xCBE PUSH2 0x2BA7 JUMP JUMPDEST SWAP4 PUSH2 0xCCE SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0xC0F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xD06 DUP3 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xD14 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP2 PUSH2 0xD35 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0xD45 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD77 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF2 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2DBD JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD96 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xDAC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x2DEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xDCA CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2E43 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0xDEB DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xE05 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCF JUMP JUMPDEST SWAP1 PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xE36 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE73 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0xE85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xECA PUSH2 0xEC5 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x397 JUMPI PUSH2 0x3BC SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 PUSH1 0x20 PUSH2 0x3D2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xF14 DUP2 DUP4 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF22 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF30 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP3 ADD PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xF5D CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xF7C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2EF5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xF91 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x0 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x11 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xFD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xFBA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x49D PUSH2 0xFF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xF PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1018 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xFFC JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1036 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x308B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x104B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x5A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x10C0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10BB JUMPI JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10B0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x10E7 PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1100 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1125 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x1169 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x114E JUMP JUMPDEST SUB DUP4 PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 LT PUSH2 0x118A JUMPI PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xE PUSH2 0x1179 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x11AB CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x118F JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x11D2 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x11EF CALLDATASIZE PUSH1 0x4 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1208 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1220 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x124B CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1263 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x31BC JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1291 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x407 PUSH32 0x0 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x31E5 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x132F JUMPI PUSH1 0x0 PUSH2 0x1329 PUSH2 0x3D2 SWAP3 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x12FB JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x331A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x13BF SWAP3 PUSH2 0x13A8 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP2 PUSH2 0x13DF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1409 PUSH32 0x0 PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1433 ADDRESS PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH2 0x145C PUSH2 0x1440 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x2F4DE29B PUSH1 0xE1 SHL DUP7 MSTORE CHAINID SWAP1 PUSH1 0x4 DUP8 ADD PUSH2 0x1372 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1472 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1494 JUMPI JUMPDEST PUSH2 0x148C DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x13C6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14AE PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST ISZERO PUSH2 0x14BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152F PUSH2 0x3D2 PUSH2 0x1537 SWAP4 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x151E JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1552 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1560 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x153B JUMP JUMPDEST ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1575 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x3BC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x15A9 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x15D8 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST DUP6 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1629 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1667 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x164D JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1644 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x162C JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH2 0x3BC SWAP4 SWAP3 PUSH2 0x16A4 PUSH2 0x169F DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x16EB PUSH2 0x16DC PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x1 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16E6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x1702 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x170A JUMPI POP JUMP JUMPDEST PUSH2 0x3D2 SWAP2 SWAP3 POP PUSH2 0x46D PUSH1 0x8 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x172C PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x174B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1750 JUMP JUMPDEST ISZERO PUSH2 0x176A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420657363726F772077616C6C657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST ISZERO PUSH2 0x17CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x64 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x32 PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x18C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207175616E7469747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xC0 PUSH2 0xE78 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xEB5 JUMP JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x1988 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0x12DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x196E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x1C1A PUSH2 0x1BF9 DUP6 SWAP8 PUSH2 0x1BF3 DUP7 SWAP11 PUSH2 0x1BED PUSH2 0x1AE3 PUSH2 0x1BD5 DUP10 PUSH2 0x1AFF PUSH2 0x1C51 SWAP12 SWAP15 PUSH2 0x1AF8 PUSH32 0x670FE7CB14F68CF31D6E2012CADD6F5325904B6D23D2CADEB3607C96D8B1FEC8 SWAP16 PUSH2 0x1C57 SWAP16 DUP15 SWAP2 PUSH2 0x1AEA PUSH2 0x1AF1 SWAP3 PUSH2 0x1A12 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x1A57 PUSH2 0x1A45 PUSH2 0x1A26 DUP14 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND JUMPDEST EQ ISZERO PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST EQ ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x1A64 DUP10 JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1A6E PUSH1 0x14 PUSH2 0x12DB JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1A98 PUSH2 0x1A80 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A89 DUP14 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT SWAP1 DUP2 PUSH2 0x1C7C JUMPI JUMPDEST POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x1AA3 DUP6 DUP5 DUP10 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x1AB9 PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST SWAP8 PUSH2 0x1AC2 PUSH2 0x1909 JUMP JUMPDEST SWAP15 DUP16 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST DUP3 ADD MLOAD PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1BC9 PUSH2 0x1B45 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x1B51 PUSH1 0x40 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B5D PUSH1 0x60 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B73 PUSH1 0xA0 PUSH2 0x1B6D PUSH1 0x80 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1B7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD SWAP8 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x352D JUMP JUMPDEST SWAP3 PUSH2 0x1917 JUMP JUMPDEST SWAP1 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1C40 PUSH2 0x1C28 DUP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x1C34 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1C4C DUP7 DUP9 DUP8 DUP5 PUSH2 0x356C JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x1C61 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x1C6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x198F JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 POP DUP7 GT ISZERO CODESIZE PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1A98 PUSH2 0x1C92 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CB6 PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CD4 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA0 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST ISZERO PUSH2 0x1CF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720697320636C6F736564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST ISZERO PUSH2 0x1D6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C7920657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E55524920636F756E74206D69736D61746368000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E02 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA8 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1E47 JUMP JUMPDEST ISZERO PUSH2 0x1E64 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x397 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 PUSH2 0x638 SWAP3 MUL DUP2 ADD SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 SWAP1 PUSH2 0x1F28 PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1CEF JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1F4C PUSH2 0x16FE PUSH2 0x3D2 PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST GT ISZERO PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F6C PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x207C JUMPI JUMPDEST PUSH2 0x1F90 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1FA1 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x206E JUMPI JUMPDEST PUSH2 0x1FAF PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x1FBA DUP2 DUP8 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 PUSH2 0x1FE6 PUSH2 0x1FE1 PUSH2 0x638 PUSH2 0x1FFD SWAP5 DUP13 DUP11 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FF2 PUSH2 0x16FE DUP8 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2002 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x2010 DUP3 DUP12 DUP10 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH1 0x13 DUP12 DUP7 ADD JUMPDEST SWAP1 PUSH2 0x12E8 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP2 POP SWAP5 POP PUSH2 0x2031 SWAP2 POP PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x59F9FB6D992D2AEE0ED338BB4C504A17FD3F67AE91A3135BC2EF947E308C41B2 PUSH2 0x2068 PUSH2 0x205E DUP6 PUSH2 0x12DB JUMP JUMPDEST SWAP4 PUSH2 0x5AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x2077 DUP5 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x208A PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x209F JUMPI JUMPDEST PUSH2 0x209A SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x1F86 JUMP JUMPDEST POP PUSH2 0x209A PUSH2 0x20AB PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x20B4 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2112 PUSH2 0x210C DUP6 PUSH2 0x398C JUMP JUMPDEST SWAP3 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x20CA JUMP JUMPDEST SWAP3 PUSH2 0x2133 PUSH2 0x212E PUSH2 0x2126 PUSH2 0x20E0 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP4 PUSH2 0x2140 PUSH2 0x212E DUP5 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x2152 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x22FA JUMPI PUSH2 0x2160 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x2171 PUSH2 0x1311 DUP3 DUP11 DUP11 PUSH2 0x3A73 JUMP JUMPDEST PUSH2 0x22CC JUMPI JUMPDEST POP PUSH2 0x2112 PUSH2 0x16FE SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x2223 SWAP3 PUSH2 0x224F SWAP9 PUSH2 0x22C2 JUMPI JUMPDEST POP PUSH2 0x21B0 PUSH2 0x219D DUP11 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x21A9 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x21BE PUSH2 0x1C28 DUP3 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x20F0 JUMP JUMPDEST SWAP6 PUSH2 0x21EB PUSH2 0x21D5 DUP3 DUP5 DUP14 PUSH2 0x3ADB JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2201 PUSH1 0x4 SWAP3 PUSH2 0x21FC DUP10 DUP6 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x2216 PUSH2 0x2210 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x2263 JUMPI JUMPDEST POP POP PUSH2 0xB47 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2256 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2275 PUSH2 0x2270 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2283 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x16FE DUP12 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x221C JUMP JUMPDEST PUSH2 0x22A7 PUSH2 0x3D2 DUP11 PUSH2 0x16C2 JUMP JUMPDEST DUP4 EQ PUSH2 0x2295 JUMPI PUSH2 0x22BA SWAP3 PUSH2 0x21FC SWAP2 PUSH2 0x12E8 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x22DE SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0x3094 JUMP JUMPDEST PUSH2 0x22ED JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x2176 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2312 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x2336 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x236D PUSH32 0x545ECF6FBCC235DF5FDFB676E1992025683C8097A8BD6E5A7C57B31F1C1B29D4 SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x2326 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2387 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x23AC JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x23A5 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23C5 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST PUSH32 0x566163B435DF210872AAFFF6E352033418C951E1538D138DFBCCD622C4B022D0 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1AB4 PUSH2 0x3D2 SWAP2 PUSH2 0x240D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2421 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2435 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2470 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3B5B JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2468 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0x2483 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24BC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B0 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x24E0 PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP2 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x250D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3BC SWAP3 PUSH2 0x252D PUSH2 0x2517 JUMP JUMPDEST SWAP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2546 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2559 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x276A JUMP JUMPDEST ISZERO PUSH2 0x2565 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062617463682073697A650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3D2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x25CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x262A PUSH2 0xEC5 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x397 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x264E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x265C DUP5 DUP7 PUSH2 0x4AF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x261A JUMP JUMPDEST SWAP1 PUSH2 0x2685 PUSH2 0xBD2 PUSH2 0x2681 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2696 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26AC PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2672 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x270C PUSH2 0x19A2 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x2705 PUSH1 0xA0 SWAP7 PUSH2 0x26F5 PUSH2 0x3BC SWAP11 PUSH2 0x26E5 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATACOPY JUMP JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 ADD JUMPDEST SWAP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 SWAP2 PUSH1 0x20 PUSH2 0x46D SWAP3 MUL SWAP4 DUP5 SWAP2 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2717 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP8 SWAP2 SWAP8 PUSH2 0x2784 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x27C1 PUSH2 0x27B2 PUSH2 0x2796 DUP6 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x27CA DUP10 PUSH2 0x1A5C JUMP JUMPDEST DUP7 SWAP6 PUSH2 0x27D5 DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT DUP1 PUSH2 0x2A19 JUMPI JUMPDEST PUSH2 0x27E6 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x27EF DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP12 DUP9 DUP3 LT ISZERO PUSH2 0x284F JUMPI SWAP1 PUSH2 0x1C34 DUP12 PUSH2 0x2844 PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0xA82 DUP16 DUP8 DUP2 DUP11 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 PUSH2 0x284A SWAP16 PUSH2 0x2828 SWAP9 DUP9 SWAP2 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x326B JUMP JUMPDEST PUSH2 0x25AA JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST PUSH2 0x2973 SWAP4 SWAP2 POP SWAP2 PUSH2 0x296E DUP7 PUSH2 0x28C2 DUP13 SWAP12 SWAP15 PUSH2 0x270C DUP16 DUP14 SWAP16 PUSH2 0x28BB PUSH2 0x2998 SWAP15 SWAP16 SWAP2 PUSH2 0x2985 SWAP14 SWAP12 PUSH2 0x28B6 PUSH2 0x2705 SWAP5 PUSH2 0x28A6 PUSH2 0x288C PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP8 PUSH2 0x2895 PUSH2 0x2610 JUMP JUMPDEST SWAP13 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE JUMP JUMPDEST PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BD5 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x28F9 DUP11 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC9 PUSH2 0x2911 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2933 PUSH2 0x2923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1BC9 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x293E PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x2956 PUSH1 0x80 PUSH2 0x2950 PUSH1 0x60 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3E93 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2993 PUSH2 0x1C28 DUP8 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C0 DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x299A SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST DUP8 DUP10 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST POP SWAP5 SWAP4 POP SWAP2 PUSH2 0x29F9 PUSH2 0x1C51 PUSH32 0xB29502FF9B08DF34AE7101BCAEDAE6124591B6F81D9AB5A4BA2BF20641FD2DE2 SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x2A03 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x2A10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2759 JUMP JUMPDEST POP PUSH2 0x27E6 PUSH2 0x2A28 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP9 GT ISZERO SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2533 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2A63 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2A42 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A75 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xD PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x212E PUSH2 0x2AAD PUSH2 0x3D2 SWAP3 PUSH2 0x2AA7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x398C JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2AC0 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0x3D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2B10 JUMPI PUSH2 0x1AB4 PUSH2 0x2B04 SWAP2 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x2B35 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B1D JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x2B5C PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2B64 PUSH2 0x16CC JUMP JUMPDEST SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B72 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B6A JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST PUSH2 0x2BAF PUSH2 0x3F47 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 PUSH2 0x3F74 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2BDE PUSH2 0x2BD9 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C09 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C1B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x2C32 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2720 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3D2 SWAP3 PUSH2 0x2C20 JUMP JUMPDEST SWAP5 SWAP7 SWAP1 SWAP2 SWAP4 SWAP6 SWAP3 SWAP7 PUSH2 0x2C4B PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2C79 PUSH2 0x1A45 PUSH2 0x2C5D DUP5 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x2C82 DUP9 PUSH2 0x1A5C JUMP JUMPDEST DUP9 SWAP5 PUSH2 0x2C8D DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 GT DUP1 PUSH2 0x2DA4 JUMPI JUMPDEST PUSH2 0x2C9E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x2CA7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI DUP1 PUSH2 0x1C34 PUSH2 0x2CD7 PUSH2 0xA82 PUSH2 0x2828 DUP16 SWAP6 DUP7 DUP15 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 DUP7 PUSH2 0x2CE9 SWAP14 DUP7 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2CA7 JUMP JUMPDEST POP PUSH2 0x2985 SWAP2 PUSH2 0x1BF3 PUSH2 0x2973 SWAP3 PUSH2 0x1BED DUP9 PUSH2 0x1BD5 DUP13 SWAP16 SWAP12 SWAP15 PUSH2 0x2D7C SWAP11 SWAP12 SWAP14 DUP16 SWAP2 PUSH2 0x1BC9 SWAP1 DUP16 PUSH2 0x2D58 PUSH2 0x1BC9 SWAP2 PUSH2 0x2D40 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x2D4A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x2D63 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x2D72 PUSH2 0x1AB4 DUP7 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2D9D DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x2D7E SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7C JUMP JUMPDEST POP PUSH2 0x2C9E PUSH2 0x2DB3 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP8 GT ISZERO SWAP1 POP PUSH2 0x2C95 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DD9 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xE PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x3 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2E05 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2E19 SWAP1 PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2E9F PUSH2 0x2E95 PUSH2 0x2E8F CALLER PUSH2 0x1C4C DUP8 PUSH2 0x23C0 DUP9 PUSH2 0x2E8A DUP6 PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST SWAP4 PUSH2 0xB50 JUMP JUMPDEST SWAP4 PUSH2 0x3F8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x2EB3 DUP2 DUP6 DUP6 PUSH2 0x20FD JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x2EC2 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x2ECE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2EDB SWAP4 PUSH2 0x1311 SWAP4 PUSH2 0x400C JUMP JUMPDEST PUSH2 0x2EE8 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2F30 JUMPI PUSH2 0x2F11 PUSH2 0x1A08 DUP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2F1C JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0x2BED JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2F93 PUSH2 0x2F8E DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2F36 JUMP JUMPDEST PUSH2 0x2FA6 PUSH2 0x2FA1 DUP3 PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH2 0x2FAF DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FBC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2FCB JUMPI PUSH2 0x3D2 SWAP2 POP PUSH2 0x4100 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FDB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x302C JUMP JUMPDEST ISZERO PUSH2 0x2FE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3061 SWAP1 PUSH2 0x3051 PUSH2 0x3040 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xF37F0CB2B2CC8066B1FA4738122412661CE5405CD9278F327D6905BB6D0E973F PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2E8A PUSH2 0x1A08 SWAP3 PUSH2 0x30A7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30BB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xE427E272B122E738FD867AC5DEFCEDB2BC9362341166A49D793D8B230F75670C SWAP2 PUSH2 0x5A6 DUP2 PUSH1 0x10 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3100 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP2 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x312F JUMPI POP POP PUSH2 0x3BC SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3161 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x318C JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3185 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xB304FE5DD2D3C45E8EC87C1DD1BD2B3A773B3135E84A7B9151F5FB4BF1A06D0E SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x31F2 PUSH4 0x1FFC9A7 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x3230 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3210 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x3222 PUSH4 0x5B5E139F PUSH2 0x31C5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x323F PUSH4 0x80AC58CD PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x3206 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x3278 PUSH2 0x3400 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3283 JUMPI POP POP JUMP JUMPDEST PUSH2 0x3290 PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST DUP3 LT PUSH2 0x329A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x32AD PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x32BC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x32D0 JUMPI PUSH2 0x32CB SWAP2 POP PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x329F JUMP JUMPDEST POP PUSH2 0x2F2C PUSH2 0x32DC PUSH2 0x325E JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3313 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0xB50 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x32F4 JUMP JUMPDEST SWAP2 PUSH2 0x3324 DUP3 PUSH2 0x2A95 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x33A8 JUMPI JUMPDEST PUSH2 0x3389 JUMPI JUMPDEST PUSH2 0x3351 PUSH2 0x2E8F PUSH2 0x3357 SWAP3 PUSH2 0x1C4C DUP7 PUSH1 0x0 PUSH2 0x334B DUP9 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x3382 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x3396 PUSH2 0x1311 CALLER DUP4 PUSH2 0x3094 JUMP JUMPDEST ISZERO PUSH2 0x3330 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST POP CALLER PUSH2 0x33BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C07 JUMP JUMPDEST EQ ISZERO PUSH2 0x332B JUMP JUMPDEST PUSH2 0x33CB PUSH2 0x2BED JUMP JUMPDEST CALLER SWAP1 PUSH2 0x33D6 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x33DE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x341E PUSH1 0xA PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3426 PUSH2 0x340A JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x3438 JUMPI PUSH2 0x3BC SWAP1 PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x345F PUSH2 0x344A JUMP JUMPDEST PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x346E PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x3474 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420636F6E7365637574697665206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 DUP3 ADD SWAP2 JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3520 DUP2 PUSH2 0x1C34 PUSH2 0x3508 PUSH1 0x0 PUSH2 0x34FA PUSH2 0x34DB SWAP7 PUSH2 0x41A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x351A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST EQ PUSH2 0x3486 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3539 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x3563 SWAP2 PUSH2 0x4253 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42EE JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP2 PUSH2 0x357A PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x359D DUP2 PUSH2 0x1C34 PUSH2 0x3596 PUSH2 0x357C SWAP5 DUP8 ADD SWAP1 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x357A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x35B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3607 RETURNDATASIZE PUSH2 0x2500 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x361E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652068616E646C696E67206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x366A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x36B1 SWAP1 PUSH2 0x36AD PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST PUSH2 0x36BB PUSH1 0x11 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x36C7 DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH2 0x36DA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x37B8 JUMPI PUSH2 0x3711 SWAP2 PUSH2 0x36EF DUP3 CALLVALUE LT ISZERO PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x1C07 PUSH2 0x2837 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x37A7 JUMPI JUMPDEST PUSH2 0x3747 JUMPI JUMPDEST CALLVALUE SUB SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x371B DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 GT PUSH2 0x3725 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BC SWAP3 PUSH2 0x3733 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 CALLER GAS CALL PUSH2 0x3741 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3663 JUMP JUMPDEST PUSH2 0x377F DUP4 DUP1 PUSH2 0x3756 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3761 PUSH2 0x7530 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x376C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 SUB SWAP4 CALL PUSH2 0x377A PUSH2 0x35F8 JUMP JUMPDEST POP ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x370C JUMPI PUSH2 0x370C DUP4 DUP1 PUSH2 0x3792 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP6 CALLER GAS CALL PUSH2 0x37A1 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3617 JUMP JUMPDEST POP PUSH2 0x37B1 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230207061796D656E74206E6F7420696D706C656D656E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x40 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3822 PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3831 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x383E DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP3 EQ PUSH2 0x397F JUMPI DUP1 DUP3 PUSH2 0x3899 PUSH2 0x388E PUSH2 0x385C PUSH2 0x38C3 SWAP7 PUSH1 0x1 EQ PUSH1 0xE1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3879 PUSH2 0x3868 DUP10 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3871 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x3ADB JUMP JUMPDEST OR DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST PUSH2 0x21FC DUP9 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x38E1 PUSH2 0x2112 PUSH1 0x1 SWAP4 PUSH2 0x212E PUSH2 0x38C9 PUSH2 0x38B0 PUSH2 0x3807 JUMP JUMPDEST PUSH2 0x38BA PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x3811 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x38D7 DUP5 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST SWAP2 PUSH2 0x46D DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x38E9 PUSH2 0x20E0 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x3973 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x3902 PUSH1 0x0 NOT PUSH2 0x16FE JUMP JUMPDEST GT PUSH2 0x3966 JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x391E JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x1978 JUMP JUMPDEST ISZERO PUSH2 0x3954 JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x390B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x3924 JUMPI DUP1 PUSH2 0x3910 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3994 PUSH2 0x3400 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x39A9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x39BA PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x39C7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x39EB JUMPI POP POP PUSH2 0x39E3 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST SWAP3 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x399C JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x39FB PUSH2 0x3D2 DUP5 PUSH2 0x16C2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x399C JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x3A18 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 PUSH2 0x3A22 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x3A4A JUMPI POP POP PUSH2 0x3A38 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST EQ PUSH2 0x3D2 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x3A0A JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3A6D SWAP2 PUSH2 0x3A65 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0x3A87 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xE8 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3AAF PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3AC1 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3B10 PUSH2 0x3B15 SWAP2 PUSH2 0x3D2 SWAP5 SWAP4 PUSH2 0x3AEF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3B0A PUSH2 0x3B05 PUSH2 0x3AFE PUSH2 0x3A94 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x3AB4 JUMP JUMPDEST SWAP2 PUSH2 0x43A1 JUMP JUMPDEST PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x3B22 PUSH2 0x43AC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B31 PUSH1 0x0 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B1A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP4 SWAP3 SWAP2 PUSH2 0x3B72 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 PUSH2 0x3B81 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST ISZERO PUSH2 0x3B8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3BDB DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BF5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x3C13 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3C4D JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3C42 JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C62 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3C9A JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3C86 JUMPI POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND PUSH2 0x165D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3C66 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x3BEC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3CDF PUSH2 0x3CCE PUSH2 0x4D0 DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x3B86 JUMP JUMPDEST PUSH2 0x3CEC PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3CFB PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x3D09 PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x3E71 JUMPI JUMPDEST PUSH2 0x3D1A SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x3D23 DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP4 GT DUP1 PUSH2 0x3E58 JUMPI JUMPDEST PUSH2 0x3D34 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x3D41 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x3E18 JUMPI JUMPDEST PUSH2 0x3D50 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D5C PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3E0A JUMPI JUMPDEST PUSH2 0x3D6A PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x3D75 DUP5 DUP5 PUSH2 0x3827 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3D83 PUSH2 0x16FE DUP5 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3D94 JUMPI JUMPDEST POP POP PUSH2 0x2031 SWAP1 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x3DA3 DUP3 SWAP7 SWAP3 SWAP6 SWAP4 SWAP6 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DFB JUMPI DUP1 PUSH2 0x3DBF PUSH2 0x1913 PUSH2 0x1913 PUSH2 0x3DD6 SWAP5 DUP10 PUSH2 0x3BD2 JUMP JUMPDEST PUSH2 0x3DCB PUSH2 0x16FE DUP11 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3DDB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x3DE8 DUP3 DUP9 PUSH2 0x3BD2 JUMP JUMPDEST MLOAD PUSH2 0x3DF6 PUSH1 0x13 DUP9 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST PUSH2 0x3CB2 JUMP JUMPDEST POP SWAP3 POP SWAP4 POP SWAP2 PUSH2 0x2031 CODESIZE PUSH2 0x3D89 JUMP JUMPDEST PUSH2 0x3E13 DUP4 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x3D62 JUMP JUMPDEST PUSH2 0x3E26 PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3B JUMPI JUMPDEST PUSH2 0x3E36 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x3D46 JUMP JUMPDEST POP PUSH2 0x3E36 PUSH2 0x3E47 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x3E50 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E2D JUMP JUMPDEST POP PUSH2 0x3D34 PUSH2 0x3E67 PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO SWAP1 POP PUSH2 0x3D2B JUMP JUMPDEST POP PUSH2 0x3D1A PUSH2 0x3E7D DUP6 MLOAD SWAP1 JUMP JUMPDEST DUP5 EQ SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3D2 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 PUSH2 0x3D2 SWAP4 SWAP2 PUSH2 0x3563 SWAP4 PUSH2 0x3EA5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x43F8 JUMP JUMPDEST PUSH2 0x3ECC PUSH2 0x3EC6 PUSH2 0x3EBB PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1C4C DUP5 PUSH1 0x9 PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3EF7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH2 0x3F06 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3F15 PUSH1 0x1 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xB JUMPDEST SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xC PUSH2 0x3F6E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3FEC SWAP1 JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4024 PUSH2 0x1C4C PUSH1 0x20 SWAP4 PUSH2 0x401E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xB50 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x4055 PUSH2 0x4039 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x404A DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3FC0 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x409A JUMPI JUMPDEST POP PUSH2 0x408B JUMPI PUSH2 0x406F PUSH2 0x35F8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x407E PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2EE8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x3222 PUSH2 0x31D8 PUSH2 0x2F2C SWAP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x40BD SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C4 JUMPI JUMPDEST PUSH2 0x40B5 DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3FAC JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x4062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x40AB JUMP JUMPDEST PUSH2 0x46D PUSH2 0x40E3 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x40DD DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x40FA SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 PUSH2 0x40CB JUMP JUMPDEST SWAP1 PUSH2 0x40CB JUMP JUMPDEST PUSH2 0x410C PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x4161 JUMPI PUSH2 0x4118 PUSH2 0x4584 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4127 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x4157 JUMPI PUSH2 0x3D2 PUSH2 0x1BC9 SWAP2 PUSH2 0x413F PUSH2 0x3D2 SWAP5 PUSH2 0x458E JUMP JUMPDEST SWAP1 PUSH2 0x4149 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x40EC JUMP JUMPDEST POP POP PUSH2 0x3D2 PUSH2 0x2517 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x80 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4180 PUSH2 0x416E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x41B2 PUSH2 0x3D2 SWAP2 PUSH2 0x2AA7 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x45F7 JUMP JUMPDEST PUSH2 0x41C0 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x41F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1C07 JUMP JUMPDEST EQ DUP1 PUSH2 0x422A JUMPI JUMPDEST ISZERO PUSH2 0x4222 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x46CF JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x41F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x425F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x426C PUSH2 0x16FE PUSH1 0x41 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x4296 JUMPI PUSH2 0x428F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x43F8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x42AE PUSH2 0x2993 PUSH2 0x42A9 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP3 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x42D6 JUMPI JUMP JUMPDEST PUSH2 0x42B6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x42CC JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x42FB DUP4 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4304 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x430E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4318 PUSH1 0x1 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4321 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4335 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH2 0x433F PUSH1 0x2 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4348 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4371 JUMPI POP PUSH2 0x1500 PUSH2 0x435B DUP4 SWAP3 PUSH2 0x42E5 JUMP JUMPDEST PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4384 PUSH2 0x437E PUSH1 0x3 PUSH2 0x42DB JUMP JUMPDEST SWAP2 PUSH2 0x42DB JUMP JUMPDEST EQ PUSH2 0x438D JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x3D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43B7 PUSH2 0x1311 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x43BD JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x19A2 PUSH2 0x3BC SWAP5 PUSH2 0x3FE5 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x43EE PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4403 DUP5 PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x442F PUSH2 0x16FE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x44AB JUMPI SWAP1 PUSH2 0x4451 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x4448 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x43CF JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x446E DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4497 JUMPI POP PUSH2 0x4491 DUP4 PUSH2 0x12DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x44A3 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x44B8 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x44DC PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x44F5 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4508 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x451A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x450D JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x44C9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x4549 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x452E JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x456B PUSH2 0x16FE PUSH2 0x3D2 PUSH2 0x44BF JUMP JUMPDEST EQ PUSH2 0x457A JUMPI POP PUSH2 0x3D2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH2 0x4552 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xD PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x45C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x45A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x45EA PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x4603 PUSH2 0x419B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x468B PUSH2 0x3B05 DUP4 SWAP7 PUSH2 0x4629 PUSH2 0x461C PUSH2 0x212E DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE JUMP JUMPDEST PUSH2 0x4656 PUSH2 0x4645 PUSH2 0x4640 PUSH2 0x463A PUSH2 0x45D3 JUMP JUMPDEST DUP5 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x45DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x467D PUSH2 0x4661 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x4674 PUSH2 0x466E PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ ISZERO PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x4685 PUSH2 0x3A94 JUMP JUMPDEST SWAP1 PUSH2 0x3A9E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x46C0 SWAP3 PUSH2 0x46B9 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x4754 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1BC9 PUSH2 0x4741 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x4695 JUMP JUMPDEST PUSH2 0x475F PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x4773 DUP5 PUSH2 0x2500 JUMP JUMPDEST SWAP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4782 DUP2 PUSH2 0x47A0 JUMP JUMPDEST SWAP1 PUSH2 0x4795 PUSH2 0x4790 PUSH1 0x20 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x4763 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x47AF PUSH2 0x47B4 SWAP2 PUSH2 0x2FCB PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x47BE PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST AND PUSH2 0x47C9 PUSH1 0x1F PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x47D2 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA5 TIMESTAMP PUSH11 0xD3E7A6342DD43281A96F77 SGT EXTCODESIZE 0xEF MSIZE GAS 0xAB GT DUP8 DUP13 0x24 KECCAK256 0xC6 0xCA 0xE8 AND CODESIZE CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1309:15902:15:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1309:15902:15;;;;;;;;-1:-1:-1;;1309:15902:15;;;:::o;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;1309:15902:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;:::o;:::-;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;1309:15902:15;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;1309:15902:15;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1309:15902:15;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;3615:750::-;;4165:40;4183:22;;4278:30;3615:750;;3800:18;;:::i;:::-;3820:3;;:::i;:::-;3842:12;;;1309:15902;-1:-1:-1;;;;;1309:15902:15;3755:11;;;;3768:13;;;;;3615:750;;:::i;:::-;3872:30;3888:14;;;;3872:30;;:::i;:::-;3913:32;3927:18;;;;3913:32;;:::i;:::-;3956:28;3968:16;;;;1309:15902;;;3968:16;3956:28;;:::i;:::-;3995:24;4005:14;;;;1309:15902;;;4005:14;3995:24;;:::i;:::-;4030:34;4045:19;;;;1309:15902;-1:-1:-1;;;;;1309:15902:15;;;4045:19;4030:34;;:::i;:::-;4075:42;4094:23;;;;1309:15902;-1:-1:-1;;;;;1309:15902:15;;;4094:23;4075:42;;:::i;:::-;4128:26;4139:15;;;;1309:15902;;;;;4139:15;4128:26;;:::i;:::-;4183:22;1309:15902;;;;;4183:22;4165:40;;:::i;:::-;4218:33;4247:4;4218:26;4233:10;4218:14;:26;:::i;:::-;:33;:::i;:::-;4278:30;:::i;:::-;4264:44;;4319:38;;3615:750::o;3428:431:10:-;;;3701:14;3428:431;;;3652:11;3428:431;;:::i;:::-;3501:45;3532:13;3501:45;;:::i;:::-;3493:53;;3567:51;3601:16;3567:51;;:::i;:::-;3556:62;;1309:15902:15;;3652:11:10;3642:22;;;1309:15902:15;;;3642:22:10;;1309:15902:15;;;;3642:22:10;;3628:36;;1309:15902:15;;3701:14:10;3691:25;;;1309:15902:15;;;3691:25:10;;3674:42;;3744:13;3727:30;;3792:23;;:::i;:::-;3767:48;;3839:13;3847:4;3839:13;:::i;:::-;3825:27;;3428:431::o;133:605:1:-;;;;;;:::i;1818:40:5:-;1857:1;;;:::i;2037:52::-;;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;615:2090:4:-;;;;;;:::i;1309:15902:15:-;;;;;;;;;;;:::i;1225:187:0:-;;;;;:::i;:::-;1297:1;1289:10;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;1273:26:0;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;-1:-1:-1;;;;;1309:15902:15;1322:31:0;;;1309:15902:15;1322:31:0;1309:15902:15;;;1322:31:0;;;;624:338:2;;;;;5350:17:17;;624:338:2;5327:13:17;;;;:::i;:::-;5350:17;;:::i;:::-;5393:15;;:::i;:::-;5377:31;;;;:::i;:::-;5423:35;;-1:-1:-1;;5423:35:17;1309:15902:15;;5423:35:17;;1309:15902:15;;5423:35:17;;5419:81;;5261:246::o;5419:81::-;-1:-1:-1;;;5468:31:17;:::i;1345:111:6:-;1390:66;;;:::i;2887:340::-;1309:15902:15;;3010:24:6;;3032:2;3010:24;:::i;:::-;;3006:215;;;3057:20;;;;:::i;3006:215::-;3108:38;:32;:46;:32;1309:15902:15;;3108:32:6;:38;:46;:::i;:::-;3175:35;3192:17;;:::i;2079:95:10:-;;;;;;;;;;;;;;;;;;;;;1309:15902:15;;2079:95:10;;;;1309:15902:15;;2079:95:10;;;;1309:15902:15;;2079:95:10;;;;1309:15902:15;;2079:95:10;;;-1:-1:-1;;;;;1309:15902:15;;;;4213:179:10;2079:95;4304:80;4326:11;;1309:15902:15;;;4326:11:10;4339:14;1309:15902:15;4378:4:10;4304:80;4370:13;4378:4;4370:13;:::i;:::-;1309:15902:15;;4304:80:10;;;;;;4355:13;;4304:80;;;:::i;:::-;;;;;;;;;:::i;:::-;4294:91;;;1309:15902:15;;;4294:91:10;;4213:179;:::o;1309:15902:15:-;;;;;;;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;1309:15902:15;;;;3052:40:0;;;;2912:187::o;5966:90:17:-;6041:8;6048:1;6041:8;:::i;49703:160::-;49766:91;;;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;1708:286:6:-;1816:10;1840:11;;1309:15902:15;;;1840:11:6;:16;;1854:2;1840:16;:::i;:::-;;1836:72;;1957:13;1941:45;1957:13;1974:11;1949:22;1957:13;1924:63;1957:13;;:::i;:::-;1949:22;:::i;:::-;1974:11;1309:15902:15;;;1974:11:6;1949:36;1941:45;:::i;1836:72::-;1879:18;;;1309:15902:15;;;;1879:18:6;-1:-1:-1;;;1879:18:6;;;;;;;;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":4936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":4534,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_array_uint256_dyn_calldatat_uint256t_bytes_calldata":{"entryPoint":3314,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_addresst_addresst_array_uint256_dyn_calldatat_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_addresst_addresst_uint256":{"entryPoint":1927,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_bytes":{"entryPoint":3839,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_addresst_addresst_uint256t_uint256t_uint256t_bytes_calldata":{"entryPoint":1648,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_addresst_bool":{"entryPoint":3535,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256":{"entryPoint":1325,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256t_array_string_calldata_dyn_calldata":{"entryPoint":1835,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_array_string_calldata_dyn_calldata":{"entryPoint":1787,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_uint256_dyn":{"entryPoint":9754,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":3765,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":2074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":16287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":2578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldata_ptr":{"entryPoint":1490,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":2061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":2118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":4949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_bytes4_fromMemory":{"entryPoint":16300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":1212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":1199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_string_calldata":{"entryPoint":1538,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint8":{"entryPoint":2385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":4430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage_ptr":{"entryPoint":17710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256_to_uint256_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_bytes":{"entryPoint":16320,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_address_uint256_rational_by":{"entryPoint":4978,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":9842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_calldata":{"entryPoint":10073,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_calldata_ptr":{"entryPoint":11296,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_calldata_to_array_uint256_dyn":{"entryPoint":10007,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":3001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes1":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes1_string_string_uint256_address_bytes32_array_uint256_dyn":{"entryPoint":3087,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address_address_bytes32_uint256_uint256":{"entryPoint":9917,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_bytes32_address_address_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes32_bytes32_bytes32_uint256_address":{"entryPoint":18069,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_uint8_bytes32_bytes32":{"entryPoint":17359,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_contract_IERC6551Registry":{"entryPoint":4712,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_array_uint256_dyn":{"entryPoint":9908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_array_uint256_dyn_calldata":{"entryPoint":11303,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_string_string":{"entryPoint":16620,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":4969,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":1137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":16587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":4298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage_ptr":{"entryPoint":17609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0b60":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_11f3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1462":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1cde":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_24f7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2ee0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4a4a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4f2d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_547b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5eb0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6a6f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7065":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7886":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7886b67779636208dda007f165e1c1c6ffed6f82ccef1d211de2c16b3230f35e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_854c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8d1b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_940e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9913":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9d5f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bb6e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d58d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ef60":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_efc8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IERC6551Registry":{"entryPoint":4721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_11f3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_24f7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_2ee0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_4a4a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_547b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_5eb0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_6a6f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_7065":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_8d1b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_9d5f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_efc8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":6543,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_string_calldata":{"entryPoint":7871,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":9418,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":11146,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":18275,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_TokenOwnership":{"entryPoint":16760,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":3704,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_string_dyn":{"entryPoint":9371,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":9472,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_BatchTransferPermit_storage_ptr":{"entryPoint":6409,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_TokenOwnership":{"entryPoint":16750,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_TransferPermit_storage_ptr":{"entryPoint":9744,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":9347,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3724,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_nextElement_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_array_uint256_dyn_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_string_calldata_dyn_calldata":{"entryPoint":7924,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":9642,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":7505,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":10818,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11074,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5478,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":1232,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_RecoverError":{"entryPoint":17115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint24":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":5447,"id":null,"parameterSlots":2,"returnSlots":0},"constant_BATCH_TRANSFER_TYPEHASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_ADDRESS":{"entryPoint":8416,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_ADDRESS_DATA_ENTRY":{"entryPoint":10953,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_BURNED":{"entryPoint":12894,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_NEXT_INITIALIZED":{"entryPoint":8432,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_EXTRA_DATA":{"entryPoint":14996,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_NUMBER_MINTED":{"entryPoint":14343,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_START_TIMESTAMP":{"entryPoint":17875,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ENTERED":{"entryPoint":13322,"id":null,"parameterSlots":0,"returnSlots":1},"constant_FALLBACK_SENTINEL":{"entryPoint":17599,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_BATCH_SIZE":{"entryPoint":6313,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":13386,"id":null,"parameterSlots":0,"returnSlots":1},"constant_SAFE_BATCH_SIZE":{"entryPoint":6323,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TRANSFER_PERMIT_TYPEHASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TYPE_HASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":2896,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_ERC721A_IERC721Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_uint256_dyn_calldata_to_array_uint256_dyn":{"entryPoint":9831,"id":null,"parameterSlots":2,"returnSlots":1},"convert_array_bytes_calldata_to_bytes":{"entryPoint":6423,"id":null,"parameterSlots":2,"returnSlots":1},"convert_array_string_calldata_to_bytes_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"convert_array_string_storage_ptr_to_string":{"entryPoint":17746,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":4808,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":17125,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_100_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1461501637330902918203684832716283019655932542975_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_160_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_18446744073709551615_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_20_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_232_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_255_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_30000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_31_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_33540519_by_1_to_bytes4":{"entryPoint":12741,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_65_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":6076,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":6063,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_3d72_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_c5d2_to_bytes":{"entryPoint":9495,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":2887,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2865,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":8394,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint24_to_uint256":{"entryPoint":15049,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint24":{"entryPoint":15028,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":4827,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint64":{"entryPoint":17885,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":16377,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4440,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_ptr":{"entryPoint":17720,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_calldata_to_string":{"entryPoint":5555,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":15340,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory":{"entryPoint":10003,"id":null,"parameterSlots":3,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3753,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":9485,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1046,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":12881,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_BATCH_TRANSFER_TYPEHASH":{"entryPoint":2319,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_TBAImplementation":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_TBARegistry":{"entryPoint":4737,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_TRANSFER_PERMIT_TYPEHASH":{"entryPoint":4155,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addEscrowWallet":{"entryPoint":4131,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addMinter":{"entryPoint":3511,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":1360,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_availableSupply":{"entryPoint":2838,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":2717,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_canMint":{"entryPoint":3942,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_contractURI":{"entryPoint":4507,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_eip712Domain":{"entryPoint":3235,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_escrowTransfer":{"entryPoint":2517,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_escrowTransferBatch":{"entryPoint":1756,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_escrowTransferWithSignature":{"entryPoint":3428,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":1244,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMintPrice":{"entryPoint":2551,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getNonce":{"entryPoint":2201,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTBA":{"entryPoint":1463,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":4569,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isEscrowWallet":{"entryPoint":3616,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isPublicMinting":{"entryPoint":2174,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxSupply":{"entryPoint":4104,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":2695,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintFee":{"entryPoint":1419,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintFeeRecipient":{"entryPoint":2811,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintFeeToken":{"entryPoint":4038,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintOpen":{"entryPoint":2026,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint_6818":{"entryPoint":1901,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint_6845":{"entryPoint":2276,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_minters":{"entryPoint":4661,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1154,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nonces":{"entryPoint":2950,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":3287,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":2668,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":2977,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":2641,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_removeEscrowWallet":{"entryPoint":2138,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_removeMinter":{"entryPoint":2228,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2744,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":3919,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_9408":{"entryPoint":2299,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":3570,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBaseURI":{"entryPoint":2616,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setContractURI":{"entryPoint":3459,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMintFee":{"entryPoint":4597,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMintOpen":{"entryPoint":4688,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setPublicMinting":{"entryPoint":2094,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setTokenURI":{"entryPoint":1596,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":985,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":3484,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":4065,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1621,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1968,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":4621,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":2252,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4256,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":2768,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":1988,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":1385,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_0_bool":{"entryPoint":5968,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":4850,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":7385,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_bool":{"entryPoint":7751,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":5819,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":13816,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3665,"id":null,"parameterSlots":2,"returnSlots":0},"fun_EIP712Name":{"entryPoint":16199,"id":2736,"parameterSlots":0,"returnSlots":1},"fun_EIP712Version":{"entryPoint":16244,"id":2748,"parameterSlots":0,"returnSlots":1},"fun__approve":{"entryPoint":13082,"id":10115,"parameterSlots":3,"returnSlots":0},"fun__mint":{"entryPoint":14375,"id":9661,"parameterSlots":2,"returnSlots":0},"fun__pause":{"entryPoint":16191,"id":345,"parameterSlots":0,"returnSlots":0},"fun__transferOwnership":{"entryPoint":16043,"id":146,"parameterSlots":1,"returnSlots":0},"fun__unpause":{"entryPoint":15195,"id":361,"parameterSlots":0,"returnSlots":0},"fun_addEscrowWallet":{"entryPoint":12427,"id":7830,"parameterSlots":1,"returnSlots":0},"fun_addEscrowWallet_inner":{"entryPoint":12332,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addMinter":{"entryPoint":11843,"id":7898,"parameterSlots":1,"returnSlots":0},"fun_addMinter_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":4924,"id":9050,"parameterSlots":2,"returnSlots":0},"fun_availableSupply":{"entryPoint":11087,"id":8027,"parameterSlots":0,"returnSlots":1},"fun_balanceOf":{"entryPoint":10970,"id":8589,"parameterSlots":1,"returnSlots":1},"fun_baseURI":{"entryPoint":17796,"id":7983,"parameterSlots":0,"returnSlots":1},"fun_batchTransferFrom":{"entryPoint":13676,"id":7596,"parameterSlots":4,"returnSlots":0},"fun_buildDomainSeparator":{"entryPoint":18127,"id":2666,"parameterSlots":0,"returnSlots":1},"fun_byteLength":{"entryPoint":18336,"id":549,"parameterSlots":1,"returnSlots":1},"fun_canMint":{"entryPoint":12021,"id":8004,"parameterSlots":1,"returnSlots":1},"fun_checkContractOnERC721Received":{"entryPoint":16396,"id":9530,"parameterSlots":4,"returnSlots":1},"fun_checkOwner":{"entryPoint":13251,"id":84,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":16823,"id":2645,"parameterSlots":0,"returnSlots":1},"fun_eip712Domain":{"entryPoint":11175,"id":2724,"parameterSlots":0,"returnSlots":7},"fun_escrowTransfer":{"entryPoint":10802,"id":7223,"parameterSlots":8,"returnSlots":0},"fun_escrowTransferBatch":{"entryPoint":7319,"id":7563,"parameterSlots":7,"returnSlots":0},"fun_escrowTransferBatch_inner":{"entryPoint":6566,"id":null,"parameterSlots":7,"returnSlots":0},"fun_escrowTransferWithSignature":{"entryPoint":11709,"id":7403,"parameterSlots":7,"returnSlots":0},"fun_escrowTransferWithSignature_inner":{"entryPoint":11314,"id":null,"parameterSlots":7,"returnSlots":0},"fun_escrowTransfer_inner":{"entryPoint":10090,"id":null,"parameterSlots":8,"returnSlots":0},"fun_exists":{"entryPoint":12907,"id":9173,"parameterSlots":1,"returnSlots":1},"fun_extraData":{"entryPoint":17313,"id":10340,"parameterSlots":3,"returnSlots":1},"fun_getApproved":{"entryPoint":4869,"id":9075,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":14934,"id":9216,"parameterSlots":1,"returnSlots":2},"fun_getMintPrice":{"entryPoint":10837,"id":8016,"parameterSlots":1,"returnSlots":1},"fun_getNonce":{"entryPoint":9214,"id":8039,"parameterSlots":1,"returnSlots":1},"fun_getTBA":{"entryPoint":5074,"id":6692,"parameterSlots":1,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":13613,"id":2682,"parameterSlots":1,"returnSlots":1},"fun_isApprovedForAll":{"entryPoint":12436,"id":9119,"parameterSlots":2,"returnSlots":1},"fun_isSenderApprovedOrOwner":{"entryPoint":14963,"id":9197,"parameterSlots":3,"returnSlots":1},"fun_mint":{"entryPoint":8380,"id":6818,"parameterSlots":4,"returnSlots":1},"fun_mintWithURIs":{"entryPoint":16006,"id":7021,"parameterSlots":3,"returnSlots":1},"fun_mintWithURIs_inner":{"entryPoint":15548,"id":null,"parameterSlots":4,"returnSlots":1},"fun_mint_6845":{"entryPoint":9453,"id":6845,"parameterSlots":2,"returnSlots":1},"fun_mint_6870":{"entryPoint":10930,"id":6870,"parameterSlots":1,"returnSlots":1},"fun_mint_inner":{"entryPoint":7952,"id":null,"parameterSlots":5,"returnSlots":1},"fun_msgSenderERC721A":{"entryPoint":null,"id":10383,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":4817,"id":8712,"parameterSlots":0,"returnSlots":1},"fun_nextExtraData":{"entryPoint":15067,"id":10373,"parameterSlots":3,"returnSlots":1},"fun_nextInitializedFlag":{"entryPoint":null,"id":9034,"parameterSlots":1,"returnSlots":1},"fun_nextTokenId":{"entryPoint":14333,"id":8484,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":13396,"id":419,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":13332,"id":411,"parameterSlots":0,"returnSlots":0},"fun_owner":{"entryPoint":11245,"id":67,"parameterSlots":0,"returnSlots":1},"fun_ownerOf":{"entryPoint":10901,"id":8796,"parameterSlots":1,"returnSlots":1},"fun_ownershipOf":{"entryPoint":16803,"id":8812,"parameterSlots":1,"returnSlots":1},"fun_packOwnershipData":{"entryPoint":null,"id":9024,"parameterSlots":2,"returnSlots":1},"fun_packedOwnershipExists":{"entryPoint":null,"id":9183,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":14732,"id":8958,"parameterSlots":1,"returnSlots":1},"fun_pause":{"entryPoint":11133,"id":7965,"parameterSlots":0,"returnSlots":0},"fun_pause_7965_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":10891,"id":304,"parameterSlots":0,"returnSlots":1},"fun_processMintFee":{"entryPoint":13983,"id":7741,"parameterSlots":1,"returnSlots":0},"fun_recover":{"entryPoint":16019,"id":2472,"parameterSlots":4,"returnSlots":1},"fun_recover_2278":{"entryPoint":13654,"id":2278,"parameterSlots":2,"returnSlots":1},"fun_removeEscrowWallet":{"entryPoint":9205,"id":7848,"parameterSlots":1,"returnSlots":0},"fun_removeEscrowWallet_inner":{"entryPoint":9132,"id":null,"parameterSlots":1,"returnSlots":0},"fun_removeMinter":{"entryPoint":9311,"id":7916,"parameterSlots":1,"returnSlots":0},"fun_removeMinter_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_renounceOwnership":{"entryPoint":11066,"id":98,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":13414,"id":316,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":17324,"id":329,"parameterSlots":0,"returnSlots":0},"fun_revert":{"entryPoint":13035,"id":10401,"parameterSlots":1,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":9503,"id":9408,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom_9448":{"entryPoint":11940,"id":9448,"parameterSlots":4,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":8475,"parameterSlots":0,"returnSlots":1},"fun_setApprovalForAll":{"entryPoint":11852,"id":9101,"parameterSlots":2,"returnSlots":0},"fun_setBaseURI":{"entryPoint":10881,"id":7944,"parameterSlots":2,"returnSlots":0},"fun_setBaseURI_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setContractURI":{"entryPoint":11749,"id":7956,"parameterSlots":2,"returnSlots":0},"fun_setContractURI_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setMintFee":{"entryPoint":12523,"id":7932,"parameterSlots":1,"returnSlots":0},"fun_setMintFee_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setMintOpen":{"entryPoint":12732,"id":7864,"parameterSlots":1,"returnSlots":0},"fun_setMintOpen_inner":{"entryPoint":12684,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setPublicMinting":{"entryPoint":9074,"id":7880,"parameterSlots":1,"returnSlots":0},"fun_setPublicMinting_inner":{"entryPoint":9021,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setTokenURI":{"entryPoint":5808,"id":7802,"parameterSlots":3,"returnSlots":0},"fun_setTokenURI_inner":{"entryPoint":5770,"id":null,"parameterSlots":3,"returnSlots":0},"fun_startTokenId":{"entryPoint":13312,"id":8462,"parameterSlots":0,"returnSlots":1},"fun_supportsInterface":{"entryPoint":12773,"id":8702,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_8054":{"entryPoint":4799,"id":8054,"parameterSlots":1,"returnSlots":1},"fun_symbol":{"entryPoint":11759,"id":8722,"parameterSlots":0,"returnSlots":1},"fun_throwError":{"entryPoint":17134,"id":2521,"parameterSlots":2,"returnSlots":0},"fun_toString":{"entryPoint":17806,"id":10393,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback":{"entryPoint":17755,"id":616,"parameterSlots":2,"returnSlots":1},"fun_toString_517":{"entryPoint":18297,"id":517,"parameterSlots":1,"returnSlots":1},"fun_toTypedDataHash":{"entryPoint":null,"id":2834,"parameterSlots":2,"returnSlots":1},"fun_tokenURI":{"entryPoint":16640,"id":8767,"parameterSlots":1,"returnSlots":1},"fun_tokenURI_7779":{"entryPoint":12162,"id":7779,"parameterSlots":1,"returnSlots":1},"fun_totalSupply":{"entryPoint":5836,"id":8515,"parameterSlots":0,"returnSlots":1},"fun_transferFrom":{"entryPoint":8445,"id":9389,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":12620,"id":126,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":16979,"id":2248,"parameterSlots":2,"returnSlots":3},"fun_tryRecover_2436":{"entryPoint":17400,"id":2436,"parameterSlots":4,"returnSlots":3},"fun_unpackedOwnership":{"entryPoint":17911,"id":9012,"parameterSlots":1,"returnSlots":1},"fun_unpause":{"entryPoint":9339,"id":7974,"parameterSlots":0,"returnSlots":0},"fun_unpause_7974_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_verifyConsecutiveOwnership":{"entryPoint":13522,"id":7635,"parameterSlots":3,"returnSlots":0},"getter_fun_BATCH_TRANSFER_TYPEHASH":{"entryPoint":null,"id":6462,"parameterSlots":0,"returnSlots":1},"getter_fun_TBAImplementation":{"entryPoint":null,"id":6492,"parameterSlots":0,"returnSlots":1},"getter_fun_TBARegistry":{"entryPoint":null,"id":6490,"parameterSlots":0,"returnSlots":1},"getter_fun_TRANSFER_PERMIT_TYPEHASH":{"entryPoint":null,"id":6457,"parameterSlots":0,"returnSlots":1},"getter_fun_contractURI":{"entryPoint":4495,"id":6496,"parameterSlots":0,"returnSlots":1},"getter_fun_isEscrowWallet":{"entryPoint":3595,"id":6520,"parameterSlots":1,"returnSlots":1},"getter_fun_isPublicMinting":{"entryPoint":2162,"id":6508,"parameterSlots":0,"returnSlots":1},"getter_fun_maxSupply":{"entryPoint":4092,"id":6498,"parameterSlots":0,"returnSlots":1},"getter_fun_mintFee":{"entryPoint":1407,"id":6500,"parameterSlots":0,"returnSlots":1},"getter_fun_mintFeeRecipient":{"entryPoint":2799,"id":6504,"parameterSlots":0,"returnSlots":1},"getter_fun_mintFeeToken":{"entryPoint":4026,"id":6502,"parameterSlots":0,"returnSlots":1},"getter_fun_mintOpen":{"entryPoint":2014,"id":6506,"parameterSlots":0,"returnSlots":1},"getter_fun_minters":{"entryPoint":4645,"id":6516,"parameterSlots":1,"returnSlots":1},"getter_fun_nonces":{"entryPoint":2929,"id":6524,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":2905,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_TokenApprovalRef_storage_of_uint256":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_string_dyn":{"entryPoint":15314,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":7334,"id":395,"parameterSlots":5,"returnSlots":1},"modifier_nonReentrant_6880":{"entryPoint":15203,"id":395,"parameterSlots":4,"returnSlots":1},"modifier_nonReentrant_7039":{"entryPoint":9523,"id":395,"parameterSlots":8,"returnSlots":0},"modifier_nonReentrant_7237":{"entryPoint":11255,"id":395,"parameterSlots":7,"returnSlots":0},"modifier_nonReentrant_7418":{"entryPoint":5914,"id":395,"parameterSlots":7,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":11037,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_104":{"entryPoint":12532,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7786":{"entryPoint":5280,"id":58,"parameterSlots":3,"returnSlots":0},"modifier_onlyOwner_7807":{"entryPoint":12239,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7835":{"entryPoint":9083,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7853":{"entryPoint":12629,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7869":{"entryPoint":8966,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7885":{"entryPoint":11769,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7903":{"entryPoint":9237,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7921":{"entryPoint":12463,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_7937":{"entryPoint":10856,"id":58,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner_7949":{"entryPoint":11724,"id":58,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner_7959":{"entryPoint":11114,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_7968":{"entryPoint":9320,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_whenNotPaused":{"entryPoint":null,"id":287,"parameterSlots":8,"returnSlots":0},"modifier_whenNotPaused_333":{"entryPoint":16126,"id":287,"parameterSlots":0,"returnSlots":0},"modifier_whenNotPaused_6704":{"entryPoint":7364,"id":287,"parameterSlots":5,"returnSlots":1},"modifier_whenNotPaused_6882":{"entryPoint":null,"id":287,"parameterSlots":4,"returnSlots":1},"modifier_whenNotPaused_7239":{"entryPoint":null,"id":287,"parameterSlots":7,"returnSlots":0},"modifier_whenNotPaused_7420":{"entryPoint":5945,"id":287,"parameterSlots":7,"returnSlots":0},"modifier_whenPaused":{"entryPoint":15130,"id":295,"parameterSlots":0,"returnSlots":0},"panic_error_0x00":{"entryPoint":4212,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":7483,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17078,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4234,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7849,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3643,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_uint256":{"entryPoint":9658,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":6419,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_dynamic_split_string":{"entryPoint":4473,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":2003,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":1396,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_0_bool":{"entryPoint":5977,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":7763,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":7397,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":5826,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12256,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0b60":{"entryPoint":7523,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_11f3":{"entryPoint":7599,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1cde":{"entryPoint":12086,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_24f7":{"entryPoint":13847,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2ee0":{"entryPoint":15238,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4a4a":{"entryPoint":5987,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4f2d":{"entryPoint":6434,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_547b":{"entryPoint":5299,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5eb0":{"entryPoint":7773,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6a6f":{"entryPoint":9566,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7065":{"entryPoint":6333,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7886":{"entryPoint":13446,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_854c":{"entryPoint":6161,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8d1b":{"entryPoint":13740,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_940e":{"entryPoint":13923,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9913":{"entryPoint":6237,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb6e":{"entryPoint":6085,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d58d":{"entryPoint":9668,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ef60":{"entryPoint":7407,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_efc8":{"entryPoint":7675,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":919,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":5062,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_168":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_left_uint256_uint256":{"entryPoint":14353,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_168_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint256":{"entryPoint":15006,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":5435,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_11f304981a7eae43f6192b4239145225dd9d29aa23417cacf10ec6f275197f7a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24f73c583e35b3dd82e831bbf21e485de8ff1cc27407a5600270aa597e94f9bd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a4aa6d9456b1d69fbd0a48e8dd5d27a963dbc4068e9a04b427b24be3c1f01b9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6a6f98e7a1ffb791da69252865c9f1ade19e677b977d0d5024fe33790eb8a782":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7886b67779636208dda007f165e1c1c6ffed6f82ccef1d211de2c16b3230f35e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d5fa66c94196735c67f2446266211f0802e00e6d76b3bdf432fc375279b468a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ef60000e998bbe8b677379eebdb015391638bf3a044f640bb6ddeb597db5806f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":13044,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":5380,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":6510,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":9100,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_20":{"entryPoint":12646,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_21":{"entryPoint":8983,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_0_bool_to_bool":{"entryPoint":9109,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":13059,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":12661,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_calldata_to_string":{"entryPoint":5759,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":15538,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":8998,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":6520,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":5406,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":17100,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":1297,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":2053,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":1193,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint8":{"entryPoint":2376,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_mul_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint24":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_string_dyn":{"entryPoint":9389,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_uint256":{"entryPoint":11141,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_TokenOwnership":{"entryPoint":16795,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"2543":[{"length":32,"start":16896}],"2545":[{"length":32,"start":16941}],"2547":[{"length":32,"start":16845}],"2549":[{"length":32,"start":18198}],"2551":[{"length":32,"start":18165}],"2554":[{"length":32,"start":16204}],"2557":[{"length":32,"start":16249}],"6490":[{"length":32,"start":4762},{"length":32,"start":5093}],"6492":[{"length":32,"start":3990},{"length":32,"start":5131}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461039257806306fdde031461038d578063081812fc14610388578063095ea7b31461038357806313966db51461037e57806315d9756e14610379578063162094c41461037457806318160ddd1461036f5780631d027aad1461036a57806322df11d81461036557806323b872dd1461036057806324bbd0491461035b578063254a473714610356578063280007bb146103515780632c6739151461034c5780632d0335ab146103475780633092afd5146103425780633f4ba83a1461033d57806340c10f191461033857806342842e0e146103335780634c06baba1461032e57806352b9122614610329578063559e775b1461032457806355f804b31461031f5780635c975abb1461031a5780636352211e146103155780636a6278421461031057806370a082311461030b578063715018a614610306578063765b0c36146103015780637ecc2b56146102fc5780637ecebe00146102f75780638456cb59146102f257806384b0196e146102ed5780638da5cb5b146102e8578063916f9ab4146102e3578063938e3d7b146102de57806395d89b41146102d9578063983b2d56146102d4578063a22cb465146102cf578063afc0381d146102ca578063b88d4fde146102c5578063c2ba4744146102c0578063c3324b27146102bb578063c4c69033146102b6578063c87b56dd146102b1578063d5abeb01146102ac578063e31c6732146102a7578063e59ba924146102a2578063e8a3d4851461029d578063e985e9c514610298578063eddd0d9c14610293578063f2fde38b1461028e578063f46eccc414610289578063f8004d31146102845763fa5c33750361039757611281565b611250565b611235565b61120d565b6111f5565b6111d9565b61119b565b61103b565b611023565b611008565b610fe1565b610fc6565b610f81565b610f66565b610f4f565b610e20565b610df2565b610db7565b610d9c565b610d83565b610d64565b610cd7565b610ca3565b610ba1565b610b86565b610b16565b610afb565b610ab8565b610a9d565b610a87565b610a6c565b610a51565b610a38565b6109f7565b6109d5565b61090f565b6108fb565b6108e4565b6108cc565b6108b4565b610899565b61087e565b61085a565b61082e565b6107ea565b6107b0565b61076d565b6106dc565b610655565b61063c565b6105b7565b61058b565b610550565b6104dc565b610482565b6103d9565b600080fd5b6001600160e01b031981165b0361039757565b905035906103bc8261039c565b565b90602082820312610397576103d2916103af565b90565b9052565b34610397576104076103f46103ef3660046103be565b6112bf565b6040515b91829182901515815260200190565b0390f35b600091031261039757565b60005b8381106104295750506000910152565b8181015183820152602001610419565b61045a61046360209361046d9361044e815190565b80835293849260200190565b95869101610416565b601f01601f191690565b0190565b60208082526103d292910190610439565b346103975761049236600461040b565b61040761049d6112d1565b60405191829182610471565b806103a8565b905035906103bc826104a9565b90602082820312610397576103d2916104af565b6001600160a01b031690565b34610397576104076104f76104f23660046104bc565b611305565b604051918291826001600160a01b03909116815260200190565b6001600160a01b0381166103a8565b905035906103bc82610511565b9190604083820312610397576103d29060206105498286610520565b94016104af565b61056461055e36600461052d565b9061133c565b604051005b6103d2916008021c81565b906103d29154610569565b6103d260006010610574565b346103975761059b36600461040b565b6104076105a661057f565b6040515b9182918290815260200190565b34610397576104076104f76105cd3660046104bc565b6113d2565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926001830284011161039757565b9190916040818403126103975761061983826104af565b92602082013567ffffffffffffffff81116103975761063892016105d2565b9091565b346103975761056461064f366004610602565b916116b0565b346103975761066536600461040b565b6104076105a66116cc565b9160c083830312610397576106858284610520565b926106938360208301610520565b926106a181604084016104af565b926106af82606085016104af565b926106bd83608083016104af565b9260a082013567ffffffffffffffff81116103975761063892016105d2565b34610397576105646106ef366004610670565b95949094939193611c97565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926020830284011161039757565b91606083830312610397576107408284610520565b9261074e83602083016104af565b92604082013567ffffffffffffffff81116103975761063892016106fb565b6104076105a661077e36600461072b565b929190916120bc565b9091606082840312610397576103d26107a08484610520565b9360406105498260208701610520565b6105646107be366004610787565b916120fd565b6103d2916008021c5b60ff1690565b906103d291546107c4565b6103d2601460126107d3565b34610397576107fa36600461040b565b6104076103f46107de565b8015156103a8565b905035906103bc82610805565b90602082820312610397576103d29161080d565b346103975761056461084136600461081a565b612372565b90602082820312610397576103d291610520565b346103975761056461086d366004610846565b6123f5565b6103d2601560126107d3565b346103975761088e36600461040b565b6104076103f4610872565b34610397576104076105a66108af366004610846565b6123fe565b34610397576105646108c7366004610846565b61245f565b34610397576108dc36600461040b565b61056461247b565b6104076105a66108f536600461052d565b906124ed565b610564610909366004610787565b9161251f565b346103975761091f36600461040b565b6104077fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca096105a6565b60ff81166103a8565b905035906103bc82610948565b91909160e081840312610397576109758382610520565b926109838160208401610520565b92604083013567ffffffffffffffff811161039757826109a49185016106fb565b9290936109b482606083016104af565b926103d26109c58460808501610951565b9360c06105498260a087016104af565b34610397576105646109e836600461095e565b96959095949194939293612a32565b34610397576104076105a6610a0d3660046104bc565b612a55565b9060208282031261039757813567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610a4b366004610a12565b90612a81565b3461039757610a6136600461040b565b6104076103f4612a8b565b34610397576104076104f7610a823660046104bc565b612a95565b6104076105a6610a98366004610846565b612ab2565b34610397576104076105a6610ab3366004610846565b612ada565b3461039757610ac836600461040b565b610564612b3a565b6103d2916008021c6001600160a01b031690565b906103d29154610ad0565b6103d260006012610ae4565b3461039757610b0b36600461040b565b6104076104f7610aef565b3461039757610b2636600461040b565b6104076105a6612b4f565b6104d06103d26103d2926001600160a01b031690565b6103d290610b31565b6103d290610b47565b90610b6390610b50565b600052602052604060002090565b6000610b816103d2926016610b59565b610574565b34610397576104076105a6610b9c366004610846565b610b71565b3461039757610bb136600461040b565b610564612b7d565b90610bd9610bd2610bc8845190565b8084529260200190565b9260200190565b9060005b818110610bea5750505090565b909192610c07610c006001928651815260200190565b9460200190565b929101610bdd565b93959194610c7f610c77610c9695610c69610c8f956103d29c9a610c5c60e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c0152610439565b9088820360408a0152610439565b976060870152565b6001600160a01b03166080850152565b60a0830152565b60c0818403910152610bb9565b3461039757610cb336600461040b565b610407610cbe612ba7565b93610cce97959793919360405190565b97889788610c0f565b3461039757610ce736600461040b565b6104076104f7612bed565b60a08183031261039757610d068282610520565b92610d148360208401610520565b92604083013567ffffffffffffffff81116103975781610d359185016106fb565b929093610d4583606083016104af565b92608082013567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610d77366004610cf2565b95949094939193612dbd565b3461039757610564610d96366004610a12565b90612de5565b3461039757610dac36600461040b565b61040761049d612def565b3461039757610564610dca366004610846565b612e43565b9190604083820312610397576103d2906020610deb8286610520565b940161080d565b3461039757610564610e05366004610dcf565b90612e4c565b6000610e1b6103d2926015610b59565b6107d3565b34610397576104076103f4610e36366004610846565b610e0b565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e7357604052565b610e3b565b906103bc610e8560405190565b9283610e51565b67ffffffffffffffff8111610e7357602090601f01601f19160190565b90826000939282370152565b90929192610eca610ec582610e8c565b610e78565b9381855281830111610397576103bc916020850190610ea9565b9080601f83011215610397578160206103d293359101610eb5565b9060808282031261039757610f148183610520565b92610f228260208501610520565b92610f3083604083016104af565b92606082013567ffffffffffffffff8111610397576103d29201610ee4565b610564610f5d366004610eff565b92919091612ea4565b34610397576104076103f4610f7c366004610846565b612ef5565b3461039757610f9136600461040b565b6104077f00000000000000000000000000000000000000000000000000000000000000006104f7565b6103d260006011610ae4565b3461039757610fd636600461040b565b6104076104f7610fba565b346103975761040761049d610ff73660046104bc565b612f82565b6103d26000600f610574565b346103975761101836600461040b565b6104076105a6610ffc565b3461039757610564611036366004610846565b61308b565b346103975761104b36600461040b565b6104077f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16105a6565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156110c0575b60208310146110bb57565b61108a565b91607f16916110b0565b805460009392916110e76110dd836110a0565b8085529360200190565b9160018116908115611139575060011461110057505050565b6111139192939450600052602060002090565b916000925b8184106111255750500190565b805484840152602090930192600101611118565b92949550505060ff1916825215156020020190565b906103d2916110ca565b906103bc6111729261116960405190565b9384809261114e565b0383610e51565b9060001061118a576103d290611158565b611074565b6103d26000600e611179565b34610397576111ab36600461040b565b61040761049d61118f565b9190604083820312610397576103d29060206111d28286610520565b9401610520565b34610397576104076103f46111ef3660046111b6565b90613094565b34610397576105646112083660046104bc565b6130eb565b3461039757610564611220366004610846565b61314c565b6000610e1b6103d2926014610b59565b34610397576104076103f461124b366004610846565b611225565b346103975761056461126336600461081a565b6131bc565b6103d590610b50565b6020810192916103bc9190611268565b346103975761129136600461040b565b604051806104077f000000000000000000000000000000000000000000000000000000000000000082611271565b6103d2906131e5565b6103d290611158565b6103d260026112c8565b6103d26103d26103d29290565b90610b63906112db565b6103d2906104d0565b6103d290546112f2565b6113156113118261326b565b1590565b61132f5760006113296103d29260066112e8565b016112fb565b6333d1c03960e21b6132eb565b6103bc9160019161331a565b905051906103bc82610511565b90602082820312610397576103d291611348565b6103d5906112db565b909594926103bc946113b86113bf926113a86080966113a160a088019c60008901906001600160a01b03169052565b6020870152565b6001600160a01b03166040850152565b6060830152565b0190611369565b6040513d6000823e3d90fd5b60206000916113df600090565b506114097f0000000000000000000000000000000000000000000000000000000000000000610b50565b7f000000000000000000000000000000000000000000000000000000000000000061143330610b50565b9061145c61144060405190565b96879586948594632f4de29b60e11b8652469060048701611372565b03915afa90811561149b57600091611472575090565b6103d2915060203d602011611494575b61148c8183610e51565b810190611355565b503d611482565b6113c6565b906103bc92916114ae6133c3565b61168a565b156114ba57565b60405162461bcd60e51b815260206004820152601460248201527f546f6b656e20646f6573206e6f74206578697374000000000000000000000000604482015280606481015b0390fd5b9160001960089290920291821b911b5b9181191691161790565b919061152f6103d2611537936112db565b908354611504565b9055565b6103bc9160009161151e565b818110611552575050565b80611560600060019361153b565b01611547565b9190601f811161157557505050565b6115876103bc93600052602060002090565b906020601f8401819004830193106115a9575b6020601f909101040190611547565b909150819061159a565b919067ffffffffffffffff8211610e73576115d8826115d285546110a0565b85611566565b600090601f831160011461161357611537929160009183611608575b5050600019600883021c1916906002021790565b0135905038806115f4565b90601f1983169161162985600052602060002090565b92825b8181106116675750916002939185600196941061164d575b50505002019055565b0135600019601f84166008021c19165b9055388080611644565b9293602060018192878601358155019501930161162c565b906103bc92916115b3565b906116ab6103bc93926116a461169f8261326b565b6114b3565b60136112e8565b61167f565b906103bc92916114a0565b6103d29081565b6103d290546116bb565b6116f36116eb6116dc60006116c2565b6116e660016116c2565b900390565b6116e6613400565b908160001980611702565b9190565b0361170a5750565b6103d291925061046d60086116c2565b9061173196959493929161172c613414565b611739565b6103bc613454565b906103bc96959493929161174b613466565b6119a6565b6103d2906107cd565b6103d29054611750565b1561176a57565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420617574686f72697a656420657363726f772077616c6c6574000000006044820152606490fd5b6104d06103d26103d29290565b6103d2906117af565b156117cc57565b60405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f2061646472657373006044820152606490fd5b1561181857565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f776e6572206164647265737300000000000000000000006044820152606490fd5b1561186457565b60405162461bcd60e51b815260206004820152601160248201527f5369676e617475726520657870697265640000000000000000000000000000006044820152606490fd5b6103d260646112db565b6103d260326112db565b156118c457565b60405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e74697479000000000000000000000000000000006044820152606490fd5b6103d260c0610e78565b5190565b6103d2913691610eb5565b1561192957565b60405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606490fd5b9060001990611514565b906119886103d2611537926112db565b825461196e565b9081526040810192916103bc9160200152565b0152565b611c1a611bf98597611bf3869a611bed611ae3611bd589611aff611c519b9e611af87f670fe7cb14f68cf31d6e2012cadd6f5325904b6d23d2cadeb3607c96d8b1fec89f611c579f8e91611aea611af192611a12611a0d611a08336015610b59565b611759565b611763565b60009a8b99611a57611a45611a268d6117bc565b6104d06001600160a01b0382166001600160a01b0386165b14156117c5565b6001600160a01b0389165b1415611811565b611a64895b42111561185d565b611a6e60146112db565b851115611c8757611a98611a806118b3565b611a898d6112db565b87119081611c7c575b506118bd565b611aa38584896134d2565b611ad3611ab9611ab4896016610b59565b6116c2565b97611ac2611909565b9e8f01906001600160a01b03169052565b6001600160a01b031660208d0152565b60408b0152565b6060890152565b6080870152565b60a0850152565b8201517fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca09906001600160a01b031690611bc9611b4560208601516001600160a01b031690565b94611b51604082015190565b90611b5d606082015190565b611b7360a0611b6d608085015190565b93015190565b92611b7d60405190565b9889976020890197889081526001600160a01b03909116602082015260e081019695949093909290916001600160a01b031660408501526060840152608083015260a082015260c00152565b90810382520382610e51565b611be7611be0825190565b9160200190565b2061352d565b92611917565b90613556565b611c146001600160a01b0384165b916001600160a01b031690565b14611922565b611c40611c28826016610b59565b611c3a611c34826116c2565b60010190565b90611978565b611c4c8688878461356c565b610b50565b92610b50565b92611c6133610b50565b94611c77611c6e60405190565b9283928361198f565b0390a4565b905086111538611a92565b611a98611c926118a9565b611a80565b906103bc96959493929161171a565b90611cbb94939291611cb6613414565b611cc4565b906103bc613454565b906103d294939291611cd4613466565b611f10565b6103d29060a01c6107cd565b6103d29054611cd9565b15611cf657565b60405162461bcd60e51b815260206004820152601160248201527f4d696e74696e6720697320636c6f7365640000000000000000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211611d5e57565b611d3b565b15611d6a57565b60405162461bcd60e51b815260206004820152601360248201527f4d617820737570706c79206578636565646564000000000000000000000000006044820152606490fd5b15611db657565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e55524920636f756e74206d69736d617463680000000000000000006044820152606490fd5b15611e0257565b60405162461bcd60e51b815260206004820152600f60248201527f426174636820746f6f206c6172676500000000000000000000000000000000006044820152606490fd5b6103d29060a81c6107cd565b6103d29054611e47565b15611e6457565b60405162461bcd60e51b815260206004820152601660248201527f4e6f7420617574686f72697a656420746f206d696e74000000000000000000006044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b903590601e193682900301821215610397570180359067ffffffffffffffff8211610397576020019136829003831361039757565b90821015611f0b5760206106389202810190611ebf565b611ea9565b509293909190611f28611f236012611ce5565b611cef565b611f53611f3c84611f376116cc565b611d51565b611f4c6116fe6103d2600f6116c2565b1115611d63565b611f5e838614611daf565b611f74611f6c6103d26118a9565b841115611dfb565b611f816113116012611e53565b61207c575b611f9060106116c2565b90600091611fa16116fe60006112db565b1161206e575b611faf6137fd565b93611fba8187613827565b611fc460006112db565b818110156120205780611fe6611fe1610638611ffd948c8a611ef4565b905090565b611ff26116fe876112db565b116120025760010190565b611fc4565b611c34612010828b89611ef4565b906116ab60138b86015b906112e8565b509394915094506120319150610b50565b7f59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b261206861205e856112db565b936105aa60405190565b0390a390565b6120778461369f565b611fa7565b61208a611a08336014610b59565b801561209f575b61209a90611e5d565b611f86565b5061209a6120ab612bed565b6120b433611c07565b149050612091565b6103d2939291906000611ca6565b6103d26103d26103d2926001600160a01b031690565b6103d26001600160a01b036112db565b6103d2600160e11b6112db565b61211761211261210c8561398c565b92610b47565b6120ca565b9261213361212e6121266120e0565b8096166117af565b610b47565b9361214061212e846117af565b6121526001600160a01b038716611c07565b036122fa5761216082613a56565b949033612171611311828a8a613a73565b6122cc575b506121126116fe959493926122239261224f986122c2575b506121b061219d8a6005610b59565b611c3a6121a9826116c2565b6000190190565b6121be611c28826005610b59565b6121c66120f0565b956121eb6121d582848d613adb565b8817836001600160a01b0316904260a01b171790565b906122016004926121fc89856112e8565b611978565b6000976122166122108a6112db565b91831690565b14612263575b5050610b47565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a46112db565b1461225657565b633a954ecd60e21b6132eb565b61227561227060016112db565b880190565b91612283611ab484836112e8565b61228f6116fe8b6112db565b1461229b575b5061221c565b6122a76103d28a6116c2565b8314612295576122ba926121fc916112e8565b388080612295565b600090553861218e565b6113116122de91899796959497613094565b6122ed57389491929394612176565b632ce44b5f60e11b6132eb565b62a1148160e81b6132eb565b6103bc906123126133c3565b61233d565b9060ff60a81b9060a81b611514565b906123366103d261153792151590565b8254612317565b61236d7f545ecf6fbcc235df5fdfb676e1992025683c8097a8bd6e5a7c57b31f1c1b29d4916103f4816012612326565b0390a1565b6103bc90612306565b6103bc906123876133c3565b6123ac565b9060ff90611514565b906123a56103d261153792151590565b825461238c565b6123c590611c4c60006123c0836015610b59565b612395565b7f566163b435df210872aafff6e352033418c951e1538d138dfbccd622c4b022d06123ef60405190565b600090a2565b6103bc9061237b565b611ab46103d29161240d600090565b506016610b59565b6103bc906124216133c3565b61243590611c4c60006123c0836014610b59565b7fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666926123ef60405190565b6103bc90612415565b6124706133c3565b6103bc6103bc613b5b565b6103bc612468565b67ffffffffffffffff8111610e735760208091020190565b906124a8610ec583612483565b918252565b60005b8281106124bc57505050565b6060828201526020016124b0565b906103bc6124e06124da8461249b565b93612483565b601f1901602084016124ad565b6103d2916124fa816124ca565b91613e86565b906124a8610ec583610e8c565b6103d26000612500565b6103d261250d565b90916103bc9261252d612517565b92612ea4565b9061173197969594939291612546613414565b906103bc97969594939291612559613466565b61276a565b1561256557565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642062617463682073697a6500000000000000000000000000006044820152606490fd5b9190811015611f0b576020020190565b356103d2816104a9565b156125cb57565b60405162461bcd60e51b815260206004820152600f60248201527f4e6f7420746f6b656e206f776e657200000000000000000000000000000000006044820152606490fd5b6103d260a0610e78565b9092919261262a610ec582612483565b938185526020808601920283019281841161039757915b83831061264e5750505050565b6020809161265c84866104af565b815201920191612641565b6103d291369161261a565b90612685610bd2612681845190565b9290565b9060005b8181106126965750505090565b9091926126ac610c006001928651815260200190565b929101612689565b6103d291612672565b919461270c6119a29298979561270560a0966126f56103bc9a6126e560c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b9037565b81835290916020015b917f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610397578291602061046d9202938491612713565b60208082526103d293910191612717565b959092949396979197612784611a0d611a08336015610b59565b6000916127c16127b2612796856117bc565b6104d06001600160a01b0382166001600160a01b038a16611a3e565b6001600160a01b038a16611a50565b6127ca89611a5c565b86956127d5846112db565b871180612a19575b6127e69061255e565b6127ef846112db565b8b8882101561284f5790611c348b612844611c07612837610a828f87818a61283261169f61282d61282861284a9f6128289888916125aa565b6125ba565b61326b565b6125aa565b926001600160a01b031690565b146125c4565b6127ef565b6129739391509161296e866128c28c9b9e61270c8f8d9f6128bb6129989e9f916129859d9b6128b6612705946128a661288c611ab4896016610b59565b97612895612610565b9c8d01906001600160a01b03169052565b6001600160a01b031660208b0152565b612667565b6040870152565b611bd57f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16128f98a8401516001600160a01b031690565b90611bc961291160208601516001600160a01b031690565b94604081015161293361292360405190565b8092611bc96020830191826126b4565b61293e611be0825190565b20906129566080612950606084015190565b92015190565b9161296060405190565b9788966020880196876126bd565b613e93565b611c146001600160a01b038916611c07565b612993611c28876016610b59565b6112db565b855b8110156129c7576129c081611c346129b961282861299a95888d6125aa565b878961251f565b9050612998565b50949350916129f9611c517fb29502ff9b08df34ae7101bcaedae6124591b6f81d9ab5a4ba2bf20641fd2de292610b50565b92612a0333610b50565b94611c77612a1060405190565b92839283612759565b506127e6612a286103d26118b3565b88111590506127dd565b906103bc97969594939291612533565b81810292918115918404141715611d5e57565b6103d290612a6360106116c2565b612a42565b906103bc91612a756133c3565b906103bc91600d61167f565b906103bc91612a68565b6103d26009611ce5565b61212e612aad6103d292612aa7600090565b5061398c565b6117af565b6103d290612ac060016112db565b6124fa816124ca565b6103d267ffffffffffffffff6112db565b612ae76104d060006117bc565b6001600160a01b03821614612b1057611ab4612b04916005610b59565b612b0c612ac9565b1690565b6323d3ad8160e21b6132eb565b612b256133c3565b6103bc6103bc612b3560006117bc565b613eab565b6103bc612b1d565b91908203918211611d5e57565b6103d2612b5c600f6116c2565b612b646116cc565b90612b42565b612b726133c3565b6103bc6103bc613f3f565b6103bc612b6a565b369037565b906103bc612b9a6124da8461249b565b601f190160208401612b85565b612baf613f47565b90612bb8613f74565b90612bc230610b50565b612bcc60006112db565b612bde612bd960006112db565b612b8a565b600f60f81b9594934693929190565b6103d260096112fb565b90611731969594939291612c09613414565b906103bc969594939291612c1b613466565b612c32565b9091612720565b90916103d292612c20565b9496909193959296612c4b611a0d611a08336015610b59565b600090612c79611a45612c5d846117bc565b6104d06001600160a01b0382166001600160a01b038916611a3e565b612c8288611a5c565b8894612c8d836112db565b861180612da4575b612c9e9061255e565b612ca7836112db565b86811015612cee5780611c34612cd7610a826128288f95868e61283261169f61282d61282886612ce99d866125aa565b6128446001600160a01b038d16611c07565b612ca7565b5061298591611bf361297392611bed88611bd58c9f9b9e612d7c9a9b9d8f91611bc9908f612d58611bc991612d407f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c190565b95612d4a60405190565b938492602084019283612c27565b612d63611be0825190565b20612d72611ab4866016610b59565b9061296060405190565b855b8110156129c757612d9d81611c346129b9612828612d7e95888d6125aa565b9050612d7c565b50612c9e612db36103d26118b3565b8711159050612c95565b906103bc969594939291612bf7565b906103bc91612dd96133c3565b906103bc91600e61167f565b906103bc91612dcc565b6103d260036112c8565b6103bc90612e056133c3565b612e1990611c4c60016123c0836014610b59565b7f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f66123ef60405190565b6103bc90612df9565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31612e9f612e95612e8f33611c4c876123c088612e8a856007610b59565b610b59565b93610b50565b936103f860405190565b0390a3565b91929092612eb38185856120fd565b833b612ec26116fe60006112db565b03612ece575b50505050565b612edb936113119361400c565b612ee85738808080612ec8565b6368d2bf6b60e11b6132eb565b612eff6012611e53565b612f3057612f11611a08826014610b59565b908115612f1c575090565b9050612f2c611c07612837612bed565b1490565b50600190565b15612f3d57565b60405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152606490fd5b612f93612f8e8261326b565b612f36565b612fa6612fa18260136112e8565b6112c8565b90612faf825190565b612fbc6116fe60006112db565b11612fcb576103d29150614100565b5090565b6103bc90612fdb6133c3565b61302c565b15612fe757565b60405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606490fd5b613061906130516130406104d060006117bc565b6001600160a01b0383161415612fe0565b611c4c60016123c0836015610b59565b7ff37f0cb2b2cc8066b1fa4738122412661ce5405cd9278f327d6905bb6d0e973f6123ef60405190565b6103bc90612fcf565b6103d291612e8a611a08926130a7600090565b506007610b59565b6103bc906130bb6133c3565b61236d7fe427e272b122e738fd867ac5defcedb2bc9362341166a49d793d8b230f75670c916105a6816010611978565b6103bc906130af565b6103bc906131006133c3565b600061310b816117bc565b6001600160a01b0381166001600160a01b0384161461312f5750506103bc90613eab565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6103bc906130f4565b6103bc906131616133c3565b61318c565b9060ff60a01b9060a01b611514565b906131856103d261153792151590565b8254613166565b61236d7fb304fe5dd2d3c45e8ec87c1dd1bd2b3a773b3135e84a7b9151f5fb4bf1a06d0e916103f4816012613175565b6103bc90613155565b6131d86131d26103d29290565b60e01b90565b6001600160e01b03191690565b6131f26301ffc9a76131c5565b6001600160e01b0319821614908115613230575b8115613210575090565b9050612f2c613222635b5e139f6131c5565b916001600160e01b03191690565b905061323f6380ac58cd6131c5565b6001600160e01b031982161490613206565b8015611d5e576000190190565b6103d2600160e01b6112db565b9060009182613278613400565b821015613283575050565b6132906103d260006116c2565b821061329a575050565b509091505b6132ad611ab48260046112e8565b90816132bc6116fe60006112db565b036132d0576132cb9150613251565b61329f565b50612f2c6132dc61325e565b6132e660006112db565b921690565b60005260046000fd5b906001600160a01b0390611514565b906133136103d261153792610b50565b82546132f4565b9161332482612a95565b90806133a8575b613389575b613351612e8f61335792611c4c86600061334b8860066112e8565b01613303565b916112db565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561338260405190565b8080611c77565b6133966113113383613094565b15613330576367d9dca160e11b6132eb565b50336133bc6001600160a01b038316611c07565b141561332b565b6133cb612bed565b33906133d682611c07565b036133de5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b6103d260006112db565b6103d260026112db565b61341e600a6116c2565b61342661340a565b908114613438576103bc90600a611978565b633ee5aeb560e01b6000908152600490fd5b6103d260016112db565b6103bc61345f61344a565b600a611978565b61346e612a8b565b61347457565b63d93c066560e01b6000908152600490fd5b1561348d57565b60405162461bcd60e51b815260206004820152601560248201527f4e6f7420636f6e7365637574697665206f776e657200000000000000000000006044820152606490fd5b9290918201915b825b8110156135275761352081611c3461350860006134fa6134db966141a3565b01516001600160a01b031690565b61351a6001600160a01b038916611c07565b14613486565b90506134d9565b50915050565b6103d2906135396141b7565b6042916040519161190160f01b8352600283015260228201522090565b6103d29161356391614253565b909291926142ee565b9391909161357a60006112db565b845b8110156135a45761359d81611c3461359661357c94870190565b878a61251f565b905061357a565b509350505050565b156135b357565b60405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152606490fd5b3d15613612576136073d612500565b903d6000602084013e565b606090565b1561361e57565b60405162461bcd60e51b815260206004820152601360248201527f4665652068616e646c696e67206661696c6564000000000000000000000000006044820152606490fd5b1561366a57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b6136b1906136ad60106116c2565b0290565b6136bb60116112fb565b6000916136c7836117bc565b916136da6001600160a01b038416611c07565b036137b857613711916136ef823410156135ac565b6136ff611c0761283760126112fb565b1415806137a7575b613747575b340390565b9061371b816112db565b8211613725575050565b806103bc9261373360405190565b600091335af16137416135f8565b50613663565b61377f838061375660126112fb565b6137616175306112db565b908561376c60405190565b9182800393f161377a6135f8565b501590565b1561370c5761370c838061379260405190565b60009085335af16137a16135f8565b50613617565b506137b1836112db565b8111613707565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230207061796d656e74206e6f7420696d706c656d656e7465640000006044820152606490fd5b6103d260006116c2565b6103d260406112db565b6103d2906138226116fe6103d29490565b901b90565b61383160006116c2565b9160009161383e836112db565b821461397f57808261389961388e61385c6138c39660011460e11b90565b613879613868896117bc565b6138718a6112db565b978891613adb565b17846001600160a01b0316904260a01b171790565b6121fc8860046112e8565b6138e161211260019361212e6138c96138b0613807565b6138ba60016112db565b998a9182613811565b17860290565b611c3a6138d7846005610b59565b9161046d836116c2565b6138e96120e0565b16928314613973578501949285036139026000196116fe565b11613966576001815b61391e575b50505050906103bc91611978565b15613954575b83908383867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4908161390b565b91600101918483036139245780613910565b6340b23f1d60e11b6132eb565b622e076360e81b6132eb565b63b562e8dd60e01b6132eb565b613994613400565b8110156139a9575b636f96cda160e11b6132eb565b6004906139ba611ab48260046112e8565b916000916139c7836112db565b84146139eb5750506139e36122106139dd61325e565b926112db565b0361399c5790565b909192506139fb6103d2846116c2565b81101561399c57909190600019015b91613a18611ab484836112e8565b92613a22836112db565b8414613a4a575050613a386122106139dd61325e565b146103d257636f96cda160e11b6132eb565b90925060001901613a0a565b6103d2613a6d91613a65600090565b5060066112e8565b90815490565b91906001600160a01b038091613a87600090565b5016911691821491141790565b6103d260e86112db565b6103d290613aaf6116fe6103d29490565b901c90565b613ac16103d26103d29290565b62ffffff1690565b6103d26103d26103d29262ffffff1690565b613b10613b15916103d29493613aef600090565b50613b0a613b05613afe613a94565b8097613a9e565b613ab4565b916143a1565b613ac9565b613811565b613b226143ac565b6103bc613b3160006009613175565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61236d336104f7565b6103bc613b1a565b90611cbb939291613b72613414565b906103d2939291613b81613466565b613cbc565b15613b8d57565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606490fd5b90613bdb825190565b811015611f0b576020809102010190565b90613bf5815190565b9067ffffffffffffffff8211610e7357613c13826115d285546110a0565b602090601f8311600114613c4d57611537929160009183613c42575050600019600883021c1916906002021790565b0151905038806115f4565b601f19831691613c6285600052602060002090565b9260005b818110613c9a57509160029391856001969410613c865750505002019055565b01516000196008601f8516021c191661165d565b91936020600181928787015181550195019201613c66565b906103bc91613bec565b506000613cdf613cce6104d0836117bc565b6001600160a01b0384161415613b86565b613cec611f236012611ce5565b613cfb611f3c84611f376116cc565b8351613d096116fe836112db565b148015613e71575b613d1a90611daf565b613d23816112db565b831180613e58575b613d34906118bd565b613d416113116012611e53565b613e18575b613d5060106116c2565b613d5c6116fe836112db565b11613e0a575b613d6a6137fd565b93613d758484613827565b8051613d836116fe846112db565b11613d94575b505061203190610b50565b92613da38296929593956112db565b81811015613dfb5780613dbf611913611913613dd69489613bd2565b613dcb6116fe8a6112db565b11613ddb5760010190565b613da3565b611c34613de88288613bd2565b51613df6601388850161201a565b613cb2565b50925093509161203138613d89565b613e138361369f565b613d62565b613e26611a08336014610b59565b8015613e3b575b613e3690611e5d565b613d46565b50613e36613e47612bed565b613e5033611c07565b149050613e2d565b50613d34613e676103d26118a9565b8411159050613d2b565b50613d1a613e7d855190565b84149050613d11565b6103d29291906000613b63565b916103d2939161356393613ea5600090565b506143f8565b613ecc613ec6613ebb60096112fb565b611c4c846009613303565b91610b50565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0613ef760405190565b8080612e9f565b613f06613466565b6103bc613f1560016009613175565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861236d336104f7565b6103bc613efe565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600b5b9061455b565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600c613f6e565b905051906103bc8261039c565b90602082820312610397576103d291613f9f565b6001600160a01b039182168152911660208201526103d2926080820192909190613fec905b6040830152565b6060818403910152610439565b6131d86131d26103d29263ffffffff1690565b91614024611c4c60209361401e600090565b50610b50565b63150b7a029360003361405561403960405190565b9889968795869461404a8c60e01b90565b865260048601613fc0565b03925af16000928161409a575b5061408b5761406f6135f8565b805161407e6116fe60006112db565b14612ee857805190602001fd5b6132226131d8612f2c92613ff9565b6140bd91935060203d6020116140c4575b6140b58183610e51565b810190613fac565b9138614062565b503d6140ab565b61046d6140e3926020926140dd815190565b94859290565b93849101610416565b6140fa906103d293926140cb565b906140cb565b61410c6113118261326b565b61416157614118614584565b80516141276116fe60006112db565b14614157576103d2611bc99161413f6103d29461458e565b9061414960405190565b9384926020840192836140ec565b50506103d2612517565b630a14c4b560e41b6132eb565b6103d26080610e78565b61418061416e565b60008082526020820181905260408201819052606082015290565b6103d2614178565b6141b26103d291612aa761419b565b6145f7565b6141c030610b50565b6141f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611c07565b148061422a575b15614222577f000000000000000000000000000000000000000000000000000000000000000090565b6103d26146cf565b507f000000000000000000000000000000000000000000000000000000000000000046146141f9565b9060009161425f825190565b61426c6116fe60416112db565b036142965761428f92506020820151906060604084015193015160001a906143f8565b9192909190565b5090506142ae6129936142a960006117bc565b925190565b909160029190565b634e487b7160e01b600052602160045260246000fd5b600411156142d657565b6142b6565b906103bc826142cc565b6103d2906112db565b906000916142fb836142db565b614304826142db565b0361430e57505050565b61431860016142db565b614321826142db565b036143355763f645eedf60e01b8352600483fd5b61433f60026142db565b614348826142db565b03614371575061150061435b83926142e5565b63fce698f760e01b835260048301526024820190565b61438461437e60036142db565b916142db565b1461438d575050565b6335e2f38360e21b82526004820152602490fd5b5050506103d2600090565b6143b7611311612a8b565b6143bd57565b638dfc202b60e01b6000908152600490fd5b6119a26103bc94613fe56060949897956143ee608086019a6000870152565b60ff166020850152565b9091614403846142e5565b61442f6116fe7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06112db565b116144ab57906144516020946000949361444860405190565b948594856143cf565b838052039060015afa1561149b5760005160009161446e836117bc565b6001600160a01b0381166001600160a01b038416146144975750614491836112db565b91929190565b9150916144a3906112db565b909160019190565b5050506144b860006117bc565b9160039190565b6103d260ff6112db565b805460009392916144dc6110dd836110a0565b916001811690811561113957506001146144f557505050565b6145089192939450600052602060002090565b916000925b81841061451a5750500190565b80548484015260209093019260010161450d565b906103d2916144c9565b906103bc6111729261454960405190565b9384809261452e565b6103d290614538565b908161456b6116fe6103d26144bf565b1461457a57506103d290614779565b6103d29150614552565b6103d2600d6112c8565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156145c5576001600a916145a9565b809350602091039203918252565b6103d260a06112db565b6145ea6103d26103d29290565b67ffffffffffffffff1690565b906103bc61460361419b565b606061468b613b05839661462961461c61212e836117af565b6001600160a01b03168652565b61465661464561464061463a6145d3565b84613a9e565b6145dd565b67ffffffffffffffff166020870152565b61467d61466161325e565b61467461466e60006112db565b91841690565b14156040870152565b614685613a94565b90613a9e565b62ffffff16910152565b909594926103bc946113b86146c0926146b96080966113a160a088019c6000890152565b6040850152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6147547f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611bc961474130610b50565b6040519586946020860194469286614695565b61475f611be0825190565b2090565b906103bc612b9a61477384612500565b93610e8c565b614782816147a0565b9061479561479060206112db565b614763565b918252602082015290565b6147af6147b491612fcb600090565b6142e5565b6147be60ff6112db565b166147c9601f6112db565b81116147d25790565b632cd44ac360e21b6000908152600490fdfea26469706673582212200fa5426ad3e7a6342dd43281a96f77133bef595aab11878c2420c6cae816383964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x13966DB5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x15D9756E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x1D027AAD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x22DF11D8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x254A4737 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x280007BB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x2C673915 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x4C06BABA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52B91226 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x559E775B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x765B0C36 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7ECC2B56 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x916F9AB4 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAFC0381D EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC2BA4744 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3324B27 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC4C69033 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xE31C6732 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE59BA924 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF8004D31 EQ PUSH2 0x284 JUMPI PUSH4 0xFA5C3375 SUB PUSH2 0x397 JUMPI PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x120D JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x119B JUMP JUMPDEST PUSH2 0x103B JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x397 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x429 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x45A PUSH2 0x463 PUSH1 0x20 SWAP4 PUSH2 0x46D SWAP4 PUSH2 0x44E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x439 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x471 JUMP JUMPDEST DUP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x549 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x564 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x10 PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x619 DUP4 DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x602 JUMP JUMPDEST SWAP2 PUSH2 0x16B0 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x16CC JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x685 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x693 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x6A1 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6AF DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6BD DUP4 PUSH1 0x80 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x740 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x74E DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20BC JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 PUSH2 0x7A0 DUP5 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x549 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x14 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x7FA CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x86D CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x15 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x872 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8AF CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23FE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x245F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x564 PUSH2 0x909 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x251F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x91F CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x975 DUP4 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x983 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 PUSH2 0x9A4 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x9B4 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x3D2 PUSH2 0x9C5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x549 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x4AF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x9E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2A32 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA0D CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A55 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xA4B CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2A81 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xA61 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x2A8B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xA82 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2AB2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2ADA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xAC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x12 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB26 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 PUSH2 0x3D2 SWAP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xB9C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 PUSH2 0xBD9 PUSH2 0xBD2 PUSH2 0xBC8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBEA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC07 PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0xC7F PUSH2 0xC77 PUSH2 0xC96 SWAP6 PUSH2 0xC69 PUSH2 0xC8F SWAP6 PUSH2 0x3D2 SWAP13 SWAP11 PUSH2 0xC5C PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0xCBE PUSH2 0x2BA7 JUMP JUMPDEST SWAP4 PUSH2 0xCCE SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0xC0F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xD06 DUP3 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xD14 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP2 PUSH2 0xD35 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0xD45 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD77 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF2 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2DBD JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD96 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xDAC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x2DEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xDCA CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2E43 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0xDEB DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xE05 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCF JUMP JUMPDEST SWAP1 PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xE36 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE73 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0xE85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xECA PUSH2 0xEC5 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x397 JUMPI PUSH2 0x3BC SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 PUSH1 0x20 PUSH2 0x3D2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xF14 DUP2 DUP4 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF22 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF30 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP3 ADD PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xF5D CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xF7C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2EF5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xF91 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x0 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x11 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xFD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xFBA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x49D PUSH2 0xFF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xF PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1018 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xFFC JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1036 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x308B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x104B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x5A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x10C0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10BB JUMPI JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10B0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x10E7 PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1100 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1125 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x1169 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x114E JUMP JUMPDEST SUB DUP4 PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 LT PUSH2 0x118A JUMPI PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xE PUSH2 0x1179 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x11AB CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x118F JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x11D2 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x11EF CALLDATASIZE PUSH1 0x4 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1208 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1220 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x124B CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1263 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x31BC JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1291 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x407 PUSH32 0x0 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x31E5 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x132F JUMPI PUSH1 0x0 PUSH2 0x1329 PUSH2 0x3D2 SWAP3 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x12FB JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x331A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x13BF SWAP3 PUSH2 0x13A8 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP2 PUSH2 0x13DF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1409 PUSH32 0x0 PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1433 ADDRESS PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH2 0x145C PUSH2 0x1440 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x2F4DE29B PUSH1 0xE1 SHL DUP7 MSTORE CHAINID SWAP1 PUSH1 0x4 DUP8 ADD PUSH2 0x1372 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1472 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1494 JUMPI JUMPDEST PUSH2 0x148C DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x13C6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14AE PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST ISZERO PUSH2 0x14BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152F PUSH2 0x3D2 PUSH2 0x1537 SWAP4 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x151E JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1552 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1560 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x153B JUMP JUMPDEST ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1575 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x3BC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x15A9 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x15D8 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST DUP6 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1629 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1667 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x164D JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1644 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x162C JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH2 0x3BC SWAP4 SWAP3 PUSH2 0x16A4 PUSH2 0x169F DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x16EB PUSH2 0x16DC PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x1 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16E6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x1702 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x170A JUMPI POP JUMP JUMPDEST PUSH2 0x3D2 SWAP2 SWAP3 POP PUSH2 0x46D PUSH1 0x8 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x172C PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x174B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1750 JUMP JUMPDEST ISZERO PUSH2 0x176A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420657363726F772077616C6C657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST ISZERO PUSH2 0x17CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x64 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x32 PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x18C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207175616E7469747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xC0 PUSH2 0xE78 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xEB5 JUMP JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x1988 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0x12DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x196E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x1C1A PUSH2 0x1BF9 DUP6 SWAP8 PUSH2 0x1BF3 DUP7 SWAP11 PUSH2 0x1BED PUSH2 0x1AE3 PUSH2 0x1BD5 DUP10 PUSH2 0x1AFF PUSH2 0x1C51 SWAP12 SWAP15 PUSH2 0x1AF8 PUSH32 0x670FE7CB14F68CF31D6E2012CADD6F5325904B6D23D2CADEB3607C96D8B1FEC8 SWAP16 PUSH2 0x1C57 SWAP16 DUP15 SWAP2 PUSH2 0x1AEA PUSH2 0x1AF1 SWAP3 PUSH2 0x1A12 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x1A57 PUSH2 0x1A45 PUSH2 0x1A26 DUP14 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND JUMPDEST EQ ISZERO PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST EQ ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x1A64 DUP10 JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1A6E PUSH1 0x14 PUSH2 0x12DB JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1A98 PUSH2 0x1A80 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A89 DUP14 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT SWAP1 DUP2 PUSH2 0x1C7C JUMPI JUMPDEST POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x1AA3 DUP6 DUP5 DUP10 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x1AB9 PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST SWAP8 PUSH2 0x1AC2 PUSH2 0x1909 JUMP JUMPDEST SWAP15 DUP16 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST DUP3 ADD MLOAD PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1BC9 PUSH2 0x1B45 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x1B51 PUSH1 0x40 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B5D PUSH1 0x60 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B73 PUSH1 0xA0 PUSH2 0x1B6D PUSH1 0x80 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1B7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD SWAP8 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x352D JUMP JUMPDEST SWAP3 PUSH2 0x1917 JUMP JUMPDEST SWAP1 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1C40 PUSH2 0x1C28 DUP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x1C34 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1C4C DUP7 DUP9 DUP8 DUP5 PUSH2 0x356C JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x1C61 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x1C6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x198F JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 POP DUP7 GT ISZERO CODESIZE PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1A98 PUSH2 0x1C92 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CB6 PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CD4 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA0 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST ISZERO PUSH2 0x1CF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720697320636C6F736564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST ISZERO PUSH2 0x1D6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C7920657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E55524920636F756E74206D69736D61746368000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E02 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA8 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1E47 JUMP JUMPDEST ISZERO PUSH2 0x1E64 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x397 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 PUSH2 0x638 SWAP3 MUL DUP2 ADD SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 SWAP1 PUSH2 0x1F28 PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1CEF JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1F4C PUSH2 0x16FE PUSH2 0x3D2 PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST GT ISZERO PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F6C PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x207C JUMPI JUMPDEST PUSH2 0x1F90 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1FA1 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x206E JUMPI JUMPDEST PUSH2 0x1FAF PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x1FBA DUP2 DUP8 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 PUSH2 0x1FE6 PUSH2 0x1FE1 PUSH2 0x638 PUSH2 0x1FFD SWAP5 DUP13 DUP11 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FF2 PUSH2 0x16FE DUP8 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2002 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x2010 DUP3 DUP12 DUP10 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH1 0x13 DUP12 DUP7 ADD JUMPDEST SWAP1 PUSH2 0x12E8 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP2 POP SWAP5 POP PUSH2 0x2031 SWAP2 POP PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x59F9FB6D992D2AEE0ED338BB4C504A17FD3F67AE91A3135BC2EF947E308C41B2 PUSH2 0x2068 PUSH2 0x205E DUP6 PUSH2 0x12DB JUMP JUMPDEST SWAP4 PUSH2 0x5AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x2077 DUP5 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x208A PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x209F JUMPI JUMPDEST PUSH2 0x209A SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x1F86 JUMP JUMPDEST POP PUSH2 0x209A PUSH2 0x20AB PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x20B4 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2112 PUSH2 0x210C DUP6 PUSH2 0x398C JUMP JUMPDEST SWAP3 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x20CA JUMP JUMPDEST SWAP3 PUSH2 0x2133 PUSH2 0x212E PUSH2 0x2126 PUSH2 0x20E0 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP4 PUSH2 0x2140 PUSH2 0x212E DUP5 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x2152 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x22FA JUMPI PUSH2 0x2160 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x2171 PUSH2 0x1311 DUP3 DUP11 DUP11 PUSH2 0x3A73 JUMP JUMPDEST PUSH2 0x22CC JUMPI JUMPDEST POP PUSH2 0x2112 PUSH2 0x16FE SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x2223 SWAP3 PUSH2 0x224F SWAP9 PUSH2 0x22C2 JUMPI JUMPDEST POP PUSH2 0x21B0 PUSH2 0x219D DUP11 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x21A9 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x21BE PUSH2 0x1C28 DUP3 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x20F0 JUMP JUMPDEST SWAP6 PUSH2 0x21EB PUSH2 0x21D5 DUP3 DUP5 DUP14 PUSH2 0x3ADB JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2201 PUSH1 0x4 SWAP3 PUSH2 0x21FC DUP10 DUP6 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x2216 PUSH2 0x2210 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x2263 JUMPI JUMPDEST POP POP PUSH2 0xB47 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2256 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2275 PUSH2 0x2270 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2283 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x16FE DUP12 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x221C JUMP JUMPDEST PUSH2 0x22A7 PUSH2 0x3D2 DUP11 PUSH2 0x16C2 JUMP JUMPDEST DUP4 EQ PUSH2 0x2295 JUMPI PUSH2 0x22BA SWAP3 PUSH2 0x21FC SWAP2 PUSH2 0x12E8 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x22DE SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0x3094 JUMP JUMPDEST PUSH2 0x22ED JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x2176 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2312 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x2336 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x236D PUSH32 0x545ECF6FBCC235DF5FDFB676E1992025683C8097A8BD6E5A7C57B31F1C1B29D4 SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x2326 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2387 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x23AC JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x23A5 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23C5 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST PUSH32 0x566163B435DF210872AAFFF6E352033418C951E1538D138DFBCCD622C4B022D0 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1AB4 PUSH2 0x3D2 SWAP2 PUSH2 0x240D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2421 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2435 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2470 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3B5B JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2468 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0x2483 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24BC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B0 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x24E0 PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP2 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x250D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3BC SWAP3 PUSH2 0x252D PUSH2 0x2517 JUMP JUMPDEST SWAP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2546 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2559 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x276A JUMP JUMPDEST ISZERO PUSH2 0x2565 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062617463682073697A650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3D2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x25CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x262A PUSH2 0xEC5 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x397 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x264E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x265C DUP5 DUP7 PUSH2 0x4AF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x261A JUMP JUMPDEST SWAP1 PUSH2 0x2685 PUSH2 0xBD2 PUSH2 0x2681 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2696 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26AC PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2672 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x270C PUSH2 0x19A2 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x2705 PUSH1 0xA0 SWAP7 PUSH2 0x26F5 PUSH2 0x3BC SWAP11 PUSH2 0x26E5 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATACOPY JUMP JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 ADD JUMPDEST SWAP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 SWAP2 PUSH1 0x20 PUSH2 0x46D SWAP3 MUL SWAP4 DUP5 SWAP2 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2717 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP8 SWAP2 SWAP8 PUSH2 0x2784 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x27C1 PUSH2 0x27B2 PUSH2 0x2796 DUP6 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x27CA DUP10 PUSH2 0x1A5C JUMP JUMPDEST DUP7 SWAP6 PUSH2 0x27D5 DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT DUP1 PUSH2 0x2A19 JUMPI JUMPDEST PUSH2 0x27E6 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x27EF DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP12 DUP9 DUP3 LT ISZERO PUSH2 0x284F JUMPI SWAP1 PUSH2 0x1C34 DUP12 PUSH2 0x2844 PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0xA82 DUP16 DUP8 DUP2 DUP11 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 PUSH2 0x284A SWAP16 PUSH2 0x2828 SWAP9 DUP9 SWAP2 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x326B JUMP JUMPDEST PUSH2 0x25AA JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST PUSH2 0x2973 SWAP4 SWAP2 POP SWAP2 PUSH2 0x296E DUP7 PUSH2 0x28C2 DUP13 SWAP12 SWAP15 PUSH2 0x270C DUP16 DUP14 SWAP16 PUSH2 0x28BB PUSH2 0x2998 SWAP15 SWAP16 SWAP2 PUSH2 0x2985 SWAP14 SWAP12 PUSH2 0x28B6 PUSH2 0x2705 SWAP5 PUSH2 0x28A6 PUSH2 0x288C PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP8 PUSH2 0x2895 PUSH2 0x2610 JUMP JUMPDEST SWAP13 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE JUMP JUMPDEST PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BD5 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x28F9 DUP11 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC9 PUSH2 0x2911 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2933 PUSH2 0x2923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1BC9 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x293E PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x2956 PUSH1 0x80 PUSH2 0x2950 PUSH1 0x60 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3E93 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2993 PUSH2 0x1C28 DUP8 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C0 DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x299A SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST DUP8 DUP10 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST POP SWAP5 SWAP4 POP SWAP2 PUSH2 0x29F9 PUSH2 0x1C51 PUSH32 0xB29502FF9B08DF34AE7101BCAEDAE6124591B6F81D9AB5A4BA2BF20641FD2DE2 SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x2A03 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x2A10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2759 JUMP JUMPDEST POP PUSH2 0x27E6 PUSH2 0x2A28 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP9 GT ISZERO SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2533 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2A63 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2A42 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A75 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xD PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x212E PUSH2 0x2AAD PUSH2 0x3D2 SWAP3 PUSH2 0x2AA7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x398C JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2AC0 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0x3D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2B10 JUMPI PUSH2 0x1AB4 PUSH2 0x2B04 SWAP2 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x2B35 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B1D JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x2B5C PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2B64 PUSH2 0x16CC JUMP JUMPDEST SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B72 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B6A JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST PUSH2 0x2BAF PUSH2 0x3F47 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 PUSH2 0x3F74 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2BDE PUSH2 0x2BD9 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C09 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C1B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x2C32 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2720 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3D2 SWAP3 PUSH2 0x2C20 JUMP JUMPDEST SWAP5 SWAP7 SWAP1 SWAP2 SWAP4 SWAP6 SWAP3 SWAP7 PUSH2 0x2C4B PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2C79 PUSH2 0x1A45 PUSH2 0x2C5D DUP5 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x2C82 DUP9 PUSH2 0x1A5C JUMP JUMPDEST DUP9 SWAP5 PUSH2 0x2C8D DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 GT DUP1 PUSH2 0x2DA4 JUMPI JUMPDEST PUSH2 0x2C9E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x2CA7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI DUP1 PUSH2 0x1C34 PUSH2 0x2CD7 PUSH2 0xA82 PUSH2 0x2828 DUP16 SWAP6 DUP7 DUP15 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 DUP7 PUSH2 0x2CE9 SWAP14 DUP7 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2CA7 JUMP JUMPDEST POP PUSH2 0x2985 SWAP2 PUSH2 0x1BF3 PUSH2 0x2973 SWAP3 PUSH2 0x1BED DUP9 PUSH2 0x1BD5 DUP13 SWAP16 SWAP12 SWAP15 PUSH2 0x2D7C SWAP11 SWAP12 SWAP14 DUP16 SWAP2 PUSH2 0x1BC9 SWAP1 DUP16 PUSH2 0x2D58 PUSH2 0x1BC9 SWAP2 PUSH2 0x2D40 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x2D4A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x2D63 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x2D72 PUSH2 0x1AB4 DUP7 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2D9D DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x2D7E SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7C JUMP JUMPDEST POP PUSH2 0x2C9E PUSH2 0x2DB3 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP8 GT ISZERO SWAP1 POP PUSH2 0x2C95 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DD9 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xE PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x3 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2E05 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2E19 SWAP1 PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2E9F PUSH2 0x2E95 PUSH2 0x2E8F CALLER PUSH2 0x1C4C DUP8 PUSH2 0x23C0 DUP9 PUSH2 0x2E8A DUP6 PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST SWAP4 PUSH2 0xB50 JUMP JUMPDEST SWAP4 PUSH2 0x3F8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x2EB3 DUP2 DUP6 DUP6 PUSH2 0x20FD JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x2EC2 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x2ECE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2EDB SWAP4 PUSH2 0x1311 SWAP4 PUSH2 0x400C JUMP JUMPDEST PUSH2 0x2EE8 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2F30 JUMPI PUSH2 0x2F11 PUSH2 0x1A08 DUP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2F1C JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0x2BED JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2F93 PUSH2 0x2F8E DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2F36 JUMP JUMPDEST PUSH2 0x2FA6 PUSH2 0x2FA1 DUP3 PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH2 0x2FAF DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FBC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2FCB JUMPI PUSH2 0x3D2 SWAP2 POP PUSH2 0x4100 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FDB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x302C JUMP JUMPDEST ISZERO PUSH2 0x2FE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3061 SWAP1 PUSH2 0x3051 PUSH2 0x3040 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xF37F0CB2B2CC8066B1FA4738122412661CE5405CD9278F327D6905BB6D0E973F PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2E8A PUSH2 0x1A08 SWAP3 PUSH2 0x30A7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30BB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xE427E272B122E738FD867AC5DEFCEDB2BC9362341166A49D793D8B230F75670C SWAP2 PUSH2 0x5A6 DUP2 PUSH1 0x10 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3100 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP2 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x312F JUMPI POP POP PUSH2 0x3BC SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3161 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x318C JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3185 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xB304FE5DD2D3C45E8EC87C1DD1BD2B3A773B3135E84A7B9151F5FB4BF1A06D0E SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x31F2 PUSH4 0x1FFC9A7 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x3230 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3210 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x3222 PUSH4 0x5B5E139F PUSH2 0x31C5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x323F PUSH4 0x80AC58CD PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x3206 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x3278 PUSH2 0x3400 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3283 JUMPI POP POP JUMP JUMPDEST PUSH2 0x3290 PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST DUP3 LT PUSH2 0x329A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x32AD PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x32BC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x32D0 JUMPI PUSH2 0x32CB SWAP2 POP PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x329F JUMP JUMPDEST POP PUSH2 0x2F2C PUSH2 0x32DC PUSH2 0x325E JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3313 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0xB50 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x32F4 JUMP JUMPDEST SWAP2 PUSH2 0x3324 DUP3 PUSH2 0x2A95 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x33A8 JUMPI JUMPDEST PUSH2 0x3389 JUMPI JUMPDEST PUSH2 0x3351 PUSH2 0x2E8F PUSH2 0x3357 SWAP3 PUSH2 0x1C4C DUP7 PUSH1 0x0 PUSH2 0x334B DUP9 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x3382 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x3396 PUSH2 0x1311 CALLER DUP4 PUSH2 0x3094 JUMP JUMPDEST ISZERO PUSH2 0x3330 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST POP CALLER PUSH2 0x33BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C07 JUMP JUMPDEST EQ ISZERO PUSH2 0x332B JUMP JUMPDEST PUSH2 0x33CB PUSH2 0x2BED JUMP JUMPDEST CALLER SWAP1 PUSH2 0x33D6 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x33DE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x341E PUSH1 0xA PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3426 PUSH2 0x340A JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x3438 JUMPI PUSH2 0x3BC SWAP1 PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x345F PUSH2 0x344A JUMP JUMPDEST PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x346E PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x3474 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420636F6E7365637574697665206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 DUP3 ADD SWAP2 JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3520 DUP2 PUSH2 0x1C34 PUSH2 0x3508 PUSH1 0x0 PUSH2 0x34FA PUSH2 0x34DB SWAP7 PUSH2 0x41A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x351A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST EQ PUSH2 0x3486 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3539 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x3563 SWAP2 PUSH2 0x4253 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42EE JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP2 PUSH2 0x357A PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x359D DUP2 PUSH2 0x1C34 PUSH2 0x3596 PUSH2 0x357C SWAP5 DUP8 ADD SWAP1 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x357A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x35B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3607 RETURNDATASIZE PUSH2 0x2500 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x361E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652068616E646C696E67206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x366A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x36B1 SWAP1 PUSH2 0x36AD PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST PUSH2 0x36BB PUSH1 0x11 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x36C7 DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH2 0x36DA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x37B8 JUMPI PUSH2 0x3711 SWAP2 PUSH2 0x36EF DUP3 CALLVALUE LT ISZERO PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x1C07 PUSH2 0x2837 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x37A7 JUMPI JUMPDEST PUSH2 0x3747 JUMPI JUMPDEST CALLVALUE SUB SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x371B DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 GT PUSH2 0x3725 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BC SWAP3 PUSH2 0x3733 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 CALLER GAS CALL PUSH2 0x3741 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3663 JUMP JUMPDEST PUSH2 0x377F DUP4 DUP1 PUSH2 0x3756 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3761 PUSH2 0x7530 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x376C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 SUB SWAP4 CALL PUSH2 0x377A PUSH2 0x35F8 JUMP JUMPDEST POP ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x370C JUMPI PUSH2 0x370C DUP4 DUP1 PUSH2 0x3792 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP6 CALLER GAS CALL PUSH2 0x37A1 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3617 JUMP JUMPDEST POP PUSH2 0x37B1 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230207061796D656E74206E6F7420696D706C656D656E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x40 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3822 PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3831 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x383E DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP3 EQ PUSH2 0x397F JUMPI DUP1 DUP3 PUSH2 0x3899 PUSH2 0x388E PUSH2 0x385C PUSH2 0x38C3 SWAP7 PUSH1 0x1 EQ PUSH1 0xE1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3879 PUSH2 0x3868 DUP10 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3871 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x3ADB JUMP JUMPDEST OR DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST PUSH2 0x21FC DUP9 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x38E1 PUSH2 0x2112 PUSH1 0x1 SWAP4 PUSH2 0x212E PUSH2 0x38C9 PUSH2 0x38B0 PUSH2 0x3807 JUMP JUMPDEST PUSH2 0x38BA PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x3811 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x38D7 DUP5 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST SWAP2 PUSH2 0x46D DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x38E9 PUSH2 0x20E0 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x3973 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x3902 PUSH1 0x0 NOT PUSH2 0x16FE JUMP JUMPDEST GT PUSH2 0x3966 JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x391E JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x1978 JUMP JUMPDEST ISZERO PUSH2 0x3954 JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x390B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x3924 JUMPI DUP1 PUSH2 0x3910 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3994 PUSH2 0x3400 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x39A9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x39BA PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x39C7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x39EB JUMPI POP POP PUSH2 0x39E3 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST SWAP3 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x399C JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x39FB PUSH2 0x3D2 DUP5 PUSH2 0x16C2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x399C JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x3A18 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 PUSH2 0x3A22 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x3A4A JUMPI POP POP PUSH2 0x3A38 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST EQ PUSH2 0x3D2 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x3A0A JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3A6D SWAP2 PUSH2 0x3A65 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0x3A87 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xE8 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3AAF PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3AC1 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3B10 PUSH2 0x3B15 SWAP2 PUSH2 0x3D2 SWAP5 SWAP4 PUSH2 0x3AEF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3B0A PUSH2 0x3B05 PUSH2 0x3AFE PUSH2 0x3A94 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x3AB4 JUMP JUMPDEST SWAP2 PUSH2 0x43A1 JUMP JUMPDEST PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x3B22 PUSH2 0x43AC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B31 PUSH1 0x0 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B1A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP4 SWAP3 SWAP2 PUSH2 0x3B72 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 PUSH2 0x3B81 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST ISZERO PUSH2 0x3B8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3BDB DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BF5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x3C13 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3C4D JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3C42 JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C62 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3C9A JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3C86 JUMPI POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND PUSH2 0x165D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3C66 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x3BEC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3CDF PUSH2 0x3CCE PUSH2 0x4D0 DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x3B86 JUMP JUMPDEST PUSH2 0x3CEC PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3CFB PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x3D09 PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x3E71 JUMPI JUMPDEST PUSH2 0x3D1A SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x3D23 DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP4 GT DUP1 PUSH2 0x3E58 JUMPI JUMPDEST PUSH2 0x3D34 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x3D41 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x3E18 JUMPI JUMPDEST PUSH2 0x3D50 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D5C PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3E0A JUMPI JUMPDEST PUSH2 0x3D6A PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x3D75 DUP5 DUP5 PUSH2 0x3827 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3D83 PUSH2 0x16FE DUP5 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3D94 JUMPI JUMPDEST POP POP PUSH2 0x2031 SWAP1 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x3DA3 DUP3 SWAP7 SWAP3 SWAP6 SWAP4 SWAP6 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DFB JUMPI DUP1 PUSH2 0x3DBF PUSH2 0x1913 PUSH2 0x1913 PUSH2 0x3DD6 SWAP5 DUP10 PUSH2 0x3BD2 JUMP JUMPDEST PUSH2 0x3DCB PUSH2 0x16FE DUP11 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3DDB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x3DE8 DUP3 DUP9 PUSH2 0x3BD2 JUMP JUMPDEST MLOAD PUSH2 0x3DF6 PUSH1 0x13 DUP9 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST PUSH2 0x3CB2 JUMP JUMPDEST POP SWAP3 POP SWAP4 POP SWAP2 PUSH2 0x2031 CODESIZE PUSH2 0x3D89 JUMP JUMPDEST PUSH2 0x3E13 DUP4 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x3D62 JUMP JUMPDEST PUSH2 0x3E26 PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3B JUMPI JUMPDEST PUSH2 0x3E36 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x3D46 JUMP JUMPDEST POP PUSH2 0x3E36 PUSH2 0x3E47 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x3E50 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E2D JUMP JUMPDEST POP PUSH2 0x3D34 PUSH2 0x3E67 PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO SWAP1 POP PUSH2 0x3D2B JUMP JUMPDEST POP PUSH2 0x3D1A PUSH2 0x3E7D DUP6 MLOAD SWAP1 JUMP JUMPDEST DUP5 EQ SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3D2 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 PUSH2 0x3D2 SWAP4 SWAP2 PUSH2 0x3563 SWAP4 PUSH2 0x3EA5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x43F8 JUMP JUMPDEST PUSH2 0x3ECC PUSH2 0x3EC6 PUSH2 0x3EBB PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1C4C DUP5 PUSH1 0x9 PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3EF7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH2 0x3F06 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3F15 PUSH1 0x1 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xB JUMPDEST SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xC PUSH2 0x3F6E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3FEC SWAP1 JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4024 PUSH2 0x1C4C PUSH1 0x20 SWAP4 PUSH2 0x401E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xB50 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x4055 PUSH2 0x4039 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x404A DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3FC0 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x409A JUMPI JUMPDEST POP PUSH2 0x408B JUMPI PUSH2 0x406F PUSH2 0x35F8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x407E PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2EE8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x3222 PUSH2 0x31D8 PUSH2 0x2F2C SWAP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x40BD SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C4 JUMPI JUMPDEST PUSH2 0x40B5 DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3FAC JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x4062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x40AB JUMP JUMPDEST PUSH2 0x46D PUSH2 0x40E3 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x40DD DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x40FA SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 PUSH2 0x40CB JUMP JUMPDEST SWAP1 PUSH2 0x40CB JUMP JUMPDEST PUSH2 0x410C PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x4161 JUMPI PUSH2 0x4118 PUSH2 0x4584 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4127 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x4157 JUMPI PUSH2 0x3D2 PUSH2 0x1BC9 SWAP2 PUSH2 0x413F PUSH2 0x3D2 SWAP5 PUSH2 0x458E JUMP JUMPDEST SWAP1 PUSH2 0x4149 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x40EC JUMP JUMPDEST POP POP PUSH2 0x3D2 PUSH2 0x2517 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x80 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4180 PUSH2 0x416E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x41B2 PUSH2 0x3D2 SWAP2 PUSH2 0x2AA7 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x45F7 JUMP JUMPDEST PUSH2 0x41C0 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x41F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1C07 JUMP JUMPDEST EQ DUP1 PUSH2 0x422A JUMPI JUMPDEST ISZERO PUSH2 0x4222 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x46CF JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x41F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x425F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x426C PUSH2 0x16FE PUSH1 0x41 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x4296 JUMPI PUSH2 0x428F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x43F8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x42AE PUSH2 0x2993 PUSH2 0x42A9 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP3 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x42D6 JUMPI JUMP JUMPDEST PUSH2 0x42B6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x42CC JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x42FB DUP4 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4304 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x430E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4318 PUSH1 0x1 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4321 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4335 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH2 0x433F PUSH1 0x2 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4348 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4371 JUMPI POP PUSH2 0x1500 PUSH2 0x435B DUP4 SWAP3 PUSH2 0x42E5 JUMP JUMPDEST PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4384 PUSH2 0x437E PUSH1 0x3 PUSH2 0x42DB JUMP JUMPDEST SWAP2 PUSH2 0x42DB JUMP JUMPDEST EQ PUSH2 0x438D JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x3D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43B7 PUSH2 0x1311 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x43BD JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x19A2 PUSH2 0x3BC SWAP5 PUSH2 0x3FE5 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x43EE PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4403 DUP5 PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x442F PUSH2 0x16FE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x44AB JUMPI SWAP1 PUSH2 0x4451 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x4448 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x43CF JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x446E DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4497 JUMPI POP PUSH2 0x4491 DUP4 PUSH2 0x12DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x44A3 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x44B8 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x44DC PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x44F5 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4508 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x451A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x450D JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x44C9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x4549 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x452E JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x456B PUSH2 0x16FE PUSH2 0x3D2 PUSH2 0x44BF JUMP JUMPDEST EQ PUSH2 0x457A JUMPI POP PUSH2 0x3D2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH2 0x4552 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xD PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x45C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x45A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x45EA PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x4603 PUSH2 0x419B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x468B PUSH2 0x3B05 DUP4 SWAP7 PUSH2 0x4629 PUSH2 0x461C PUSH2 0x212E DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE JUMP JUMPDEST PUSH2 0x4656 PUSH2 0x4645 PUSH2 0x4640 PUSH2 0x463A PUSH2 0x45D3 JUMP JUMPDEST DUP5 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x45DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x467D PUSH2 0x4661 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x4674 PUSH2 0x466E PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ ISZERO PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x4685 PUSH2 0x3A94 JUMP JUMPDEST SWAP1 PUSH2 0x3A9E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x46C0 SWAP3 PUSH2 0x46B9 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x4754 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1BC9 PUSH2 0x4741 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x4695 JUMP JUMPDEST PUSH2 0x475F PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x4773 DUP5 PUSH2 0x2500 JUMP JUMPDEST SWAP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4782 DUP2 PUSH2 0x47A0 JUMP JUMPDEST SWAP1 PUSH2 0x4795 PUSH2 0x4790 PUSH1 0x20 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x4763 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x47AF PUSH2 0x47B4 SWAP2 PUSH2 0x2FCB PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x47BE PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST AND PUSH2 0x47C9 PUSH1 0x1F PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x47D2 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA5 TIMESTAMP PUSH11 0xD3E7A6342DD43281A96F77 SGT EXTCODESIZE 0xEF MSIZE GAS 0xAB GT DUP8 DUP13 0x24 KECCAK256 0xC6 0xCA 0xE8 AND CODESIZE CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1309:15902:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;;1309:15902:15;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1309:15902:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1309:15902:15;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;;:::i;2494:22::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;2595:20::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;2622:27::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;1781:143;1309:15902;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;:::i;2557:31::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;2809:41::-;;;;;;;:::i;:::-;;:::i;1309:15902::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;2756:46::-;;;;;;;:::i;:::-;;:::i;1309:15902::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;2345:42;1309:15902;2345:42;2523:27;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;2463:24::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;1599:119;1309:15902;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;1309:15902:15;;;;;:::i;:::-;;:::i;2431:25::-;;;;;:::i;1309:15902::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;2710:39::-;;;;;;;:::i;1309:15902::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2293:45;1309:15902;;:::i;17054:154::-;17164:36;;;:::i;1309:15902::-;;;;:::i;11573:98:17:-;11652:12;11659:5;11652:12;:::i;1309:15902:15:-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;18636:223:17:-;18735:17;18736:16;;;:::i;:::-;18735:17;;1309:15902:15;18735:17:17;18731:73;;18822:30;:24;:30;:24;:15;:24;:::i;:::-;:30;;:::i;18731:73::-;-1:-1:-1;;;18762:41:17;:::i;18364:122::-;18474:4;18364:122;18474:4;18364:122;18474:4;:::i;1309:15902:15:-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4373:245;4454:156;4598:1;4373:245;4427:7;1309:15902;;;4427:7;4454:11;:19;:11;:19;:::i;:::-;4488:17;4548:13;4556:4;4548:13;:::i;:::-;4454:156;;;1309:15902;;;;4454:156;;;;;;;;-1:-1:-1;;;4454:156:15;;4520:13;4454:156;;;;;:::i;:::-;;;;;;;;;;4598:1;4454:156;;;4447:163;4373:245;:::o;4454:156::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;1500:62:0:-;;1554:1;1500:62;;;;:::i;:::-;1554:1;:::i;1309:15902:15:-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14704:194::-;;14859:19;:31;14704:194;;14799:49;14807:16;;;:::i;:::-;14799:49;:::i;:::-;14859:10;:19;:::i;:::-;:31;:::i;14704:194::-;;;;;;:::i;1309:15902::-;;;;;;;;;;:::i;6890:564:17:-;7312:46;:28;:13;;;:::i;:::-;7328:12;;;:::i;:::-;7312:28;1309:15902:15;;;7312:28:17;7343:15;;:::i;7312:46::-;7303:55;;-1:-1:-1;;1309:15902:15;7376:38:17;1309:15902:15;7376:38:17;;1309:15902:15;;7376:38:17;;7372:65;;6890:564;:::o;7372:65::-;7416:21;7426:11;;;;;;:::i;2466:103:5:-;;2531:1;2466:103;;;;;;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;1315:72:4:-;;1379:1;1315:72;;;;;;;;:::i;:::-;1379:1;:::i;1309:15902:15:-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;1438:45;1480:3;;;:::i;1490:45::-;1533:2;;;:::i;:::-;;;;:::o;:::-;1309:15902;;-1:-1:-1;;;1533:2:15;;;;;;;;;;;1309:15902;1533:2;1309:15902;;;1533:2;1309:15902;;;1533:2;;;;:::i;:::-;;1309:15902;:::o;1533:2::-;;;;;;:::i;:::-;;;;:::o;:::-;1309:15902;;-1:-1:-1;;;1533:2:15;;;;;;;;;;;1309:15902;1533:2;1309:15902;;;1533:2;1309:15902;;;1533:2;;-1:-1:-1;;1309:15902:15;1533:2;;;;;;;;;:::i;:::-;;;;:::i;:::-;1309:15902;;;1533:2;;;;;;;;;1309:15902;;1533:2;;1309:15902;;10723:1804;12236:45;12195:30;10723:1804;;12195:30;10723:1804;;12139:28;11541:222;11829:263;10723:1804;11541:222;12453:66;10723:1804;;11541:222;12453:66;10723:1804;12453:66;10723:1804;;;11541:222;;10723:1804;10971:67;10979:26;;10994:10;10979:14;:26;:::i;:::-;;:::i;:::-;10971:67;:::i;:::-;11071:1;11063:10;;;11120:53;11128:19;11063:10;;;:::i;:::-;11049:60;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;11057:16;;;11049:60;:::i;11128:19::-;-1:-1:-1;;;;;1309:15902:15;;11128:19;;;11120:53;:::i;:::-;11184:57;11192:27;;:15;:27;;11184:57;:::i;:::-;11281:13;11292:2;11281:13;:::i;:::-;;;:48;;;11340:65;11297:15;;:::i;:::-;11348:12;;;:::i;:::-;;;:36;;;;11281:48;11340:65;;:::i;:::-;11475:8;;;;;:::i;:::-;11541:222;11705:13;;;:6;:13;:::i;:::-;;:::i;:::-;11541:222;;;:::i;:::-;;;;1533:2;-1:-1:-1;;;;;1309:15902:15;;;;11541:222;-1:-1:-1;;;;;1309:15902:15;11541:222;;;1309:15902;;11541:222;;;;1533:2;;11541:222;;;;1533:2;;11541:222;;;;1533:2;;11541:222;;;;1533:2;;11541:222;11900:12;;1533:2;1781:143;;-1:-1:-1;;;;;1309:15902:15;11931:9;11829:263;11931:9;;;;1533:2;-1:-1:-1;;;;;1309:15902:15;;;11931:9;11959:19;;;;;1533:2;1309:15902;;11959:19;11997:15;;;;;1533:2;1309:15902;;11997:15;12062;;12031:12;;;;1533:2;1309:15902;;12031:12;12062:15;;1533:2;1309:15902;;12062:15;11829:263;;1309:15902;;;;11829:263;;;;;;;;;1309:15902;;;-1:-1:-1;;;;;1309:15902:15;;;1533:2;;;1309:15902;1533:2;;;;;;1309:15902;;1533:2;;;;-1:-1:-1;;;;;1309:15902:15;1533:2;;;1309:15902;1533:2;;;1309:15902;1533:2;;;1309:15902;1533:2;;;1309:15902;1533:2;;1309:15902;;11829:263;;;;;;;;;:::i;:::-;11805:298;;;1309:15902;;;11805:298;;1309:15902;;;;11805:298;;12139:28;:::i;:::-;12195:30;;:::i;:::-;;;:::i;:::-;12244:15;-1:-1:-1;;;;;1309:15902:15;;12244:15;;-1:-1:-1;;;;;1309:15902:15;;;12244:15;;12236:45;:::i;:::-;12327:15;:13;;11705:6;12327:13;:::i;:::-;:15;;;;:::i;:::-;1533:2;;1309:15902;;12327:15;;;:::i;:::-;12418:8;;;;;;:::i;:::-;12453:66;:::i;:::-;;;:::i;:::-;10994:10;12453:66;10994:10;12453:66;:::i;:::-;;;;1309:15902;;;;12453:66;;;;;;:::i;:::-;;;;10723:1804::o;11348:36::-;1309:15902;-1:-1:-1;11364:20:15;;;11348:36;;;11281:48;11340:65;11315:14;;:::i;:::-;11281:48;;10723:1804;;;;;;;;;;:::i;2466:103:5:-;;2531:1;2466:103;;;;;;:::i;:::-;2531:1;:::i;:::-;;;;:::i;1315:72:4:-;;1379:1;1315:72;;;;;;:::i;:::-;1379:1;:::i;1309:15902:15:-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;4630:1051::-;-1:-1:-1;4630:1051:15;;;;;4776:38;4784:8;;;:::i;:::-;4776:38;:::i;:::-;4825:69;4833:24;:13;;;:::i;:::-;:24;:::i;:::-;:37;;4861:9;;;:::i;4833:37::-;;;4825:69;:::i;:::-;4905:64;4913:28;:16;:28;4905:64;:::i;:::-;4980:54;4988:26;5000:14;;:::i;4988:26::-;;;;4980:54;:::i;:::-;5059:16;5060:15;;;:::i;5059:16::-;5055:128;;4630:1051;5199:7;;;:::i;:::-;5209:1;;5199:11;;;5209:1;5199:11;:::i;:::-;;5195:69;;4630:1051;5299:14;;:::i;:::-;5334:8;;;;;:::i;:::-;5386:13;5209:1;5386:13;:::i;:::-;5401:12;;;;;;5449;5443:26;:19;5449:12;5415:3;5449:12;;;;:::i;5443:19::-;:26;1309:15902;;;5443:26;:30;;;;:::i;:::-;;5439:122;;1533:2;;1309:15902;;5415:3;5386:13;;5439:122;5498:43;5529:12;;;;;:::i;:::-;5498:10;:28;:10;1309:15902;;;5509:16;5498:28;;:::i;5401:12::-;;;;;;;;5604:39;5401:12;;5604:39;:::i;:::-;;;;;;:::i;:::-;;;1309:15902;;;;5604:39;;;;4630:1051;:::o;5195:69::-;5243:8;;;:::i;:::-;5195:69;;5055:128;5100:19;;5108:10;5100:7;:19;:::i;:::-;:44;;;;5055:128;5092:79;;;:::i;:::-;5055:128;;5100:44;5123:7;5092:79;5123:7;;:::i;:::-;:21;5108:10;5123:21;1309:15902;5123:21;;5100:44;;;;4630:1051;4756:7;;4630:1051;;;1309:15902;4756:7;:::i;1309:15902::-;;;;;-1:-1:-1;;;;;1309:15902:15;;;2899:58:17;2943:14;-1:-1:-1;;;;;2943:14:17;:::i;2497:61::-;2550:8;-1:-1:-1;;;2550:8:17;:::i;22796:3447::-;23115:22;23123:13;22963:27;;;:::i;:::-;23123:13;;:::i;:::-;23115:22;:::i;:::-;23140:16;23099:59;23107:50;23140:16;;:::i;:::-;23115:41;;;23107:50;:::i;:::-;23099:59;:::i;:::-;23092:66;23173:37;23181:28;;;:::i;23173:37::-;:45;-1:-1:-1;;;;;1309:15902:15;;23173:45:17;1309:15902:15;23173:45:17;;23169:95;;23332:35;;;:::i;:::-;23512:19;;47819:10;23463:69;23464:68;;;;;:::i;23463:69::-;23459:188;;22796:3447;23764:190;25708:11;26129:13;23764:190;;;;25700:20;23764:190;26129:13;23764:190;;;22796:3447;24316:24;24314:26;24316:24;;:18;:24;:::i;:::-;24314:26;;;;:::i;:::-;-1:-1:-1;;2943:14:17;1309:15902:15;;24314:26:17;24382:24;24384:22;;24316:18;24384:22;:::i;24382:24::-;24755:25;;:::i;:::-;24783:45;24699:143;24783:45;;;;;:::i;:::-;24755:73;;24699:143;-1:-1:-1;;;;;17192:331:17;;;;;;;17086:443;;24699:143;24670:17;:172;:17;:26;;;;;:::i;:::-;:172;:::i;:::-;25010:1;24959:52;;;;;:::i;:::-;:47;;;1309:15902:15;;24959:52:17;;24955:617;;22796:3447;25708:11;;;:::i;25700:20::-;:39;25749:367;;;;;;26129:13;:::i;:::-;;26125:58;;22796:3447::o;26125:58::-;-1:-1:-1;;;26152:30:17;:::i;24955:617::-;25053:11;;25063:1;25053:11;:::i;:::-;;1309:15902:15;;;25053:11:17;25184:30;;;;;;:::i;:::-;:35;;;;:::i;:::-;;25180:378;;24955:617;;;;25180:378;25305:28;25320:13;;;:::i;25305:28::-;;25301:239;25180:378;25301:239;25465:52;:30;;;;:::i;:52::-;25301:239;;;25180:378;;23764:190;;;;;;;23459:188;23551:43;23550:44;23551:43;;;;;;;;:::i;23550:44::-;23546:101;;23459:188;;;;;;;;23546:101;-1:-1:-1;;;23604:42:17;:::i;23169:95::-;-1:-1:-1;;;23228:35:17;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;1309:15902:15:-;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::i;15432:160::-;15547:37;;15432:160;15504:27;;;;:::i;15547:37::-;;;;15432:160::o;:::-;;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;1309:15902:15:-;;;;;1533:2;1309:15902;;;;;;;;;;;;;;:::i;15122:155::-;15242:27;15122:155;15196:30;15221:5;15196:22;;:14;:22;:::i;:::-;:30;:::i;15242:27::-;;;1309:15902;;;;15242:27;;;;15122:155::o;:::-;;;;:::i;16944:102::-;17026:12;;16944:102;16999:7;1309:15902;;;16999:7;17026:12;:6;:12;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;15845:21:15;15738:136;15806:23;15824:5;15806:15;;:7;:15;:::i;15845:21::-;;;1309:15902;;;;15738:136;;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;16335:67:15;;:::i;:::-;;;:::i;1309:15902::-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;1309:15902:15;;;;;:::i;5689:204::-;5847:38;;5807:22;;;:::i;:::-;5847:38;;:::i;1309:15902::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;26334:187:17:-;;;26475:39;26334:187;26475:39;;:::i;:::-;;;:::i;2466:103:5:-;;2531:1;2466:103;;;;;;;;;:::i;:::-;1315:72:4;1379:1;1315:72;;;;;;;;;:::i;:::-;1379:1;:::i;1309:15902:15:-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;7332:1815::-;;;;;;;;;;7578:67;7586:26;;7601:10;7586:14;:26;:::i;7578:67::-;7678:1;7670:10;7727:53;7735:19;7670:10;;;:::i;:::-;7656:60;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;7664:16;1309:15902;7735:19;-1:-1:-1;;;;;1309:15902:15;;7735:19;1309:15902;7727:53;7791:57;7799:27;;1309:15902;7791:57;7867:15;:19;;;;:::i;:::-;;;:57;;;7332:1815;7859:88;;;:::i;:::-;7965:13;;;:::i;:::-;7980:19;;;;;;;8037:11;8089:57;8037:11;8097:29;;:20;8105:11;8037;;;;8021:53;8029:20;8037:11;;8001:3;8037:11;8105;8037;;;;:::i;:::-;;:::i;:::-;8029:20;:::i;8021:53::-;8105:11;:::i;8097:20::-;:29;-1:-1:-1;;;;;1309:15902:15;;;8097:29;;8089:57;:::i;8001:3::-;7965:13;;7980:19;8785:28;7980:19;;;;8729:28;7980:19;8201:176;7980:19;;;8201:176;7980:19;;;8201:176;8961:13;7980:19;;;8834:45;7980:19;;8201:176;;7980:19;8201:176;8319:13;;;:6;:13;:::i;:::-;8201:176;;;:::i;:::-;;;;1533:2;-1:-1:-1;;;;;1309:15902:15;;;;8201:176;-1:-1:-1;;;;;1309:15902:15;8201:176;;;1309:15902;;8201:176;;:::i;:::-;;;;1309:15902;;8201:176;8435:255;1599:119;8507:12;;;;1533:2;-1:-1:-1;;;;;1309:15902:15;;;8507:12;8538:9;8435:255;8538:9;;;;1533:2;-1:-1:-1;;;;;1309:15902:15;;;8538:9;8593:15;;;;;8576:33;;1309:15902;;;;8576:33;;;;;;;;;;:::i;:::-;8566:44;;;1309:15902;;;8566:44;;8629:12;8660:15;;8629:12;;;;1533:2;1309:15902;;8629:12;8660:15;;1533:2;1309:15902;;8660:15;8435:255;;1309:15902;;;;8435:255;;;;;;;;;;:::i;8729:28::-;8785;:::i;:::-;8842:15;-1:-1:-1;;;;;1309:15902:15;;8842:15;1309:15902;8834:45;8917:15;:13;;8319:6;8917:13;:::i;:15::-;8961:13;:::i;:::-;8976:19;;;;;;;8997:3;9051:11;;;;8976:19;9051:11;;;;:::i;:::-;;;;:::i;8997:3::-;8961:13;;;;8976:19;;;;;;9092:47;;;8976:19;9092:47;:::i;:::-;7601:10;9092:47;7601:10;9092:47;:::i;:::-;;;;1309:15902;;;;9092:47;;;;;;:::i;7867:57::-;7909:15;7859:88;7890:34;7909:15;;:::i;7890:34::-;;;;7867:57;;;;7332:1815;;;;;;;;;;;:::i;1309:15902::-;;;;;;;;;;;;;;;;:::o;16702:116::-;16792:18;;:7;;;:::i;:::-;:18;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;16024:106:15;16099:23;16024:106;16099:23;;:::i;16024:106::-;;;;;:::i;1726:84:4:-;1796:7;;;:::i;12934:150:17:-;13040:36;13048:27;13032:45;12934:150;13006:7;1309:15902:15;;;13006:7:17;13048:27;;:::i;:::-;13040:36;:::i;5905:172:15:-;6038:31;;6005:15;6018:1;6005:15;:::i;:::-;;;;:::i;1463:68:17:-;1518:13;;;:::i;8570:239::-;8665:19;8674:10;8682:1;8674:10;:::i;8665:19::-;-1:-1:-1;;;;;1309:15902:15;;8665:19:17;8661:69;;8747:25;;;:18;:25;:::i;:::-;8775:27;;:::i;:::-;8747:55;8570:239;:::o;8661:69::-;-1:-1:-1;;;8694:35:17;:::i;1500:62:0:-;;;:::i;:::-;1554:1;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;1309:15902:15:-;;;;;;;;;;:::o;16826:110::-;16903:25;:9;;;:::i;:::-;16915:13;;:::i;:::-;16903:25;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;16264:63:15;;:::i;:::-;;;:::i;1309:15902::-;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;;1309:15902:15;;;;;:::i;5243:557:10:-;5632:13;;:::i;:::-;5659:16;;;:::i;:::-;5724:4;5716:13;5724:4;5716:13;:::i;:::-;5743:10;5751:1;5743:10;:::i;:::-;5767:16;;5751:1;5767:16;:::i;:::-;;:::i;:::-;-1:-1:-1;;;5581:212:10;;5689:13;;5581:212;;;5243:557;:::o;1638:85:0:-;1710:6;;;:::i;2466:103:5:-;;2531:1;2466:103;;;;;;;;:::i;:::-;1315:72:4;1379:1;1315:72;;;;;;;;:::i;:::-;1379:1;:::i;1309:15902:15:-;;;;;;;;;;;:::i;9155:1560::-;;;;;;;;;9391:67;9399:26;;9414:10;9399:14;:26;:::i;9391:67::-;9491:1;9483:10;9540:53;9548:19;9483:10;;;:::i;:::-;9469:60;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;9477:16;1309:15902;9540:53;9604:57;9612:27;;1309:15902;9604:57;9680:15;:19;;;;:::i;:::-;;;:57;;;9155:1560;9672:88;;;:::i;:::-;9778:13;;;:::i;:::-;9793:19;;;;;;9850:11;9902:57;9910:20;9918:11;;9850;;;;9834:53;9842:20;9850:11;;;9814:3;9850:11;;;:::i;9910:20::-;:29;-1:-1:-1;;;;;1309:15902:15;;9910:29;1309:15902;9814:3;9778:13;;9793:19;;10402:45;9793:19;10351:30;;9793:19;10295:28;9793:19;10028:228;9793:19;;;;10529:13;9793:19;;;;;10028:228;9793:19;;10155:26;;9793:19;10057:24;1599:119;1548:170;;10057:24;10155:26;;1309:15902;;;;10155:26;;;;;;;;;;:::i;:::-;10145:37;;;1309:15902;;;10145:37;;10201:13;;;:6;:13;:::i;:::-;10028:228;;1309:15902;;;;10529:13;10544:19;;;;;;;10565:3;10619:11;;;;10544:19;10619:11;;;;:::i;10565:3::-;10529:13;;;;9680:57;9722:15;9672:88;9703:34;9722:15;;:::i;9703:34::-;;;;9680:57;;;;9155:1560;;;;;;;;;;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;16138:118:15;16222:26;16138:118;16222:26;;:::i;16138:118::-;;;;;:::i;11742:102:17:-;11823:14;11830:7;11823:14;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;15703:19:15;15600:130;15665:22;15683:4;15665:15;;:7;:15;:::i;15703:19::-;;;1309:15902;;;;15600:130;;;;:::i;19186:231:17:-;19355:55;;;;47819:10;19280:60;:39;:49;:39;;;:18;:39;:::i;:::-;:49;:::i;19355:55::-;;;:::i;:::-;;;1309:15902:15;;;;19355:55:17;;;;19186:231::o;27102:405::-;;;;;27294:7;;;;;:::i;:::-;27316:14;;:19;;27334:1;27316:19;:::i;:::-;;27312:189;;27102:405;;;;;:::o;27312:189::-;27353:57;27354:56;;;;:::i;27353:57::-;27349:152;;27312:189;;;;;;27349:152;-1:-1:-1;;;27438:47:17;:::i;16524:170:15:-;16602:15;;;:::i;:::-;16598:32;;16648:16;;;:7;:16;:::i;:::-;:38;;;;;16641:45;16524:170;:::o;16648:38::-;16668:7;;:18;;:7;;:::i;:18::-;;16524:170;:::o;16598:32::-;16619:11;16626:4;16619:11;:::o;1309:15902::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;14334:362;14425:60;14433:16;;;:::i;:::-;14425:60;:::i;:::-;14506:45;14532:19;;:10;:19;:::i;:::-;14506:45;:::i;:::-;14566:16;:23;:16;1309:15902;;;14566:23;:27;;14592:1;14566:27;:::i;:::-;;14562:76;;14665:23;;;;:::i;14562:76::-;14610:16;;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;1309:15902:15:-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;14906:208;15081:25;14906:208;14977:48;14985:20;14995:10;15003:1;14995:10;:::i;14985:20::-;-1:-1:-1;;;;;1309:15902:15;;14985:20;;14977:48;:::i;:::-;15036:29;15061:4;15036:22;;:14;:22;:::i;15081:25::-;;;1309:15902;;;;14906:208;;;;:::i;19567:162:17:-;19687:35;19567:162;19687:25;:35;19567:162;19664:4;1309:15902:15;;;19664:4:17;19687:25;:18;:25;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;15984:24:15;;15882:134;15950:18;;;;:::i;15882:134::-;;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;2627:22:0;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;-1:-1:-1;;;;;1309:15902:15;2672:31:0;;;1309:15902:15;;;;2543:215:0;;;;:::i;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;1309:15902:15:-;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;:::i;15285:139::-;15388:28;;15285:139;15352:20;;;;:::i;15285:139::-;;;;:::i;1309:15902::-;;;;;;;;;;;;;-1:-1:-1;;;;;;1309:15902:15;;;10689:630:17;11092:25;11107:10;11092:25;:::i;:::-;-1:-1:-1;;;;;;1309:15902:15;;11092:25:17;:101;;;;;10689:630;11092:177;;;;11073:196;10689:630;:::o;11092:177::-;11244:25;;;;11259:10;11244:25;:::i;:::-;;-1:-1:-1;;;;;;1309:15902:15;;;11092:101:17;11168:25;;;11183:10;11168:25;:::i;:::-;-1:-1:-1;;;;;;1309:15902:15;;11168:25:17;11092:101;;;1309:15902:15;;;;;-1:-1:-1;;1309:15902:15;;:::o;2233:51:17:-;2276:8;-1:-1:-1;;;2276:8:17;:::i;19978:465::-;;1309:15902:15;20043:11:17;;20070:15;;:::i;:::-;:26;-1:-1:-1;20070:26:17;20066:371;;19978:465;;:::o;20066:371::-;20221:23;20231:13;;;:::i;20221:23::-;;;20217:210;;19978:465;;:::o;20217:210::-;-1:-1:-1;20264:14:17;;-1:-1:-1;20296:60:17;20313:26;;:17;;:26;:::i;:::-;20304:35;;20303:42;;20344:1;20303:42;:::i;:::-;;;;20347:9;;;;:::i;:::-;20296:60;;20303:42;;20383:29;20392:15;;:::i;:::-;20383:29;20411:1;20383:29;:::i;:::-;:24;;1309:15902:15;;49703:160:17;49766:91;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;1533:2;1309:15902;;;;;;;:::i;:::-;;;;:::i;41333:460:17:-;;41473:16;;;:::i;:::-;41504:45;;;;41333:460;41500:198;;41333:460;41758:28;;;41708:24;:35;:24;:30;:24;;:15;:24;:::i;:::-;:30;:35;:::i;41758:28::-;;;:::i;:::-;;;;1309:15902:15;;;;41758:28:17;;;;1309:15902:15;41500:198:17;41567:45;41568:44;47819:10;41568:44;;:::i;41567:45::-;41563:135;41500:198;41563:135;-1:-1:-1;;;41640:42:17;:::i;41504:45::-;-1:-1:-1;47819:10:17;41521:28;-1:-1:-1;;;;;1309:15902:15;;41521:28:17;1309:15902:15;41521:28:17;;;41504:45;;1796:162:0;1855:7;;:::i;:::-;47819:10:17;;1855:23:0;47819:10:17;1855:23:0;1309:15902:15;1855:23:0;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;-1:-1:-1;;;;;1309:15902:15;;;1901:40:0;1309:15902:15;;1901:40:0;;;5966:90:17;6041:8;6048:1;6041:8;:::i;1864:36:5:-;1899:1;;;:::i;2575:307::-;2702:7;;;:::i;:::-;2713;;:::i;:::-;2702:18;;;2698:86;;2858:17;;;;:::i;2698:86::-;-1:-1:-1;;;2743:30:5;;;;;;1901:40:0;1818::5;1857:1;;;:::i;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;1878:128:4:-;1943:8;;:::i;:::-;1939:61;;1878:128::o;1939:61::-;-1:-1:-1;;;1974:15:4;;;;;;1901:40:0;1309:15902:15;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;12861:389;;;;1309:15902;;13094:24;13129:3;13120:7;;;;;;;13129:3;13161:15;13153:63;13161:20;;:15;13120:7;13161:15;;:::i;:::-;:20;1533:2;-1:-1:-1;;;;;1309:15902:15;;;13161:20;:29;-1:-1:-1;;;;;1309:15902:15;;13161:29;1309:15902;13161:29;;13153:63;:::i;13129:3::-;13094:24;;;;13120:7;;;;;12861:389::o;5017:176:10:-;5120:66;;5153:20;;:::i;:::-;3993:249:11;;;;;-1:-1:-1;;;3993:249:11;;;;;;;;;;;3874:374;;3714:255:9;3927:8;;3871:27;;;:::i;:::-;3927:8;;;;;:::i;12535:318:15:-;;;;;12722:13;12734:1;12722:13;:::i;:::-;12737:12;;;;;;;12751:3;12802:16;;;12737:12;12802:16;;1309:15902;;;12802:16;;;;:::i;12751:3::-;12722:13;;;;12737:12;;;;;;;12535:318::o;1309:15902::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;-1:-1:-1;;;1309:15902:15;;;;;;;13258:1068;13384:18;;:7;;;:::i;:::-;1309:15902;;;13384:18;13438:12;;;:::i;:::-;13462:1;13454:10;;;;:::i;:::-;13438:26;;-1:-1:-1;;;;;1309:15902:15;;13438:26;1309:15902;13438:26;;13434:885;;14002:20;;13481:54;13489:21;:9;:21;;13481:54;:::i;:::-;13568:30;;:16;;;:::i;:30::-;;;:46;;;13434:885;13564:364;;13434:885;13489:9;1309:15902;;;14002:20;14045:10;;;;:::i;:::-;;;14041:180;;13434:885;;13258:1068::o;14041:180::-;14105:34;14162:39;14105:34;;1309:15902;;;;14105:34;;;:10;:34;;;;:::i;:::-;;14162:39;:::i;13564:364::-;13731:8;13654:16;;;;;:::i;:::-;:50;13698:5;13654:50;:::i;:::-;:54;;;1309:15902;;;;13654:54;;;;;;;;;:::i;:::-;-1:-1:-1;13731:8:15;;1309:15902;13731:8;13727:186;13564:364;13727:186;13848:45;13789:36;;;1309:15902;;;;13789:36;;;:10;;:36;;;;:::i;:::-;;13848:45;:::i;13568:46::-;13602:12;;;;:::i;:::-;;;13568:46;;13434:885;1309:15902;;-1:-1:-1;;;14268:39:15;;1309:15902;14268:39;;;1309:15902;;;;;;;;;;;;;;6586:101:17;6667:13;;;:::i;1604:51::-;1653:2;;;:::i;:::-;;;;;;;1309:15902:15;;1653:2:17;;1309:15902:15;;;30652:2343:17;30747:13;;;:::i;:::-;30786:1;;30774:13;;;;:::i;:::-;;;30770:53;;31413:30;;31323:170;31357:136;31413:30;31743:26;31413:30;17787:151;;;;17626:318;;31413:30;31446:33;31461:10;;;:::i;:::-;31446:33;;;:::i;:::-;;;;;:::i;:::-;31413:66;31357:136;-1:-1:-1;;;;;17192:331:17;;;;;;;17086:443;;31357:136;31323:31;;:17;:31;:::i;:170::-;31902:20;31910:11;31743:1;31748:21;31704:71;31730:45;31748:21;;:::i;:::-;31743:26;:1;:26;:::i;:::-;;;;;;:::i;:::-;31742:32;31730:45;1309:15902:15;;;31730:45:17;31704:71;:22;;:18;:22;:::i;:::-;:71;;;;:::i;31902:20::-;31925:16;;:::i;:::-;31902:39;;;31960:13;31956:54;;1309:15902:15;;;;;;32125:27:17;-1:-1:-1;;32125:27:17;1309:15902:15:o;32125:27:17:-;;32121:77;;31743:1;32213:662;;;;;32889:19;;;;;;;;:::i;32213:662::-;;;;;32857:16;32234:450;;;;;;;;32213:662;;;;;32857:9;1533:2:15;;32857:9:17;:16;:9;:16;32213:662;32857:16;;;;32121:77;-1:-1:-1;;;32162:35:17;:::i;31956:54::-;-1:-1:-1;;;31983:26:17;:::i;30770:53::-;-1:-1:-1;;;30797:25:17;:::i;14380:2173::-;14477:15;;:::i;:::-;:26;-1:-1:-1;14477:26:17;14473:2017;;14380:2173;-1:-1:-1;;;16507:38:17;:::i;14473:2017::-;14528:17;:26;;;;:17;:26;:::i;:::-;14519:35;14857:1;14847:11;;;;:::i;:::-;;;14843:1270;;16444:15;;16435:29;;16444:15;;:::i;:::-;16435:29;;:::i;:::-;;14473:2017;16431:48;16466:13;:::o;14843:1270::-;14893:13;;;;14882:24;14893:13;;;:::i;14882:24::-;;;;14878:77;;15502:597;;;-1:-1:-1;;2943:14:17;15596:9;;15578:28;;15596:9;15578:28;;:::i;:::-;15569:37;15654:11;;;:::i;:::-;;;15650:25;;15710:15;;15701:29;;15710:15;;:::i;15701:29::-;;15697:48;;-1:-1:-1;;;16041:38:17;:::i;15650:25::-;15667:8;;-1:-1:-1;;;2943:14:17;15596:9;1309:15902:15;21721:474:17;21929:24;21888:65;21721:474;21820:27;1309:15902:15;;;21820:27:17;21929:24;:15;:24;:::i;21888:65::-;22057:132;;;21721:474;:::o;20967:646::-;;;-1:-1:-1;;;;;20967:646:17;;21112:11;1309:15902:15;;;21112:11:17;21135:472;;;;;;;;;;20967:646;:::o;2625:49::-;2671:3;;;:::i;:::-;;;;;;;1309:15902:15;;2671:3:17;;1309:15902:15;;;2671:3:17;;;;;1309:15902:15;;2671:3:17;;;;;;;;;;;;;;47060:304;47303:31;47295:40;47060:304;47295:62;47060:304;;47191:7;1309:15902:15;;;47191:7:17;47259:18;47229:49;47236:41;47259:18;;:::i;:::-;47236:41;;;:::i;:::-;47229:49;:::i;:::-;47303:31;;:::i;:::-;47295:40;:::i;:::-;:62;:::i;1565:66:4:-;;;:::i;:::-;1623:1;2644:15;2654:5;2644:15;;:::i;:::-;2674:22;;47819:10:17;2683:12:4;47733:103:17;2586:117:4;;;:::i;2466:103:5:-;;2531:1;2466:103;;;;;:::i;:::-;1315:72:4;1379:1;1315:72;;;;;:::i;:::-;1379:1;:::i;1309:15902:15:-;;;;:::o;:::-;;;-1:-1:-1;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;-1:-1:-1;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6085:1235::-;6252:1;;6230:56;6238:16;6244:10;;;:::i;6238:16::-;-1:-1:-1;;;;;1309:15902:15;;6238:16;;6230:56;:::i;:::-;6297:38;6305:8;;;:::i;6297:38::-;6346:69;6354:24;:13;;;:::i;6346:69::-;1309:15902;;6434:21;;;;:::i;:::-;;:53;;;;6085:1235;6426:89;;;:::i;:::-;6534:12;;;:::i;:::-;;;:42;;;6085:1235;6526:71;;;:::i;:::-;6622:16;6623:15;;;:::i;6622:16::-;6618:128;;6085:1235;6762:7;;;:::i;:::-;:11;;;;:::i;:::-;;6758:69;;6085:1235;6862:14;;:::i;:::-;6897:8;;;;;:::i;:::-;1309:15902;;6923:20;;;;:::i;:::-;;6919:307;;6085:1235;7243:39;;;;;:::i;6919:307::-;6994:13;;;;;;;;;:::i;:::-;7009:12;;;;;;7061;7055:26;:19;7061:12;7023:3;7061:12;;;:::i;7055:26::-;:30;;;;:::i;:::-;;7051:130;;1533:2;;1309:15902;;7023:3;6994:13;;7051:130;7114:43;7145:12;;;;:::i;:::-;;7114:28;:10;1309:15902;;;7125:16;1309:15902;7114:28;:43;:::i;7009:12::-;;;;;;;7243:39;6919:307;;;6758:69;6806:8;;;:::i;:::-;6758:69;;6618:128;6663:19;;6671:10;6663:7;:19;:::i;:::-;:44;;;;6618:128;6655:79;;;:::i;:::-;6618:128;;6663:44;6686:7;6655:79;6686:7;;:::i;:::-;:21;6671:10;6686:21;1309:15902;6686:21;;6663:44;;;;6534:42;6562:14;6526:71;6550:26;6562:14;;:::i;6550:26::-;;;;6534:42;;;;6434:53;6459:16;6426:89;6459:16;;1309:15902;;;6459:16;:28;;6434:53;;;;6085:1235;6210:7;;6085:1235;;1309:15902;6210:7;:::i;6887:260:9:-;;7105:8;6887:260;;7051:25;6887:260;6972:7;1309:15902:15;;;6972:7:9;7051:25;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;1309:15902:15;;;;3052:40:0;;;;1309:15902:15;1315:72:4;;;:::i;:::-;1379:1;2398:14;2408:4;2398:14;;:::i;:::-;2427:20;;47819:10:17;2434:12:4;47733:103:17;2339:115:4;;;:::i;6120:126:10:-;6198:41;:5;6225:13;6198:41;;;:::i;6572:135::-;6653:47;:8;6683:16;6653:47;1309:15902:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;29533:673:17;;29711:45;:28;:88;29533:673;29691:4;1309:15902:15;;;29691:4:17;29711:28;;:::i;:45::-;;;:88;47819:10;29711:88;;1309:15902:15;;;;29711:88:17;;;;;;;;;;1309:15902:15;;;;29711:88:17;;;;;;;:::i;:::-;;;;;-1:-1:-1;;29711:88:17;;;29533:673;-1:-1:-1;29707:493:17;;29943:257;;:::i;:::-;1309:15902:15;;29989:18:17;;30006:1;29989:18;:::i;:::-;;29985:113;;30111:79;;;;;;29707:493;29867:64;29877:54;29867:64;29877:54;;:::i;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;11945:322:17:-;12047:17;12048:16;;;:::i;12047:17::-;12043:68;;12146:10;;:::i;:::-;1309:15902:15;;12173:26:17;;12198:1;12173:26;:::i;:::-;;:87;;12209:45;;12235:18;;12202:53;12235:18;;:::i;:::-;12209:45;;1309:15902:15;;;;12209:45:17;;;;;;;;;;:::i;12173:87::-;;;;;:::i;12043:68::-;-1:-1:-1;;;12074:36:17;:::i;1309:15902:15:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;13267:164:17:-;13396:27;13377:47;13267:164;13337:21;;:::i;13396:27::-;13377:47;:::i;3945:262:10:-;4021:13;4029:4;4021:13;:::i;:::-;:28;-1:-1:-1;;;;;4038:11:10;1309:15902:15;4021:28:10;1309:15902:15;4021:28:10;;:63;;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;4167:23;;:::i;4021:63::-;-1:-1:-1;4070:14:10;4053:13;:31;4021:63;;2129:778:9;;1309:15902:15;2232:17:9;2299:16;;1309:15902:15;;;2299:16:9;:22;;2319:2;2299:22;:::i;:::-;;2295:606;;2751:25;2337:9;2535:196;;;;;;;;;;;;;;;;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2815:10;;;2864:25;2872:16;2815:10;2823:1;2815:10;:::i;:::-;2872:16;1309:15902:15;;;2864:25:9;2807:83;;2827:35;2807:83;;:::o;1309:15902:15:-;;;;;;;;;;;;;;-1:-1:-1;1309:15902:15;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;8961:13;:::i;7280:532:9:-;;7375:20;7366:29;;;;:::i;:::-;;;;:::i;:::-;;7362:444;;7411:7;;;:::o;7362:444::-;7462:38;7471:29;7462:38;:::i;:::-;;;;:::i;:::-;;7458:348;;-1:-1:-1;;;7523:23:9;;;;1309:15902:15;7458:348:9;7567:44;7576:35;7567:44;:::i;:::-;;;;:::i;:::-;;7563:243;;7662:17;7634:46;7662:17;;;;:::i;:::-;-1:-1:-1;;;7634:46:9;;;;;1309:15902:15;;;;;;7563:243:9;7701:39;;7710:30;7701:39;:::i;:::-;;;:::i;:::-;;7697:109;;7563:243;;7280:532::o;7697:109::-;-1:-1:-1;;;7763:32:9;;;;;1309:15902:15;;;;46771:143:17;;;;46904:6;1309:15902:15;;;2078:126:4;2140:9;2141:8;;:::i;2140:9::-;2136:62;;2078:126::o;2136:62::-;-1:-1:-1;;;2172:15:4;;;;;;1901:40:0;1309:15902:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:9;;;6270:10;;;:::i;:::-;:79;;6283:66;6270:79;:::i;:::-;;6266:164;;6541:24;;;;;;;;1309:15902:15;;;;6541:24:9;;;;;;:::i;:::-;;;;;;;;;;;;;;6597:1;6589:10;;;;:::i;:::-;-1:-1:-1;;;;;1309:15902:15;;-1:-1:-1;;;;;1309:15902:15;;6579:20:9;6575:113;;6736:10;;;;:::i;:::-;6698:49;;;5203:1551;:::o;6575:113::-;6666:10;;;;;;:::i;:::-;6615:62;;6635:29;6615:62;;:::o;6266:164::-;6373:10;;;;6381:1;6373:10;:::i;:::-;6365:54;6385:30;6365:54;;:::o;1345:111:6:-;1390:66;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;1309:15902:15;;;;;;;1390:66:6;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1309:15902:15;;;;1390:66:6;;;;;;:::i;:::-;;;;:::i;3368:267::-;;3491:25;:46;;3520:17;;:::i;3491:46::-;;3487:142;;3560:15;;;;:::i;3487:142::-;3606:12;;;;:::i;16410:106:15:-;16488:20;16495:13;16488:20;:::i;47933:1708:17:-;;48027:1608;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47933:1708::o;2111:54::-;2162:3;;;:::i;:::-;;;;;1309:15902:15;;2162:3:17;;;;;16647:361;;16943:58;16713:31;;:::i;:::-;16943:19;16965:36;16972:28;16713:31;16781:15;16756:41;16773:24;16781:15;;;:::i;16773:24::-;-1:-1:-1;;;;;1309:15902:15;;;;16756:41:17;16807:68;16834:41;16841:33;16851:23;;:::i;:::-;16841:33;;:::i;:::-;16834:41;:::i;:::-;2162:3;;16807:24;;;1309:15902:15;;16807:68:17;16885:48;16913:15;;:::i;:::-;16904:29;;16932:1;16904:29;:::i;:::-;:24;;;1309:15902:15;;16904:29:17;;;16885:16;;;1309:15902:15;;16885:48:17;16982:18;;:::i;:::-;16972:28;;:::i;16965:36::-;2671:3;;16943:19;;1309:15902:15;;2079:95:10;;;;;;;;;;;;;;;;;;;;;1309:15902:15;;2079:95:10;;;;1309:15902:15;;2079:95:10;;;-1:-1:-1;;;;;1309:15902:15;;;;4213:179:10;2079:95;4304:80;4339:14;4326:11;4304:80;4370:13;4378:4;4370:13;:::i;:::-;1309:15902:15;;4304:80:10;;;;;;4355:13;;4304:80;;;:::i;:::-;4294:91;;;1309:15902:15;;;4294:91:10;;4213:179;:::o;1309:15902:15:-;;;;;;;:::i;:::-;;;:::i;2078:378:6:-;2176:16;;;:::i;:::-;2300:14;;;2311:2;2300:14;:::i;:::-;;:::i;:::-;2324:106;;;2311:2;2324:106;;;2078:378;:::o;2528:245::-;2633:24;2625:33;2528:245;2589:7;1309:15902:15;;;2633:24:6;2625:33;:::i;:::-;:40;2661:4;2625:40;:::i;:::-;;2679:11;2688:2;2679:11;:::i;:::-;;;2675:69;;2528:245;:::o;2675:69::-;-1:-1:-1;;;2713:20:6;;;;;;1901:40:0"},"methodIdentifiers":{"BATCH_TRANSFER_TYPEHASH()":"4c06baba","TBAImplementation()":"c3324b27","TBARegistry()":"fa5c3375","TRANSFER_PERMIT_TYPEHASH()":"e59ba924","addEscrowWallet(address)":"e31c6732","addMinter(address)":"983b2d56","approve(address,uint256)":"095ea7b3","availableSupply()":"7ecc2b56","balanceOf(address)":"70a08231","canMint(address)":"c2ba4744","contractURI()":"e8a3d485","eip712Domain()":"84b0196e","escrowTransfer(address,address,uint256[],uint256,uint8,bytes32,bytes32)":"52b91226","escrowTransferBatch(address,address,uint256,uint256,uint256,bytes)":"1d027aad","escrowTransferWithSignature(address,address,uint256[],uint256,bytes)":"916f9ab4","getApproved(uint256)":"081812fc","getMintPrice(uint256)":"559e775b","getNonce(address)":"2d0335ab","getTBA(uint256)":"15d9756e","isApprovedForAll(address,address)":"e985e9c5","isEscrowWallet(address)":"afc0381d","isPublicMinting()":"2c673915","maxSupply()":"d5abeb01","mint(address)":"6a627842","mint(address,uint256)":"40c10f19","mint(address,uint256,string[])":"22df11d8","mintFee()":"13966db5","mintFeeRecipient()":"765b0c36","mintFeeToken()":"c4c69033","mintOpen()":"24bbd049","minters(address)":"f46eccc4","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","removeEscrowWallet(address)":"280007bb","removeMinter(address)":"3092afd5","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setContractURI(string)":"938e3d7b","setMintFee(uint256)":"eddd0d9c","setMintOpen(bool)":"f8004d31","setPublicMinting(bool)":"254a4737","setTokenURI(uint256,string)":"162094c4","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mintFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mintOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPublicMinting\",\"type\":\"bool\"}],\"internalType\":\"struct ISPGNFT.InitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_TBARegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TBAImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"BatchEscrowTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"BatchMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"EscrowTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"EscrowWalletAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"EscrowWalletRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"MintFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"MintStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPublic\",\"type\":\"bool\"}],\"name\":\"PublicMintingStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BATCH_TRANSFER_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TBAImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TBARegistry\",\"outputs\":[{\"internalType\":\"contract IERC6551Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"addEscrowWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"escrowTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"escrowTransferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"escrowTransferWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"getMintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTBA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isEscrowWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicMinting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tokenURIs\",\"type\":\"string[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeEscrowWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintFee\",\"type\":\"uint256\"}],\"name\":\"setMintFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_mintOpen\",\"type\":\"bool\"}],\"name\":\"setMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isPublic\",\"type\":\"bool\"}],\"name\":\"setPublicMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SPGNFTCollection.sol\":\"SPGNFTCollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SPGNFTCollection.sol\":{\"keccak256\":\"0x4340d98ff56aeec85f08b56566897fc04836fe6b3b7c6343b873a54f8121a9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4305a82a786dac62e6295c3bb7a72032b6eb82b49654d4fffdae695d25d62af4\",\"dweb:/ipfs/QmRsnAmauXKAzjGTXsRaswsHRYUq2S1S4rKutVkHWymZGj\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8394,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":8396,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":8398,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8400,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":8404,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":8408,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":8413,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)8326_storage)"},{"astId":8419,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":8421,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_spotMinted","offset":0,"slot":"8","type":"t_uint256"},{"astId":8,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_owner","offset":0,"slot":"9","type":"t_address"},{"astId":263,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_paused","offset":20,"slot":"9","type":"t_bool"},{"astId":373,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_status","offset":0,"slot":"10","type":"t_uint256"},{"astId":2559,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_nameFallback","offset":0,"slot":"11","type":"t_string_storage"},{"astId":2561,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_versionFallback","offset":0,"slot":"12","type":"t_string_storage"},{"astId":6494,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_baseTokenURI","offset":0,"slot":"13","type":"t_string_storage"},{"astId":6496,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"contractURI","offset":0,"slot":"14","type":"t_string_storage"},{"astId":6498,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"maxSupply","offset":0,"slot":"15","type":"t_uint256"},{"astId":6500,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"mintFee","offset":0,"slot":"16","type":"t_uint256"},{"astId":6502,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"mintFeeToken","offset":0,"slot":"17","type":"t_address"},{"astId":6504,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"mintFeeRecipient","offset":0,"slot":"18","type":"t_address"},{"astId":6506,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"mintOpen","offset":20,"slot":"18","type":"t_bool"},{"astId":6508,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"isPublicMinting","offset":21,"slot":"18","type":"t_bool"},{"astId":6512,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"_tokenURIs","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":6516,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"minters","offset":0,"slot":"20","type":"t_mapping(t_address,t_bool)"},{"astId":6520,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"isEscrowWallet","offset":0,"slot":"21","type":"t_mapping(t_address,t_bool)"},{"astId":6524,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"nonces","offset":0,"slot":"22","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)8326_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)8326_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenApprovalRef)8326_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":8325,"contract":"contracts/SPGNFTCollection.sol:SPGNFTCollection","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/SPGNFTFactory.sol":{"SPGNFTFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collection","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"deployer","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"}],"name":"CollectionDeployed","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allCollections","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"mintFee","type":"uint256"},{"internalType":"address","name":"mintFeeToken","type":"address"},{"internalType":"address","name":"mintFeeRecipient","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"mintOpen","type":"bool"},{"internalType":"bool","name":"isPublicMinting","type":"bool"}],"internalType":"struct ISPGNFT.InitParams","name":"params","type":"tuple"},{"internalType":"address","name":"tbaRegistry","type":"address"},{"internalType":"address","name":"tbaImplementation","type":"address"}],"name":"deployCollection","outputs":[{"internalType":"address","name":"collection","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI","type":"string"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"tbaRegistry","type":"address"},{"internalType":"address","name":"tbaImplementation","type":"address"}],"name":"deployStoryCollection","outputs":[{"internalType":"address","name":"collection","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deployedCollections","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllCollectionsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getCollectionAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getDeployedCollections","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH1 0x40 MLOAD PUSH2 0x6027 PUSH2 0x1F DUP3 CODECOPY PUSH2 0x6027 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x167EF495 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2470EA1B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3B688672 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x637C4458 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xA4F0A9B9 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD8E8253 EQ PUSH2 0x69 JUMPI PUSH4 0xEBF595F8 SUB PUSH2 0x87 JUMPI PUSH2 0x64B JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x87 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x8C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x95 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF4 JUMPI PUSH2 0xEB PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST PUSH2 0xB8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP2 SLOAD PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x131 PUSH2 0xB8 SWAP2 PUSH1 0x1 PUSH2 0xD1 JUMP JUMPDEST SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x140 SWAP1 PUSH2 0x102 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x137 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x144 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1B7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x1C9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x195 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B7 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x212 PUSH2 0x20D DUP3 PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0xA2 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1F1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 PUSH1 0x20 PUSH2 0xB8 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x8E DUP2 PUSH2 0x102 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x87 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x284 SWAP2 DUP4 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x2A5 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x2C6 SWAP2 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x2E7 SWAP2 DUP4 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH2 0xB8 PUSH2 0x2F8 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x308 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST SWAP5 ADD PUSH2 0x250 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x69F JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x1ED DUP2 PUSH1 0x20 SWAP4 PUSH2 0x137 JUMP JUMPDEST SWAP1 PUSH2 0x372 PUSH2 0x36B PUSH2 0x361 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x383 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x39D PUSH2 0x396 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x345 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x376 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xB8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x352 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x3D1 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3A5 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x8E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x3DD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SLT PUSH2 0x87 JUMPI PUSH2 0x40B PUSH2 0x160 PUSH2 0x1BC JUMP JUMPDEST SWAP3 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x429 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x44B SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x470 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x87 JUMPI PUSH2 0x499 DUP2 PUSH2 0x517 SWAP4 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4AB DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x4BD DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x4CF DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x4E1 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x4F5 DUP3 DUP3 DUP7 ADD PUSH2 0x250 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x508 DUP3 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 SWAP4 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x87 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0x549 DUP5 PUSH2 0xB8 SWAP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x308 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x51D JUMP JUMPDEST SWAP2 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x87 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x59C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP1 PUSH1 0x20 PUSH2 0x5E3 DUP3 DUP7 PUSH2 0x250 JUMP JUMPDEST SWAP5 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xB8 PUSH2 0xB8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x600 JUMP JUMPDEST SWAP1 PUSH2 0x61C SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH1 0x0 PUSH2 0x612 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x131 SWAP2 PUSH2 0xD1 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x102 PUSH2 0xB8 PUSH2 0xB8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x667 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x160 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB8 PUSH2 0xB8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x140 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xB8 SWAP7 SWAP6 SWAP5 PUSH2 0x729 PUSH2 0x740 SWAP3 PUSH2 0x6F8 PUSH2 0x6EA SWAP8 PUSH2 0x6F1 PUSH2 0x752 SWAP9 PUSH2 0x6C2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x6E3 PUSH2 0x6D4 DUP13 PUSH2 0x674 JUMP JUMPDEST SWAP8 PUSH2 0x6DD PUSH2 0x67D JUMP JUMPDEST SWAP15 DUP16 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x70D PUSH2 0x706 PUSH2 0x2710 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x80 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x720 PUSH2 0x719 DUP7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD PUSH2 0x695 JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH1 0xE0 DUP8 ADD PUSH2 0x695 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xB8 SWAP1 SLOAD PUSH2 0x757 JUMP JUMPDEST SWAP1 PUSH2 0x785 PUSH2 0x779 PUSH2 0x361 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x796 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7B7 PUSH2 0x7B0 PUSH1 0x1 SWAP3 PUSH2 0x7AB DUP8 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x789 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP2 PUSH2 0x76A JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x7E3 SWAP3 PUSH2 0x7DA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x7BF JUMP JUMPDEST SUB DUP4 PUSH2 0x195 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x80A PUSH2 0xB8 SWAP2 PUSH2 0x802 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST ISZERO PUSH2 0x87 JUMPI JUMP JUMPDEST PUSH2 0xB8 SWAP1 MLOAD PUSH2 0x102 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x837 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x827 JUMP JUMPDEST PUSH2 0x868 PUSH2 0x871 PUSH1 0x20 SWAP4 PUSH2 0x1ED SWAP4 PUSH2 0x85C DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x824 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP1 PUSH2 0x140 DUP1 PUSH2 0x8DD PUSH2 0x8CB PUSH2 0x8B9 PUSH2 0x8A7 PUSH2 0x160 DUP8 ADD PUSH1 0x0 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x0 DUP11 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH2 0x8ED PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x8FC PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x90E PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x934 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x977 PUSH2 0x96C PUSH2 0xA2 SWAP6 SWAP8 SWAP7 SWAP5 PUSH1 0x60 DUP5 ADD SWAP1 DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x87B JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x9A9 SWAP2 MUL SWAP2 PUSH2 0x9A4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 SHL SWAP1 JUMP JUMPDEST SWAP3 SHL SWAP1 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x9C4 PUSH2 0xB8 PUSH2 0x9CC SWAP4 PUSH2 0x609 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x98A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1B7 JUMPI DUP3 PUSH2 0x9F8 SWAP2 PUSH1 0x1 PUSH2 0xA2 SWAP6 ADD DUP2 SSTORE PUSH2 0xD1 JUMP JUMPDEST SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH2 0xB8 SWAP4 SWAP2 SWAP3 PUSH2 0xA15 SWAP2 DUP5 ADD SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP1 MLOAD MLOAD PUSH2 0xA45 PUSH1 0x0 SWAP2 PUSH2 0xA3F PUSH2 0xA3B DUP5 PUSH2 0x688 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x80F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0xA64 PUSH2 0xA58 PUSH2 0x820 DUP7 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xA3B DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD SWAP5 PUSH2 0xA73 DUP7 PUSH2 0x816 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xA7F DUP6 PUSH2 0x674 JUMP JUMPDEST SWAP2 PUSH2 0xA92 PUSH2 0xA8C DUP5 PUSH2 0x102 JUMP JUMPDEST SWAP2 PUSH2 0x102 JUMP JUMPDEST EQ ISZERO PUSH2 0x80F JUMP JUMPDEST PUSH2 0xAB3 PUSH2 0xAA7 PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xA3B DUP8 PUSH2 0x688 JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0xABF DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xA92 DUP5 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xAD4 DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xA92 DUP6 PUSH2 0x102 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0xAEE PUSH2 0xA3B DUP7 PUSH2 0x688 JUMP JUMPDEST GT PUSH2 0xBCF JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5387 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1B7 JUMPI DUP4 SWAP3 DUP7 PUSH2 0xB26 SWAP4 PUSH2 0x5387 PUSH2 0xC6B DUP8 CODECOPY PUSH2 0x94A JUMP JUMPDEST SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH2 0xBCA JUMPI PUSH2 0xB3C PUSH2 0xB6B SWAP2 PUSH2 0x609 JUMP JUMPDEST SWAP5 PUSH2 0xB5B DUP7 PUSH2 0xB56 PUSH2 0xB8 PUSH2 0xB50 DUP6 PUSH2 0x816 JUMP JUMPDEST DUP8 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xB66 DUP7 PUSH1 0x1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 MLOAD SWAP1 PUSH32 0x1309157DD19792BDFD72678BA7958D9D18EC4B35F3C362C6203332BB2C771E66 PUSH2 0xBA4 PUSH2 0xB9E DUP7 PUSH2 0x609 JUMP JUMPDEST SWAP3 PUSH2 0x609 JUMP JUMPDEST SWAP3 PUSH2 0xBAE CALLER PUSH2 0x609 JUMP JUMPDEST SWAP5 PUSH2 0xBC4 PUSH2 0xBBB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9FE JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH2 0xBEB SWAP1 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0xBE5 PUSH1 0xE0 DUP10 ADD PUSH2 0x816 JUMP JUMPDEST SWAP3 PUSH2 0x102 JUMP JUMPDEST CODESIZE PUSH2 0xAF4 JUMP JUMPDEST ISZERO PUSH2 0xBF8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4445585F4F55545F4F465F424F554E445300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x131 PUSH2 0xB8 SWAP2 PUSH2 0xC4C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xC63 PUSH2 0xC5C PUSH2 0xB8 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD1 JUMP INVALID PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x90 JUMPI PUSH2 0x1B PUSH2 0x15 PUSH2 0x334 JUMP JUMPDEST SWAP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481A PUSH2 0xB6D DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x4200 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x422D ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x41CD ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x4716 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x46F5 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x3F4C ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x3F79 ADD MSTORE PUSH2 0x160 MLOAD DUP2 DUP2 DUP2 PUSH2 0x129A ADD MSTORE PUSH2 0x13E5 ADD MSTORE PUSH2 0x180 MLOAD DUP2 DUP2 DUP2 PUSH2 0xF96 ADD MSTORE PUSH2 0x140B ADD MSTORE PUSH2 0x481A SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0xDE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xAB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xCC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x11A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x13F PUSH2 0x13A DUP3 PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x90 JUMPI PUSH2 0xE5 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x107 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x90 JUMPI DUP2 MLOAD PUSH2 0x173 SWAP3 PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x90 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x198 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x1B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SLT PUSH2 0x90 JUMPI PUSH2 0x1E2 PUSH2 0x160 PUSH2 0xD1 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x201 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x222 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x246 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x90 JUMPI PUSH2 0x26E DUP2 PUSH2 0x2EC SWAP4 DUP6 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x280 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x292 DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2A4 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2B6 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x2CA DUP3 DUP3 DUP7 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x2DD DUP3 DUP3 DUP7 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 SWAP4 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x90 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI PUSH2 0x31D DUP5 PUSH2 0x173 SWAP3 DUP6 ADD PUSH2 0x1C9 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x32D DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x5387 DUP1 CODESIZE SUB DUP1 PUSH2 0x347 DUP2 PUSH2 0xD1 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x2F2 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP1 PUSH2 0x364 PUSH2 0x13A DUP4 PUSH2 0xE7 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x373 PUSH1 0x10 PUSH2 0x357 JUMP JUMPDEST PUSH16 0x29A823A7232A21B7B63632B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x1 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x397 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x3EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3E7 JUMPI JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3DC JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x42E PUSH2 0x173 PUSH2 0x436 SWAP4 PUSH2 0x410 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3F6 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x451 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x45F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x43A JUMP JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x474 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x486 PUSH2 0xE5 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x4A8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x446 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 PUSH2 0x4BB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC JUMPI PUSH2 0x4DE DUP3 PUSH2 0x4D8 DUP6 SLOAD PUSH2 0x3CC JUMP JUMPDEST DUP6 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x519 JUMPI PUSH2 0x436 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x50E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x52E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x56C JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x553 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x532 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP2 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x5A8 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x410 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x406 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5D2 JUMP JUMPDEST SWAP1 PUSH2 0x5F4 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x5DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5AF JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x61A PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5FB JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x640 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x621 JUMP JUMPDEST SWAP1 PUSH2 0x651 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x678 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x65F JUMP JUMPDEST SWAP1 PUSH2 0x76A PUSH2 0x763 PUSH2 0x140 PUSH2 0x784 SWAP5 PUSH2 0x6C0 PUSH2 0x698 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 ADD MLOAD SWAP2 PUSH1 0x20 DUP7 ADD MLOAD SWAP4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6DE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xE PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6EC PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH2 0x598 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x701 PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x726 PUSH2 0x71F PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x73D PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0x755 PUSH2 0x120 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x60A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x630 JUMP JUMPDEST PUSH2 0x77F PUSH1 0x1 PUSH2 0x77A CALLER PUSH1 0x15 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x7DB SWAP5 PUSH2 0x7A1 SWAP2 PUSH2 0x7C2 SWAP5 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x7AC PUSH1 0xB DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x7BB PUSH1 0xC DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x140 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE0 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x7F7 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0x803 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xC0 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x81D JUMP JUMPDEST PUSH2 0x173 PUSH1 0x1 PUSH2 0x410 JUMP JUMPDEST SWAP1 PUSH2 0x828 SWAP3 SWAP2 PUSH2 0x83A JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x833 PUSH2 0x813 JUMP JUMPDEST PUSH1 0xA PUSH2 0x598 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x18C PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x845 JUMP JUMPDEST SWAP2 PUSH2 0x865 SWAP2 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP2 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x894 JUMPI POP POP PUSH2 0xE5 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE DUP1 PUSH1 0x24 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5 SWAP2 DUP3 SWAP2 PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x8CC SWAP1 PUSH1 0x2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x8E6 DUP2 PUSH1 0x0 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x8F3 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x8FE JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x173 PUSH1 0xFF PUSH2 0x410 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x924 PUSH2 0x8F3 PUSH1 0x20 PUSH2 0x410 JUMP JUMPDEST LT ISZERO PUSH2 0x934 JUMPI PUSH2 0x173 SWAP2 POP PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 PUSH2 0x946 SWAP4 SWAP1 JUMP JUMPDEST ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x90B JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0xE5 SWAP5 PUSH2 0x983 PUSH2 0x98A SWAP3 PUSH2 0x97C PUSH1 0x80 SWAP7 PUSH2 0x975 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x9F6 PUSH2 0x9C6 PUSH1 0xE0 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100 MLOAD SWAP1 PUSH2 0x9EA PUSH2 0x9D7 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x951 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA01 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH2 0x173 SWAP1 SLOAD PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0xA33 PUSH2 0xA28 PUSH1 0x9 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x77F DUP5 PUSH1 0x9 PUSH2 0x5E4 JUMP JUMPDEST SWAP2 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA64 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x0 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA9E PUSH2 0xAA7 PUSH1 0x20 SWAP4 PUSH2 0x103 SWAP4 PUSH2 0xA92 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x173 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xADB PUSH2 0xAD7 PUSH2 0xAD0 DUP4 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0xAE8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xAFA SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x8 MUL SHL SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x410 JUMP JUMPDEST DUP1 PUSH2 0xB10 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x8F3 PUSH1 0x1F PUSH2 0x410 JUMP JUMPDEST GT PUSH2 0xB49 JUMPI POP PUSH2 0x173 DUP2 PUSH2 0xB43 PUSH2 0xB3E PUSH2 0xB39 PUSH2 0x173 SWAP6 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST OR PUSH2 0x410 JUMP JUMPDEST PUSH2 0x8B2 SWAP1 PUSH2 0xB56 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xAB1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x13966DB5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x15D9756E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x1D027AAD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x22DF11D8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x254A4737 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x280007BB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x2C673915 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x4C06BABA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52B91226 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x559E775B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x765B0C36 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7ECC2B56 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x916F9AB4 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAFC0381D EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC2BA4744 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3324B27 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC4C69033 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xE31C6732 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE59BA924 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF8004D31 EQ PUSH2 0x284 JUMPI PUSH4 0xFA5C3375 SUB PUSH2 0x397 JUMPI PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x120D JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x119B JUMP JUMPDEST PUSH2 0x103B JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x397 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x429 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x45A PUSH2 0x463 PUSH1 0x20 SWAP4 PUSH2 0x46D SWAP4 PUSH2 0x44E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x439 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x471 JUMP JUMPDEST DUP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x549 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x564 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x10 PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x619 DUP4 DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x602 JUMP JUMPDEST SWAP2 PUSH2 0x16B0 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x16CC JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x685 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x693 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x6A1 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6AF DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6BD DUP4 PUSH1 0x80 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x740 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x74E DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20BC JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 PUSH2 0x7A0 DUP5 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x549 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x14 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x7FA CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x86D CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x15 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x872 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8AF CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23FE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x245F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x564 PUSH2 0x909 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x251F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x91F CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x975 DUP4 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x983 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 PUSH2 0x9A4 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x9B4 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x3D2 PUSH2 0x9C5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x549 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x4AF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x9E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2A32 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA0D CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A55 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xA4B CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2A81 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xA61 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x2A8B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xA82 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2AB2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2ADA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xAC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x12 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB26 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 PUSH2 0x3D2 SWAP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xB9C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 PUSH2 0xBD9 PUSH2 0xBD2 PUSH2 0xBC8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBEA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC07 PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0xC7F PUSH2 0xC77 PUSH2 0xC96 SWAP6 PUSH2 0xC69 PUSH2 0xC8F SWAP6 PUSH2 0x3D2 SWAP13 SWAP11 PUSH2 0xC5C PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0xCBE PUSH2 0x2BA7 JUMP JUMPDEST SWAP4 PUSH2 0xCCE SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0xC0F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xD06 DUP3 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xD14 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP2 PUSH2 0xD35 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0xD45 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD77 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF2 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2DBD JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD96 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xDAC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x2DEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xDCA CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2E43 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0xDEB DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xE05 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCF JUMP JUMPDEST SWAP1 PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xE36 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE73 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0xE85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xECA PUSH2 0xEC5 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x397 JUMPI PUSH2 0x3BC SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 PUSH1 0x20 PUSH2 0x3D2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xF14 DUP2 DUP4 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF22 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF30 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP3 ADD PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xF5D CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xF7C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2EF5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xF91 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x0 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x11 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xFD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xFBA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x49D PUSH2 0xFF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xF PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1018 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xFFC JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1036 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x308B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x104B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x5A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x10C0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10BB JUMPI JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10B0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x10E7 PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1100 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1125 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x1169 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x114E JUMP JUMPDEST SUB DUP4 PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 LT PUSH2 0x118A JUMPI PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xE PUSH2 0x1179 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x11AB CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x118F JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x11D2 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x11EF CALLDATASIZE PUSH1 0x4 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1208 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1220 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x124B CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1263 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x31BC JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1291 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x407 PUSH32 0x0 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x31E5 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x132F JUMPI PUSH1 0x0 PUSH2 0x1329 PUSH2 0x3D2 SWAP3 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x12FB JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x331A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x13BF SWAP3 PUSH2 0x13A8 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP2 PUSH2 0x13DF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1409 PUSH32 0x0 PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1433 ADDRESS PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH2 0x145C PUSH2 0x1440 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x2F4DE29B PUSH1 0xE1 SHL DUP7 MSTORE CHAINID SWAP1 PUSH1 0x4 DUP8 ADD PUSH2 0x1372 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1472 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1494 JUMPI JUMPDEST PUSH2 0x148C DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x13C6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14AE PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST ISZERO PUSH2 0x14BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152F PUSH2 0x3D2 PUSH2 0x1537 SWAP4 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x151E JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1552 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1560 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x153B JUMP JUMPDEST ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1575 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x3BC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x15A9 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x15D8 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST DUP6 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1629 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1667 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x164D JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1644 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x162C JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH2 0x3BC SWAP4 SWAP3 PUSH2 0x16A4 PUSH2 0x169F DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x16EB PUSH2 0x16DC PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x1 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16E6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x1702 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x170A JUMPI POP JUMP JUMPDEST PUSH2 0x3D2 SWAP2 SWAP3 POP PUSH2 0x46D PUSH1 0x8 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x172C PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x174B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1750 JUMP JUMPDEST ISZERO PUSH2 0x176A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420657363726F772077616C6C657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST ISZERO PUSH2 0x17CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x64 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x32 PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x18C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207175616E7469747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xC0 PUSH2 0xE78 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xEB5 JUMP JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x1988 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0x12DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x196E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x1C1A PUSH2 0x1BF9 DUP6 SWAP8 PUSH2 0x1BF3 DUP7 SWAP11 PUSH2 0x1BED PUSH2 0x1AE3 PUSH2 0x1BD5 DUP10 PUSH2 0x1AFF PUSH2 0x1C51 SWAP12 SWAP15 PUSH2 0x1AF8 PUSH32 0x670FE7CB14F68CF31D6E2012CADD6F5325904B6D23D2CADEB3607C96D8B1FEC8 SWAP16 PUSH2 0x1C57 SWAP16 DUP15 SWAP2 PUSH2 0x1AEA PUSH2 0x1AF1 SWAP3 PUSH2 0x1A12 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x1A57 PUSH2 0x1A45 PUSH2 0x1A26 DUP14 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND JUMPDEST EQ ISZERO PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST EQ ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x1A64 DUP10 JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1A6E PUSH1 0x14 PUSH2 0x12DB JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1A98 PUSH2 0x1A80 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A89 DUP14 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT SWAP1 DUP2 PUSH2 0x1C7C JUMPI JUMPDEST POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x1AA3 DUP6 DUP5 DUP10 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x1AB9 PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST SWAP8 PUSH2 0x1AC2 PUSH2 0x1909 JUMP JUMPDEST SWAP15 DUP16 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST DUP3 ADD MLOAD PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1BC9 PUSH2 0x1B45 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x1B51 PUSH1 0x40 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B5D PUSH1 0x60 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B73 PUSH1 0xA0 PUSH2 0x1B6D PUSH1 0x80 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1B7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD SWAP8 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x352D JUMP JUMPDEST SWAP3 PUSH2 0x1917 JUMP JUMPDEST SWAP1 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1C40 PUSH2 0x1C28 DUP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x1C34 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1C4C DUP7 DUP9 DUP8 DUP5 PUSH2 0x356C JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x1C61 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x1C6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x198F JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 POP DUP7 GT ISZERO CODESIZE PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1A98 PUSH2 0x1C92 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CB6 PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CD4 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA0 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST ISZERO PUSH2 0x1CF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720697320636C6F736564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST ISZERO PUSH2 0x1D6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C7920657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E55524920636F756E74206D69736D61746368000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E02 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA8 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1E47 JUMP JUMPDEST ISZERO PUSH2 0x1E64 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x397 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 PUSH2 0x638 SWAP3 MUL DUP2 ADD SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 SWAP1 PUSH2 0x1F28 PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1CEF JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1F4C PUSH2 0x16FE PUSH2 0x3D2 PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST GT ISZERO PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F6C PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x207C JUMPI JUMPDEST PUSH2 0x1F90 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1FA1 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x206E JUMPI JUMPDEST PUSH2 0x1FAF PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x1FBA DUP2 DUP8 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 PUSH2 0x1FE6 PUSH2 0x1FE1 PUSH2 0x638 PUSH2 0x1FFD SWAP5 DUP13 DUP11 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FF2 PUSH2 0x16FE DUP8 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2002 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x2010 DUP3 DUP12 DUP10 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH1 0x13 DUP12 DUP7 ADD JUMPDEST SWAP1 PUSH2 0x12E8 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP2 POP SWAP5 POP PUSH2 0x2031 SWAP2 POP PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x59F9FB6D992D2AEE0ED338BB4C504A17FD3F67AE91A3135BC2EF947E308C41B2 PUSH2 0x2068 PUSH2 0x205E DUP6 PUSH2 0x12DB JUMP JUMPDEST SWAP4 PUSH2 0x5AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x2077 DUP5 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x208A PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x209F JUMPI JUMPDEST PUSH2 0x209A SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x1F86 JUMP JUMPDEST POP PUSH2 0x209A PUSH2 0x20AB PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x20B4 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2112 PUSH2 0x210C DUP6 PUSH2 0x398C JUMP JUMPDEST SWAP3 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x20CA JUMP JUMPDEST SWAP3 PUSH2 0x2133 PUSH2 0x212E PUSH2 0x2126 PUSH2 0x20E0 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP4 PUSH2 0x2140 PUSH2 0x212E DUP5 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x2152 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x22FA JUMPI PUSH2 0x2160 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x2171 PUSH2 0x1311 DUP3 DUP11 DUP11 PUSH2 0x3A73 JUMP JUMPDEST PUSH2 0x22CC JUMPI JUMPDEST POP PUSH2 0x2112 PUSH2 0x16FE SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x2223 SWAP3 PUSH2 0x224F SWAP9 PUSH2 0x22C2 JUMPI JUMPDEST POP PUSH2 0x21B0 PUSH2 0x219D DUP11 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x21A9 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x21BE PUSH2 0x1C28 DUP3 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x20F0 JUMP JUMPDEST SWAP6 PUSH2 0x21EB PUSH2 0x21D5 DUP3 DUP5 DUP14 PUSH2 0x3ADB JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2201 PUSH1 0x4 SWAP3 PUSH2 0x21FC DUP10 DUP6 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x2216 PUSH2 0x2210 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x2263 JUMPI JUMPDEST POP POP PUSH2 0xB47 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2256 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2275 PUSH2 0x2270 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2283 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x16FE DUP12 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x221C JUMP JUMPDEST PUSH2 0x22A7 PUSH2 0x3D2 DUP11 PUSH2 0x16C2 JUMP JUMPDEST DUP4 EQ PUSH2 0x2295 JUMPI PUSH2 0x22BA SWAP3 PUSH2 0x21FC SWAP2 PUSH2 0x12E8 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x22DE SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0x3094 JUMP JUMPDEST PUSH2 0x22ED JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x2176 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2312 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x2336 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x236D PUSH32 0x545ECF6FBCC235DF5FDFB676E1992025683C8097A8BD6E5A7C57B31F1C1B29D4 SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x2326 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2387 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x23AC JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x23A5 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23C5 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST PUSH32 0x566163B435DF210872AAFFF6E352033418C951E1538D138DFBCCD622C4B022D0 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1AB4 PUSH2 0x3D2 SWAP2 PUSH2 0x240D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2421 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2435 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2470 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3B5B JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2468 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0x2483 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24BC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B0 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x24E0 PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP2 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x250D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3BC SWAP3 PUSH2 0x252D PUSH2 0x2517 JUMP JUMPDEST SWAP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2546 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2559 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x276A JUMP JUMPDEST ISZERO PUSH2 0x2565 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062617463682073697A650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3D2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x25CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x262A PUSH2 0xEC5 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x397 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x264E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x265C DUP5 DUP7 PUSH2 0x4AF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x261A JUMP JUMPDEST SWAP1 PUSH2 0x2685 PUSH2 0xBD2 PUSH2 0x2681 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2696 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26AC PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2672 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x270C PUSH2 0x19A2 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x2705 PUSH1 0xA0 SWAP7 PUSH2 0x26F5 PUSH2 0x3BC SWAP11 PUSH2 0x26E5 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATACOPY JUMP JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 ADD JUMPDEST SWAP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 SWAP2 PUSH1 0x20 PUSH2 0x46D SWAP3 MUL SWAP4 DUP5 SWAP2 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2717 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP8 SWAP2 SWAP8 PUSH2 0x2784 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x27C1 PUSH2 0x27B2 PUSH2 0x2796 DUP6 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x27CA DUP10 PUSH2 0x1A5C JUMP JUMPDEST DUP7 SWAP6 PUSH2 0x27D5 DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT DUP1 PUSH2 0x2A19 JUMPI JUMPDEST PUSH2 0x27E6 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x27EF DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP12 DUP9 DUP3 LT ISZERO PUSH2 0x284F JUMPI SWAP1 PUSH2 0x1C34 DUP12 PUSH2 0x2844 PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0xA82 DUP16 DUP8 DUP2 DUP11 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 PUSH2 0x284A SWAP16 PUSH2 0x2828 SWAP9 DUP9 SWAP2 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x326B JUMP JUMPDEST PUSH2 0x25AA JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST PUSH2 0x2973 SWAP4 SWAP2 POP SWAP2 PUSH2 0x296E DUP7 PUSH2 0x28C2 DUP13 SWAP12 SWAP15 PUSH2 0x270C DUP16 DUP14 SWAP16 PUSH2 0x28BB PUSH2 0x2998 SWAP15 SWAP16 SWAP2 PUSH2 0x2985 SWAP14 SWAP12 PUSH2 0x28B6 PUSH2 0x2705 SWAP5 PUSH2 0x28A6 PUSH2 0x288C PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP8 PUSH2 0x2895 PUSH2 0x2610 JUMP JUMPDEST SWAP13 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE JUMP JUMPDEST PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BD5 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x28F9 DUP11 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC9 PUSH2 0x2911 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2933 PUSH2 0x2923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1BC9 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x293E PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x2956 PUSH1 0x80 PUSH2 0x2950 PUSH1 0x60 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3E93 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2993 PUSH2 0x1C28 DUP8 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C0 DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x299A SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST DUP8 DUP10 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST POP SWAP5 SWAP4 POP SWAP2 PUSH2 0x29F9 PUSH2 0x1C51 PUSH32 0xB29502FF9B08DF34AE7101BCAEDAE6124591B6F81D9AB5A4BA2BF20641FD2DE2 SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x2A03 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x2A10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2759 JUMP JUMPDEST POP PUSH2 0x27E6 PUSH2 0x2A28 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP9 GT ISZERO SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2533 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2A63 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2A42 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A75 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xD PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x212E PUSH2 0x2AAD PUSH2 0x3D2 SWAP3 PUSH2 0x2AA7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x398C JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2AC0 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0x3D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2B10 JUMPI PUSH2 0x1AB4 PUSH2 0x2B04 SWAP2 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x2B35 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B1D JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x2B5C PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2B64 PUSH2 0x16CC JUMP JUMPDEST SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B72 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B6A JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST PUSH2 0x2BAF PUSH2 0x3F47 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 PUSH2 0x3F74 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2BDE PUSH2 0x2BD9 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C09 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C1B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x2C32 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2720 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3D2 SWAP3 PUSH2 0x2C20 JUMP JUMPDEST SWAP5 SWAP7 SWAP1 SWAP2 SWAP4 SWAP6 SWAP3 SWAP7 PUSH2 0x2C4B PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2C79 PUSH2 0x1A45 PUSH2 0x2C5D DUP5 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x2C82 DUP9 PUSH2 0x1A5C JUMP JUMPDEST DUP9 SWAP5 PUSH2 0x2C8D DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 GT DUP1 PUSH2 0x2DA4 JUMPI JUMPDEST PUSH2 0x2C9E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x2CA7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI DUP1 PUSH2 0x1C34 PUSH2 0x2CD7 PUSH2 0xA82 PUSH2 0x2828 DUP16 SWAP6 DUP7 DUP15 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 DUP7 PUSH2 0x2CE9 SWAP14 DUP7 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2CA7 JUMP JUMPDEST POP PUSH2 0x2985 SWAP2 PUSH2 0x1BF3 PUSH2 0x2973 SWAP3 PUSH2 0x1BED DUP9 PUSH2 0x1BD5 DUP13 SWAP16 SWAP12 SWAP15 PUSH2 0x2D7C SWAP11 SWAP12 SWAP14 DUP16 SWAP2 PUSH2 0x1BC9 SWAP1 DUP16 PUSH2 0x2D58 PUSH2 0x1BC9 SWAP2 PUSH2 0x2D40 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x2D4A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x2D63 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x2D72 PUSH2 0x1AB4 DUP7 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2D9D DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x2D7E SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7C JUMP JUMPDEST POP PUSH2 0x2C9E PUSH2 0x2DB3 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP8 GT ISZERO SWAP1 POP PUSH2 0x2C95 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DD9 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xE PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x3 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2E05 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2E19 SWAP1 PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2E9F PUSH2 0x2E95 PUSH2 0x2E8F CALLER PUSH2 0x1C4C DUP8 PUSH2 0x23C0 DUP9 PUSH2 0x2E8A DUP6 PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST SWAP4 PUSH2 0xB50 JUMP JUMPDEST SWAP4 PUSH2 0x3F8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x2EB3 DUP2 DUP6 DUP6 PUSH2 0x20FD JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x2EC2 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x2ECE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2EDB SWAP4 PUSH2 0x1311 SWAP4 PUSH2 0x400C JUMP JUMPDEST PUSH2 0x2EE8 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2F30 JUMPI PUSH2 0x2F11 PUSH2 0x1A08 DUP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2F1C JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0x2BED JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2F93 PUSH2 0x2F8E DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2F36 JUMP JUMPDEST PUSH2 0x2FA6 PUSH2 0x2FA1 DUP3 PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH2 0x2FAF DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FBC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2FCB JUMPI PUSH2 0x3D2 SWAP2 POP PUSH2 0x4100 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FDB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x302C JUMP JUMPDEST ISZERO PUSH2 0x2FE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3061 SWAP1 PUSH2 0x3051 PUSH2 0x3040 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xF37F0CB2B2CC8066B1FA4738122412661CE5405CD9278F327D6905BB6D0E973F PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2E8A PUSH2 0x1A08 SWAP3 PUSH2 0x30A7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30BB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xE427E272B122E738FD867AC5DEFCEDB2BC9362341166A49D793D8B230F75670C SWAP2 PUSH2 0x5A6 DUP2 PUSH1 0x10 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3100 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP2 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x312F JUMPI POP POP PUSH2 0x3BC SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3161 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x318C JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3185 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xB304FE5DD2D3C45E8EC87C1DD1BD2B3A773B3135E84A7B9151F5FB4BF1A06D0E SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x31F2 PUSH4 0x1FFC9A7 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x3230 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3210 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x3222 PUSH4 0x5B5E139F PUSH2 0x31C5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x323F PUSH4 0x80AC58CD PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x3206 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x3278 PUSH2 0x3400 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3283 JUMPI POP POP JUMP JUMPDEST PUSH2 0x3290 PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST DUP3 LT PUSH2 0x329A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x32AD PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x32BC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x32D0 JUMPI PUSH2 0x32CB SWAP2 POP PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x329F JUMP JUMPDEST POP PUSH2 0x2F2C PUSH2 0x32DC PUSH2 0x325E JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3313 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0xB50 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x32F4 JUMP JUMPDEST SWAP2 PUSH2 0x3324 DUP3 PUSH2 0x2A95 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x33A8 JUMPI JUMPDEST PUSH2 0x3389 JUMPI JUMPDEST PUSH2 0x3351 PUSH2 0x2E8F PUSH2 0x3357 SWAP3 PUSH2 0x1C4C DUP7 PUSH1 0x0 PUSH2 0x334B DUP9 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x3382 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x3396 PUSH2 0x1311 CALLER DUP4 PUSH2 0x3094 JUMP JUMPDEST ISZERO PUSH2 0x3330 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST POP CALLER PUSH2 0x33BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C07 JUMP JUMPDEST EQ ISZERO PUSH2 0x332B JUMP JUMPDEST PUSH2 0x33CB PUSH2 0x2BED JUMP JUMPDEST CALLER SWAP1 PUSH2 0x33D6 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x33DE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x341E PUSH1 0xA PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3426 PUSH2 0x340A JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x3438 JUMPI PUSH2 0x3BC SWAP1 PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x345F PUSH2 0x344A JUMP JUMPDEST PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x346E PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x3474 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420636F6E7365637574697665206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 DUP3 ADD SWAP2 JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3520 DUP2 PUSH2 0x1C34 PUSH2 0x3508 PUSH1 0x0 PUSH2 0x34FA PUSH2 0x34DB SWAP7 PUSH2 0x41A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x351A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST EQ PUSH2 0x3486 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3539 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x3563 SWAP2 PUSH2 0x4253 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42EE JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP2 PUSH2 0x357A PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x359D DUP2 PUSH2 0x1C34 PUSH2 0x3596 PUSH2 0x357C SWAP5 DUP8 ADD SWAP1 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x357A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x35B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3607 RETURNDATASIZE PUSH2 0x2500 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x361E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652068616E646C696E67206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x366A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x36B1 SWAP1 PUSH2 0x36AD PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST PUSH2 0x36BB PUSH1 0x11 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x36C7 DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH2 0x36DA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x37B8 JUMPI PUSH2 0x3711 SWAP2 PUSH2 0x36EF DUP3 CALLVALUE LT ISZERO PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x1C07 PUSH2 0x2837 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x37A7 JUMPI JUMPDEST PUSH2 0x3747 JUMPI JUMPDEST CALLVALUE SUB SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x371B DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 GT PUSH2 0x3725 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BC SWAP3 PUSH2 0x3733 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 CALLER GAS CALL PUSH2 0x3741 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3663 JUMP JUMPDEST PUSH2 0x377F DUP4 DUP1 PUSH2 0x3756 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3761 PUSH2 0x7530 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x376C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 SUB SWAP4 CALL PUSH2 0x377A PUSH2 0x35F8 JUMP JUMPDEST POP ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x370C JUMPI PUSH2 0x370C DUP4 DUP1 PUSH2 0x3792 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP6 CALLER GAS CALL PUSH2 0x37A1 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3617 JUMP JUMPDEST POP PUSH2 0x37B1 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230207061796D656E74206E6F7420696D706C656D656E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x40 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3822 PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3831 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x383E DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP3 EQ PUSH2 0x397F JUMPI DUP1 DUP3 PUSH2 0x3899 PUSH2 0x388E PUSH2 0x385C PUSH2 0x38C3 SWAP7 PUSH1 0x1 EQ PUSH1 0xE1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3879 PUSH2 0x3868 DUP10 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3871 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x3ADB JUMP JUMPDEST OR DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST PUSH2 0x21FC DUP9 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x38E1 PUSH2 0x2112 PUSH1 0x1 SWAP4 PUSH2 0x212E PUSH2 0x38C9 PUSH2 0x38B0 PUSH2 0x3807 JUMP JUMPDEST PUSH2 0x38BA PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x3811 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x38D7 DUP5 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST SWAP2 PUSH2 0x46D DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x38E9 PUSH2 0x20E0 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x3973 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x3902 PUSH1 0x0 NOT PUSH2 0x16FE JUMP JUMPDEST GT PUSH2 0x3966 JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x391E JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x1978 JUMP JUMPDEST ISZERO PUSH2 0x3954 JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x390B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x3924 JUMPI DUP1 PUSH2 0x3910 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3994 PUSH2 0x3400 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x39A9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x39BA PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x39C7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x39EB JUMPI POP POP PUSH2 0x39E3 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST SWAP3 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x399C JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x39FB PUSH2 0x3D2 DUP5 PUSH2 0x16C2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x399C JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x3A18 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 PUSH2 0x3A22 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x3A4A JUMPI POP POP PUSH2 0x3A38 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST EQ PUSH2 0x3D2 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x3A0A JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3A6D SWAP2 PUSH2 0x3A65 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0x3A87 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xE8 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3AAF PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3AC1 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3B10 PUSH2 0x3B15 SWAP2 PUSH2 0x3D2 SWAP5 SWAP4 PUSH2 0x3AEF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3B0A PUSH2 0x3B05 PUSH2 0x3AFE PUSH2 0x3A94 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x3AB4 JUMP JUMPDEST SWAP2 PUSH2 0x43A1 JUMP JUMPDEST PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x3B22 PUSH2 0x43AC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B31 PUSH1 0x0 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B1A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP4 SWAP3 SWAP2 PUSH2 0x3B72 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 PUSH2 0x3B81 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST ISZERO PUSH2 0x3B8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3BDB DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BF5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x3C13 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3C4D JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3C42 JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C62 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3C9A JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3C86 JUMPI POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND PUSH2 0x165D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3C66 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x3BEC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3CDF PUSH2 0x3CCE PUSH2 0x4D0 DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x3B86 JUMP JUMPDEST PUSH2 0x3CEC PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3CFB PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x3D09 PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x3E71 JUMPI JUMPDEST PUSH2 0x3D1A SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x3D23 DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP4 GT DUP1 PUSH2 0x3E58 JUMPI JUMPDEST PUSH2 0x3D34 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x3D41 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x3E18 JUMPI JUMPDEST PUSH2 0x3D50 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D5C PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3E0A JUMPI JUMPDEST PUSH2 0x3D6A PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x3D75 DUP5 DUP5 PUSH2 0x3827 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3D83 PUSH2 0x16FE DUP5 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3D94 JUMPI JUMPDEST POP POP PUSH2 0x2031 SWAP1 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x3DA3 DUP3 SWAP7 SWAP3 SWAP6 SWAP4 SWAP6 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DFB JUMPI DUP1 PUSH2 0x3DBF PUSH2 0x1913 PUSH2 0x1913 PUSH2 0x3DD6 SWAP5 DUP10 PUSH2 0x3BD2 JUMP JUMPDEST PUSH2 0x3DCB PUSH2 0x16FE DUP11 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3DDB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x3DE8 DUP3 DUP9 PUSH2 0x3BD2 JUMP JUMPDEST MLOAD PUSH2 0x3DF6 PUSH1 0x13 DUP9 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST PUSH2 0x3CB2 JUMP JUMPDEST POP SWAP3 POP SWAP4 POP SWAP2 PUSH2 0x2031 CODESIZE PUSH2 0x3D89 JUMP JUMPDEST PUSH2 0x3E13 DUP4 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x3D62 JUMP JUMPDEST PUSH2 0x3E26 PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3B JUMPI JUMPDEST PUSH2 0x3E36 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x3D46 JUMP JUMPDEST POP PUSH2 0x3E36 PUSH2 0x3E47 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x3E50 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E2D JUMP JUMPDEST POP PUSH2 0x3D34 PUSH2 0x3E67 PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO SWAP1 POP PUSH2 0x3D2B JUMP JUMPDEST POP PUSH2 0x3D1A PUSH2 0x3E7D DUP6 MLOAD SWAP1 JUMP JUMPDEST DUP5 EQ SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3D2 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 PUSH2 0x3D2 SWAP4 SWAP2 PUSH2 0x3563 SWAP4 PUSH2 0x3EA5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x43F8 JUMP JUMPDEST PUSH2 0x3ECC PUSH2 0x3EC6 PUSH2 0x3EBB PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1C4C DUP5 PUSH1 0x9 PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3EF7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH2 0x3F06 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3F15 PUSH1 0x1 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xB JUMPDEST SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xC PUSH2 0x3F6E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3FEC SWAP1 JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4024 PUSH2 0x1C4C PUSH1 0x20 SWAP4 PUSH2 0x401E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xB50 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x4055 PUSH2 0x4039 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x404A DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3FC0 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x409A JUMPI JUMPDEST POP PUSH2 0x408B JUMPI PUSH2 0x406F PUSH2 0x35F8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x407E PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2EE8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x3222 PUSH2 0x31D8 PUSH2 0x2F2C SWAP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x40BD SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C4 JUMPI JUMPDEST PUSH2 0x40B5 DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3FAC JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x4062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x40AB JUMP JUMPDEST PUSH2 0x46D PUSH2 0x40E3 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x40DD DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x40FA SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 PUSH2 0x40CB JUMP JUMPDEST SWAP1 PUSH2 0x40CB JUMP JUMPDEST PUSH2 0x410C PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x4161 JUMPI PUSH2 0x4118 PUSH2 0x4584 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4127 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x4157 JUMPI PUSH2 0x3D2 PUSH2 0x1BC9 SWAP2 PUSH2 0x413F PUSH2 0x3D2 SWAP5 PUSH2 0x458E JUMP JUMPDEST SWAP1 PUSH2 0x4149 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x40EC JUMP JUMPDEST POP POP PUSH2 0x3D2 PUSH2 0x2517 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x80 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4180 PUSH2 0x416E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x41B2 PUSH2 0x3D2 SWAP2 PUSH2 0x2AA7 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x45F7 JUMP JUMPDEST PUSH2 0x41C0 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x41F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1C07 JUMP JUMPDEST EQ DUP1 PUSH2 0x422A JUMPI JUMPDEST ISZERO PUSH2 0x4222 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x46CF JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x41F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x425F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x426C PUSH2 0x16FE PUSH1 0x41 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x4296 JUMPI PUSH2 0x428F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x43F8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x42AE PUSH2 0x2993 PUSH2 0x42A9 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP3 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x42D6 JUMPI JUMP JUMPDEST PUSH2 0x42B6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x42CC JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x42FB DUP4 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4304 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x430E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4318 PUSH1 0x1 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4321 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4335 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH2 0x433F PUSH1 0x2 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4348 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4371 JUMPI POP PUSH2 0x1500 PUSH2 0x435B DUP4 SWAP3 PUSH2 0x42E5 JUMP JUMPDEST PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4384 PUSH2 0x437E PUSH1 0x3 PUSH2 0x42DB JUMP JUMPDEST SWAP2 PUSH2 0x42DB JUMP JUMPDEST EQ PUSH2 0x438D JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x3D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43B7 PUSH2 0x1311 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x43BD JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x19A2 PUSH2 0x3BC SWAP5 PUSH2 0x3FE5 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x43EE PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4403 DUP5 PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x442F PUSH2 0x16FE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x44AB JUMPI SWAP1 PUSH2 0x4451 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x4448 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x43CF JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x446E DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4497 JUMPI POP PUSH2 0x4491 DUP4 PUSH2 0x12DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x44A3 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x44B8 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x44DC PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x44F5 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4508 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x451A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x450D JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x44C9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x4549 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x452E JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x456B PUSH2 0x16FE PUSH2 0x3D2 PUSH2 0x44BF JUMP JUMPDEST EQ PUSH2 0x457A JUMPI POP PUSH2 0x3D2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH2 0x4552 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xD PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x45C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x45A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x45EA PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x4603 PUSH2 0x419B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x468B PUSH2 0x3B05 DUP4 SWAP7 PUSH2 0x4629 PUSH2 0x461C PUSH2 0x212E DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE JUMP JUMPDEST PUSH2 0x4656 PUSH2 0x4645 PUSH2 0x4640 PUSH2 0x463A PUSH2 0x45D3 JUMP JUMPDEST DUP5 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x45DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x467D PUSH2 0x4661 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x4674 PUSH2 0x466E PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ ISZERO PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x4685 PUSH2 0x3A94 JUMP JUMPDEST SWAP1 PUSH2 0x3A9E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x46C0 SWAP3 PUSH2 0x46B9 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x4754 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1BC9 PUSH2 0x4741 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x4695 JUMP JUMPDEST PUSH2 0x475F PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x4773 DUP5 PUSH2 0x2500 JUMP JUMPDEST SWAP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4782 DUP2 PUSH2 0x47A0 JUMP JUMPDEST SWAP1 PUSH2 0x4795 PUSH2 0x4790 PUSH1 0x20 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x4763 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x47AF PUSH2 0x47B4 SWAP2 PUSH2 0x2FCB PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x47BE PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST AND PUSH2 0x47C9 PUSH1 0x1F PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x47D2 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA5 TIMESTAMP PUSH11 0xD3E7A6342DD43281A96F77 SGT EXTCODESIZE 0xEF MSIZE GAS 0xAB GT DUP8 DUP13 0x24 KECCAK256 0xC6 0xCA 0xE8 AND CODESIZE CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xEB 0xE7 0xF6 NUMBER SWAP2 PC PUSH7 0x8468AB4FD11D1A TLOAD SWAP6 CODESIZE CODECOPY 0xC6 SWAP4 0xBB 0xE9 0x2D 0xC8 CALLCODE REVERT MUL 0xA9 MOD 0x4D 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"97:2699:16:-:0;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_uint256":{"entryPoint":1479,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":509,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_stringt_stringt_addresst_addresst_address":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_struct_InitParams":{"entryPoint":1010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_InitParamst_addresst_address":{"entryPoint":1309,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_address":{"entryPoint":817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_address":{"entryPoint":837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_address_dyn_storage":{"entryPoint":1983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":311,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_memory_ptr":{"entryPoint":933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":1898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string":{"entryPoint":2558,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral_7ba4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd62915":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_InitParams":{"entryPoint":2171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_InitParams_address_address":{"entryPoint":2378,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":444,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_InitParams_storage_ptr":{"entryPoint":1661,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":2512,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":1545,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn":{"entryPoint":2026,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1652,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1639,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":1672,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1536,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1514,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_address_dyn":{"entryPoint":1993,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":497,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2084,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_allCollections":{"entryPoint":340,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deployCollection":{"entryPoint":1369,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deployStoryCollection":{"entryPoint":783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deployedCollections":{"entryPoint":1611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllCollectionsCount":{"entryPoint":1408,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCollectionAt":{"entryPoint":1452,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDeployedCollections":{"entryPoint":950,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":249,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":1879,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":405,"id":null,"parameterSlots":2,"returnSlots":0},"fun_deployCollection":{"entryPoint":2595,"id":8210,"parameterSlots":3,"returnSlots":1},"fun_deployStoryCollection":{"entryPoint":1695,"id":8259,"parameterSlots":7,"returnSlots":1},"fun_getAllCollectionsCount":{"entryPoint":null,"id":8281,"parameterSlots":0,"returnSlots":1},"fun_getCollectionAt":{"entryPoint":3133,"id":8301,"parameterSlots":1,"returnSlots":1},"fun_getDeployedCollections":{"entryPoint":2035,"id":8272,"parameterSlots":1,"returnSlots":1},"getter_fun_allCollections":{"entryPoint":281,"id":8066,"parameterSlots":1,"returnSlots":1},"getter_fun_deployedCollections":{"entryPoint":1578,"id":8063,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_array_address_dyn_storage_of_address":{"entryPoint":1554,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":187,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":383,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":2080,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_offset_address":{"entryPoint":1888,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":270,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper":{"entryPoint":2063,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7ba4":{"entryPoint":3057,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":135,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2430,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":209,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_address_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"store_literal_in_memory_7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd62915":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":2442,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":2483,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":583,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":989,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":140,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":1685,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063167ef495146100825780632470ea1b1461007d5780633b68867214610078578063637c445814610073578063a4f0a9b91461006e578063ad8e8253146100695763ebf595f8036100875761064b565b6105ac565b610580565b610559565b6103b6565b61030f565b610154565b600080fd5b805b0361008757565b905035906100a28261008c565b565b90602082820312610087576100b891610095565b90565b634e487b7160e01b600052603260045260246000fd5b80548210156100f4576100eb600191600052602060002090565b91020190600090565b6100bb565b6100b8916008021c5b6001600160a01b031690565b906100b891546100f9565b600154811015610087576101316100b89160016100d1565b9061010e565b61014090610102565b9052565b6020810192916100a29190610137565b346100875761017b61016f61016a3660046100a4565b610119565b60405191829182610144565b0390f35b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176101b757604052565b61017f565b906100a26101c960405190565b9283610195565b67ffffffffffffffff81116101b757602090601f01601f19160190565b0190565b90826000939282370152565b9092919261021261020d826101d0565b6101bc565b9381855281830111610087576100a29160208501906101f1565b9080601f83011215610087578160206100b8933591016101fd565b61008e81610102565b905035906100a282610247565b60e08183031261008757803567ffffffffffffffff8111610087578261028491830161022c565b92602082013567ffffffffffffffff811161008757836102a591840161022c565b92604083013567ffffffffffffffff811161008757816102c691850161022c565b92606081013567ffffffffffffffff811161008757826102e791830161022c565b926100b86102f88460808501610250565b9360c06103088260a08701610250565b9401610250565b346100875761017b61016f61032536600461025d565b9594909493919361069f565b90602082820312610087576100b891610250565b906101ed81602093610137565b9061037261036b610361845190565b8084529260200190565b9260200190565b9060005b8181106103835750505090565b90919261039d6103966001928651610345565b9460200190565b929101610376565b60208082526100b892910190610352565b346100875761017b6103d16103cc366004610331565b6107f3565b604051918291826103a5565b80151561008e565b905035906100a2826103dd565b919091610160818403126100875761040b6101606101bc565b92813567ffffffffffffffff8111610087578161042991840161022c565b8452602082013567ffffffffffffffff8111610087578161044b91840161022c565b6020850152604082013567ffffffffffffffff8111610087578161047091840161022c565b604085015260608201359067ffffffffffffffff8211610087576104998161051793850161022c565b60608601526104ab8160808501610095565b60808601526104bd8160a08501610095565b60a08601526104cf8160c08501610250565b60c08601526104e18160e08501610250565b60e08601526101006104f582828601610250565b90860152610120610508828286016103e5565b908601526101408093016103e5565b90830152565b909160608284031261008757813567ffffffffffffffff811161008757610549846100b89285016103f2565b9360406103088260208701610250565b346100875761017b61016f61056f36600461051d565b91610a23565b600091031261008757565b3461008757610590366004610575565b61017b61059c60015490565b6040519182918290815260200190565b346100875761017b61016f6105c23660046100a4565b610c3d565b9190604083820312610087576100b89060206105e38286610250565b9401610095565b6101026100b86100b8926001600160a01b031690565b6100b8906105ea565b6100b890610600565b9061061c90610609565b600052602052604060002090565b610635906000610612565b8054821015610087576100b891610131916100d1565b346100875761017b61016f6106613660046105c7565b9061062a565b6101026100b86100b89290565b6100b890610667565b6100b86101606101bc565b6100b86100b86100b89290565b9061014090610102565b6100b8969594610729610740926106f86106ea976106f1610752986106c2600090565b5060009a8b996106e36106d48c610674565b976106dd61067d565b9e8f0152565b60208d0152565b60408b0152565b6060890152565b61070d610706612710610688565b6080890152565b61072061071986610688565b60a0890152565b60c08701610695565b6107368160e08701610695565b6101008501610695565b60016101208401521515610140830152565b610a23565b6100b890610102565b6100b89054610757565b90610785610779610361845490565b92600052602060002090565b9060005b8181106107965750505090565b9091926107b76107b06001926107ab87610760565b610345565b9460010190565b929101610789565b906100b89161076a565b906100a26107e3926107da60405190565b938480926107bf565b0383610195565b6100b8906107c9565b61080a6100b891610802606090565b506000610612565b6107ea565b1561008757565b6100b89051610102565b5190565b60005b8381106108375750506000910152565b8181015183820152602001610827565b6108686108716020936101ed9361085c815190565b80835293849260200190565b95869101610824565b601f01601f191690565b906100b890610140806108dd6108cb6108b96108a7610160870160008a015188820360008a0152610847565b60208901518782036020890152610847565b60408801518682036040880152610847565b60608701518582036060870152610847565b946108ed60808201516080860152565b6108fc60a082015160a0860152565b61090e60c082015160c0860190610137565b61092060e082015160e0860190610137565b610934610100820151610100860190610137565b6101208181015115159085015201511515910152565b60409061097761096c6100a2959796946060840190848203600086015261087b565b966020830190610137565b0190610137565b6040513d6000823e3d90fd5b919060086109a99102916109a46001600160a01b03841b90565b921b90565b9181191691161790565b91906109c46100b86109cc93610609565b90835461098a565b9055565b90815491680100000000000000008310156101b757826109f89160016100a2950181556100d1565b906109b3565b60408082526100b8939192610a1591840190610847565b916020818403910152610847565b909190805151610a45600091610a3f610a3b84610688565b9190565b1161080f565b6020820192610a64610a58610820865190565b610a3f610a3b85610688565b610100830194610a7386610816565b610a99610a7f85610674565b91610a92610a8c84610102565b91610102565b141561080f565b610ab3610aa7608087015190565b610a3f610a3b87610688565b610ac8610abf82610102565b610a9284610102565b610add610ad482610102565b610a9285610102565b60a0850151610aee610a3b86610688565b11610bcf575b506040519161538783019083821067ffffffffffffffff8311176101b757839286610b2693615387610c6b873961094a565b039082f08015610bca57610b3c610b6b91610609565b94610b5b86610b566100b8610b5085610816565b87610612565b6109d0565b610b668660016109d0565b610816565b9101519151907f1309157dd19792bdfd72678ba7958d9d18ec4b35f3c362c6203332bb2c771e66610ba4610b9e86610609565b92610609565b92610bae33610609565b94610bc4610bbb60405190565b928392836109fe565b0390a490565b61097e565b610beb90610a92610a8c610be560e08901610816565b92610102565b38610af4565b15610bf857565b60405162461bcd60e51b815260206004820152601360248201527f494e4445585f4f55545f4f465f424f554e4453000000000000000000000000006044820152606490fd5b6101316100b891610c4c600090565b50610c63610c5c6100b860015490565b8210610bf1565b60016100d156fe6101a0604052346100905761001b610015610334565b9161067f565b60405161481a610b6d823960805181614200015260a0518161422d015260c051816141cd015260e05181614716015261010051816146f501526101205181613f4c01526101405181613f7901526101605181818161129a01526113e5015261018051818181610f96015261140b015261481a90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176100cc57604052565b610095565b906100e56100de60405190565b92836100ab565b565b6001600160401b0381116100cc57602090601f01601f19160190565b0190565b60005b83811061011a5750506000910152565b818101518382015260200161010a565b9092919261013f61013a826100e7565b6100d1565b9381855281830111610090576100e5916020850190610107565b9080601f830112156100905781516101739260200161012a565b90565b805b0361009057565b905051906100e582610176565b6001600160a01b031690565b6001600160a01b038116610178565b905051906100e582610198565b801515610178565b905051906100e5826101b4565b91909161016081840312610090576101e26101606100d1565b81519093906001600160401b0381116100905781610201918401610159565b845260208201516001600160401b0381116100905781610222918401610159565b602085015260408201516001600160401b0381116100905781610246918401610159565b60408501526060820151906001600160401b0382116100905761026e816102ec938501610159565b6060860152610280816080850161017f565b60808601526102928160a0850161017f565b60a08601526102a48160c085016101a7565b60c08601526102b68160e085016101a7565b60e08601526101006102ca828286016101a7565b908601526101206102dd828286016101bc565b908601526101408093016101bc565b90830152565b90916060828403126100905781516001600160401b0381116100905761031d846101739285016101c9565b93604061032d82602087016101a7565b94016101a7565b61035261538780380380610347816100d1565b9283398101906102f2565b909192565b9061036461013a836100e7565b918252565b6103736010610357565b6f29a823a7232a21b7b63632b1ba34b7b760811b602082015290565b610173610369565b6103a16001610357565b603160f81b602082015290565b610173610397565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156103ec575b60208310146103e757565b6103b6565b91607f16916103dc565b9160001960089290920291821b911b5b9181191691161790565b6101736101736101739290565b919061042e61017361043693610410565b9083546103f6565b9055565b6100e59160009161041d565b818110610451575050565b8061045f600060019361043a565b01610446565b9190601f811161047457505050565b6104866100e593600052602060002090565b906020601f8401819004830193106104a8575b6020601f909101040190610446565b9091508190610499565b906104bb815190565b906001600160401b0382116100cc576104de826104d885546103cc565b85610465565b602090601f83116001146105195761043692916000918361050e575b5050600019600883021c1916906002021790565b0151905038806104fa565b601f1983169161052e85600052602060002090565b9260005b81811061056c57509160029391856001969410610553575b50505002019055565b01516000196008601f8516021c1916905538808061054a565b91936020600181928787015181550195019201610532565b906100e5916104b2565b9060001990610406565b906105a861017361043692610410565b825461058e565b906001600160a01b0390610406565b6101739061018c906001600160a01b031682565b610173906105be565b610173906105d2565b906105f4610173610436926105db565b82546105af565b9060ff60a01b9060a01b610406565b9061061a61017361043692151590565b82546105fb565b9060ff60a81b9060a81b610406565b9061064061017361043692151590565b8254610621565b90610651906105db565b600052602052604060002090565b9060ff90610406565b9061067861017361043692151590565b825461065f565b9061076a610763610140610784946106c061069861038f565b6106a06103ae565b6101008401516001600160a01b031660008501519160208601519361078e565b6106cf6040820151600d610584565b6106de6060820151600e610584565b6106f36106ec608083015190565b600f610598565b61070861070160a083015190565b6010610598565b61072661071f60c08301516001600160a01b031690565b60116105e4565b61074461073d60e08301516001600160a01b031690565b60126105e4565b61075c610755610120830151151590565b601261060a565b0151151590565b6012610630565b61077f600161077a336015610647565b610668565b6105db565b6101605261018052565b90926107db946107a1916107c294610808565b6107ac600b82610915565b610120526107bb600c84610915565b6101405290565b6107d46107cd825190565b9160200190565b2060e05290565b6107e66107cd825190565b20610100524660a0526107f7610999565b608052610803306105db565b60c052565b906100e5929161081d565b6101736001610410565b90610828929161083a565b6100e5610833610813565b600a610598565b906100e5929161085b565b61018c6101736101739290565b61017390610845565b91610865916108b6565b600061087081610852565b6001600160a01b0381166001600160a01b038416146108945750506100e590610a18565b631e4fbdf760e01b82526001600160a01b0316600482015280602481015b0390fd5b6100e59182916108d391906108cc906002610584565b6003610584565b6108db610a6a565b6108e6816000610598565b6108f76108f36000199290565b9190565b106108fe57565b63fed8210f60e01b610a74565b61017360ff610410565b80516109246108f36020610410565b1015610934576101739150610b07565b60006109406109469390565b01610584565b61017361017361090b565b909594926100e59461098361098a9261097c60809661097560a088019c6000890152565b6020870152565b6040850152565b6060830152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6109f66109c660e05190565b61010051906109ea6109d7306105db565b6040519586946020860194469286610951565b908103825203826100ab565b610a016107cd825190565b2090565b6101739061018c565b6101739054610a05565b610a39610a33610a286009610a0e565b61077f8460096105e4565b916105db565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610a6460405190565b600090a3565b6101736000610410565b60005260046000fd5b610a9e610aa760209361010393610a92815190565b80835293849260200190565b95869101610107565b601f01601f191690565b602080825261017392910190610a7d565b610adb610ad7610ad0835190565b9260200190565b5190565b9060208110610ae8575090565b610afa90600019906020036008021b90565b1690565b61017390610410565b80610b10825190565b610b1d6108f3601f610410565b11610b49575061017381610b43610b3e610b3961017395610ac2565b610afe565b915190565b17610410565b6108b290610b5660405190565b63305a27a960e01b815291829160048301610ab156fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461039257806306fdde031461038d578063081812fc14610388578063095ea7b31461038357806313966db51461037e57806315d9756e14610379578063162094c41461037457806318160ddd1461036f5780631d027aad1461036a57806322df11d81461036557806323b872dd1461036057806324bbd0491461035b578063254a473714610356578063280007bb146103515780632c6739151461034c5780632d0335ab146103475780633092afd5146103425780633f4ba83a1461033d57806340c10f191461033857806342842e0e146103335780634c06baba1461032e57806352b9122614610329578063559e775b1461032457806355f804b31461031f5780635c975abb1461031a5780636352211e146103155780636a6278421461031057806370a082311461030b578063715018a614610306578063765b0c36146103015780637ecc2b56146102fc5780637ecebe00146102f75780638456cb59146102f257806384b0196e146102ed5780638da5cb5b146102e8578063916f9ab4146102e3578063938e3d7b146102de57806395d89b41146102d9578063983b2d56146102d4578063a22cb465146102cf578063afc0381d146102ca578063b88d4fde146102c5578063c2ba4744146102c0578063c3324b27146102bb578063c4c69033146102b6578063c87b56dd146102b1578063d5abeb01146102ac578063e31c6732146102a7578063e59ba924146102a2578063e8a3d4851461029d578063e985e9c514610298578063eddd0d9c14610293578063f2fde38b1461028e578063f46eccc414610289578063f8004d31146102845763fa5c33750361039757611281565b611250565b611235565b61120d565b6111f5565b6111d9565b61119b565b61103b565b611023565b611008565b610fe1565b610fc6565b610f81565b610f66565b610f4f565b610e20565b610df2565b610db7565b610d9c565b610d83565b610d64565b610cd7565b610ca3565b610ba1565b610b86565b610b16565b610afb565b610ab8565b610a9d565b610a87565b610a6c565b610a51565b610a38565b6109f7565b6109d5565b61090f565b6108fb565b6108e4565b6108cc565b6108b4565b610899565b61087e565b61085a565b61082e565b6107ea565b6107b0565b61076d565b6106dc565b610655565b61063c565b6105b7565b61058b565b610550565b6104dc565b610482565b6103d9565b600080fd5b6001600160e01b031981165b0361039757565b905035906103bc8261039c565b565b90602082820312610397576103d2916103af565b90565b9052565b34610397576104076103f46103ef3660046103be565b6112bf565b6040515b91829182901515815260200190565b0390f35b600091031261039757565b60005b8381106104295750506000910152565b8181015183820152602001610419565b61045a61046360209361046d9361044e815190565b80835293849260200190565b95869101610416565b601f01601f191690565b0190565b60208082526103d292910190610439565b346103975761049236600461040b565b61040761049d6112d1565b60405191829182610471565b806103a8565b905035906103bc826104a9565b90602082820312610397576103d2916104af565b6001600160a01b031690565b34610397576104076104f76104f23660046104bc565b611305565b604051918291826001600160a01b03909116815260200190565b6001600160a01b0381166103a8565b905035906103bc82610511565b9190604083820312610397576103d29060206105498286610520565b94016104af565b61056461055e36600461052d565b9061133c565b604051005b6103d2916008021c81565b906103d29154610569565b6103d260006010610574565b346103975761059b36600461040b565b6104076105a661057f565b6040515b9182918290815260200190565b34610397576104076104f76105cd3660046104bc565b6113d2565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926001830284011161039757565b9190916040818403126103975761061983826104af565b92602082013567ffffffffffffffff81116103975761063892016105d2565b9091565b346103975761056461064f366004610602565b916116b0565b346103975761066536600461040b565b6104076105a66116cc565b9160c083830312610397576106858284610520565b926106938360208301610520565b926106a181604084016104af565b926106af82606085016104af565b926106bd83608083016104af565b9260a082013567ffffffffffffffff81116103975761063892016105d2565b34610397576105646106ef366004610670565b95949094939193611c97565b909182601f830112156103975781359167ffffffffffffffff831161039757602001926020830284011161039757565b91606083830312610397576107408284610520565b9261074e83602083016104af565b92604082013567ffffffffffffffff81116103975761063892016106fb565b6104076105a661077e36600461072b565b929190916120bc565b9091606082840312610397576103d26107a08484610520565b9360406105498260208701610520565b6105646107be366004610787565b916120fd565b6103d2916008021c5b60ff1690565b906103d291546107c4565b6103d2601460126107d3565b34610397576107fa36600461040b565b6104076103f46107de565b8015156103a8565b905035906103bc82610805565b90602082820312610397576103d29161080d565b346103975761056461084136600461081a565b612372565b90602082820312610397576103d291610520565b346103975761056461086d366004610846565b6123f5565b6103d2601560126107d3565b346103975761088e36600461040b565b6104076103f4610872565b34610397576104076105a66108af366004610846565b6123fe565b34610397576105646108c7366004610846565b61245f565b34610397576108dc36600461040b565b61056461247b565b6104076105a66108f536600461052d565b906124ed565b610564610909366004610787565b9161251f565b346103975761091f36600461040b565b6104077fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca096105a6565b60ff81166103a8565b905035906103bc82610948565b91909160e081840312610397576109758382610520565b926109838160208401610520565b92604083013567ffffffffffffffff811161039757826109a49185016106fb565b9290936109b482606083016104af565b926103d26109c58460808501610951565b9360c06105498260a087016104af565b34610397576105646109e836600461095e565b96959095949194939293612a32565b34610397576104076105a6610a0d3660046104bc565b612a55565b9060208282031261039757813567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610a4b366004610a12565b90612a81565b3461039757610a6136600461040b565b6104076103f4612a8b565b34610397576104076104f7610a823660046104bc565b612a95565b6104076105a6610a98366004610846565b612ab2565b34610397576104076105a6610ab3366004610846565b612ada565b3461039757610ac836600461040b565b610564612b3a565b6103d2916008021c6001600160a01b031690565b906103d29154610ad0565b6103d260006012610ae4565b3461039757610b0b36600461040b565b6104076104f7610aef565b3461039757610b2636600461040b565b6104076105a6612b4f565b6104d06103d26103d2926001600160a01b031690565b6103d290610b31565b6103d290610b47565b90610b6390610b50565b600052602052604060002090565b6000610b816103d2926016610b59565b610574565b34610397576104076105a6610b9c366004610846565b610b71565b3461039757610bb136600461040b565b610564612b7d565b90610bd9610bd2610bc8845190565b8084529260200190565b9260200190565b9060005b818110610bea5750505090565b909192610c07610c006001928651815260200190565b9460200190565b929101610bdd565b93959194610c7f610c77610c9695610c69610c8f956103d29c9a610c5c60e08c019260008d01907fff00000000000000000000000000000000000000000000000000000000000000169052565b8a820360208c0152610439565b9088820360408a0152610439565b976060870152565b6001600160a01b03166080850152565b60a0830152565b60c0818403910152610bb9565b3461039757610cb336600461040b565b610407610cbe612ba7565b93610cce97959793919360405190565b97889788610c0f565b3461039757610ce736600461040b565b6104076104f7612bed565b60a08183031261039757610d068282610520565b92610d148360208401610520565b92604083013567ffffffffffffffff81116103975781610d359185016106fb565b929093610d4583606083016104af565b92608082013567ffffffffffffffff81116103975761063892016105d2565b3461039757610564610d77366004610cf2565b95949094939193612dbd565b3461039757610564610d96366004610a12565b90612de5565b3461039757610dac36600461040b565b61040761049d612def565b3461039757610564610dca366004610846565b612e43565b9190604083820312610397576103d2906020610deb8286610520565b940161080d565b3461039757610564610e05366004610dcf565b90612e4c565b6000610e1b6103d2926015610b59565b6107d3565b34610397576104076103f4610e36366004610846565b610e0b565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e7357604052565b610e3b565b906103bc610e8560405190565b9283610e51565b67ffffffffffffffff8111610e7357602090601f01601f19160190565b90826000939282370152565b90929192610eca610ec582610e8c565b610e78565b9381855281830111610397576103bc916020850190610ea9565b9080601f83011215610397578160206103d293359101610eb5565b9060808282031261039757610f148183610520565b92610f228260208501610520565b92610f3083604083016104af565b92606082013567ffffffffffffffff8111610397576103d29201610ee4565b610564610f5d366004610eff565b92919091612ea4565b34610397576104076103f4610f7c366004610846565b612ef5565b3461039757610f9136600461040b565b6104077f00000000000000000000000000000000000000000000000000000000000000006104f7565b6103d260006011610ae4565b3461039757610fd636600461040b565b6104076104f7610fba565b346103975761040761049d610ff73660046104bc565b612f82565b6103d26000600f610574565b346103975761101836600461040b565b6104076105a6610ffc565b3461039757610564611036366004610846565b61308b565b346103975761104b36600461040b565b6104077f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16105a6565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156110c0575b60208310146110bb57565b61108a565b91607f16916110b0565b805460009392916110e76110dd836110a0565b8085529360200190565b9160018116908115611139575060011461110057505050565b6111139192939450600052602060002090565b916000925b8184106111255750500190565b805484840152602090930192600101611118565b92949550505060ff1916825215156020020190565b906103d2916110ca565b906103bc6111729261116960405190565b9384809261114e565b0383610e51565b9060001061118a576103d290611158565b611074565b6103d26000600e611179565b34610397576111ab36600461040b565b61040761049d61118f565b9190604083820312610397576103d29060206111d28286610520565b9401610520565b34610397576104076103f46111ef3660046111b6565b90613094565b34610397576105646112083660046104bc565b6130eb565b3461039757610564611220366004610846565b61314c565b6000610e1b6103d2926014610b59565b34610397576104076103f461124b366004610846565b611225565b346103975761056461126336600461081a565b6131bc565b6103d590610b50565b6020810192916103bc9190611268565b346103975761129136600461040b565b604051806104077f000000000000000000000000000000000000000000000000000000000000000082611271565b6103d2906131e5565b6103d290611158565b6103d260026112c8565b6103d26103d26103d29290565b90610b63906112db565b6103d2906104d0565b6103d290546112f2565b6113156113118261326b565b1590565b61132f5760006113296103d29260066112e8565b016112fb565b6333d1c03960e21b6132eb565b6103bc9160019161331a565b905051906103bc82610511565b90602082820312610397576103d291611348565b6103d5906112db565b909594926103bc946113b86113bf926113a86080966113a160a088019c60008901906001600160a01b03169052565b6020870152565b6001600160a01b03166040850152565b6060830152565b0190611369565b6040513d6000823e3d90fd5b60206000916113df600090565b506114097f0000000000000000000000000000000000000000000000000000000000000000610b50565b7f000000000000000000000000000000000000000000000000000000000000000061143330610b50565b9061145c61144060405190565b96879586948594632f4de29b60e11b8652469060048701611372565b03915afa90811561149b57600091611472575090565b6103d2915060203d602011611494575b61148c8183610e51565b810190611355565b503d611482565b6113c6565b906103bc92916114ae6133c3565b61168a565b156114ba57565b60405162461bcd60e51b815260206004820152601460248201527f546f6b656e20646f6573206e6f74206578697374000000000000000000000000604482015280606481015b0390fd5b9160001960089290920291821b911b5b9181191691161790565b919061152f6103d2611537936112db565b908354611504565b9055565b6103bc9160009161151e565b818110611552575050565b80611560600060019361153b565b01611547565b9190601f811161157557505050565b6115876103bc93600052602060002090565b906020601f8401819004830193106115a9575b6020601f909101040190611547565b909150819061159a565b919067ffffffffffffffff8211610e73576115d8826115d285546110a0565b85611566565b600090601f831160011461161357611537929160009183611608575b5050600019600883021c1916906002021790565b0135905038806115f4565b90601f1983169161162985600052602060002090565b92825b8181106116675750916002939185600196941061164d575b50505002019055565b0135600019601f84166008021c19165b9055388080611644565b9293602060018192878601358155019501930161162c565b906103bc92916115b3565b906116ab6103bc93926116a461169f8261326b565b6114b3565b60136112e8565b61167f565b906103bc92916114a0565b6103d29081565b6103d290546116bb565b6116f36116eb6116dc60006116c2565b6116e660016116c2565b900390565b6116e6613400565b908160001980611702565b9190565b0361170a5750565b6103d291925061046d60086116c2565b9061173196959493929161172c613414565b611739565b6103bc613454565b906103bc96959493929161174b613466565b6119a6565b6103d2906107cd565b6103d29054611750565b1561176a57565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420617574686f72697a656420657363726f772077616c6c6574000000006044820152606490fd5b6104d06103d26103d29290565b6103d2906117af565b156117cc57565b60405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f2061646472657373006044820152606490fd5b1561181857565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f776e6572206164647265737300000000000000000000006044820152606490fd5b1561186457565b60405162461bcd60e51b815260206004820152601160248201527f5369676e617475726520657870697265640000000000000000000000000000006044820152606490fd5b6103d260646112db565b6103d260326112db565b156118c457565b60405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e74697479000000000000000000000000000000006044820152606490fd5b6103d260c0610e78565b5190565b6103d2913691610eb5565b1561192957565b60405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606490fd5b9060001990611514565b906119886103d2611537926112db565b825461196e565b9081526040810192916103bc9160200152565b0152565b611c1a611bf98597611bf3869a611bed611ae3611bd589611aff611c519b9e611af87f670fe7cb14f68cf31d6e2012cadd6f5325904b6d23d2cadeb3607c96d8b1fec89f611c579f8e91611aea611af192611a12611a0d611a08336015610b59565b611759565b611763565b60009a8b99611a57611a45611a268d6117bc565b6104d06001600160a01b0382166001600160a01b0386165b14156117c5565b6001600160a01b0389165b1415611811565b611a64895b42111561185d565b611a6e60146112db565b851115611c8757611a98611a806118b3565b611a898d6112db565b87119081611c7c575b506118bd565b611aa38584896134d2565b611ad3611ab9611ab4896016610b59565b6116c2565b97611ac2611909565b9e8f01906001600160a01b03169052565b6001600160a01b031660208d0152565b60408b0152565b6060890152565b6080870152565b60a0850152565b8201517fe3803e7e8e11a1bd61bc6a735c21ee04ce89f8a17fe09be53356f1ef9542ca09906001600160a01b031690611bc9611b4560208601516001600160a01b031690565b94611b51604082015190565b90611b5d606082015190565b611b7360a0611b6d608085015190565b93015190565b92611b7d60405190565b9889976020890197889081526001600160a01b03909116602082015260e081019695949093909290916001600160a01b031660408501526060840152608083015260a082015260c00152565b90810382520382610e51565b611be7611be0825190565b9160200190565b2061352d565b92611917565b90613556565b611c146001600160a01b0384165b916001600160a01b031690565b14611922565b611c40611c28826016610b59565b611c3a611c34826116c2565b60010190565b90611978565b611c4c8688878461356c565b610b50565b92610b50565b92611c6133610b50565b94611c77611c6e60405190565b9283928361198f565b0390a4565b905086111538611a92565b611a98611c926118a9565b611a80565b906103bc96959493929161171a565b90611cbb94939291611cb6613414565b611cc4565b906103bc613454565b906103d294939291611cd4613466565b611f10565b6103d29060a01c6107cd565b6103d29054611cd9565b15611cf657565b60405162461bcd60e51b815260206004820152601160248201527f4d696e74696e6720697320636c6f7365640000000000000000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b91908201809211611d5e57565b611d3b565b15611d6a57565b60405162461bcd60e51b815260206004820152601360248201527f4d617820737570706c79206578636565646564000000000000000000000000006044820152606490fd5b15611db657565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e55524920636f756e74206d69736d617463680000000000000000006044820152606490fd5b15611e0257565b60405162461bcd60e51b815260206004820152600f60248201527f426174636820746f6f206c6172676500000000000000000000000000000000006044820152606490fd5b6103d29060a81c6107cd565b6103d29054611e47565b15611e6457565b60405162461bcd60e51b815260206004820152601660248201527f4e6f7420617574686f72697a656420746f206d696e74000000000000000000006044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b903590601e193682900301821215610397570180359067ffffffffffffffff8211610397576020019136829003831361039757565b90821015611f0b5760206106389202810190611ebf565b611ea9565b509293909190611f28611f236012611ce5565b611cef565b611f53611f3c84611f376116cc565b611d51565b611f4c6116fe6103d2600f6116c2565b1115611d63565b611f5e838614611daf565b611f74611f6c6103d26118a9565b841115611dfb565b611f816113116012611e53565b61207c575b611f9060106116c2565b90600091611fa16116fe60006112db565b1161206e575b611faf6137fd565b93611fba8187613827565b611fc460006112db565b818110156120205780611fe6611fe1610638611ffd948c8a611ef4565b905090565b611ff26116fe876112db565b116120025760010190565b611fc4565b611c34612010828b89611ef4565b906116ab60138b86015b906112e8565b509394915094506120319150610b50565b7f59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b261206861205e856112db565b936105aa60405190565b0390a390565b6120778461369f565b611fa7565b61208a611a08336014610b59565b801561209f575b61209a90611e5d565b611f86565b5061209a6120ab612bed565b6120b433611c07565b149050612091565b6103d2939291906000611ca6565b6103d26103d26103d2926001600160a01b031690565b6103d26001600160a01b036112db565b6103d2600160e11b6112db565b61211761211261210c8561398c565b92610b47565b6120ca565b9261213361212e6121266120e0565b8096166117af565b610b47565b9361214061212e846117af565b6121526001600160a01b038716611c07565b036122fa5761216082613a56565b949033612171611311828a8a613a73565b6122cc575b506121126116fe959493926122239261224f986122c2575b506121b061219d8a6005610b59565b611c3a6121a9826116c2565b6000190190565b6121be611c28826005610b59565b6121c66120f0565b956121eb6121d582848d613adb565b8817836001600160a01b0316904260a01b171790565b906122016004926121fc89856112e8565b611978565b6000976122166122108a6112db565b91831690565b14612263575b5050610b47565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a46112db565b1461225657565b633a954ecd60e21b6132eb565b61227561227060016112db565b880190565b91612283611ab484836112e8565b61228f6116fe8b6112db565b1461229b575b5061221c565b6122a76103d28a6116c2565b8314612295576122ba926121fc916112e8565b388080612295565b600090553861218e565b6113116122de91899796959497613094565b6122ed57389491929394612176565b632ce44b5f60e11b6132eb565b62a1148160e81b6132eb565b6103bc906123126133c3565b61233d565b9060ff60a81b9060a81b611514565b906123366103d261153792151590565b8254612317565b61236d7f545ecf6fbcc235df5fdfb676e1992025683c8097a8bd6e5a7c57b31f1c1b29d4916103f4816012612326565b0390a1565b6103bc90612306565b6103bc906123876133c3565b6123ac565b9060ff90611514565b906123a56103d261153792151590565b825461238c565b6123c590611c4c60006123c0836015610b59565b612395565b7f566163b435df210872aafff6e352033418c951e1538d138dfbccd622c4b022d06123ef60405190565b600090a2565b6103bc9061237b565b611ab46103d29161240d600090565b506016610b59565b6103bc906124216133c3565b61243590611c4c60006123c0836014610b59565b7fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666926123ef60405190565b6103bc90612415565b6124706133c3565b6103bc6103bc613b5b565b6103bc612468565b67ffffffffffffffff8111610e735760208091020190565b906124a8610ec583612483565b918252565b60005b8281106124bc57505050565b6060828201526020016124b0565b906103bc6124e06124da8461249b565b93612483565b601f1901602084016124ad565b6103d2916124fa816124ca565b91613e86565b906124a8610ec583610e8c565b6103d26000612500565b6103d261250d565b90916103bc9261252d612517565b92612ea4565b9061173197969594939291612546613414565b906103bc97969594939291612559613466565b61276a565b1561256557565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642062617463682073697a6500000000000000000000000000006044820152606490fd5b9190811015611f0b576020020190565b356103d2816104a9565b156125cb57565b60405162461bcd60e51b815260206004820152600f60248201527f4e6f7420746f6b656e206f776e657200000000000000000000000000000000006044820152606490fd5b6103d260a0610e78565b9092919261262a610ec582612483565b938185526020808601920283019281841161039757915b83831061264e5750505050565b6020809161265c84866104af565b815201920191612641565b6103d291369161261a565b90612685610bd2612681845190565b9290565b9060005b8181106126965750505090565b9091926126ac610c006001928651815260200190565b929101612689565b6103d291612672565b919461270c6119a29298979561270560a0966126f56103bc9a6126e560c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b9037565b81835290916020015b917f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610397578291602061046d9202938491612713565b60208082526103d293910191612717565b959092949396979197612784611a0d611a08336015610b59565b6000916127c16127b2612796856117bc565b6104d06001600160a01b0382166001600160a01b038a16611a3e565b6001600160a01b038a16611a50565b6127ca89611a5c565b86956127d5846112db565b871180612a19575b6127e69061255e565b6127ef846112db565b8b8882101561284f5790611c348b612844611c07612837610a828f87818a61283261169f61282d61282861284a9f6128289888916125aa565b6125ba565b61326b565b6125aa565b926001600160a01b031690565b146125c4565b6127ef565b6129739391509161296e866128c28c9b9e61270c8f8d9f6128bb6129989e9f916129859d9b6128b6612705946128a661288c611ab4896016610b59565b97612895612610565b9c8d01906001600160a01b03169052565b6001600160a01b031660208b0152565b612667565b6040870152565b611bd57f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c16128f98a8401516001600160a01b031690565b90611bc961291160208601516001600160a01b031690565b94604081015161293361292360405190565b8092611bc96020830191826126b4565b61293e611be0825190565b20906129566080612950606084015190565b92015190565b9161296060405190565b9788966020880196876126bd565b613e93565b611c146001600160a01b038916611c07565b612993611c28876016610b59565b6112db565b855b8110156129c7576129c081611c346129b961282861299a95888d6125aa565b878961251f565b9050612998565b50949350916129f9611c517fb29502ff9b08df34ae7101bcaedae6124591b6f81d9ab5a4ba2bf20641fd2de292610b50565b92612a0333610b50565b94611c77612a1060405190565b92839283612759565b506127e6612a286103d26118b3565b88111590506127dd565b906103bc97969594939291612533565b81810292918115918404141715611d5e57565b6103d290612a6360106116c2565b612a42565b906103bc91612a756133c3565b906103bc91600d61167f565b906103bc91612a68565b6103d26009611ce5565b61212e612aad6103d292612aa7600090565b5061398c565b6117af565b6103d290612ac060016112db565b6124fa816124ca565b6103d267ffffffffffffffff6112db565b612ae76104d060006117bc565b6001600160a01b03821614612b1057611ab4612b04916005610b59565b612b0c612ac9565b1690565b6323d3ad8160e21b6132eb565b612b256133c3565b6103bc6103bc612b3560006117bc565b613eab565b6103bc612b1d565b91908203918211611d5e57565b6103d2612b5c600f6116c2565b612b646116cc565b90612b42565b612b726133c3565b6103bc6103bc613f3f565b6103bc612b6a565b369037565b906103bc612b9a6124da8461249b565b601f190160208401612b85565b612baf613f47565b90612bb8613f74565b90612bc230610b50565b612bcc60006112db565b612bde612bd960006112db565b612b8a565b600f60f81b9594934693929190565b6103d260096112fb565b90611731969594939291612c09613414565b906103bc969594939291612c1b613466565b612c32565b9091612720565b90916103d292612c20565b9496909193959296612c4b611a0d611a08336015610b59565b600090612c79611a45612c5d846117bc565b6104d06001600160a01b0382166001600160a01b038916611a3e565b612c8288611a5c565b8894612c8d836112db565b861180612da4575b612c9e9061255e565b612ca7836112db565b86811015612cee5780611c34612cd7610a826128288f95868e61283261169f61282d61282886612ce99d866125aa565b6128446001600160a01b038d16611c07565b612ca7565b5061298591611bf361297392611bed88611bd58c9f9b9e612d7c9a9b9d8f91611bc9908f612d58611bc991612d407f24b3fc13ce2556394493767a6603fb6eb349a51fec76048f203a379615fa34c190565b95612d4a60405190565b938492602084019283612c27565b612d63611be0825190565b20612d72611ab4866016610b59565b9061296060405190565b855b8110156129c757612d9d81611c346129b9612828612d7e95888d6125aa565b9050612d7c565b50612c9e612db36103d26118b3565b8711159050612c95565b906103bc969594939291612bf7565b906103bc91612dd96133c3565b906103bc91600e61167f565b906103bc91612dcc565b6103d260036112c8565b6103bc90612e056133c3565b612e1990611c4c60016123c0836014610b59565b7f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f66123ef60405190565b6103bc90612df9565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31612e9f612e95612e8f33611c4c876123c088612e8a856007610b59565b610b59565b93610b50565b936103f860405190565b0390a3565b91929092612eb38185856120fd565b833b612ec26116fe60006112db565b03612ece575b50505050565b612edb936113119361400c565b612ee85738808080612ec8565b6368d2bf6b60e11b6132eb565b612eff6012611e53565b612f3057612f11611a08826014610b59565b908115612f1c575090565b9050612f2c611c07612837612bed565b1490565b50600190565b15612f3d57565b60405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152606490fd5b612f93612f8e8261326b565b612f36565b612fa6612fa18260136112e8565b6112c8565b90612faf825190565b612fbc6116fe60006112db565b11612fcb576103d29150614100565b5090565b6103bc90612fdb6133c3565b61302c565b15612fe757565b60405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606490fd5b613061906130516130406104d060006117bc565b6001600160a01b0383161415612fe0565b611c4c60016123c0836015610b59565b7ff37f0cb2b2cc8066b1fa4738122412661ce5405cd9278f327d6905bb6d0e973f6123ef60405190565b6103bc90612fcf565b6103d291612e8a611a08926130a7600090565b506007610b59565b6103bc906130bb6133c3565b61236d7fe427e272b122e738fd867ac5defcedb2bc9362341166a49d793d8b230f75670c916105a6816010611978565b6103bc906130af565b6103bc906131006133c3565b600061310b816117bc565b6001600160a01b0381166001600160a01b0384161461312f5750506103bc90613eab565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6103bc906130f4565b6103bc906131616133c3565b61318c565b9060ff60a01b9060a01b611514565b906131856103d261153792151590565b8254613166565b61236d7fb304fe5dd2d3c45e8ec87c1dd1bd2b3a773b3135e84a7b9151f5fb4bf1a06d0e916103f4816012613175565b6103bc90613155565b6131d86131d26103d29290565b60e01b90565b6001600160e01b03191690565b6131f26301ffc9a76131c5565b6001600160e01b0319821614908115613230575b8115613210575090565b9050612f2c613222635b5e139f6131c5565b916001600160e01b03191690565b905061323f6380ac58cd6131c5565b6001600160e01b031982161490613206565b8015611d5e576000190190565b6103d2600160e01b6112db565b9060009182613278613400565b821015613283575050565b6132906103d260006116c2565b821061329a575050565b509091505b6132ad611ab48260046112e8565b90816132bc6116fe60006112db565b036132d0576132cb9150613251565b61329f565b50612f2c6132dc61325e565b6132e660006112db565b921690565b60005260046000fd5b906001600160a01b0390611514565b906133136103d261153792610b50565b82546132f4565b9161332482612a95565b90806133a8575b613389575b613351612e8f61335792611c4c86600061334b8860066112e8565b01613303565b916112db565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561338260405190565b8080611c77565b6133966113113383613094565b15613330576367d9dca160e11b6132eb565b50336133bc6001600160a01b038316611c07565b141561332b565b6133cb612bed565b33906133d682611c07565b036133de5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b6103d260006112db565b6103d260026112db565b61341e600a6116c2565b61342661340a565b908114613438576103bc90600a611978565b633ee5aeb560e01b6000908152600490fd5b6103d260016112db565b6103bc61345f61344a565b600a611978565b61346e612a8b565b61347457565b63d93c066560e01b6000908152600490fd5b1561348d57565b60405162461bcd60e51b815260206004820152601560248201527f4e6f7420636f6e7365637574697665206f776e657200000000000000000000006044820152606490fd5b9290918201915b825b8110156135275761352081611c3461350860006134fa6134db966141a3565b01516001600160a01b031690565b61351a6001600160a01b038916611c07565b14613486565b90506134d9565b50915050565b6103d2906135396141b7565b6042916040519161190160f01b8352600283015260228201522090565b6103d29161356391614253565b909291926142ee565b9391909161357a60006112db565b845b8110156135a45761359d81611c3461359661357c94870190565b878a61251f565b905061357a565b509350505050565b156135b357565b60405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152606490fd5b3d15613612576136073d612500565b903d6000602084013e565b606090565b1561361e57565b60405162461bcd60e51b815260206004820152601360248201527f4665652068616e646c696e67206661696c6564000000000000000000000000006044820152606490fd5b1561366a57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b6136b1906136ad60106116c2565b0290565b6136bb60116112fb565b6000916136c7836117bc565b916136da6001600160a01b038416611c07565b036137b857613711916136ef823410156135ac565b6136ff611c0761283760126112fb565b1415806137a7575b613747575b340390565b9061371b816112db565b8211613725575050565b806103bc9261373360405190565b600091335af16137416135f8565b50613663565b61377f838061375660126112fb565b6137616175306112db565b908561376c60405190565b9182800393f161377a6135f8565b501590565b1561370c5761370c838061379260405190565b60009085335af16137a16135f8565b50613617565b506137b1836112db565b8111613707565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230207061796d656e74206e6f7420696d706c656d656e7465640000006044820152606490fd5b6103d260006116c2565b6103d260406112db565b6103d2906138226116fe6103d29490565b901b90565b61383160006116c2565b9160009161383e836112db565b821461397f57808261389961388e61385c6138c39660011460e11b90565b613879613868896117bc565b6138718a6112db565b978891613adb565b17846001600160a01b0316904260a01b171790565b6121fc8860046112e8565b6138e161211260019361212e6138c96138b0613807565b6138ba60016112db565b998a9182613811565b17860290565b611c3a6138d7846005610b59565b9161046d836116c2565b6138e96120e0565b16928314613973578501949285036139026000196116fe565b11613966576001815b61391e575b50505050906103bc91611978565b15613954575b83908383867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4908161390b565b91600101918483036139245780613910565b6340b23f1d60e11b6132eb565b622e076360e81b6132eb565b63b562e8dd60e01b6132eb565b613994613400565b8110156139a9575b636f96cda160e11b6132eb565b6004906139ba611ab48260046112e8565b916000916139c7836112db565b84146139eb5750506139e36122106139dd61325e565b926112db565b0361399c5790565b909192506139fb6103d2846116c2565b81101561399c57909190600019015b91613a18611ab484836112e8565b92613a22836112db565b8414613a4a575050613a386122106139dd61325e565b146103d257636f96cda160e11b6132eb565b90925060001901613a0a565b6103d2613a6d91613a65600090565b5060066112e8565b90815490565b91906001600160a01b038091613a87600090565b5016911691821491141790565b6103d260e86112db565b6103d290613aaf6116fe6103d29490565b901c90565b613ac16103d26103d29290565b62ffffff1690565b6103d26103d26103d29262ffffff1690565b613b10613b15916103d29493613aef600090565b50613b0a613b05613afe613a94565b8097613a9e565b613ab4565b916143a1565b613ac9565b613811565b613b226143ac565b6103bc613b3160006009613175565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61236d336104f7565b6103bc613b1a565b90611cbb939291613b72613414565b906103d2939291613b81613466565b613cbc565b15613b8d57565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606490fd5b90613bdb825190565b811015611f0b576020809102010190565b90613bf5815190565b9067ffffffffffffffff8211610e7357613c13826115d285546110a0565b602090601f8311600114613c4d57611537929160009183613c42575050600019600883021c1916906002021790565b0151905038806115f4565b601f19831691613c6285600052602060002090565b9260005b818110613c9a57509160029391856001969410613c865750505002019055565b01516000196008601f8516021c191661165d565b91936020600181928787015181550195019201613c66565b906103bc91613bec565b506000613cdf613cce6104d0836117bc565b6001600160a01b0384161415613b86565b613cec611f236012611ce5565b613cfb611f3c84611f376116cc565b8351613d096116fe836112db565b148015613e71575b613d1a90611daf565b613d23816112db565b831180613e58575b613d34906118bd565b613d416113116012611e53565b613e18575b613d5060106116c2565b613d5c6116fe836112db565b11613e0a575b613d6a6137fd565b93613d758484613827565b8051613d836116fe846112db565b11613d94575b505061203190610b50565b92613da38296929593956112db565b81811015613dfb5780613dbf611913611913613dd69489613bd2565b613dcb6116fe8a6112db565b11613ddb5760010190565b613da3565b611c34613de88288613bd2565b51613df6601388850161201a565b613cb2565b50925093509161203138613d89565b613e138361369f565b613d62565b613e26611a08336014610b59565b8015613e3b575b613e3690611e5d565b613d46565b50613e36613e47612bed565b613e5033611c07565b149050613e2d565b50613d34613e676103d26118a9565b8411159050613d2b565b50613d1a613e7d855190565b84149050613d11565b6103d29291906000613b63565b916103d2939161356393613ea5600090565b506143f8565b613ecc613ec6613ebb60096112fb565b611c4c846009613303565b91610b50565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0613ef760405190565b8080612e9f565b613f06613466565b6103bc613f1560016009613175565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861236d336104f7565b6103bc613efe565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600b5b9061455b565b6103d27f0000000000000000000000000000000000000000000000000000000000000000600c613f6e565b905051906103bc8261039c565b90602082820312610397576103d291613f9f565b6001600160a01b039182168152911660208201526103d2926080820192909190613fec905b6040830152565b6060818403910152610439565b6131d86131d26103d29263ffffffff1690565b91614024611c4c60209361401e600090565b50610b50565b63150b7a029360003361405561403960405190565b9889968795869461404a8c60e01b90565b865260048601613fc0565b03925af16000928161409a575b5061408b5761406f6135f8565b805161407e6116fe60006112db565b14612ee857805190602001fd5b6132226131d8612f2c92613ff9565b6140bd91935060203d6020116140c4575b6140b58183610e51565b810190613fac565b9138614062565b503d6140ab565b61046d6140e3926020926140dd815190565b94859290565b93849101610416565b6140fa906103d293926140cb565b906140cb565b61410c6113118261326b565b61416157614118614584565b80516141276116fe60006112db565b14614157576103d2611bc99161413f6103d29461458e565b9061414960405190565b9384926020840192836140ec565b50506103d2612517565b630a14c4b560e41b6132eb565b6103d26080610e78565b61418061416e565b60008082526020820181905260408201819052606082015290565b6103d2614178565b6141b26103d291612aa761419b565b6145f7565b6141c030610b50565b6141f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611c07565b148061422a575b15614222577f000000000000000000000000000000000000000000000000000000000000000090565b6103d26146cf565b507f000000000000000000000000000000000000000000000000000000000000000046146141f9565b9060009161425f825190565b61426c6116fe60416112db565b036142965761428f92506020820151906060604084015193015160001a906143f8565b9192909190565b5090506142ae6129936142a960006117bc565b925190565b909160029190565b634e487b7160e01b600052602160045260246000fd5b600411156142d657565b6142b6565b906103bc826142cc565b6103d2906112db565b906000916142fb836142db565b614304826142db565b0361430e57505050565b61431860016142db565b614321826142db565b036143355763f645eedf60e01b8352600483fd5b61433f60026142db565b614348826142db565b03614371575061150061435b83926142e5565b63fce698f760e01b835260048301526024820190565b61438461437e60036142db565b916142db565b1461438d575050565b6335e2f38360e21b82526004820152602490fd5b5050506103d2600090565b6143b7611311612a8b565b6143bd57565b638dfc202b60e01b6000908152600490fd5b6119a26103bc94613fe56060949897956143ee608086019a6000870152565b60ff166020850152565b9091614403846142e5565b61442f6116fe7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06112db565b116144ab57906144516020946000949361444860405190565b948594856143cf565b838052039060015afa1561149b5760005160009161446e836117bc565b6001600160a01b0381166001600160a01b038416146144975750614491836112db565b91929190565b9150916144a3906112db565b909160019190565b5050506144b860006117bc565b9160039190565b6103d260ff6112db565b805460009392916144dc6110dd836110a0565b916001811690811561113957506001146144f557505050565b6145089192939450600052602060002090565b916000925b81841061451a5750500190565b80548484015260209093019260010161450d565b906103d2916144c9565b906103bc6111729261454960405190565b9384809261452e565b6103d290614538565b908161456b6116fe6103d26144bf565b1461457a57506103d290614779565b6103d29150614552565b6103d2600d6112c8565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156145c5576001600a916145a9565b809350602091039203918252565b6103d260a06112db565b6145ea6103d26103d29290565b67ffffffffffffffff1690565b906103bc61460361419b565b606061468b613b05839661462961461c61212e836117af565b6001600160a01b03168652565b61465661464561464061463a6145d3565b84613a9e565b6145dd565b67ffffffffffffffff166020870152565b61467d61466161325e565b61467461466e60006112db565b91841690565b14156040870152565b614685613a94565b90613a9e565b62ffffff16910152565b909594926103bc946113b86146c0926146b96080966113a160a088019c6000890152565b6040850152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6147547f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611bc961474130610b50565b6040519586946020860194469286614695565b61475f611be0825190565b2090565b906103bc612b9a61477384612500565b93610e8c565b614782816147a0565b9061479561479060206112db565b614763565b918252602082015290565b6147af6147b491612fcb600090565b6142e5565b6147be60ff6112db565b166147c9601f6112db565b81116147d25790565b632cd44ac360e21b6000908152600490fdfea26469706673582212200fa5426ad3e7a6342dd43281a96f77133bef595aab11878c2420c6cae816383964736f6c634300081c0033a2646970667358221220f0ebe7f6439158668468ab4fd11d1a5c953839c693bbe92dc8f2fd02a9064d0f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x167EF495 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2470EA1B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x3B688672 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x637C4458 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xA4F0A9B9 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD8E8253 EQ PUSH2 0x69 JUMPI PUSH4 0xEBF595F8 SUB PUSH2 0x87 JUMPI PUSH2 0x64B JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x87 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x8C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x95 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF4 JUMPI PUSH2 0xEB PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST PUSH2 0xB8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP2 SLOAD PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x131 PUSH2 0xB8 SWAP2 PUSH1 0x1 PUSH2 0xD1 JUMP JUMPDEST SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x140 SWAP1 PUSH2 0x102 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x137 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x144 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1B7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x1C9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x195 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B7 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x212 PUSH2 0x20D DUP3 PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x87 JUMPI PUSH2 0xA2 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1F1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x87 JUMPI DUP2 PUSH1 0x20 PUSH2 0xB8 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x8E DUP2 PUSH2 0x102 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x247 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x87 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x284 SWAP2 DUP4 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP4 PUSH2 0x2A5 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x2C6 SWAP2 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP3 PUSH2 0x2E7 SWAP2 DUP4 ADD PUSH2 0x22C JUMP JUMPDEST SWAP3 PUSH2 0xB8 PUSH2 0x2F8 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x308 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST SWAP5 ADD PUSH2 0x250 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x69F JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x1ED DUP2 PUSH1 0x20 SWAP4 PUSH2 0x137 JUMP JUMPDEST SWAP1 PUSH2 0x372 PUSH2 0x36B PUSH2 0x361 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x383 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x39D PUSH2 0x396 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x345 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x376 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xB8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x352 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x3D1 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x331 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3A5 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x8E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xA2 DUP3 PUSH2 0x3DD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SLT PUSH2 0x87 JUMPI PUSH2 0x40B PUSH2 0x160 PUSH2 0x1BC JUMP JUMPDEST SWAP3 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x429 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x44B SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI DUP2 PUSH2 0x470 SWAP2 DUP5 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x87 JUMPI PUSH2 0x499 DUP2 PUSH2 0x517 SWAP4 DUP6 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4AB DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x4BD DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x4CF DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x4E1 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x250 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x4F5 DUP3 DUP3 DUP7 ADD PUSH2 0x250 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x508 DUP3 DUP3 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 SWAP4 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x87 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x87 JUMPI PUSH2 0x549 DUP5 PUSH2 0xB8 SWAP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x308 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x250 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x51D JUMP JUMPDEST SWAP2 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x87 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x59C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP1 PUSH1 0x20 PUSH2 0x5E3 DUP3 DUP7 PUSH2 0x250 JUMP JUMPDEST SWAP5 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xB8 PUSH2 0xB8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x600 JUMP JUMPDEST SWAP1 PUSH2 0x61C SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH1 0x0 PUSH2 0x612 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0xB8 SWAP2 PUSH2 0x131 SWAP2 PUSH2 0xD1 JUMP JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x17B PUSH2 0x16F PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x102 PUSH2 0xB8 PUSH2 0xB8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x667 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x160 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB8 PUSH2 0xB8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x140 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xB8 SWAP7 SWAP6 SWAP5 PUSH2 0x729 PUSH2 0x740 SWAP3 PUSH2 0x6F8 PUSH2 0x6EA SWAP8 PUSH2 0x6F1 PUSH2 0x752 SWAP9 PUSH2 0x6C2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x6E3 PUSH2 0x6D4 DUP13 PUSH2 0x674 JUMP JUMPDEST SWAP8 PUSH2 0x6DD PUSH2 0x67D JUMP JUMPDEST SWAP15 DUP16 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x70D PUSH2 0x706 PUSH2 0x2710 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x80 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x720 PUSH2 0x719 DUP7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD PUSH2 0x695 JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH1 0xE0 DUP8 ADD PUSH2 0x695 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xB8 SWAP1 SLOAD PUSH2 0x757 JUMP JUMPDEST SWAP1 PUSH2 0x785 PUSH2 0x779 PUSH2 0x361 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x796 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7B7 PUSH2 0x7B0 PUSH1 0x1 SWAP3 PUSH2 0x7AB DUP8 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x789 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP2 PUSH2 0x76A JUMP JUMPDEST SWAP1 PUSH2 0xA2 PUSH2 0x7E3 SWAP3 PUSH2 0x7DA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x7BF JUMP JUMPDEST SUB DUP4 PUSH2 0x195 JUMP JUMPDEST PUSH2 0xB8 SWAP1 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x80A PUSH2 0xB8 SWAP2 PUSH2 0x802 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST ISZERO PUSH2 0x87 JUMPI JUMP JUMPDEST PUSH2 0xB8 SWAP1 MLOAD PUSH2 0x102 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x837 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x827 JUMP JUMPDEST PUSH2 0x868 PUSH2 0x871 PUSH1 0x20 SWAP4 PUSH2 0x1ED SWAP4 PUSH2 0x85C DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x824 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB8 SWAP1 PUSH2 0x140 DUP1 PUSH2 0x8DD PUSH2 0x8CB PUSH2 0x8B9 PUSH2 0x8A7 PUSH2 0x160 DUP8 ADD PUSH1 0x0 DUP11 ADD MLOAD DUP9 DUP3 SUB PUSH1 0x0 DUP11 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH2 0x8ED PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x8FC PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x90E PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x934 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x977 PUSH2 0x96C PUSH2 0xA2 SWAP6 SWAP8 SWAP7 SWAP5 PUSH1 0x60 DUP5 ADD SWAP1 DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x87B JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST ADD SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x9A9 SWAP2 MUL SWAP2 PUSH2 0x9A4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 SHL SWAP1 JUMP JUMPDEST SWAP3 SHL SWAP1 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x9C4 PUSH2 0xB8 PUSH2 0x9CC SWAP4 PUSH2 0x609 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x98A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1B7 JUMPI DUP3 PUSH2 0x9F8 SWAP2 PUSH1 0x1 PUSH2 0xA2 SWAP6 ADD DUP2 SSTORE PUSH2 0xD1 JUMP JUMPDEST SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH2 0xB8 SWAP4 SWAP2 SWAP3 PUSH2 0xA15 SWAP2 DUP5 ADD SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x847 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP1 MLOAD MLOAD PUSH2 0xA45 PUSH1 0x0 SWAP2 PUSH2 0xA3F PUSH2 0xA3B DUP5 PUSH2 0x688 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x80F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0xA64 PUSH2 0xA58 PUSH2 0x820 DUP7 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xA3B DUP6 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD SWAP5 PUSH2 0xA73 DUP7 PUSH2 0x816 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xA7F DUP6 PUSH2 0x674 JUMP JUMPDEST SWAP2 PUSH2 0xA92 PUSH2 0xA8C DUP5 PUSH2 0x102 JUMP JUMPDEST SWAP2 PUSH2 0x102 JUMP JUMPDEST EQ ISZERO PUSH2 0x80F JUMP JUMPDEST PUSH2 0xAB3 PUSH2 0xAA7 PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xA3B DUP8 PUSH2 0x688 JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0xABF DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xA92 DUP5 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xAD4 DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0xA92 DUP6 PUSH2 0x102 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0xAEE PUSH2 0xA3B DUP7 PUSH2 0x688 JUMP JUMPDEST GT PUSH2 0xBCF JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5387 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1B7 JUMPI DUP4 SWAP3 DUP7 PUSH2 0xB26 SWAP4 PUSH2 0x5387 PUSH2 0xC6B DUP8 CODECOPY PUSH2 0x94A JUMP JUMPDEST SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH2 0xBCA JUMPI PUSH2 0xB3C PUSH2 0xB6B SWAP2 PUSH2 0x609 JUMP JUMPDEST SWAP5 PUSH2 0xB5B DUP7 PUSH2 0xB56 PUSH2 0xB8 PUSH2 0xB50 DUP6 PUSH2 0x816 JUMP JUMPDEST DUP8 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xB66 DUP7 PUSH1 0x1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 MLOAD SWAP1 PUSH32 0x1309157DD19792BDFD72678BA7958D9D18EC4B35F3C362C6203332BB2C771E66 PUSH2 0xBA4 PUSH2 0xB9E DUP7 PUSH2 0x609 JUMP JUMPDEST SWAP3 PUSH2 0x609 JUMP JUMPDEST SWAP3 PUSH2 0xBAE CALLER PUSH2 0x609 JUMP JUMPDEST SWAP5 PUSH2 0xBC4 PUSH2 0xBBB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9FE JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH2 0xBEB SWAP1 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0xBE5 PUSH1 0xE0 DUP10 ADD PUSH2 0x816 JUMP JUMPDEST SWAP3 PUSH2 0x102 JUMP JUMPDEST CODESIZE PUSH2 0xAF4 JUMP JUMPDEST ISZERO PUSH2 0xBF8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4445585F4F55545F4F465F424F554E445300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x131 PUSH2 0xB8 SWAP2 PUSH2 0xC4C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xC63 PUSH2 0xC5C PUSH2 0xB8 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD1 JUMP INVALID PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x90 JUMPI PUSH2 0x1B PUSH2 0x15 PUSH2 0x334 JUMP JUMPDEST SWAP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481A PUSH2 0xB6D DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x4200 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x422D ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x41CD ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x4716 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x46F5 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x3F4C ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x3F79 ADD MSTORE PUSH2 0x160 MLOAD DUP2 DUP2 DUP2 PUSH2 0x129A ADD MSTORE PUSH2 0x13E5 ADD MSTORE PUSH2 0x180 MLOAD DUP2 DUP2 DUP2 PUSH2 0xF96 ADD MSTORE PUSH2 0x140B ADD MSTORE PUSH2 0x481A SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0xDE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xAB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xCC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x11A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x13F PUSH2 0x13A DUP3 PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x90 JUMPI PUSH2 0xE5 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x107 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x90 JUMPI DUP2 MLOAD PUSH2 0x173 SWAP3 PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x90 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x198 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x178 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE5 DUP3 PUSH2 0x1B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SLT PUSH2 0x90 JUMPI PUSH2 0x1E2 PUSH2 0x160 PUSH2 0xD1 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x201 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x222 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI DUP2 PUSH2 0x246 SWAP2 DUP5 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x90 JUMPI PUSH2 0x26E DUP2 PUSH2 0x2EC SWAP4 DUP6 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x280 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x292 DUP2 PUSH1 0xA0 DUP6 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2A4 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2B6 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x2CA DUP3 DUP3 DUP7 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x2DD DUP3 DUP3 DUP7 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 SWAP4 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x90 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x90 JUMPI PUSH2 0x31D DUP5 PUSH2 0x173 SWAP3 DUP6 ADD PUSH2 0x1C9 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x32D DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x1A7 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x5387 DUP1 CODESIZE SUB DUP1 PUSH2 0x347 DUP2 PUSH2 0xD1 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x2F2 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP1 PUSH2 0x364 PUSH2 0x13A DUP4 PUSH2 0xE7 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x373 PUSH1 0x10 PUSH2 0x357 JUMP JUMPDEST PUSH16 0x29A823A7232A21B7B63632B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x1 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x397 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x3EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3E7 JUMPI JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3DC JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x42E PUSH2 0x173 PUSH2 0x436 SWAP4 PUSH2 0x410 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3F6 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x451 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x45F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x43A JUMP JUMPDEST ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x474 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x486 PUSH2 0xE5 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x4A8 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x446 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 PUSH2 0x4BB DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC JUMPI PUSH2 0x4DE DUP3 PUSH2 0x4D8 DUP6 SLOAD PUSH2 0x3CC JUMP JUMPDEST DUP6 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x519 JUMPI PUSH2 0x436 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x50E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x52E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x56C JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x553 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x532 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP2 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x5A8 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x410 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x406 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x5D2 JUMP JUMPDEST SWAP1 PUSH2 0x5F4 PUSH2 0x173 PUSH2 0x436 SWAP3 PUSH2 0x5DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5AF JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x61A PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5FB JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x640 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x621 JUMP JUMPDEST SWAP1 PUSH2 0x651 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH2 0x678 PUSH2 0x173 PUSH2 0x436 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x65F JUMP JUMPDEST SWAP1 PUSH2 0x76A PUSH2 0x763 PUSH2 0x140 PUSH2 0x784 SWAP5 PUSH2 0x6C0 PUSH2 0x698 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP6 ADD MLOAD SWAP2 PUSH1 0x20 DUP7 ADD MLOAD SWAP4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6DE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xE PUSH2 0x584 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6EC PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH2 0x598 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x701 PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x726 PUSH2 0x71F PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x73D PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x75C PUSH2 0x755 PUSH2 0x120 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x60A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x630 JUMP JUMPDEST PUSH2 0x77F PUSH1 0x1 PUSH2 0x77A CALLER PUSH1 0x15 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x7DB SWAP5 PUSH2 0x7A1 SWAP2 PUSH2 0x7C2 SWAP5 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x7AC PUSH1 0xB DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x7BB PUSH1 0xC DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x140 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE0 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x7F7 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0x803 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xC0 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x81D JUMP JUMPDEST PUSH2 0x173 PUSH1 0x1 PUSH2 0x410 JUMP JUMPDEST SWAP1 PUSH2 0x828 SWAP3 SWAP2 PUSH2 0x83A JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x833 PUSH2 0x813 JUMP JUMPDEST PUSH1 0xA PUSH2 0x598 JUMP JUMPDEST SWAP1 PUSH2 0xE5 SWAP3 SWAP2 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x18C PUSH2 0x173 PUSH2 0x173 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x845 JUMP JUMPDEST SWAP2 PUSH2 0x865 SWAP2 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP2 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x894 JUMPI POP POP PUSH2 0xE5 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE DUP1 PUSH1 0x24 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5 SWAP2 DUP3 SWAP2 PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x8CC SWAP1 PUSH1 0x2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x8E6 DUP2 PUSH1 0x0 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x8F3 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x8FE JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x173 PUSH1 0xFF PUSH2 0x410 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x924 PUSH2 0x8F3 PUSH1 0x20 PUSH2 0x410 JUMP JUMPDEST LT ISZERO PUSH2 0x934 JUMPI PUSH2 0x173 SWAP2 POP PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 PUSH2 0x946 SWAP4 SWAP1 JUMP JUMPDEST ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x173 PUSH2 0x90B JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0xE5 SWAP5 PUSH2 0x983 PUSH2 0x98A SWAP3 PUSH2 0x97C PUSH1 0x80 SWAP7 PUSH2 0x975 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x9F6 PUSH2 0x9C6 PUSH1 0xE0 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100 MLOAD SWAP1 PUSH2 0x9EA PUSH2 0x9D7 ADDRESS PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x951 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA01 PUSH2 0x7CD DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH2 0x173 SWAP1 SLOAD PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0xA33 PUSH2 0xA28 PUSH1 0x9 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x77F DUP5 PUSH1 0x9 PUSH2 0x5E4 JUMP JUMPDEST SWAP2 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xA64 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x0 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA9E PUSH2 0xAA7 PUSH1 0x20 SWAP4 PUSH2 0x103 SWAP4 PUSH2 0xA92 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x107 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x173 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xADB PUSH2 0xAD7 PUSH2 0xAD0 DUP4 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0xAE8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xAFA SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x8 MUL SHL SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH2 0x173 SWAP1 PUSH2 0x410 JUMP JUMPDEST DUP1 PUSH2 0xB10 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x8F3 PUSH1 0x1F PUSH2 0x410 JUMP JUMPDEST GT PUSH2 0xB49 JUMPI POP PUSH2 0x173 DUP2 PUSH2 0xB43 PUSH2 0xB3E PUSH2 0xB39 PUSH2 0x173 SWAP6 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST OR PUSH2 0x410 JUMP JUMPDEST PUSH2 0x8B2 SWAP1 PUSH2 0xB56 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xAB1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x13966DB5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x15D9756E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x1D027AAD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x22DF11D8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x254A4737 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x280007BB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x2C673915 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x4C06BABA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52B91226 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x559E775B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x765B0C36 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7ECC2B56 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x916F9AB4 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAFC0381D EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xC2BA4744 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xC3324B27 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xC4C69033 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xE31C6732 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xE59BA924 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xEDDD0D9C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF8004D31 EQ PUSH2 0x284 JUMPI PUSH4 0xFA5C3375 SUB PUSH2 0x397 JUMPI PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x120D JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x119B JUMP JUMPDEST PUSH2 0x103B JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x397 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x429 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x45A PUSH2 0x463 PUSH1 0x20 SWAP4 PUSH2 0x46D SWAP4 PUSH2 0x44E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x439 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x471 JUMP JUMPDEST DUP1 PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x549 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x564 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x10 PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x619 DUP4 DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x602 JUMP JUMPDEST SWAP2 PUSH2 0x16B0 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x16CC JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x685 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x693 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x6A1 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6AF DUP3 PUSH1 0x60 DUP6 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x6BD DUP4 PUSH1 0x80 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x670 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x740 DUP3 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x74E DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20BC JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 PUSH2 0x7A0 DUP5 DUP5 PUSH2 0x520 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x549 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x14 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x7FA CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x805 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x86D CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x15 PUSH1 0x12 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x872 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8AF CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x23FE JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x245F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x564 PUSH2 0x909 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST SWAP2 PUSH2 0x251F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x91F CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x975 DUP4 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0x983 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 PUSH2 0x9A4 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x9B4 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH2 0x3D2 PUSH2 0x9C5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x951 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x549 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x4AF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x9E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x2A32 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA0D CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A55 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xA4B CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2A81 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xA61 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x2A8B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xA82 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2AB2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2ADA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xAC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 SLOAD PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x12 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xB26 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 PUSH2 0x3D2 SWAP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xB9C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x564 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 PUSH2 0xBD9 PUSH2 0xBD2 PUSH2 0xBC8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBEA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC07 PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0xC7F PUSH2 0xC77 PUSH2 0xC96 SWAP6 PUSH2 0xC69 PUSH2 0xC8F SWAP6 PUSH2 0x3D2 SWAP13 SWAP11 PUSH2 0xC5C PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0xCBE PUSH2 0x2BA7 JUMP JUMPDEST SWAP4 PUSH2 0xCCE SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0xC0F JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xCE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xD06 DUP3 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xD14 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP2 PUSH2 0xD35 SWAP2 DUP6 ADD PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0xD45 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x638 SWAP3 ADD PUSH2 0x5D2 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD77 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF2 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2DBD JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xD96 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xDAC CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x2DEF JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xDCA CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2E43 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0xDEB DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x80D JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0xE05 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCF JUMP JUMPDEST SWAP1 PUSH2 0x2E4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xE36 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE73 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0xE85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xECA PUSH2 0xEC5 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x397 JUMPI PUSH2 0x3BC SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x397 JUMPI DUP2 PUSH1 0x20 PUSH2 0x3D2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0xF14 DUP2 DUP4 PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF22 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x520 JUMP JUMPDEST SWAP3 PUSH2 0xF30 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x4AF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP3 ADD PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0xF5D CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0xF7C CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2EF5 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xF91 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x0 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0x11 PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0xFD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x4F7 PUSH2 0xFBA JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x49D PUSH2 0xFF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xF PUSH2 0x574 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1018 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x5A6 PUSH2 0xFFC JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1036 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x308B JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x104B CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x5A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x10C0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10BB JUMPI JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10B0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x10E7 PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1100 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1125 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x1169 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x114E JUMP JUMPDEST SUB DUP4 PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 LT PUSH2 0x118A JUMPI PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH1 0xE PUSH2 0x1179 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x11AB CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x407 PUSH2 0x49D PUSH2 0x118F JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP1 PUSH1 0x20 PUSH2 0x11D2 DUP3 DUP7 PUSH2 0x520 JUMP JUMPDEST SWAP5 ADD PUSH2 0x520 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x11EF CALLDATASIZE PUSH1 0x4 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH2 0x3094 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1208 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1220 CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B PUSH2 0x3D2 SWAP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x407 PUSH2 0x3F4 PUSH2 0x124B CALLDATASIZE PUSH1 0x4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x564 PUSH2 0x1263 CALLDATASIZE PUSH1 0x4 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x31BC JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST CALLVALUE PUSH2 0x397 JUMPI PUSH2 0x1291 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x407 PUSH32 0x0 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x31E5 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB63 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x132F JUMPI PUSH1 0x0 PUSH2 0x1329 PUSH2 0x3D2 SWAP3 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x12FB JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x331A JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3D5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x13BF SWAP3 PUSH2 0x13A8 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP2 PUSH2 0x13DF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1409 PUSH32 0x0 PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1433 ADDRESS PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH2 0x145C PUSH2 0x1440 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0x2F4DE29B PUSH1 0xE1 SHL DUP7 MSTORE CHAINID SWAP1 PUSH1 0x4 DUP8 ADD PUSH2 0x1372 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1472 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1494 JUMPI JUMPDEST PUSH2 0x148C DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x13C6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14AE PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST ISZERO PUSH2 0x14BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152F PUSH2 0x3D2 PUSH2 0x1537 SWAP4 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1504 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3BC SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x151E JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1552 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1560 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x153B JUMP JUMPDEST ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1575 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x3BC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x15A9 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x15D8 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST DUP6 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1629 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1667 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x164D JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1644 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x162C JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH2 0x3BC SWAP4 SWAP3 PUSH2 0x16A4 PUSH2 0x169F DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP3 SWAP2 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x16EB PUSH2 0x16DC PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x16E6 PUSH1 0x1 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16E6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x1702 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x170A JUMPI POP JUMP JUMPDEST PUSH2 0x3D2 SWAP2 SWAP3 POP PUSH2 0x46D PUSH1 0x8 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x172C PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x174B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1750 JUMP JUMPDEST ISZERO PUSH2 0x176A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420657363726F772077616C6C657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4D0 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST ISZERO PUSH2 0x17CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1818 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1864 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x64 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x32 PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x18C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207175616E7469747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xC0 PUSH2 0xE78 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xEB5 JUMP JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x1988 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0x12DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x196E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3BC SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x1C1A PUSH2 0x1BF9 DUP6 SWAP8 PUSH2 0x1BF3 DUP7 SWAP11 PUSH2 0x1BED PUSH2 0x1AE3 PUSH2 0x1BD5 DUP10 PUSH2 0x1AFF PUSH2 0x1C51 SWAP12 SWAP15 PUSH2 0x1AF8 PUSH32 0x670FE7CB14F68CF31D6E2012CADD6F5325904B6D23D2CADEB3607C96D8B1FEC8 SWAP16 PUSH2 0x1C57 SWAP16 DUP15 SWAP2 PUSH2 0x1AEA PUSH2 0x1AF1 SWAP3 PUSH2 0x1A12 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP12 SWAP10 PUSH2 0x1A57 PUSH2 0x1A45 PUSH2 0x1A26 DUP14 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND JUMPDEST EQ ISZERO PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND JUMPDEST EQ ISZERO PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x1A64 DUP10 JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1A6E PUSH1 0x14 PUSH2 0x12DB JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1A98 PUSH2 0x1A80 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A89 DUP14 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT SWAP1 DUP2 PUSH2 0x1C7C JUMPI JUMPDEST POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x1AA3 DUP6 DUP5 DUP10 PUSH2 0x34D2 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x1AB9 PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST SWAP8 PUSH2 0x1AC2 PUSH2 0x1909 JUMP JUMPDEST SWAP15 DUP16 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP14 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST DUP3 ADD MLOAD PUSH32 0xE3803E7E8E11A1BD61BC6A735C21EE04CE89F8A17FE09BE53356F1EF9542CA09 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1BC9 PUSH2 0x1B45 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x1B51 PUSH1 0x40 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B5D PUSH1 0x60 DUP3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B73 PUSH1 0xA0 PUSH2 0x1B6D PUSH1 0x80 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1B7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD SWAP8 DUP9 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 SWAP6 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x352D JUMP JUMPDEST SWAP3 PUSH2 0x1917 JUMP JUMPDEST SWAP1 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1C40 PUSH2 0x1C28 DUP3 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x1C34 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x1C4C DUP7 DUP9 DUP8 DUP5 PUSH2 0x356C JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x1C61 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x1C6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x198F JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 POP DUP7 GT ISZERO CODESIZE PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1A98 PUSH2 0x1C92 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CB6 PUSH2 0x3414 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x3454 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CD4 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x1F10 JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA0 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1CD9 JUMP JUMPDEST ISZERO PUSH2 0x1CF6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720697320636C6F736564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST ISZERO PUSH2 0x1D6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C7920657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E55524920636F756E74206D69736D61746368000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E02 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 SWAP1 PUSH1 0xA8 SHR PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x3D2 SWAP1 SLOAD PUSH2 0x1E47 JUMP JUMPDEST ISZERO PUSH2 0x1E64 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x397 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x397 JUMPI PUSH1 0x20 ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x397 JUMPI JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 PUSH2 0x638 SWAP3 MUL DUP2 ADD SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 SWAP1 PUSH2 0x1F28 PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1CEF JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1F4C PUSH2 0x16FE PUSH2 0x3D2 PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST GT ISZERO PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F6C PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x207C JUMPI JUMPDEST PUSH2 0x1F90 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x1FA1 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x206E JUMPI JUMPDEST PUSH2 0x1FAF PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x1FBA DUP2 DUP8 PUSH2 0x3827 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2020 JUMPI DUP1 PUSH2 0x1FE6 PUSH2 0x1FE1 PUSH2 0x638 PUSH2 0x1FFD SWAP5 DUP13 DUP11 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FF2 PUSH2 0x16FE DUP8 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2002 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x2010 DUP3 DUP12 DUP10 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 PUSH2 0x16AB PUSH1 0x13 DUP12 DUP7 ADD JUMPDEST SWAP1 PUSH2 0x12E8 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP2 POP SWAP5 POP PUSH2 0x2031 SWAP2 POP PUSH2 0xB50 JUMP JUMPDEST PUSH32 0x59F9FB6D992D2AEE0ED338BB4C504A17FD3F67AE91A3135BC2EF947E308C41B2 PUSH2 0x2068 PUSH2 0x205E DUP6 PUSH2 0x12DB JUMP JUMPDEST SWAP4 PUSH2 0x5AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x2077 DUP5 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x208A PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x209F JUMPI JUMPDEST PUSH2 0x209A SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x1F86 JUMP JUMPDEST POP PUSH2 0x209A PUSH2 0x20AB PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x20B4 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2117 PUSH2 0x2112 PUSH2 0x210C DUP6 PUSH2 0x398C JUMP JUMPDEST SWAP3 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x20CA JUMP JUMPDEST SWAP3 PUSH2 0x2133 PUSH2 0x212E PUSH2 0x2126 PUSH2 0x20E0 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x17AF JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP4 PUSH2 0x2140 PUSH2 0x212E DUP5 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x2152 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x22FA JUMPI PUSH2 0x2160 DUP3 PUSH2 0x3A56 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x2171 PUSH2 0x1311 DUP3 DUP11 DUP11 PUSH2 0x3A73 JUMP JUMPDEST PUSH2 0x22CC JUMPI JUMPDEST POP PUSH2 0x2112 PUSH2 0x16FE SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x2223 SWAP3 PUSH2 0x224F SWAP9 PUSH2 0x22C2 JUMPI JUMPDEST POP PUSH2 0x21B0 PUSH2 0x219D DUP11 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x21A9 DUP3 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x21BE PUSH2 0x1C28 DUP3 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x20F0 JUMP JUMPDEST SWAP6 PUSH2 0x21EB PUSH2 0x21D5 DUP3 DUP5 DUP14 PUSH2 0x3ADB JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2201 PUSH1 0x4 SWAP3 PUSH2 0x21FC DUP10 DUP6 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x2216 PUSH2 0x2210 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x2263 JUMPI JUMPDEST POP POP PUSH2 0xB47 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2256 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2275 PUSH2 0x2270 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2283 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x228F PUSH2 0x16FE DUP12 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x221C JUMP JUMPDEST PUSH2 0x22A7 PUSH2 0x3D2 DUP11 PUSH2 0x16C2 JUMP JUMPDEST DUP4 EQ PUSH2 0x2295 JUMPI PUSH2 0x22BA SWAP3 PUSH2 0x21FC SWAP2 PUSH2 0x12E8 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x218E JUMP JUMPDEST PUSH2 0x1311 PUSH2 0x22DE SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0x3094 JUMP JUMPDEST PUSH2 0x22ED JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x2176 JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2312 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x2336 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x236D PUSH32 0x545ECF6FBCC235DF5FDFB676E1992025683C8097A8BD6E5A7C57B31F1C1B29D4 SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x2326 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2387 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x23AC JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x23A5 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23C5 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2395 JUMP JUMPDEST PUSH32 0x566163B435DF210872AAFFF6E352033418C951E1538D138DFBCCD622C4B022D0 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x1AB4 PUSH2 0x3D2 SWAP2 PUSH2 0x240D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2421 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2435 SWAP1 PUSH2 0x1C4C PUSH1 0x0 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2470 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3B5B JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2468 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE73 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0x2483 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24BC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B0 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x24E0 PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP2 PUSH2 0x3E86 JUMP JUMPDEST SWAP1 PUSH2 0x24A8 PUSH2 0xEC5 DUP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x2500 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x250D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3BC SWAP3 PUSH2 0x252D PUSH2 0x2517 JUMP JUMPDEST SWAP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2546 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2559 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x276A JUMP JUMPDEST ISZERO PUSH2 0x2565 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062617463682073697A650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3D2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x25CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x262A PUSH2 0xEC5 DUP3 PUSH2 0x2483 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x397 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x264E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x265C DUP5 DUP7 PUSH2 0x4AF JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x261A JUMP JUMPDEST SWAP1 PUSH2 0x2685 PUSH2 0xBD2 PUSH2 0x2681 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2696 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26AC PUSH2 0xC00 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2672 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x270C PUSH2 0x19A2 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x2705 PUSH1 0xA0 SWAP7 PUSH2 0x26F5 PUSH2 0x3BC SWAP11 PUSH2 0x26E5 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATACOPY JUMP JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 ADD JUMPDEST SWAP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x397 JUMPI DUP3 SWAP2 PUSH1 0x20 PUSH2 0x46D SWAP3 MUL SWAP4 DUP5 SWAP2 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3D2 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2717 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP8 SWAP2 SWAP8 PUSH2 0x2784 PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x27C1 PUSH2 0x27B2 PUSH2 0x2796 DUP6 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x27CA DUP10 PUSH2 0x1A5C JUMP JUMPDEST DUP7 SWAP6 PUSH2 0x27D5 DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP8 GT DUP1 PUSH2 0x2A19 JUMPI JUMPDEST PUSH2 0x27E6 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x27EF DUP5 PUSH2 0x12DB JUMP JUMPDEST DUP12 DUP9 DUP3 LT ISZERO PUSH2 0x284F JUMPI SWAP1 PUSH2 0x1C34 DUP12 PUSH2 0x2844 PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0xA82 DUP16 DUP8 DUP2 DUP11 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 PUSH2 0x284A SWAP16 PUSH2 0x2828 SWAP9 DUP9 SWAP2 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x326B JUMP JUMPDEST PUSH2 0x25AA JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST PUSH2 0x2973 SWAP4 SWAP2 POP SWAP2 PUSH2 0x296E DUP7 PUSH2 0x28C2 DUP13 SWAP12 SWAP15 PUSH2 0x270C DUP16 DUP14 SWAP16 PUSH2 0x28BB PUSH2 0x2998 SWAP15 SWAP16 SWAP2 PUSH2 0x2985 SWAP14 SWAP12 PUSH2 0x28B6 PUSH2 0x2705 SWAP5 PUSH2 0x28A6 PUSH2 0x288C PUSH2 0x1AB4 DUP10 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP8 PUSH2 0x2895 PUSH2 0x2610 JUMP JUMPDEST SWAP13 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE JUMP JUMPDEST PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BD5 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 PUSH2 0x28F9 DUP11 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC9 PUSH2 0x2911 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2933 PUSH2 0x2923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1BC9 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x293E PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x2956 PUSH1 0x80 PUSH2 0x2950 PUSH1 0x60 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3E93 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2993 PUSH2 0x1C28 DUP8 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C0 DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x299A SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST DUP8 DUP10 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x2998 JUMP JUMPDEST POP SWAP5 SWAP4 POP SWAP2 PUSH2 0x29F9 PUSH2 0x1C51 PUSH32 0xB29502FF9B08DF34AE7101BCAEDAE6124591B6F81D9AB5A4BA2BF20641FD2DE2 SWAP3 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x2A03 CALLER PUSH2 0xB50 JUMP JUMPDEST SWAP5 PUSH2 0x1C77 PUSH2 0x2A10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2759 JUMP JUMPDEST POP PUSH2 0x27E6 PUSH2 0x2A28 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP9 GT ISZERO SWAP1 POP PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2533 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2A63 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2A42 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A75 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xD PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x212E PUSH2 0x2AAD PUSH2 0x3D2 SWAP3 PUSH2 0x2AA7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x398C JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x2AC0 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0x3D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2B10 JUMPI PUSH2 0x1AB4 PUSH2 0x2B04 SWAP2 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2AC9 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2B25 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x2B35 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B1D JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1D5E JUMPI JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x2B5C PUSH1 0xF PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2B64 PUSH2 0x16CC JUMP JUMPDEST SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x2B72 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3BC PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2B6A JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x24DA DUP5 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST PUSH2 0x2BAF PUSH2 0x3F47 JUMP JUMPDEST SWAP1 PUSH2 0x2BB8 PUSH2 0x3F74 JUMP JUMPDEST SWAP1 PUSH2 0x2BC2 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2BDE PUSH2 0x2BD9 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST SWAP1 PUSH2 0x1731 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C09 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2C1B PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x2C32 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2720 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3D2 SWAP3 PUSH2 0x2C20 JUMP JUMPDEST SWAP5 SWAP7 SWAP1 SWAP2 SWAP4 SWAP6 SWAP3 SWAP7 PUSH2 0x2C4B PUSH2 0x1A0D PUSH2 0x1A08 CALLER PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2C79 PUSH2 0x1A45 PUSH2 0x2C5D DUP5 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x4D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1A3E JUMP JUMPDEST PUSH2 0x2C82 DUP9 PUSH2 0x1A5C JUMP JUMPDEST DUP9 SWAP5 PUSH2 0x2C8D DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 GT DUP1 PUSH2 0x2DA4 JUMPI JUMPDEST PUSH2 0x2C9E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH2 0x2CA7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI DUP1 PUSH2 0x1C34 PUSH2 0x2CD7 PUSH2 0xA82 PUSH2 0x2828 DUP16 SWAP6 DUP7 DUP15 PUSH2 0x2832 PUSH2 0x169F PUSH2 0x282D PUSH2 0x2828 DUP7 PUSH2 0x2CE9 SWAP14 DUP7 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH2 0x1C07 JUMP JUMPDEST PUSH2 0x2CA7 JUMP JUMPDEST POP PUSH2 0x2985 SWAP2 PUSH2 0x1BF3 PUSH2 0x2973 SWAP3 PUSH2 0x1BED DUP9 PUSH2 0x1BD5 DUP13 SWAP16 SWAP12 SWAP15 PUSH2 0x2D7C SWAP11 SWAP12 SWAP14 DUP16 SWAP2 PUSH2 0x1BC9 SWAP1 DUP16 PUSH2 0x2D58 PUSH2 0x1BC9 SWAP2 PUSH2 0x2D40 PUSH32 0x24B3FC13CE2556394493767A6603FB6EB349A51FEC76048F203A379615FA34C1 SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x2D4A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x2D63 PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x2D72 PUSH2 0x1AB4 DUP7 PUSH1 0x16 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH2 0x2960 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x2D9D DUP2 PUSH2 0x1C34 PUSH2 0x29B9 PUSH2 0x2828 PUSH2 0x2D7E SWAP6 DUP9 DUP14 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7C JUMP JUMPDEST POP PUSH2 0x2C9E PUSH2 0x2DB3 PUSH2 0x3D2 PUSH2 0x18B3 JUMP JUMPDEST DUP8 GT ISZERO SWAP1 POP PUSH2 0x2C95 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DD9 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH1 0xE PUSH2 0x167F JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x3 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2E05 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x2E19 SWAP1 PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0x2E9F PUSH2 0x2E95 PUSH2 0x2E8F CALLER PUSH2 0x1C4C DUP8 PUSH2 0x23C0 DUP9 PUSH2 0x2E8A DUP6 PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST SWAP4 PUSH2 0xB50 JUMP JUMPDEST SWAP4 PUSH2 0x3F8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0x2EB3 DUP2 DUP6 DUP6 PUSH2 0x20FD JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x2EC2 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x2ECE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2EDB SWAP4 PUSH2 0x1311 SWAP4 PUSH2 0x400C JUMP JUMPDEST PUSH2 0x2EE8 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2F30 JUMPI PUSH2 0x2F11 PUSH2 0x1A08 DUP3 PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2F1C JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x1C07 PUSH2 0x2837 PUSH2 0x2BED JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2F93 PUSH2 0x2F8E DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2F36 JUMP JUMPDEST PUSH2 0x2FA6 PUSH2 0x2FA1 DUP3 PUSH1 0x13 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH2 0x2FAF DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FBC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x2FCB JUMPI PUSH2 0x3D2 SWAP2 POP PUSH2 0x4100 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FDB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x302C JUMP JUMPDEST ISZERO PUSH2 0x2FE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3061 SWAP1 PUSH2 0x3051 PUSH2 0x3040 PUSH2 0x4D0 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0x1C4C PUSH1 0x1 PUSH2 0x23C0 DUP4 PUSH1 0x15 PUSH2 0xB59 JUMP JUMPDEST PUSH32 0xF37F0CB2B2CC8066B1FA4738122412661CE5405CD9278F327D6905BB6D0E973F PUSH2 0x23EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x2E8A PUSH2 0x1A08 SWAP3 PUSH2 0x30A7 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30BB PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xE427E272B122E738FD867AC5DEFCEDB2BC9362341166A49D793D8B230F75670C SWAP2 PUSH2 0x5A6 DUP2 PUSH1 0x10 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3100 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP2 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x312F JUMPI POP POP PUSH2 0x3BC SWAP1 PUSH2 0x3EAB JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3161 PUSH2 0x33C3 JUMP JUMPDEST PUSH2 0x318C JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3185 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x236D PUSH32 0xB304FE5DD2D3C45E8EC87C1DD1BD2B3A773B3135E84A7B9151F5FB4BF1A06D0E SWAP2 PUSH2 0x3F4 DUP2 PUSH1 0x12 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0x3BC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x31F2 PUSH4 0x1FFC9A7 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x3230 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3210 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F2C PUSH2 0x3222 PUSH4 0x5B5E139F PUSH2 0x31C5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x323F PUSH4 0x80AC58CD PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x3206 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x3278 PUSH2 0x3400 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3283 JUMPI POP POP JUMP JUMPDEST PUSH2 0x3290 PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST DUP3 LT PUSH2 0x329A JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0x32AD PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x32BC PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x32D0 JUMPI PUSH2 0x32CB SWAP2 POP PUSH2 0x3251 JUMP JUMPDEST PUSH2 0x329F JUMP JUMPDEST POP PUSH2 0x2F2C PUSH2 0x32DC PUSH2 0x325E JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 PUSH2 0x3313 PUSH2 0x3D2 PUSH2 0x1537 SWAP3 PUSH2 0xB50 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x32F4 JUMP JUMPDEST SWAP2 PUSH2 0x3324 DUP3 PUSH2 0x2A95 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x33A8 JUMPI JUMPDEST PUSH2 0x3389 JUMPI JUMPDEST PUSH2 0x3351 PUSH2 0x2E8F PUSH2 0x3357 SWAP3 PUSH2 0x1C4C DUP7 PUSH1 0x0 PUSH2 0x334B DUP9 PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST ADD PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0x12DB JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0x3382 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x3396 PUSH2 0x1311 CALLER DUP4 PUSH2 0x3094 JUMP JUMPDEST ISZERO PUSH2 0x3330 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST POP CALLER PUSH2 0x33BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C07 JUMP JUMPDEST EQ ISZERO PUSH2 0x332B JUMP JUMPDEST PUSH2 0x33CB PUSH2 0x2BED JUMP JUMPDEST CALLER SWAP1 PUSH2 0x33D6 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x33DE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x2 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x341E PUSH1 0xA PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3426 PUSH2 0x340A JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x3438 JUMPI PUSH2 0x3BC SWAP1 PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x345F PUSH2 0x344A JUMP JUMPDEST PUSH1 0xA PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x346E PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x3474 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420636F6E7365637574697665206F776E65720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 DUP3 ADD SWAP2 JUMPDEST DUP3 JUMPDEST DUP2 LT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3520 DUP2 PUSH2 0x1C34 PUSH2 0x3508 PUSH1 0x0 PUSH2 0x34FA PUSH2 0x34DB SWAP7 PUSH2 0x41A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x351A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x1C07 JUMP JUMPDEST EQ PUSH2 0x3486 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3539 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 PUSH2 0x3563 SWAP2 PUSH2 0x4253 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42EE JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP2 PUSH2 0x357A PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x359D DUP2 PUSH2 0x1C34 PUSH2 0x3596 PUSH2 0x357C SWAP5 DUP8 ADD SWAP1 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH2 0x357A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x35B3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3607 RETURNDATASIZE PUSH2 0x2500 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x361E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652068616E646C696E67206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x366A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x36B1 SWAP1 PUSH2 0x36AD PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST PUSH2 0x36BB PUSH1 0x11 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x36C7 DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH2 0x36DA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C07 JUMP JUMPDEST SUB PUSH2 0x37B8 JUMPI PUSH2 0x3711 SWAP2 PUSH2 0x36EF DUP3 CALLVALUE LT ISZERO PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x1C07 PUSH2 0x2837 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x37A7 JUMPI JUMPDEST PUSH2 0x3747 JUMPI JUMPDEST CALLVALUE SUB SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x371B DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 GT PUSH2 0x3725 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BC SWAP3 PUSH2 0x3733 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 CALLER GAS CALL PUSH2 0x3741 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3663 JUMP JUMPDEST PUSH2 0x377F DUP4 DUP1 PUSH2 0x3756 PUSH1 0x12 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3761 PUSH2 0x7530 PUSH2 0x12DB JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x376C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 SUB SWAP4 CALL PUSH2 0x377A PUSH2 0x35F8 JUMP JUMPDEST POP ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x370C JUMPI PUSH2 0x370C DUP4 DUP1 PUSH2 0x3792 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP6 CALLER GAS CALL PUSH2 0x37A1 PUSH2 0x35F8 JUMP JUMPDEST POP PUSH2 0x3617 JUMP JUMPDEST POP PUSH2 0x37B1 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230207061796D656E74206E6F7420696D706C656D656E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3D2 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x40 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3822 PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3831 PUSH1 0x0 PUSH2 0x16C2 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x383E DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP3 EQ PUSH2 0x397F JUMPI DUP1 DUP3 PUSH2 0x3899 PUSH2 0x388E PUSH2 0x385C PUSH2 0x38C3 SWAP7 PUSH1 0x1 EQ PUSH1 0xE1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x3879 PUSH2 0x3868 DUP10 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x3871 DUP11 PUSH2 0x12DB JUMP JUMPDEST SWAP8 DUP9 SWAP2 PUSH2 0x3ADB JUMP JUMPDEST OR DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST PUSH2 0x21FC DUP9 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x38E1 PUSH2 0x2112 PUSH1 0x1 SWAP4 PUSH2 0x212E PUSH2 0x38C9 PUSH2 0x38B0 PUSH2 0x3807 JUMP JUMPDEST PUSH2 0x38BA PUSH1 0x1 PUSH2 0x12DB JUMP JUMPDEST SWAP10 DUP11 SWAP2 DUP3 PUSH2 0x3811 JUMP JUMPDEST OR DUP7 MUL SWAP1 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x38D7 DUP5 PUSH1 0x5 PUSH2 0xB59 JUMP JUMPDEST SWAP2 PUSH2 0x46D DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x38E9 PUSH2 0x20E0 JUMP JUMPDEST AND SWAP3 DUP4 EQ PUSH2 0x3973 JUMPI DUP6 ADD SWAP5 SWAP3 DUP6 SUB PUSH2 0x3902 PUSH1 0x0 NOT PUSH2 0x16FE JUMP JUMPDEST GT PUSH2 0x3966 JUMPI PUSH1 0x1 DUP2 JUMPDEST PUSH2 0x391E JUMPI JUMPDEST POP POP POP POP SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x1978 JUMP JUMPDEST ISZERO PUSH2 0x3954 JUMPI JUMPDEST DUP4 SWAP1 DUP4 DUP4 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 SWAP1 DUP2 PUSH2 0x390B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x3924 JUMPI DUP1 PUSH2 0x3910 JUMP JUMPDEST PUSH4 0x40B23F1D PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3994 PUSH2 0x3400 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x39A9 JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x39BA PUSH2 0x1AB4 DUP3 PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x39C7 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x39EB JUMPI POP POP PUSH2 0x39E3 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST SWAP3 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x399C JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x39FB PUSH2 0x3D2 DUP5 PUSH2 0x16C2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x399C JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0x3A18 PUSH2 0x1AB4 DUP5 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 PUSH2 0x3A22 DUP4 PUSH2 0x12DB JUMP JUMPDEST DUP5 EQ PUSH2 0x3A4A JUMPI POP POP PUSH2 0x3A38 PUSH2 0x2210 PUSH2 0x39DD PUSH2 0x325E JUMP JUMPDEST EQ PUSH2 0x3D2 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x32EB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0x3A0A JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3A6D SWAP2 PUSH2 0x3A65 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0x3A87 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xE8 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x3AAF PUSH2 0x16FE PUSH2 0x3D2 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3AC1 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3B10 PUSH2 0x3B15 SWAP2 PUSH2 0x3D2 SWAP5 SWAP4 PUSH2 0x3AEF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x3B0A PUSH2 0x3B05 PUSH2 0x3AFE PUSH2 0x3A94 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x3AB4 JUMP JUMPDEST SWAP2 PUSH2 0x43A1 JUMP JUMPDEST PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x3B22 PUSH2 0x43AC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B31 PUSH1 0x0 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B1A JUMP JUMPDEST SWAP1 PUSH2 0x1CBB SWAP4 SWAP3 SWAP2 PUSH2 0x3B72 PUSH2 0x3414 JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 SWAP2 PUSH2 0x3B81 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST ISZERO PUSH2 0x3B8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3BDB DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BF5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE73 JUMPI PUSH2 0x3C13 DUP3 PUSH2 0x15D2 DUP6 SLOAD PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3C4D JUMPI PUSH2 0x1537 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3C42 JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3C62 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3C9A JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3C86 JUMPI POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND PUSH2 0x165D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x3C66 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP2 PUSH2 0x3BEC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3CDF PUSH2 0x3CCE PUSH2 0x4D0 DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x3B86 JUMP JUMPDEST PUSH2 0x3CEC PUSH2 0x1F23 PUSH1 0x12 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3CFB PUSH2 0x1F3C DUP5 PUSH2 0x1F37 PUSH2 0x16CC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x3D09 PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x3E71 JUMPI JUMPDEST PUSH2 0x3D1A SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x3D23 DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP4 GT DUP1 PUSH2 0x3E58 JUMPI JUMPDEST PUSH2 0x3D34 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x3D41 PUSH2 0x1311 PUSH1 0x12 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x3E18 JUMPI JUMPDEST PUSH2 0x3D50 PUSH1 0x10 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x3D5C PUSH2 0x16FE DUP4 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3E0A JUMPI JUMPDEST PUSH2 0x3D6A PUSH2 0x37FD JUMP JUMPDEST SWAP4 PUSH2 0x3D75 DUP5 DUP5 PUSH2 0x3827 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3D83 PUSH2 0x16FE DUP5 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3D94 JUMPI JUMPDEST POP POP PUSH2 0x2031 SWAP1 PUSH2 0xB50 JUMP JUMPDEST SWAP3 PUSH2 0x3DA3 DUP3 SWAP7 SWAP3 SWAP6 SWAP4 SWAP6 PUSH2 0x12DB JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DFB JUMPI DUP1 PUSH2 0x3DBF PUSH2 0x1913 PUSH2 0x1913 PUSH2 0x3DD6 SWAP5 DUP10 PUSH2 0x3BD2 JUMP JUMPDEST PUSH2 0x3DCB PUSH2 0x16FE DUP11 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x3DDB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1C34 PUSH2 0x3DE8 DUP3 DUP9 PUSH2 0x3BD2 JUMP JUMPDEST MLOAD PUSH2 0x3DF6 PUSH1 0x13 DUP9 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST PUSH2 0x3CB2 JUMP JUMPDEST POP SWAP3 POP SWAP4 POP SWAP2 PUSH2 0x2031 CODESIZE PUSH2 0x3D89 JUMP JUMPDEST PUSH2 0x3E13 DUP4 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x3D62 JUMP JUMPDEST PUSH2 0x3E26 PUSH2 0x1A08 CALLER PUSH1 0x14 PUSH2 0xB59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3B JUMPI JUMPDEST PUSH2 0x3E36 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x3D46 JUMP JUMPDEST POP PUSH2 0x3E36 PUSH2 0x3E47 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x3E50 CALLER PUSH2 0x1C07 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x3E2D JUMP JUMPDEST POP PUSH2 0x3D34 PUSH2 0x3E67 PUSH2 0x3D2 PUSH2 0x18A9 JUMP JUMPDEST DUP5 GT ISZERO SWAP1 POP PUSH2 0x3D2B JUMP JUMPDEST POP PUSH2 0x3D1A PUSH2 0x3E7D DUP6 MLOAD SWAP1 JUMP JUMPDEST DUP5 EQ SWAP1 POP PUSH2 0x3D11 JUMP JUMPDEST PUSH2 0x3D2 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x3B63 JUMP JUMPDEST SWAP2 PUSH2 0x3D2 SWAP4 SWAP2 PUSH2 0x3563 SWAP4 PUSH2 0x3EA5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x43F8 JUMP JUMPDEST PUSH2 0x3ECC PUSH2 0x3EC6 PUSH2 0x3EBB PUSH1 0x9 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x1C4C DUP5 PUSH1 0x9 PUSH2 0x3303 JUMP JUMPDEST SWAP2 PUSH2 0xB50 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3EF7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH2 0x3F06 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3F15 PUSH1 0x1 PUSH1 0x9 PUSH2 0x3175 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x236D CALLER PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3EFE JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xB JUMPDEST SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH2 0x3D2 PUSH32 0x0 PUSH1 0xC PUSH2 0x3F6E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x3D2 SWAP2 PUSH2 0x3F9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 SWAP3 PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x3FEC SWAP1 JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x439 JUMP JUMPDEST PUSH2 0x31D8 PUSH2 0x31D2 PUSH2 0x3D2 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4024 PUSH2 0x1C4C PUSH1 0x20 SWAP4 PUSH2 0x401E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xB50 JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x4055 PUSH2 0x4039 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x404A DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3FC0 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x409A JUMPI JUMPDEST POP PUSH2 0x408B JUMPI PUSH2 0x406F PUSH2 0x35F8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x407E PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x2EE8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x3222 PUSH2 0x31D8 PUSH2 0x2F2C SWAP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x40BD SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x40C4 JUMPI JUMPDEST PUSH2 0x40B5 DUP2 DUP4 PUSH2 0xE51 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3FAC JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x4062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x40AB JUMP JUMPDEST PUSH2 0x46D PUSH2 0x40E3 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x40DD DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x40FA SWAP1 PUSH2 0x3D2 SWAP4 SWAP3 PUSH2 0x40CB JUMP JUMPDEST SWAP1 PUSH2 0x40CB JUMP JUMPDEST PUSH2 0x410C PUSH2 0x1311 DUP3 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x4161 JUMPI PUSH2 0x4118 PUSH2 0x4584 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4127 PUSH2 0x16FE PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST EQ PUSH2 0x4157 JUMPI PUSH2 0x3D2 PUSH2 0x1BC9 SWAP2 PUSH2 0x413F PUSH2 0x3D2 SWAP5 PUSH2 0x458E JUMP JUMPDEST SWAP1 PUSH2 0x4149 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x40EC JUMP JUMPDEST POP POP PUSH2 0x3D2 PUSH2 0x2517 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0x32EB JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0x80 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4180 PUSH2 0x416E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x41B2 PUSH2 0x3D2 SWAP2 PUSH2 0x2AA7 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x45F7 JUMP JUMPDEST PUSH2 0x41C0 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x41F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1C07 JUMP JUMPDEST EQ DUP1 PUSH2 0x422A JUMPI JUMPDEST ISZERO PUSH2 0x4222 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x46CF JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x41F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x425F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x426C PUSH2 0x16FE PUSH1 0x41 PUSH2 0x12DB JUMP JUMPDEST SUB PUSH2 0x4296 JUMPI PUSH2 0x428F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x43F8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x42AE PUSH2 0x2993 PUSH2 0x42A9 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP3 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x42D6 JUMPI JUMP JUMPDEST PUSH2 0x42B6 JUMP JUMPDEST SWAP1 PUSH2 0x3BC DUP3 PUSH2 0x42CC JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x42FB DUP4 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4304 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x430E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4318 PUSH1 0x1 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4321 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4335 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH2 0x433F PUSH1 0x2 PUSH2 0x42DB JUMP JUMPDEST PUSH2 0x4348 DUP3 PUSH2 0x42DB JUMP JUMPDEST SUB PUSH2 0x4371 JUMPI POP PUSH2 0x1500 PUSH2 0x435B DUP4 SWAP3 PUSH2 0x42E5 JUMP JUMPDEST PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4384 PUSH2 0x437E PUSH1 0x3 PUSH2 0x42DB JUMP JUMPDEST SWAP2 PUSH2 0x42DB JUMP JUMPDEST EQ PUSH2 0x438D JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x3D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43B7 PUSH2 0x1311 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x43BD JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x19A2 PUSH2 0x3BC SWAP5 PUSH2 0x3FE5 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x43EE PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4403 DUP5 PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x442F PUSH2 0x16FE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x12DB JUMP JUMPDEST GT PUSH2 0x44AB JUMPI SWAP1 PUSH2 0x4451 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x4448 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x43CF JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x446E DUP4 PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x4497 JUMPI POP PUSH2 0x4491 DUP4 PUSH2 0x12DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x44A3 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x44B8 PUSH1 0x0 PUSH2 0x17BC JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x44DC PUSH2 0x10DD DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1139 JUMPI POP PUSH1 0x1 EQ PUSH2 0x44F5 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x4508 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x451A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x450D JUMP JUMPDEST SWAP1 PUSH2 0x3D2 SWAP2 PUSH2 0x44C9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x1172 SWAP3 PUSH2 0x4549 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x452E JUMP JUMPDEST PUSH2 0x3D2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x456B PUSH2 0x16FE PUSH2 0x3D2 PUSH2 0x44BF JUMP JUMPDEST EQ PUSH2 0x457A JUMPI POP PUSH2 0x3D2 SWAP1 PUSH2 0x4779 JUMP JUMPDEST PUSH2 0x3D2 SWAP2 POP PUSH2 0x4552 JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xD PUSH2 0x12C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x45C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x45A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x3D2 PUSH1 0xA0 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x45EA PUSH2 0x3D2 PUSH2 0x3D2 SWAP3 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x4603 PUSH2 0x419B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x468B PUSH2 0x3B05 DUP4 SWAP7 PUSH2 0x4629 PUSH2 0x461C PUSH2 0x212E DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE JUMP JUMPDEST PUSH2 0x4656 PUSH2 0x4645 PUSH2 0x4640 PUSH2 0x463A PUSH2 0x45D3 JUMP JUMPDEST DUP5 PUSH2 0x3A9E JUMP JUMPDEST PUSH2 0x45DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x467D PUSH2 0x4661 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x4674 PUSH2 0x466E PUSH1 0x0 PUSH2 0x12DB JUMP JUMPDEST SWAP2 DUP5 AND SWAP1 JUMP JUMPDEST EQ ISZERO PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x4685 PUSH2 0x3A94 JUMP JUMPDEST SWAP1 PUSH2 0x3A9E JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x3BC SWAP5 PUSH2 0x13B8 PUSH2 0x46C0 SWAP3 PUSH2 0x46B9 PUSH1 0x80 SWAP7 PUSH2 0x13A1 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x4754 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1BC9 PUSH2 0x4741 ADDRESS PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x4695 JUMP JUMPDEST PUSH2 0x475F PUSH2 0x1BE0 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3BC PUSH2 0x2B9A PUSH2 0x4773 DUP5 PUSH2 0x2500 JUMP JUMPDEST SWAP4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4782 DUP2 PUSH2 0x47A0 JUMP JUMPDEST SWAP1 PUSH2 0x4795 PUSH2 0x4790 PUSH1 0x20 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x4763 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x47AF PUSH2 0x47B4 SWAP2 PUSH2 0x2FCB PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x42E5 JUMP JUMPDEST PUSH2 0x47BE PUSH1 0xFF PUSH2 0x12DB JUMP JUMPDEST AND PUSH2 0x47C9 PUSH1 0x1F PUSH2 0x12DB JUMP JUMPDEST DUP2 GT PUSH2 0x47D2 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xA5 TIMESTAMP PUSH11 0xD3E7A6342DD43281A96F77 SGT EXTCODESIZE 0xEF MSIZE GAS 0xAB GT DUP8 DUP13 0x24 KECCAK256 0xC6 0xCA 0xE8 AND CODESIZE CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xEB 0xE7 0xF6 NUMBER SWAP2 PC PUSH7 0x8468AB4FD11D1A TLOAD SWAP6 CODESIZE CODECOPY 0xC6 SWAP4 0xBB 0xE9 0x2D 0xC8 CALLCODE REVERT MUL 0xA9 MOD 0x4D 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"97:2699:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;97:2699:16;;;;;;;;;:::i;190:31::-;;97:2699;190:31;;;;;;;;;;:::i;:::-;;;:::i;97:2699::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;97:2699:16;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;97:2699:16;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;2561:14;97:2699;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;97:2699:16;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;127:56::-;;;;;:::i;:::-;97:2699;;127:56;;;;;;;;;;:::i;97:2699::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;1510:803::-;2249:56;1510:803;;;1850:381;;1510:803;1850:381;;1510:803;1850:381;;1510:803;1784:18;97:2699;;;1784:18;2048:1;;2078:10;;;1850:381;2078:10;;;:::i;:::-;1850:381;;;:::i;:::-;;;;97:2699;;1850:381;;;;97:2699;;1850:381;;;;97:2699;;1850:381;;;;97:2699;;1850:381;;;2019:5;1850:381;:::i;:::-;;;;97:2699;;1850:381;;;;;:::i;:::-;;;;97:2699;;1850:381;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;2178:4;1850:381;;;97:2699;;;1850:381;;;97:2699;;1850:381;2249:56;:::i;97:2699::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2325:140::-;2431:26;2424:33;2325:140;2395:16;97:2699;;;2395:16;2431:26;:19;:26;:::i;:::-;2424:33;:::i;97:2699::-;;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;97:2699:16;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;97:2699:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;97:2699:16;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;428:1074::-;;;;659:11;;97:2699;645:38;681:1;653:29;;;;;:::i;:::-;;97:2699;;653:29;;645:38;:::i;:::-;708:13;;;;694:40;702:27;:20;708:13;;97:2699;;702:27;:31;;;;:::i;694:40::-;753:12;;;;;;;:::i;:::-;745:35;769:10;;;:::i;:::-;753:26;;;;;:::i;:::-;;;:::i;:::-;;;745:35;:::i;:::-;791:29;799:16;;;;97:2699;;;799:16;:20;;;;:::i;791:29::-;831:34;839:25;;;:::i;:::-;;;;:::i;831:34::-;876:40;884:31;;;:::i;:::-;;;;:::i;876:40::-;941:14;;;97:2699;941:18;;;;:::i;:::-;;937:97;;428:1074;-1:-1:-1;97:2699:16;;1087:110;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1221:22;1413:12;1221:22;;:::i;:::-;1208:35;1264:50;1284:12;1264:38;:33;1284:12;;;:::i;:::-;1264:33;;:::i;:38::-;:50;:::i;:::-;1325:31;:19;:14;1264:50;:::i;1325:31::-;1413:12;:::i;:::-;1439:11;;;1452:13;;1382:84;;;;;;:::i;:::-;;;:::i;:::-;1427:10;1382:84;1427:10;1382:84;:::i;:::-;;;;97:2699;;;;1382:84;;;;;;:::i;:::-;;;;428:1074;:::o;1087:110::-;;:::i;937:97::-;976:46;984:23;:37;;:23;;;;;:::i;:::-;:37;;:::i;976:46::-;937:97;;;97:2699;;;;:::o;:::-;;;-1:-1:-1;;;97:2699:16;;;;;;;;;;;;;;;;;;;;2602:191;2764:21;;2602:191;2665:7;97:2699;;;2665:7;2701:21;2685:61;2693:29;2701:21;:14;97:2699;;;2693:29;;;2685:61;:::i;:::-;2701:14;2764:21;:::i"},"methodIdentifiers":{"allCollections(uint256)":"167ef495","deployCollection((string,string,string,string,uint256,uint256,address,address,address,bool,bool),address,address)":"637c4458","deployStoryCollection(string,string,string,string,address,address,address)":"2470ea1b","deployedCollections(address,uint256)":"ebf595f8","getAllCollectionsCount()":"a4f0a9b9","getCollectionAt(uint256)":"ad8e8253","getDeployedCollections(address)":"3b688672"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"CollectionDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allCollections\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mintFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mintOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPublicMinting\",\"type\":\"bool\"}],\"internalType\":\"struct ISPGNFT.InitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tbaRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tbaImplementation\",\"type\":\"address\"}],\"name\":\"deployCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tbaRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tbaImplementation\",\"type\":\"address\"}],\"name\":\"deployStoryCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedCollections\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCollectionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getCollectionAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getDeployedCollections\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SPGNFTFactory.sol\":\"SPGNFTFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SPGNFTCollection.sol\":{\"keccak256\":\"0x4340d98ff56aeec85f08b56566897fc04836fe6b3b7c6343b873a54f8121a9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4305a82a786dac62e6295c3bb7a72032b6eb82b49654d4fffdae695d25d62af4\",\"dweb:/ipfs/QmRsnAmauXKAzjGTXsRaswsHRYUq2S1S4rKutVkHWymZGj\"]},\"contracts/SPGNFTFactory.sol\":{\"keccak256\":\"0x531c7abd7f60711cce4bca9a542ac61757ad0a3d5621bcadfda27e9e70047781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9c9710237c69c68f0b120d9f34a2ef25c30e7ae2e8f592e6459a2719c2ab696\",\"dweb:/ipfs/QmViZXP7nS1ayQbokTJ5KhazvrAfbMJnbn8XVNUiSj8ycq\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8063,"contract":"contracts/SPGNFTFactory.sol:SPGNFTFactory","label":"deployedCollections","offset":0,"slot":"0","type":"t_mapping(t_address,t_array(t_address)dyn_storage)"},{"astId":8066,"contract":"contracts/SPGNFTFactory.sol:SPGNFTFactory","label":"allCollections","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"}}}}},"erc721a/contracts/ERC721A.sol":{"ERC721A":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_available_length_string_fromMemory":{"entryPoint":193,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_string_fromMemory":{"entryPoint":269,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":108,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":130,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":551,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":520,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC721A":{"entryPoint":881,"id":8453,"parameterSlots":2,"returnSlots":0},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":466,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_ERC721A":{"entryPoint":342,"id":null,"parameterSlots":0,"returnSlots":2},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":158,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":398,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":70,"id":null,"parameterSlots":2,"returnSlots":0},"fun_revert":{"entryPoint":969,"id":10401,"parameterSlots":1,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":8475,"parameterSlots":0,"returnSlots":1},"fun_startTokenId":{"entryPoint":959,"id":8462,"parameterSlots":0,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":376,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":48,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":508,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":440,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":848,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_string_to_string":{"entryPoint":838,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":858,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":479,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002b5761001a610014610156565b90610371565b6040516112146103d3823961121490f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006757604052565b610030565b9061008061007960405190565b9283610046565b565b6001600160401b03811161006757602090601f01601f19160190565b60005b8381106100b15750506000910152565b81810151838201526020016100a1565b909291926100d66100d182610082565b61006c565b938185528183011161002b5761008091602085019061009e565b9080601f8301121561002b57815161010a926020016100c1565b90565b91909160408184031261002b5780516001600160401b03811161002b57836101369183016100f0565b60208201519093906001600160401b03811161002b5761010a92016100f0565b6101746115e7803803806101698161006c565b92833981019061010d565b9091565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156101ae575b60208310146101a957565b610178565b91607f169161019e565b9160001960089290920291821b911b5b9181191691161790565b61010a61010a61010a9290565b91906101f061010a6101f8936101d2565b9083546101b8565b9055565b610080916000916101df565b818110610213575050565b8061022160006001936101fc565b01610208565b9190601f811161023657505050565b61024861008093600052602060002090565b906020601f84018190048301931061026a575b6020601f909101040190610208565b909150819061025b565b9061027d815190565b906001600160401b038211610067576102a08261029a855461018e565b85610227565b602090601f83116001146102db576101f89291600091836102d0575b5050600019600883021c1916906002021790565b0151905038806102bc565b601f198316916102f085600052602060002090565b9260005b81811061032e57509160029391856001969410610315575b50505002019055565b01516000196008601f8516021c1916905538808061030c565b919360206001819287870151815501950192016102f4565b9061008091610274565b90600019906101c8565b9061036a61010a6101f8926101d2565b8254610350565b90610380610387926002610346565b6003610346565b61038f6103bf565b61039a81600061035a565b6103ab6103a76000199290565b9190565b106103b257565b63fed8210f60e01b6103c9565b61010a60006101d2565b60005260046000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806318160ddd146100de57806323b872dd146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036100f757610560565b610522565b61050b565b6103de565b61038b565b610370565b610341565b61032d565b610319565b6102c5565b6102ac565b610238565b6101de565b610135565b600080fd5b6001600160e01b031981165b036100f757565b9050359061011c826100fc565b565b906020828203126100f7576101329161010f565b90565b346100f75761016361015061014b36600461011e565b61059c565b6040515b91829182901515815260200190565b0390f35b60009103126100f757565b60005b8381106101855750506000910152565b8181015183820152602001610175565b6101b66101bf6020936101c9936101aa815190565b80835293849260200190565b95869101610172565b601f01601f191690565b0190565b602080825261013292910190610195565b346100f7576101ee366004610167565b6101636101f9610704565b604051918291826101cd565b80610108565b9050359061011c82610205565b906020828203126100f7576101329161020b565b6001600160a01b031690565b346100f75761016361025361024e366004610218565b610733565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610108565b9050359061011c8261026d565b91906040838203126100f7576101329060206102a5828661027c565b940161020b565b6102c06102ba366004610289565b90610772565b604051005b346100f7576102d5366004610167565b6101636102e061078f565b6040519182918290815260200190565b90916060828403126100f757610132610309848461027c565b9360406102a5826020870161027c565b6102c06103273660046102f0565b9161087a565b6102c061033b3660046102f0565b91610acd565b346100f757610163610253610357366004610218565b610ae1565b906020828203126100f7576101329161027c565b346100f7576101636102e061038636600461035c565b610b18565b346100f75761039b366004610167565b6101636101f9610b5b565b801515610108565b9050359061011c826103a6565b91906040838203126100f7576101329060206103d7828661027c565b94016103ae565b346100f7576102c06103f13660046103bb565b90610b85565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761042f57604052565b6103f7565b9061011c61044160405190565b928361040d565b67ffffffffffffffff811161042f57602090601f01601f19160190565b90826000939282370152565b9092919261048661048182610448565b610434565b93818552818301116100f75761011c916020850190610465565b9080601f830112156100f75781602061013293359101610471565b906080828203126100f7576104d0818361027c565b926104de826020850161027c565b926104ec836040830161020b565b92606082013567ffffffffffffffff81116100f75761013292016104a0565b6102c06105193660046104bb565b92919091610be7565b346100f7576101636101f9610538366004610218565b610c6d565b91906040838203126100f757610132906020610559828661027c565b940161027c565b346100f75761016361015061057636600461053d565b90610ce7565b61058f6105896101329290565b60e01b90565b6001600160e01b03191690565b6105a96301ffc9a761057c565b6001600160e01b03198216149081156105eb575b81156105c7575090565b90506105e76105d9635b5e139f61057c565b916001600160e01b03191690565b1490565b90506105fa6380ac58cd61057c565b6001600160e01b0319821614906105bd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610642575b602083101461063d57565b61060c565b91607f1691610632565b8054600093929161066961065f83610622565b8085529360200190565b91600181169081156106bb575060011461068257505050565b6106959192939450600052602060002090565b916000925b8184106106a75750500190565b80548484015260209093019260010161069a565b92949550505060ff1916825215156020020190565b906101329161064c565b9061011c6106f4926106eb60405190565b938480926106d0565b038361040d565b610132906106da565b61013260026106fb565b6101326101326101329290565b906107259061070e565b600052602052604060002090565b61074361073f82610d3e565b1590565b61076557600061075761013292600661071b565b01546001600160a01b031690565b6333d1c03960e21b610dbe565b61011c91600191610ded565b6101329081565b610132905461077e565b6107b66107ae61079f6000610785565b6107a96001610785565b900390565b6107a9610e95565b9081600019806107c5565b9190565b036107cd5750565b6101329192506101c96008610785565b61022c610132610132926001600160a01b031690565b610132906107dd565b610132610132610132926001600160a01b031690565b6101326001600160a01b0361070e565b61022c6101326101329290565b610132906107f3565b906107259061082f565b90600019905b9181191691161790565b906108626101326108699261070e565b8254610842565b9055565b610132600160e11b61070e565b61089461088f61088985610e9f565b926107f3565b6107fc565b926108b06108ab6108a3610812565b809616610822565b6107f3565b936108bd6108ab84610822565b6108d86001600160a01b0387165b916001600160a01b031690565b03610a9d576108e682610f69565b9490336108f761073f828a8a610f86565b610a6f575b5061088f6107c1959493926109c1926109ed98610a65575b5061093c6109238a6005610838565b61093661092f82610785565b6000190190565b90610852565b61095c61094a826005610838565b61093661095682610785565b60010190565b61096461086d565b9561098961097382848d611004565b8817836001600160a01b0316904260a01b171790565b9061099f60049261099a898561071b565b610852565b6000976109b46109ae8a61070e565b91831690565b14610a01575b50506107f3565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a461070e565b146109f457565b633a954ecd60e21b610dbe565b610a13610a0e600161070e565b880190565b91610a26610a21848361071b565b610785565b610a326107c18b61070e565b14610a3e575b506109ba565b610a4a6101328a610785565b8314610a3857610a5d9261099a9161071b565b388080610a38565b6000905538610914565b61073f610a8191899796959497610ce7565b610a90573894919293946108fc565b632ce44b5f60e11b610dbe565b62a1148160e81b610dbe565b90610ab661048183610448565b918252565b6101326000610aa9565b610132610abb565b909161011c92610adb610ac5565b92610be7565b6108ab610af961013292610af3600090565b50610e9f565b610822565b61013290610822565b61013267ffffffffffffffff61070e565b610b2561022c6000610afe565b6001600160a01b03821614610b4e57610a21610b42916005610838565b610b4a610b07565b1690565b6323d3ad8160e21b610dbe565b61013260036106fb565b9060ff90610848565b90610b7e61013261086992151590565b8254610b65565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31610be2610bd8610bd233610bcd87610bc888610bc3856007610838565b610838565b610b6e565b61082f565b9361082f565b9361015460405190565b0390a3565b91929092610bf681858561087a565b833b610c056107c1600061070e565b03610c11575b50505050565b610c1e9361073f936110c7565b610c2b5738808080610c0b565b6368d2bf6b60e11b610dbe565b6101c9610c5092602092610c4a815190565b94859290565b93849101610172565b610c67906101329392610c38565b90610c38565b610c7961073f82610d3e565b610cda57610c85611186565b8051610c946107c1600061070e565b14610cd057610132610cc491610cac6101329461118e565b90610cb660405190565b938492602084019283610c59565b9081038252038261040d565b5050610132610ac5565b630a14c4b560e41b610dbe565b61013291610bc3610d0292610cfa600090565b506007610838565b5460ff1690565b634e487b7160e01b600052601160045260246000fd5b8015610d2c576000190190565b610d09565b610132600160e01b61070e565b9060009182610d4b610e95565b821015610d56575050565b610d636101326000610785565b8210610d6d575050565b509091505b610d80610a2182600461071b565b9081610d8f6107c1600061070e565b03610da357610d9e9150610d1f565b610d72565b506105e7610daf610d31565b610db9600061070e565b921690565b60005260046000fd5b906001600160a01b0390610848565b90610de66101326108699261082f565b8254610dc7565b91610df782610ae1565b9080610e7a575b610e5b575b610e24610bd2610e2a92610bcd866000610e1e88600661071b565b01610dd6565b9161070e565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925610e5560405190565b600090a4565b610e6861073f3383610ce7565b15610e03576367d9dca160e11b610dbe565b5033610e8e6001600160a01b0383166108cb565b1415610dfe565b610132600061070e565b610ea7610e95565b811015610ebc575b636f96cda160e11b610dbe565b600490610ecd610a2182600461071b565b91600091610eda8361070e565b8414610efe575050610ef66109ae610ef0610d31565b9261070e565b03610eaf5790565b90919250610f0e61013284610785565b811015610eaf57909190600019015b91610f2b610a21848361071b565b92610f358361070e565b8414610f5d575050610f4b6109ae610ef0610d31565b1461013257636f96cda160e11b610dbe565b90925060001901610f1d565b610132610f8091610f78600090565b50600661071b565b90815490565b91906001600160a01b038091610f9a600090565b5016911691821491141790565b61013260e861070e565b61013290610fc26107c16101329490565b901c90565b610fd46101326101329290565b62ffffff1690565b6101326101326101329262ffffff1690565b61013290610fff6107c16101329490565b901b90565b61103961103e916101329493611018600090565b5061103361102e611027610fa7565b8097610fb1565b610fc7565b916111d3565b610fdc565b610fee565b9050519061011c826100fc565b906020828203126100f75761013291611043565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261013292910190610195565b61058f6105896101329263ffffffff1690565b3d156110c2576110b73d610aa9565b903d6000602084013e565b606090565b916110df610bcd6020936110d9600090565b5061082f565b63150b7a02936000336111106110f460405190565b988996879586946111058c60e01b90565b865260048601611064565b03925af160009281611155575b506111465761112a6110a8565b80516111396107c1600061070e565b14610c2b57805190602001fd5b6105d961058f6105e792611095565b61117891935060203d60201161117f575b611170818361040d565b810190611050565b913861111d565b503d611166565b610132610ac5565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156111c5576001600a916111a9565b809350602091039203918252565b50505061013260009056fea26469706673582212206819f23a724918dd340d244f789da5a6a8268624312310a6f59eb09d970477bb64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2B JUMPI PUSH2 0x1A PUSH2 0x14 PUSH2 0x156 JUMP JUMPDEST SWAP1 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1214 PUSH2 0x3D3 DUP3 CODECOPY PUSH2 0x1214 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30 JUMP JUMPDEST SWAP1 PUSH2 0x80 PUSH2 0x79 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x46 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x67 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xD6 PUSH2 0xD1 DUP3 PUSH2 0x82 JUMP JUMPDEST PUSH2 0x6C JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2B JUMPI PUSH2 0x80 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x9E JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B JUMPI DUP2 MLOAD PUSH2 0x10A SWAP3 PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x2B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B JUMPI DUP4 PUSH2 0x136 SWAP2 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B JUMPI PUSH2 0x10A SWAP3 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x15E7 DUP1 CODESIZE SUB DUP1 PUSH2 0x169 DUP2 PUSH2 0x6C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x10D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1A9 JUMPI JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x19E JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x10A PUSH2 0x10A SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F0 PUSH2 0x10A PUSH2 0x1F8 SWAP4 PUSH2 0x1D2 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1B8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x80 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1DF JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x213 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x221 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x1FC JUMP JUMPDEST ADD PUSH2 0x208 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x236 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x248 PUSH2 0x80 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x208 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST SWAP1 PUSH2 0x27D DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x67 JUMPI PUSH2 0x2A0 DUP3 PUSH2 0x29A DUP6 SLOAD PUSH2 0x18E JUMP JUMPDEST DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DB JUMPI PUSH2 0x1F8 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x2D0 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x2F0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32E JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x315 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30C JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP1 PUSH2 0x80 SWAP2 PUSH2 0x274 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1C8 JUMP JUMPDEST SWAP1 PUSH2 0x36A PUSH2 0x10A PUSH2 0x1F8 SWAP3 PUSH2 0x1D2 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH2 0x380 PUSH2 0x387 SWAP3 PUSH1 0x2 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x38F PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x39A DUP2 PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x3A7 PUSH1 0x0 NOT SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x3B2 JUMPI JUMP JUMPDEST PUSH4 0xFED8210F PUSH1 0xE0 SHL PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x10A PUSH1 0x0 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB6 JUMPI PUSH4 0xE985E9C5 SUB PUSH2 0xF7 JUMPI PUSH2 0x560 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x10F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x11E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x185 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1BF PUSH1 0x20 SWAP4 PUSH2 0x1C9 SWAP4 PUSH2 0x1AA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x26D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 PUSH2 0x309 DUP5 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x2A5 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0xACD JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0xB5B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x3D7 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2C0 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BB JUMP JUMPDEST SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x42F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x441 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x486 PUSH2 0x481 DUP3 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF7 JUMPI PUSH2 0x11C SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x465 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF7 JUMPI DUP2 PUSH1 0x20 PUSH2 0x132 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x4D0 DUP2 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4DE DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4EC DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x20B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP3 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x559 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH4 0x1FFC9A7 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5EB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x5C7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 PUSH2 0x5D9 PUSH4 0x5B5E139F PUSH2 0x57C JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH4 0x80AC58CD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x642 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x63D JUMPI JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x632 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x669 PUSH2 0x65F DUP4 PUSH2 0x622 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x6A7 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x132 SWAP2 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x6F4 SWAP3 PUSH2 0x6EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x6D0 JUMP JUMPDEST SUB DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x132 PUSH1 0x2 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x743 PUSH2 0x73F DUP3 PUSH2 0xD3E JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x0 PUSH2 0x757 PUSH2 0x132 SWAP3 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x11C SWAP2 PUSH1 0x1 SWAP2 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x132 SWAP1 SLOAD PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7AE PUSH2 0x79F PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7A9 PUSH1 0x1 PUSH2 0x785 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xE95 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x7CD JUMPI POP JUMP JUMPDEST PUSH2 0x132 SWAP2 SWAP3 POP PUSH2 0x1C9 PUSH1 0x8 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x82F JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH2 0x132 PUSH2 0x869 SWAP3 PUSH2 0x70E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x842 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x70E JUMP JUMPDEST PUSH2 0x894 PUSH2 0x88F PUSH2 0x889 DUP6 PUSH2 0xE9F JUMP JUMPDEST SWAP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST SWAP3 PUSH2 0x8B0 PUSH2 0x8AB PUSH2 0x8A3 PUSH2 0x812 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x822 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST SWAP4 PUSH2 0x8BD PUSH2 0x8AB DUP5 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x8D8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0xA9D JUMPI PUSH2 0x8E6 DUP3 PUSH2 0xF69 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x8F7 PUSH2 0x73F DUP3 DUP11 DUP11 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xA6F JUMPI JUMPDEST POP PUSH2 0x88F PUSH2 0x7C1 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x9C1 SWAP3 PUSH2 0x9ED SWAP9 PUSH2 0xA65 JUMPI JUMPDEST POP PUSH2 0x93C PUSH2 0x923 DUP11 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x936 PUSH2 0x92F DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x95C PUSH2 0x94A DUP3 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x936 PUSH2 0x956 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x86D JUMP JUMPDEST SWAP6 PUSH2 0x989 PUSH2 0x973 DUP3 DUP5 DUP14 PUSH2 0x1004 JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x99F PUSH1 0x4 SWAP3 PUSH2 0x99A DUP10 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x9B4 PUSH2 0x9AE DUP11 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xA01 JUMPI JUMPDEST POP POP PUSH2 0x7F3 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0x9F4 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xA13 PUSH2 0xA0E PUSH1 0x1 PUSH2 0x70E JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xA26 PUSH2 0xA21 DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x7C1 DUP12 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xA3E JUMPI JUMPDEST POP PUSH2 0x9BA JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x132 DUP11 PUSH2 0x785 JUMP JUMPDEST DUP4 EQ PUSH2 0xA38 JUMPI PUSH2 0xA5D SWAP3 PUSH2 0x99A SWAP2 PUSH2 0x71B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x914 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA81 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xA90 JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x8FC JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xDBE JUMP JUMPDEST SWAP1 PUSH2 0xAB6 PUSH2 0x481 DUP4 PUSH2 0x448 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xABB JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x11C SWAP3 PUSH2 0xADB PUSH2 0xAC5 JUMP JUMPDEST SWAP3 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0xAF9 PUSH2 0x132 SWAP3 PUSH2 0xAF3 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x132 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x70E JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x22C PUSH1 0x0 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4E JUMPI PUSH2 0xA21 PUSH2 0xB42 SWAP2 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB07 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x3 PUSH2 0x6FB JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x848 JUMP JUMPDEST SWAP1 PUSH2 0xB7E PUSH2 0x132 PUSH2 0x869 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB65 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0xBE2 PUSH2 0xBD8 PUSH2 0xBD2 CALLER PUSH2 0xBCD DUP8 PUSH2 0xBC8 DUP9 PUSH2 0xBC3 DUP6 PUSH1 0x7 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST SWAP4 PUSH2 0x82F JUMP JUMPDEST SWAP4 PUSH2 0x154 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0xBF6 DUP2 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0xC05 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xC11 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC1E SWAP4 PUSH2 0x73F SWAP4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xC2B JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xC50 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xC4A DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0xC67 SWAP1 PUSH2 0x132 SWAP4 SWAP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x73F DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xCDA JUMPI PUSH2 0xC85 PUSH2 0x1186 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC94 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xCD0 JUMPI PUSH2 0x132 PUSH2 0xCC4 SWAP2 PUSH2 0xCAC PUSH2 0x132 SWAP5 PUSH2 0x118E JUMP JUMPDEST SWAP1 PUSH2 0xCB6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x40D JUMP JUMPDEST POP POP PUSH2 0x132 PUSH2 0xAC5 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x132 SWAP2 PUSH2 0xBC3 PUSH2 0xD02 SWAP3 PUSH2 0xCFA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x838 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x70E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0xD4B PUSH2 0xE95 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD56 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD63 PUSH2 0x132 PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST DUP3 LT PUSH2 0xD6D JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0xD80 PUSH2 0xA21 DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xD8F PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xDA3 JUMPI PUSH2 0xD9E SWAP2 POP PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST POP PUSH2 0x5E7 PUSH2 0xDAF PUSH2 0xD31 JUMP JUMPDEST PUSH2 0xDB9 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x848 JUMP JUMPDEST SWAP1 PUSH2 0xDE6 PUSH2 0x132 PUSH2 0x869 SWAP3 PUSH2 0x82F JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC7 JUMP JUMPDEST SWAP2 PUSH2 0xDF7 DUP3 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0xE7A JUMPI JUMPDEST PUSH2 0xE5B JUMPI JUMPDEST PUSH2 0xE24 PUSH2 0xBD2 PUSH2 0xE2A SWAP3 PUSH2 0xBCD DUP7 PUSH1 0x0 PUSH2 0xE1E DUP9 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD PUSH2 0xDD6 JUMP JUMPDEST SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0xE55 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0x73F CALLER DUP4 PUSH2 0xCE7 JUMP JUMPDEST ISZERO PUSH2 0xE03 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST POP CALLER PUSH2 0xE8E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8CB JUMP JUMPDEST EQ ISZERO PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST PUSH2 0xEA7 PUSH2 0xE95 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEBC JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0xECD PUSH2 0xA21 DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEDA DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xEFE JUMPI POP POP PUSH2 0xEF6 PUSH2 0x9AE PUSH2 0xEF0 PUSH2 0xD31 JUMP JUMPDEST SWAP3 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xEAF JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0xF0E PUSH2 0x132 DUP5 PUSH2 0x785 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEAF JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0xF2B PUSH2 0xA21 DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH2 0xF35 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xF5D JUMPI POP POP PUSH2 0xF4B PUSH2 0x9AE PUSH2 0xEF0 PUSH2 0xD31 JUMP JUMPDEST EQ PUSH2 0x132 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x132 PUSH2 0xF80 SWAP2 PUSH2 0xF78 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0xF9A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0xE8 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFC2 PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0xFD4 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFFF PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1039 PUSH2 0x103E SWAP2 PUSH2 0x132 SWAP5 SWAP4 PUSH2 0x1018 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1033 PUSH2 0x102E PUSH2 0x1027 PUSH2 0xFA7 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST SWAP2 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x10C2 JUMPI PUSH2 0x10B7 RETURNDATASIZE PUSH2 0xAA9 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x10DF PUSH2 0xBCD PUSH1 0x20 SWAP4 PUSH2 0x10D9 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x82F JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x1110 PUSH2 0x10F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x1105 DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1064 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1155 JUMPI JUMPDEST POP PUSH2 0x1146 JUMPI PUSH2 0x112A PUSH2 0x10A8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1139 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xC2B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5D9 PUSH2 0x58F PUSH2 0x5E7 SWAP3 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x1178 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x117F JUMPI JUMPDEST PUSH2 0x1170 DUP2 DUP4 PUSH2 0x40D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x111D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x11A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST POP POP POP PUSH2 0x132 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x19F23A724918DD340D 0x24 0x4F PUSH25 0x9DA5A6A8268624312310A6F59EB09D970477BB64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1053:48812:17:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1053:48812:17;;;;;;;;-1:-1:-1;;1053:48812:17;;;:::o;:::-;;;;;;;;-1:-1:-1;;1053:48812:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1053:48812:17;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1053:48812:17;;;;;;;;;;:::i;:::-;;;;:::i;5261:246::-;;5327:13;5350:17;5261:246;5327:13;;:::i;:::-;5350:17;;:::i;:::-;5393:15;;:::i;:::-;5377:31;;;;:::i;:::-;5423:35;;-1:-1:-1;;5423:35:17;1053:48812;;5423:35;;1053:48812;;5423:35;;5419:81;;5261:246::o;5419:81::-;-1:-1:-1;;;5468:31:17;:::i;5966:90::-;6041:8;6048:1;6041:8;:::i;49703:160::-;49766:91;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":359,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":1341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":752,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_bytes":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_addresst_bool":{"entryPoint":955,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":1137,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":4163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_bytes4_fromMemory":{"entryPoint":4176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":1744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_bytes":{"entryPoint":4196,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_string_string":{"entryPoint":3161,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":1612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":2729,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1096,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint24":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_BITMASK_ADDRESS":{"entryPoint":2066,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_ADDRESS_DATA_ENTRY":{"entryPoint":2823,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_BURNED":{"entryPoint":3377,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITMASK_NEXT_INITIALIZED":{"entryPoint":2157,"id":null,"parameterSlots":0,"returnSlots":1},"constant_BITPOS_EXTRA_DATA":{"entryPoint":4007,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":2095,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_ERC721A_IERC721Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_uint160":{"entryPoint":2035,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":1787,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1461501637330902918203684832716283019655932542975_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_232_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_33540519_by_1_to_bytes4":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2814,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_c5d2_to_bytes":{"entryPoint":2757,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2013,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":2044,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint24_to_uint256":{"entryPoint":4060,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint160":{"entryPoint":2082,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint24":{"entryPoint":4039,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":1806,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":4245,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":1754,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1125,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":2747,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":370,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":3359,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_approve":{"entryPoint":684,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":880,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":568,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":1376,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":478,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":833,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1291,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_9408":{"entryPoint":813,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":990,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":907,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":1314,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":709,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":793,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1570,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":1918,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":4264,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1037,"id":null,"parameterSlots":2,"returnSlots":0},"fun__approve":{"entryPoint":3565,"id":10115,"parameterSlots":3,"returnSlots":0},"fun_approve":{"entryPoint":1906,"id":9050,"parameterSlots":2,"returnSlots":0},"fun_balanceOf":{"entryPoint":2840,"id":8589,"parameterSlots":1,"returnSlots":1},"fun_baseURI":{"entryPoint":4486,"id":8776,"parameterSlots":0,"returnSlots":1},"fun_checkContractOnERC721Received":{"entryPoint":4295,"id":9530,"parameterSlots":4,"returnSlots":1},"fun_exists":{"entryPoint":3390,"id":9173,"parameterSlots":1,"returnSlots":1},"fun_extraData":{"entryPoint":4563,"id":10340,"parameterSlots":3,"returnSlots":1},"fun_getApproved":{"entryPoint":1843,"id":9075,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":3945,"id":9216,"parameterSlots":1,"returnSlots":2},"fun_isApprovedForAll":{"entryPoint":3303,"id":9119,"parameterSlots":2,"returnSlots":1},"fun_isSenderApprovedOrOwner":{"entryPoint":3974,"id":9197,"parameterSlots":3,"returnSlots":1},"fun_msgSenderERC721A":{"entryPoint":null,"id":10383,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":1796,"id":8712,"parameterSlots":0,"returnSlots":1},"fun_nextExtraData":{"entryPoint":4100,"id":10373,"parameterSlots":3,"returnSlots":1},"fun_ownerOf":{"entryPoint":2785,"id":8796,"parameterSlots":1,"returnSlots":1},"fun_packOwnershipData":{"entryPoint":null,"id":9024,"parameterSlots":2,"returnSlots":1},"fun_packedOwnershipExists":{"entryPoint":null,"id":9183,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":3743,"id":8958,"parameterSlots":1,"returnSlots":1},"fun_revert":{"entryPoint":3518,"id":10401,"parameterSlots":1,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":2765,"id":9408,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom_9448":{"entryPoint":3047,"id":9448,"parameterSlots":4,"returnSlots":0},"fun_sequentialUpTo":{"entryPoint":null,"id":8475,"parameterSlots":0,"returnSlots":1},"fun_setApprovalForAll":{"entryPoint":2949,"id":9101,"parameterSlots":2,"returnSlots":0},"fun_startTokenId":{"entryPoint":3733,"id":8462,"parameterSlots":0,"returnSlots":1},"fun_supportsInterface":{"entryPoint":1436,"id":8702,"parameterSlots":1,"returnSlots":1},"fun_symbol":{"entryPoint":2907,"id":8722,"parameterSlots":0,"returnSlots":1},"fun_toString":{"entryPoint":4494,"id":10393,"parameterSlots":1,"returnSlots":1},"fun_tokenURI":{"entryPoint":3181,"id":8767,"parameterSlots":1,"returnSlots":1},"fun_totalSupply":{"entryPoint":1935,"id":8515,"parameterSlots":0,"returnSlots":1},"fun_transferFrom":{"entryPoint":2170,"id":9389,"parameterSlots":3,"returnSlots":0},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":2104,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_TokenApprovalRef_storage_of_uint256":{"entryPoint":1819,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3337,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1548,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1015,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1925,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":247,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_left_uint256_uint256":{"entryPoint":4078,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint256":{"entryPoint":4017,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":3527,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2114,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":3542,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":2926,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":2130,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":517,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806318160ddd146100de57806323b872dd146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036100f757610560565b610522565b61050b565b6103de565b61038b565b610370565b610341565b61032d565b610319565b6102c5565b6102ac565b610238565b6101de565b610135565b600080fd5b6001600160e01b031981165b036100f757565b9050359061011c826100fc565b565b906020828203126100f7576101329161010f565b90565b346100f75761016361015061014b36600461011e565b61059c565b6040515b91829182901515815260200190565b0390f35b60009103126100f757565b60005b8381106101855750506000910152565b8181015183820152602001610175565b6101b66101bf6020936101c9936101aa815190565b80835293849260200190565b95869101610172565b601f01601f191690565b0190565b602080825261013292910190610195565b346100f7576101ee366004610167565b6101636101f9610704565b604051918291826101cd565b80610108565b9050359061011c82610205565b906020828203126100f7576101329161020b565b6001600160a01b031690565b346100f75761016361025361024e366004610218565b610733565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610108565b9050359061011c8261026d565b91906040838203126100f7576101329060206102a5828661027c565b940161020b565b6102c06102ba366004610289565b90610772565b604051005b346100f7576102d5366004610167565b6101636102e061078f565b6040519182918290815260200190565b90916060828403126100f757610132610309848461027c565b9360406102a5826020870161027c565b6102c06103273660046102f0565b9161087a565b6102c061033b3660046102f0565b91610acd565b346100f757610163610253610357366004610218565b610ae1565b906020828203126100f7576101329161027c565b346100f7576101636102e061038636600461035c565b610b18565b346100f75761039b366004610167565b6101636101f9610b5b565b801515610108565b9050359061011c826103a6565b91906040838203126100f7576101329060206103d7828661027c565b94016103ae565b346100f7576102c06103f13660046103bb565b90610b85565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761042f57604052565b6103f7565b9061011c61044160405190565b928361040d565b67ffffffffffffffff811161042f57602090601f01601f19160190565b90826000939282370152565b9092919261048661048182610448565b610434565b93818552818301116100f75761011c916020850190610465565b9080601f830112156100f75781602061013293359101610471565b906080828203126100f7576104d0818361027c565b926104de826020850161027c565b926104ec836040830161020b565b92606082013567ffffffffffffffff81116100f75761013292016104a0565b6102c06105193660046104bb565b92919091610be7565b346100f7576101636101f9610538366004610218565b610c6d565b91906040838203126100f757610132906020610559828661027c565b940161027c565b346100f75761016361015061057636600461053d565b90610ce7565b61058f6105896101329290565b60e01b90565b6001600160e01b03191690565b6105a96301ffc9a761057c565b6001600160e01b03198216149081156105eb575b81156105c7575090565b90506105e76105d9635b5e139f61057c565b916001600160e01b03191690565b1490565b90506105fa6380ac58cd61057c565b6001600160e01b0319821614906105bd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610642575b602083101461063d57565b61060c565b91607f1691610632565b8054600093929161066961065f83610622565b8085529360200190565b91600181169081156106bb575060011461068257505050565b6106959192939450600052602060002090565b916000925b8184106106a75750500190565b80548484015260209093019260010161069a565b92949550505060ff1916825215156020020190565b906101329161064c565b9061011c6106f4926106eb60405190565b938480926106d0565b038361040d565b610132906106da565b61013260026106fb565b6101326101326101329290565b906107259061070e565b600052602052604060002090565b61074361073f82610d3e565b1590565b61076557600061075761013292600661071b565b01546001600160a01b031690565b6333d1c03960e21b610dbe565b61011c91600191610ded565b6101329081565b610132905461077e565b6107b66107ae61079f6000610785565b6107a96001610785565b900390565b6107a9610e95565b9081600019806107c5565b9190565b036107cd5750565b6101329192506101c96008610785565b61022c610132610132926001600160a01b031690565b610132906107dd565b610132610132610132926001600160a01b031690565b6101326001600160a01b0361070e565b61022c6101326101329290565b610132906107f3565b906107259061082f565b90600019905b9181191691161790565b906108626101326108699261070e565b8254610842565b9055565b610132600160e11b61070e565b61089461088f61088985610e9f565b926107f3565b6107fc565b926108b06108ab6108a3610812565b809616610822565b6107f3565b936108bd6108ab84610822565b6108d86001600160a01b0387165b916001600160a01b031690565b03610a9d576108e682610f69565b9490336108f761073f828a8a610f86565b610a6f575b5061088f6107c1959493926109c1926109ed98610a65575b5061093c6109238a6005610838565b61093661092f82610785565b6000190190565b90610852565b61095c61094a826005610838565b61093661095682610785565b60010190565b61096461086d565b9561098961097382848d611004565b8817836001600160a01b0316904260a01b171790565b9061099f60049261099a898561071b565b610852565b6000976109b46109ae8a61070e565b91831690565b14610a01575b50506107f3565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a461070e565b146109f457565b633a954ecd60e21b610dbe565b610a13610a0e600161070e565b880190565b91610a26610a21848361071b565b610785565b610a326107c18b61070e565b14610a3e575b506109ba565b610a4a6101328a610785565b8314610a3857610a5d9261099a9161071b565b388080610a38565b6000905538610914565b61073f610a8191899796959497610ce7565b610a90573894919293946108fc565b632ce44b5f60e11b610dbe565b62a1148160e81b610dbe565b90610ab661048183610448565b918252565b6101326000610aa9565b610132610abb565b909161011c92610adb610ac5565b92610be7565b6108ab610af961013292610af3600090565b50610e9f565b610822565b61013290610822565b61013267ffffffffffffffff61070e565b610b2561022c6000610afe565b6001600160a01b03821614610b4e57610a21610b42916005610838565b610b4a610b07565b1690565b6323d3ad8160e21b610dbe565b61013260036106fb565b9060ff90610848565b90610b7e61013261086992151590565b8254610b65565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31610be2610bd8610bd233610bcd87610bc888610bc3856007610838565b610838565b610b6e565b61082f565b9361082f565b9361015460405190565b0390a3565b91929092610bf681858561087a565b833b610c056107c1600061070e565b03610c11575b50505050565b610c1e9361073f936110c7565b610c2b5738808080610c0b565b6368d2bf6b60e11b610dbe565b6101c9610c5092602092610c4a815190565b94859290565b93849101610172565b610c67906101329392610c38565b90610c38565b610c7961073f82610d3e565b610cda57610c85611186565b8051610c946107c1600061070e565b14610cd057610132610cc491610cac6101329461118e565b90610cb660405190565b938492602084019283610c59565b9081038252038261040d565b5050610132610ac5565b630a14c4b560e41b610dbe565b61013291610bc3610d0292610cfa600090565b506007610838565b5460ff1690565b634e487b7160e01b600052601160045260246000fd5b8015610d2c576000190190565b610d09565b610132600160e01b61070e565b9060009182610d4b610e95565b821015610d56575050565b610d636101326000610785565b8210610d6d575050565b509091505b610d80610a2182600461071b565b9081610d8f6107c1600061070e565b03610da357610d9e9150610d1f565b610d72565b506105e7610daf610d31565b610db9600061070e565b921690565b60005260046000fd5b906001600160a01b0390610848565b90610de66101326108699261082f565b8254610dc7565b91610df782610ae1565b9080610e7a575b610e5b575b610e24610bd2610e2a92610bcd866000610e1e88600661071b565b01610dd6565b9161070e565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925610e5560405190565b600090a4565b610e6861073f3383610ce7565b15610e03576367d9dca160e11b610dbe565b5033610e8e6001600160a01b0383166108cb565b1415610dfe565b610132600061070e565b610ea7610e95565b811015610ebc575b636f96cda160e11b610dbe565b600490610ecd610a2182600461071b565b91600091610eda8361070e565b8414610efe575050610ef66109ae610ef0610d31565b9261070e565b03610eaf5790565b90919250610f0e61013284610785565b811015610eaf57909190600019015b91610f2b610a21848361071b565b92610f358361070e565b8414610f5d575050610f4b6109ae610ef0610d31565b1461013257636f96cda160e11b610dbe565b90925060001901610f1d565b610132610f8091610f78600090565b50600661071b565b90815490565b91906001600160a01b038091610f9a600090565b5016911691821491141790565b61013260e861070e565b61013290610fc26107c16101329490565b901c90565b610fd46101326101329290565b62ffffff1690565b6101326101326101329262ffffff1690565b61013290610fff6107c16101329490565b901b90565b61103961103e916101329493611018600090565b5061103361102e611027610fa7565b8097610fb1565b610fc7565b916111d3565b610fdc565b610fee565b9050519061011c826100fc565b906020828203126100f75761013291611043565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261013292910190610195565b61058f6105896101329263ffffffff1690565b3d156110c2576110b73d610aa9565b903d6000602084013e565b606090565b916110df610bcd6020936110d9600090565b5061082f565b63150b7a02936000336111106110f460405190565b988996879586946111058c60e01b90565b865260048601611064565b03925af160009281611155575b506111465761112a6110a8565b80516111396107c1600061070e565b14610c2b57805190602001fd5b6105d961058f6105e792611095565b61117891935060203d60201161117f575b611170818361040d565b810190611050565b913861111d565b503d611166565b610132610ac5565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156111c5576001600a916111a9565b809350602091039203918252565b50505061013260009056fea26469706673582212206819f23a724918dd340d244f789da5a6a8268624312310a6f59eb09d970477bb64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB6 JUMPI PUSH4 0xE985E9C5 SUB PUSH2 0xF7 JUMPI PUSH2 0x560 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x10F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x11E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x185 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1BF PUSH1 0x20 SWAP4 PUSH2 0x1C9 SWAP4 PUSH2 0x1AA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x26D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x20B JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 PUSH2 0x309 DUP5 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x2A5 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 PUSH2 0xACD JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x253 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x2E0 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1F9 PUSH2 0xB5B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x108 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x3D7 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x2C0 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BB JUMP JUMPDEST SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x42F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x441 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x486 PUSH2 0x481 DUP3 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF7 JUMPI PUSH2 0x11C SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x465 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF7 JUMPI DUP2 PUSH1 0x20 PUSH2 0x132 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x4D0 DUP2 DUP4 PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4DE DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP3 PUSH2 0x4EC DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x20B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP3 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x1F9 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP1 PUSH1 0x20 PUSH2 0x559 DUP3 DUP7 PUSH2 0x27C JUMP JUMPDEST SWAP5 ADD PUSH2 0x27C JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH2 0x163 PUSH2 0x150 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x5A9 PUSH4 0x1FFC9A7 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x5EB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x5C7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 PUSH2 0x5D9 PUSH4 0x5B5E139F PUSH2 0x57C JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FA PUSH4 0x80AC58CD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x642 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x63D JUMPI JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x632 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x669 PUSH2 0x65F DUP4 PUSH2 0x622 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x682 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x6A7 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x69A JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x132 SWAP2 PUSH2 0x64C JUMP JUMPDEST SWAP1 PUSH2 0x11C PUSH2 0x6F4 SWAP3 PUSH2 0x6EB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x6D0 JUMP JUMPDEST SUB DUP4 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x132 PUSH1 0x2 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x743 PUSH2 0x73F DUP3 PUSH2 0xD3E JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x0 PUSH2 0x757 PUSH2 0x132 SWAP3 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x11C SWAP2 PUSH1 0x1 SWAP2 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x132 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x132 SWAP1 SLOAD PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7AE PUSH2 0x79F PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7A9 PUSH1 0x1 PUSH2 0x785 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xE95 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 NOT DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x7CD JUMPI POP JUMP JUMPDEST PUSH2 0x132 SWAP2 SWAP3 POP PUSH2 0x1C9 PUSH1 0x8 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22C PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST SWAP1 PUSH2 0x725 SWAP1 PUSH2 0x82F JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH2 0x132 PUSH2 0x869 SWAP3 PUSH2 0x70E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x842 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE1 SHL PUSH2 0x70E JUMP JUMPDEST PUSH2 0x894 PUSH2 0x88F PUSH2 0x889 DUP6 PUSH2 0xE9F JUMP JUMPDEST SWAP3 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST SWAP3 PUSH2 0x8B0 PUSH2 0x8AB PUSH2 0x8A3 PUSH2 0x812 JUMP JUMPDEST DUP1 SWAP7 AND PUSH2 0x822 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST SWAP4 PUSH2 0x8BD PUSH2 0x8AB DUP5 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x8D8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SUB PUSH2 0xA9D JUMPI PUSH2 0x8E6 DUP3 PUSH2 0xF69 JUMP JUMPDEST SWAP5 SWAP1 CALLER PUSH2 0x8F7 PUSH2 0x73F DUP3 DUP11 DUP11 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xA6F JUMPI JUMPDEST POP PUSH2 0x88F PUSH2 0x7C1 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x9C1 SWAP3 PUSH2 0x9ED SWAP9 PUSH2 0xA65 JUMPI JUMPDEST POP PUSH2 0x93C PUSH2 0x923 DUP11 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x936 PUSH2 0x92F DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x95C PUSH2 0x94A DUP3 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x936 PUSH2 0x956 DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x86D JUMP JUMPDEST SWAP6 PUSH2 0x989 PUSH2 0x973 DUP3 DUP5 DUP14 PUSH2 0x1004 JUMP JUMPDEST DUP9 OR DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 TIMESTAMP PUSH1 0xA0 SHL OR OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x99F PUSH1 0x4 SWAP3 PUSH2 0x99A DUP10 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 SWAP8 PUSH2 0x9B4 PUSH2 0x9AE DUP11 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP4 AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xA01 JUMPI JUMPDEST POP POP PUSH2 0x7F3 JUMP JUMPDEST AND DUP1 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 DUP1 LOG4 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0x9F4 JUMPI JUMP JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xA13 PUSH2 0xA0E PUSH1 0x1 PUSH2 0x70E JUMP JUMPDEST DUP9 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xA26 PUSH2 0xA21 DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x7C1 DUP12 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xA3E JUMPI JUMPDEST POP PUSH2 0x9BA JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x132 DUP11 PUSH2 0x785 JUMP JUMPDEST DUP4 EQ PUSH2 0xA38 JUMPI PUSH2 0xA5D SWAP3 PUSH2 0x99A SWAP2 PUSH2 0x71B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x914 JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA81 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP8 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xA90 JUMPI CODESIZE SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x8FC JUMP JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xDBE JUMP JUMPDEST SWAP1 PUSH2 0xAB6 PUSH2 0x481 DUP4 PUSH2 0x448 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xABB JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x11C SWAP3 PUSH2 0xADB PUSH2 0xAC5 JUMP JUMPDEST SWAP3 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0xAF9 PUSH2 0x132 SWAP3 PUSH2 0xAF3 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x132 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x70E JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x22C PUSH1 0x0 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xB4E JUMPI PUSH2 0xA21 PUSH2 0xB42 SWAP2 PUSH1 0x5 PUSH2 0x838 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB07 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x3 PUSH2 0x6FB JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x848 JUMP JUMPDEST SWAP1 PUSH2 0xB7E PUSH2 0x132 PUSH2 0x869 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB65 JUMP JUMPDEST PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH2 0xBE2 PUSH2 0xBD8 PUSH2 0xBD2 CALLER PUSH2 0xBCD DUP8 PUSH2 0xBC8 DUP9 PUSH2 0xBC3 DUP6 PUSH1 0x7 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST SWAP4 PUSH2 0x82F JUMP JUMPDEST SWAP4 PUSH2 0x154 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 PUSH2 0xBF6 DUP2 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0xC05 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xC11 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC1E SWAP4 PUSH2 0x73F SWAP4 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xC2B JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0xC50 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xC4A DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0xC67 SWAP1 PUSH2 0x132 SWAP4 SWAP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x73F DUP3 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0xCDA JUMPI PUSH2 0xC85 PUSH2 0x1186 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC94 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xCD0 JUMPI PUSH2 0x132 PUSH2 0xCC4 SWAP2 PUSH2 0xCAC PUSH2 0x132 SWAP5 PUSH2 0x118E JUMP JUMPDEST SWAP1 PUSH2 0xCB6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x40D JUMP JUMPDEST POP POP PUSH2 0x132 PUSH2 0xAC5 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x132 SWAP2 PUSH2 0xBC3 PUSH2 0xD02 SWAP3 PUSH2 0xCFA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x838 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x1 PUSH1 0xE0 SHL PUSH2 0x70E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 PUSH2 0xD4B PUSH2 0xE95 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD56 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD63 PUSH2 0x132 PUSH1 0x0 PUSH2 0x785 JUMP JUMPDEST DUP3 LT PUSH2 0xD6D JUMPI POP POP JUMP JUMPDEST POP SWAP1 SWAP2 POP JUMPDEST PUSH2 0xD80 PUSH2 0xA21 DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xD8F PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xDA3 JUMPI PUSH2 0xD9E SWAP2 POP PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST POP PUSH2 0x5E7 PUSH2 0xDAF PUSH2 0xD31 JUMP JUMPDEST PUSH2 0xDB9 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST SWAP3 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x848 JUMP JUMPDEST SWAP1 PUSH2 0xDE6 PUSH2 0x132 PUSH2 0x869 SWAP3 PUSH2 0x82F JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC7 JUMP JUMPDEST SWAP2 PUSH2 0xDF7 DUP3 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0xE7A JUMPI JUMPDEST PUSH2 0xE5B JUMPI JUMPDEST PUSH2 0xE24 PUSH2 0xBD2 PUSH2 0xE2A SWAP3 PUSH2 0xBCD DUP7 PUSH1 0x0 PUSH2 0xE1E DUP9 PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST ADD PUSH2 0xDD6 JUMP JUMPDEST SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH2 0xE55 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0x73F CALLER DUP4 PUSH2 0xCE7 JUMP JUMPDEST ISZERO PUSH2 0xE03 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST POP CALLER PUSH2 0xE8E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8CB JUMP JUMPDEST EQ ISZERO PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x132 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST PUSH2 0xEA7 PUSH2 0xE95 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEBC JUMPI JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0xECD PUSH2 0xA21 DUP3 PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEDA DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xEFE JUMPI POP POP PUSH2 0xEF6 PUSH2 0x9AE PUSH2 0xEF0 PUSH2 0xD31 JUMP JUMPDEST SWAP3 PUSH2 0x70E JUMP JUMPDEST SUB PUSH2 0xEAF JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0xF0E PUSH2 0x132 DUP5 PUSH2 0x785 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xEAF JUMPI SWAP1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST SWAP2 PUSH2 0xF2B PUSH2 0xA21 DUP5 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH2 0xF35 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP5 EQ PUSH2 0xF5D JUMPI POP POP PUSH2 0xF4B PUSH2 0x9AE PUSH2 0xEF0 PUSH2 0xD31 JUMP JUMPDEST EQ PUSH2 0x132 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xDBE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x0 NOT ADD PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x132 PUSH2 0xF80 SWAP2 PUSH2 0xF78 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x71B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH2 0xF9A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP AND SWAP2 AND SWAP2 DUP3 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH1 0xE8 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFC2 PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0xFD4 PUSH2 0x132 PUSH2 0x132 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x132 PUSH2 0x132 SWAP3 PUSH3 0xFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP1 PUSH2 0xFFF PUSH2 0x7C1 PUSH2 0x132 SWAP5 SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1039 PUSH2 0x103E SWAP2 PUSH2 0x132 SWAP5 SWAP4 PUSH2 0x1018 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1033 PUSH2 0x102E PUSH2 0x1027 PUSH2 0xFA7 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST SWAP2 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x11C DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF7 JUMPI PUSH2 0x132 SWAP2 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x132 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x589 PUSH2 0x132 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x10C2 JUMPI PUSH2 0x10B7 RETURNDATASIZE PUSH2 0xAA9 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x10DF PUSH2 0xBCD PUSH1 0x20 SWAP4 PUSH2 0x10D9 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x82F JUMP JUMPDEST PUSH4 0x150B7A02 SWAP4 PUSH1 0x0 CALLER PUSH2 0x1110 PUSH2 0x10F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x1105 DUP13 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1064 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1155 JUMPI JUMPDEST POP PUSH2 0x1146 JUMPI PUSH2 0x112A PUSH2 0x10A8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1139 PUSH2 0x7C1 PUSH1 0x0 PUSH2 0x70E JUMP JUMPDEST EQ PUSH2 0xC2B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x5D9 PUSH2 0x58F PUSH2 0x5E7 SWAP3 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x1178 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x117F JUMPI JUMPDEST PUSH2 0x1170 DUP2 DUP4 PUSH2 0x40D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1050 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x111D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x132 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE SUB SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA PUSH1 0x1 DUP5 SWAP3 SWAP5 JUMPDEST SUB SWAP4 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 PUSH2 0x11A9 JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x20 SWAP2 SUB SWAP3 SUB SWAP2 DUP3 MSTORE JUMP JUMPDEST POP POP POP PUSH2 0x132 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x19F23A724918DD340D 0x24 0x4F PUSH25 0x9DA5A6A8268624312310A6F59EB09D970477BB64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1053:48812:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;;1053:48812:17;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1053:48812:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1053:48812:17;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:17;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1053:48812:17;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1053:48812:17;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;1053:48812:17;;;10689:630;11092:25;11107:10;11092:25;:::i;:::-;-1:-1:-1;;;;;;1053:48812:17;;11092:25;:101;;;;;10689:630;11092:177;;;;11073:196;10689:630;:::o;11092:177::-;11244:25;;;;11259:10;11244:25;:::i;:::-;;-1:-1:-1;;;;;;1053:48812:17;;;11244:25;;10689:630;:::o;11092:101::-;11168:25;;;11183:10;11168:25;:::i;:::-;-1:-1:-1;;;;;;1053:48812:17;;11168:25;11092:101;;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;11573:98::-;11652:12;11659:5;11652:12;:::i;1053:48812::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;18636:223::-;18735:17;18736:16;;;:::i;:::-;18735:17;;1053:48812;18735:17;18731:73;;18822:30;:24;:30;:24;:15;:24;:::i;:::-;:30;1053:48812;-1:-1:-1;;;;;1053:48812:17;;;18731:73;-1:-1:-1;;;18762:41:17;:::i;18364:122::-;18474:4;18364:122;18474:4;18364:122;18474:4;:::i;1053:48812::-;;;;;;;;;;:::i;6890:564::-;7312:46;:28;:13;;;:::i;:::-;7328:12;;;:::i;:::-;7312:28;1053:48812;;;7312:28;7343:15;;:::i;7312:46::-;7303:55;;-1:-1:-1;;7397:17:17;7376:38;1053:48812;7376:38;;1053:48812;;7376:38;;7372:65;;6890:564;:::o;7372:65::-;7416:21;7426:11;;;;;;:::i;1053:48812::-;;;;;-1:-1:-1;;;;;1053:48812:17;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1053:48812:17;;;2899:58;2943:14;-1:-1:-1;;;;;2943:14:17;:::i;:::-;;;;;1053:48812;;2943:14;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;;7397:17:17;2943:14;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2497:61::-;2550:8;-1:-1:-1;;;2550:8:17;:::i;22796:3447::-;23115:22;23123:13;22963:27;;;:::i;:::-;23123:13;;:::i;:::-;23115:22;:::i;:::-;23140:16;23099:59;23107:50;23140:16;;:::i;:::-;23115:41;;;23107:50;:::i;:::-;23099:59;:::i;:::-;23092:66;23173:37;23181:28;;;:::i;23173:37::-;:45;-1:-1:-1;;;;;1053:48812:17;;23173:45;;-1:-1:-1;;;;;1053:48812:17;;;23173:45;;23169:95;;23332:35;;;:::i;:::-;23512:19;;47819:10;23463:69;23464:68;;;;;:::i;23463:69::-;23459:188;;22796:3447;23764:190;25708:11;26129:13;23764:190;;;;25700:20;23764:190;26129:13;23764:190;;;22796:3447;24316:24;24314:26;24316:24;;:18;:24;:::i;:::-;24314:26;;;;:::i;:::-;-1:-1:-1;;2943:14:17;1053:48812;;24314:26;;;:::i;:::-;24382:24;24384:22;;24316:18;24384:22;:::i;:::-;24382:24;;;;:::i;:::-;2943:14;;1053:48812;;24382:24;24755:25;;:::i;:::-;24783:45;24699:143;24783:45;;;;;:::i;:::-;24755:73;;24699:143;-1:-1:-1;;;;;17192:331:17;;;;;;;17086:443;;24699:143;24670:17;:172;:17;:26;;;;;:::i;:::-;:172;:::i;:::-;25010:1;24959:52;;;;;:::i;:::-;:47;;;1053:48812;;24959:52;;24955:617;;22796:3447;25708:11;;;:::i;25700:20::-;:39;25749:367;;;;;;26129:13;:::i;:::-;;26125:58;;22796:3447::o;26125:58::-;-1:-1:-1;;;26152:30:17;:::i;24955:617::-;25053:11;;25063:1;25053:11;:::i;:::-;;1053:48812;;;25053:11;25184:30;;;;;;:::i;:::-;;:::i;:::-;:35;;;;:::i;:::-;;25180:378;;24955:617;;;;25180:378;25305:28;25320:13;;;:::i;25305:28::-;;25301:239;25180:378;25301:239;25465:52;:30;;;;:::i;:52::-;25301:239;;;25180:378;;23764:190;;;;;;;23459:188;23551:43;23550:44;23551:43;;;;;;;;:::i;23550:44::-;23546:101;;23459:188;;;;;;;;23546:101;-1:-1:-1;;;23604:42:17;:::i;23169:95::-;-1:-1:-1;;;23228:35:17;:::i;1053:48812::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::i;26334:187::-;;;26475:39;26334:187;26475:39;;:::i;:::-;;;:::i;12934:150::-;13040:36;13048:27;13032:45;12934:150;13006:7;1053:48812;;;13006:7;13048:27;;:::i;:::-;13040:36;:::i;1053:48812::-;;;;:::i;1463:68::-;1518:13;;;:::i;8570:239::-;8665:19;8674:10;8682:1;8674:10;:::i;8665:19::-;-1:-1:-1;;;;;1053:48812:17;;8665:19;8661:69;;8747:25;;;:18;:25;:::i;:::-;8775:27;;:::i;:::-;8747:55;8570:239;:::o;8661:69::-;-1:-1:-1;;;8694:35:17;:::i;11742:102::-;11823:14;11830:7;11823:14;:::i;1053:48812::-;;;;;2943:14;1053:48812;;;;;;;;;;;;;;:::i;19186:231::-;19355:55;;;;47819:10;19280:60;:39;:49;:39;;;:18;:39;:::i;:::-;:49;:::i;:::-;:60;:::i;:::-;19355:55;:::i;:::-;;;:::i;:::-;;;1053:48812;;;;19355:55;;;;19186:231::o;27102:405::-;;;;;27294:7;;;;;:::i;:::-;27316:14;;:19;;27334:1;27316:19;:::i;:::-;;27312:189;;27102:405;;;;;:::o;27312:189::-;27353:57;27354:56;;;;:::i;27353:57::-;27349:152;;27312:189;;;;;;27349:152;-1:-1:-1;;;27438:47:17;:::i;1053:48812::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;11945:322::-;12047:17;12048:16;;;:::i;12047:17::-;12043:68;;12146:10;;:::i;:::-;1053:48812;;12173:26;;12198:1;12173:26;:::i;:::-;;:87;;12209:45;;12235:18;;12202:53;12235:18;;:::i;:::-;12209:45;;1053:48812;;;;12209:45;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;12173:87::-;;;;;:::i;12043:68::-;-1:-1:-1;;;12074:36:17;:::i;19567:162::-;19687:35;19567:162;19687:25;:35;19567:162;19664:4;1053:48812;;;19664:4;19687:25;:18;:25;:::i;:35::-;1053:48812;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:17;;:::o;:::-;;:::i;2233:51::-;2276:8;-1:-1:-1;;;2276:8:17;:::i;19978:465::-;;1053:48812;20043:11;;20070:15;;:::i;:::-;:26;-1:-1:-1;20070:26:17;20066:371;;19978:465;;:::o;20066:371::-;20221:23;20231:13;;;:::i;20221:23::-;;;20217:210;;19978:465;;:::o;20217:210::-;-1:-1:-1;20264:14:17;;-1:-1:-1;20296:60:17;20313:26;;:17;;:26;:::i;:::-;20304:35;;20303:42;;20344:1;20303:42;:::i;:::-;;;;20347:9;;;;:::i;:::-;20296:60;;20303:42;;20383:29;20392:15;;:::i;:::-;20383:29;20411:1;20383:29;:::i;:::-;:24;;1053:48812;;49703:160;49766:91;;;;;1053:48812;;-1:-1:-1;;;;;1053:48812:17;;2943:14;1053:48812;;;;;;;:::i;:::-;;;;:::i;41333:460::-;;41473:16;;;:::i;:::-;41504:45;;;;41333:460;41500:198;;41333:460;41758:28;;;41708:24;:35;:24;:30;:24;;:15;:24;:::i;:::-;:30;:35;:::i;41758:28::-;;;:::i;:::-;;;;1053:48812;;;;41758:28;;;;41333:460::o;41500:198::-;41567:45;41568:44;47819:10;41568:44;;:::i;41567:45::-;41563:135;41500:198;41563:135;-1:-1:-1;;;41640:42:17;:::i;41504:45::-;-1:-1:-1;47819:10:17;41521:28;-1:-1:-1;;;;;1053:48812:17;;41521:28;1053:48812;41521:28;;;41504:45;;5966:90;6041:8;6048:1;6041:8;:::i;14380:2173::-;14477:15;;:::i;:::-;:26;-1:-1:-1;14477:26:17;14473:2017;;14380:2173;-1:-1:-1;;;16507:38:17;:::i;14473:2017::-;14528:17;:26;;;;:17;:26;:::i;:::-;14519:35;14857:1;14847:11;;;;:::i;:::-;;;14843:1270;;16444:15;;16435:29;;16444:15;;:::i;:::-;16435:29;;:::i;:::-;;14473:2017;16431:48;16466:13;:::o;14843:1270::-;14893:13;;;;14882:24;14893:13;;;:::i;14882:24::-;;;;14878:77;;15502:597;;;-1:-1:-1;;2943:14:17;15596:9;;15578:28;;15596:9;15578:28;;:::i;:::-;15569:37;15654:11;;;:::i;:::-;;;15650:25;;15710:15;;15701:29;;15710:15;;:::i;15701:29::-;;15697:48;;-1:-1:-1;;;16041:38:17;:::i;15650:25::-;15667:8;;-1:-1:-1;;;2943:14:17;15596:9;1053:48812;21721:474;21929:24;21888:65;21721:474;21820:27;1053:48812;;;21820:27;21929:24;:15;:24;:::i;21888:65::-;22057:132;;;21721:474;:::o;20967:646::-;;;-1:-1:-1;;;;;20967:646:17;;21112:11;1053:48812;;;21112:11;21135:472;;;;;;;;;;20967:646;:::o;2625:49::-;2671:3;;;:::i;:::-;;;;;;;1053:48812;;2671:3;;;;;;;;;;1053:48812;;2671:3;;;;;;;;;;;;;;;;;;;;;1053:48812;;2671:3;;;;;47060:304;47303:31;47295:40;47060:304;47295:62;47060:304;;47191:7;1053:48812;;;47191:7;47259:18;47229:49;47236:41;47259:18;;:::i;:::-;47236:41;;;:::i;:::-;47229:49;:::i;:::-;47303:31;;:::i;:::-;47295:40;:::i;:::-;:62;:::i;1053:48812::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;29533:673::-;;29711:45;:28;:88;29533:673;29691:4;1053:48812;;;29691:4;29711:28;;:::i;:45::-;;;:88;47819:10;29711:88;;1053:48812;;;;29711:88;;;;;;;;;;1053:48812;;;;29711:88;;;;;;;:::i;:::-;;;;;-1:-1:-1;;29711:88:17;;;29533:673;-1:-1:-1;29707:493:17;;29943:257;;:::i;:::-;1053:48812;;29989:18;;30006:1;29989:18;:::i;:::-;;29985:113;;30111:79;;;;;;29707:493;29867:64;29877:54;29867:64;29877:54;;:::i;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;12512:92;12588:9;;:::i;47933:1708::-;;48027:1608;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47933:1708::o;46771:143::-;;;;46904:6;1053:48812;;"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8394,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":8396,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":8398,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8400,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":8404,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":8408,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":8413,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)8326_storage)"},{"astId":8419,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":8421,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_spotMinted","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)8326_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)8326_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenApprovalRef)8326_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":8325,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"ERC721A__IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"erc721a/contracts/IERC721A.sol":{"IERC721A":{"abi":[{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}