/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Collection,
  CollectionInterface,
} from "../../contracts/Collection";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCompatibleWithSpotMints",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialMintExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialUpToTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "SpotMintTokenIdTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "BatchMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
    ],
    name: "ContractURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMintPrice",
        type: "uint256",
      },
    ],
    name: "MintPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "MintingEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialMintPrice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMintPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setMintingEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234601957604051612b2961001f8239612b2990f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461020257806306fdde03146101fd578063081812fc146101f8578063095ea7b3146101f357806316f6b768146101ee57806318160ddd146101e95780631b2ef1ca146101e457806323b872dd146101df5780633f4ba83a146101da57806342842e0e146101d55780634ea3871a146101d057806355f804b3146101cb5780635c975abb146101c65780636352211e146101c15780636817c76c146101bc57806370a08231146101b7578063715018a6146101b25780638456cb59146101ad5780638da5cb5b146101a8578063938e3d7b146101a357806395d89b411461019e5780639fd6db1214610199578063a22cb46514610194578063b80f55c91461018f578063b88d4fde1461018a578063c87b56dd14610185578063d5abeb0114610180578063e8a3d4851461017b578063e985e9c514610176578063f2fde38b146101715763f4a0a5280361020757610a23565b610a0b565b6109ef565b6109b1565b610996565b61096f565b610958565b6108f1565b610834565b6107f6565b6107b5565b61079d565b610782565b61076a565b610752565b610737565b610708565b6106cb565b6106b0565b610698565b61065b565b61061e565b610606565b6105f2565b6105b0565b610569565b61054a565b6103c0565b61034c565b6102f2565b610249565b600080fd5b6001600160e01b031981165b0361020757565b9050359061022c8261020c565b565b90602082820312610207576102429161021f565b90565b9052565b346102075761027761026461025f36600461022e565b610a5b565b6040515b91829182901515815260200190565b0390f35b600091031261020757565b60005b8381106102995750506000910152565b8181015183820152602001610289565b6102ca6102d36020936102dd936102be815190565b80835293849260200190565b95869101610286565b601f01601f191690565b0190565b6020808252610242929101906102a9565b346102075761030236600461027b565b61027761030d610bc3565b604051918291826102e1565b80610218565b9050359061022c82610319565b90602082820312610207576102429161031f565b6001600160a01b031690565b346102075761027761036761036236600461032c565b610c03565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610218565b9050359061022c82610381565b9190604083820312610207576102429060206103b98286610390565b940161031f565b6103d46103ce36600461039d565b90610c58565b604051005b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761041057604052565b6103d9565b9061022c61042260405190565b92836103ef565b6001600160401b03811161041057602090601f01601f19160190565b90826000939282370152565b9092919261046661046182610429565b610415565b93818552818301116102075761022c916020850190610445565b9080601f830112156102075781602061024293359101610451565b9060e0828203126102075781356001600160401b03811161020757816104c2918401610480565b9260208301356001600160401b03811161020757826104e2918501610480565b926104f08360408301610390565b926104fe816060840161031f565b9261050c826080850161031f565b9260a08101356001600160401b038111610207578361052c918301610480565b9260c08201356001600160401b038111610207576102429201610480565b34610207576103d461055d36600461049b565b959490949391936110b7565b346102075761057936600461027b565b6102776105846110d7565b6040519182918290815260200190565b9190604083820312610207576102429060206103b9828661031f565b34610207576103d46105c3366004610594565b90611401565b9091606082840312610207576102426105e28484610390565b9360406103b98260208701610390565b6103d46106003660046105c9565b91611451565b346102075761061636600461027b565b6103d46116d6565b6103d461062c3660046105c9565b91611702565b801515610218565b9050359061022c82610632565b90602082820312610207576102429161063a565b34610207576103d461066e366004610647565b611752565b906020828203126102075781356001600160401b038111610207576102429201610480565b34610207576103d46106ab366004610673565b6117f7565b34610207576106c036600461027b565b610277610264611800565b34610207576102776103676106e136600461032c565b611829565b610242916008021c81565b9061024291546106e6565b610242600060036106f1565b346102075761071836600461027b565b6102776105846106fc565b906020828203126102075761024291610390565b346102075761027761058461074d366004610723565b61185f565b346102075761076236600461027b565b6103d46118d0565b346102075761077a36600461027b565b6103d46118eb565b346102075761079236600461027b565b6102776103676118f3565b34610207576103d46107b0366004610673565b611963565b34610207576107c536600461027b565b61027761030d61196c565b610242916008021c5b60ff1690565b9061024291546107d0565b610242600060046107df565b346102075761080636600461027b565b6102776102646107ea565b91906040838203126102075761024290602061082d8286610390565b940161063a565b34610207576103d4610847366004610811565b90611985565b6001600160401b0381116104105760208091020190565b909291926108746104618261084d565b938185526020808601920283019281841161020757915b8383106108985750505050565b602080916108a6848661031f565b81520192019161088b565b9080601f830112156102075781602061024293359101610864565b906020828203126102075781356001600160401b0381116102075761024292016108b1565b34610207576103d46109043660046108cc565b611b97565b906080828203126102075761091e8183610390565b9261092c8260208501610390565b9261093a836040830161031f565b9260608201356001600160401b038111610207576102429201610480565b6103d4610966366004610909565b92919091611ba0565b346102075761027761030d61098536600461032c565b611c05565b610242600060026106f1565b34610207576109a636600461027b565b61027761058461098a565b34610207576109c136600461027b565b61027761030d611c7f565b9190604083820312610207576102429060206109e88286610390565b9401610390565b3461020757610277610264610a053660046109cc565b90611c89565b34610207576103d4610a1e366004610723565b611d10565b34610207576103d4610a3636600461032c565b611d55565b610a4e610a486102429290565b60e01b90565b6001600160e01b03191690565b610a686301ffc9a7610a3b565b6001600160e01b0319821614908115610aaa575b8115610a86575090565b9050610aa6610a98635b5e139f610a3b565b916001600160e01b03191690565b1490565b9050610ab96380ac58cd610a3b565b6001600160e01b031982161490610a7c565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610b01575b6020831014610afc57565b610acb565b91607f1691610af1565b80546000939291610b28610b1e83610ae1565b8085529360200190565b9160018116908115610b7a5750600114610b4157505050565b610b549192939450600052602060002090565b916000925b818410610b665750500190565b805484840152602090930192600101610b59565b92949550505060ff1916825215156020020190565b9061024291610b0b565b9061022c610bb392610baa60405190565b93848092610b8f565b03836103ef565b61024290610b99565b6102426002600080516020612ad48339815191525b01610bba565b6102426102426102429290565b90610bf590610bde565b600052602052604060002090565b610c13610c0f82611d5e565b1590565b610c4b576000610c3d610242926006610c37600080516020612ad483398151915290565b01610beb565b01546001600160a01b031690565b6333d1c03960e21b611d87565b61022c91600191611db6565b6102429060401c6107d9565b6102429054610c64565b610242905b6001600160401b031690565b6102429054610c7a565b610c7f6102426102429290565b61024290610340906001600160a01b031682565b61024290610ca2565b61024290610cb6565b906001600160401b03905b9181191691161790565b610c7f610242610242926001600160401b031690565b90610d03610242610d0a92610cdd565b8254610cc8565b9055565b9068ff00000000000000009060401b610cd3565b90610d32610242610d0a92151590565b8254610d0e565b61024590610c95565b60208101929161022c9190610d39565b9695909394929192610d62611e6e565b958693610d7a610d74610c0f87610c70565b95610c8b565b95600097610d8789610c95565b6001600160401b0389161480610e8a575b600198610db4610da78b610c95565b916001600160401b031690565b149081610e62575b155b9081610e59575b50610e4a5788999a9b87610dea8a9b610de1610df39b9c610c95565b9e019d8e610cf3565b610e3b57611053565b610dfc57505050565b610e2a610e36927fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d294610d22565b60405191829182610d42565b0390a1565b610e458a8d610d22565b611053565b63f92ee8a960e01b8952600489fd5b15905038610dc5565b9050610dbe610e7030610cbf565b3b610e81610e7d8d610bde565b9190565b14919050610dbc565b5086610d98565b9060001990610cd3565b90610eab610242610d0a92610bde565b8254610e91565b9160001960089290920291821b911b610cd3565b9190610ed7610242610d0a93610bde565b908354610eb2565b61022c91600091610ec6565b818110610ef6575050565b80610f046000600193610edf565b01610eeb565b9190601f8111610f1957505050565b610f2b61022c93600052602060002090565b906020601f840181900483019310610f4d575b6020601f909101040190610eeb565b9091508190610f3e565b90610f60815190565b906001600160401b03821161041057610f8382610f7d8554610ae1565b85610f0a565b602090601f8311600114610fbe57610d0a929160009183610fb3575b5050600019600883021c1916906002021790565b015190503880610f9f565b601f19831691610fd385600052602060002090565b9260005b81811061101157509160029391856001969410610ff8575b50505002019055565b01516000196008601f8516021c19169055388080610fef565b91936020600181928787015181550195019201610fd7565b9061022c91610f57565b9060ff90610cd3565b9061104c610242610d0a92151590565b8254611033565b6110ab96959361108f61109d946110716110a4989561109695611f39565b61107a81611f58565b611082611f69565b61108a611f84565b611f8c565b6002610e9b565b6003610e9b565b6000611029565b6001611029565b61022c6001600461103c565b9061022c969594939291610d52565b6102429081565b61024290546110c6565b600080516020612ad48339815191529061110f6111076110f6846110cd565b611102600186016110cd565b900390565b611102612006565b809261111a60001990565b600101611125575050565b61024292935060086102dd91016110cd565b9061022c91611144612010565b9061022c9161115161204d565b906111639161115e612077565b6112c3565b61022c6120d5565b610242906107d9565b610242905461116b565b1561118557565b60405162461bcd60e51b815260206004820152601060248201526f1352539517d393d517d153905093115160821b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b919082018092116111e057565b6111bd565b156111ec57565b60405162461bcd60e51b815260206004820152600c60248201526b13505617d15610d15151115160a21b6044820152606490fd5b1561122757565b60405162461bcd60e51b815260206004820152601060248201526f494e56414c49445f5155414e5449545960801b6044820152606490fd5b1561126657565b60405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4741535f46454560881b6044820152606490fd5b818102929181159184041417156111e057565b90815260408101929161022c9160200152565b9190611342906112db6112d66004611174565b61117e565b6113066112ef856112ea61210a565b6111d3565b6112ff610e7d61024260026110cd565b11156111e5565b61131a6113136000610bde565b8511611220565b61132f6113276000610bde565b82101561125f565b61133c633b9aca00610bde565b9061129d565b9061134b612126565b92611356813361215d565b6113606000610bde565b818110156113b7578061137e6113796113b293886111d3565b610bde565b7ff00d28232b285f24f2e38415deb2ceb31069e70d4505838b3911b4f02058502e6113a860405190565b600090a260010190565b611360565b50917f59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b29193506113e633610cbf565b926113fc6113f360405190565b928392836112b0565b0390a2565b9061022c91611137565b6102429081906001600160a01b031681565b6102426001600160a01b03610bde565b6103406102426102429290565b90610bf590610cbf565b610242600160e11b610bde565b91909161146e611469611463846122ed565b92610cb6565b61140b565b9161148a61148561147d61141d565b80951661142d565b610cb6565b936114976114858461142d565b6114b26001600160a01b0387165b916001600160a01b031690565b036116b75784926114c2836123ed565b336001600160a01b03871681148282141715611688575b50610e7d9594936115fa97936115ce936114699361167e575b50600080516020612ad483398151915290611568611556847f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456115516115388d8361143a565b61154b611544826110cd565b6000190190565b90610e9b565b61143a565b61154b611562826110cd565b60010190565b61159461157e8285611578611444565b9b612460565b4260a01b908a17176001600160a01b0385161790565b6115ab60048401916115a68a84610beb565b610e9b565b6000986115c06115ba8b610bde565b91841690565b1461160e575b505050610cb6565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a4610bde565b1461160157565b633a954ecd60e21b611d87565b8861162161161c6001610bde565b8a0190565b9361163461162f8685610beb565b6110cd565b611640610e7d84610bde565b1461164d575b50506115c6565b61165b9161024291016110cd565b8303611669575b8881611646565b611676926115a691610beb565b388080611662565b60009055386114f2565b610c0f9061169a929894969597611c89565b6116aa57869492939195386114d9565b632ce44b5f60e11b611d87565b62a1148160e81b611d87565b6116cb612010565b61022c61022c612502565b61022c6116c3565b906116eb61046183610429565b918252565b61024260006116de565b6102426116f0565b909161022c926117106116fa565b92611ba0565b61022c90611722612010565b610e367fb6c727d83bace6eef762275cc927295dcd906c8041f03f05cf07685323bfb6da9161026481600461103c565b61022c90611716565b61022c90611767612010565b6117b2565b6102dd6117849260209261177e815190565b94859290565b93849101610286565b6102429161176c565b6117ac906117a360405190565b9182918261178d565b03902090565b6117c6906117c1816000611029565b611796565b7f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad6117f060405190565b80806113fc565b61022c9061175b565b6102427fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300611174565b6114856118416102429261183b600090565b506122ed565b61142d565b6102429061142d565b6102426001600160401b03610bde565b61186c6103406000611846565b6001600160a01b038216146118ab5761162f61189f916005611899600080516020612ad483398151915290565b0161143a565b6118a761184f565b1690565b6323d3ad8160e21b611d87565b6118c0612010565b61022c61022c61108a6000611846565b61022c6118b8565b6118e0612010565b61022c61022c61256c565b61022c6118d8565b61024260007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300610c3d565b61022c9061192a612010565b611939906117c1816001611029565b7f905d981207a7d0b6c62cc46ab0be2a076d0298e4a86d0ab79882dbd01ac373786117f060405190565b61022c9061191e565b6102426003600080516020612ad4833981519152610bd8565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c316119fc6119f26119ec336119e7876119e288611551857f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4761143a565b61103c565b610cbf565b93610cbf565b9361026860405190565b0390a3565b61022c90611a0d612010565b61022c90611a1961204d565b61116390611a25612077565b611add565b634e487b7160e01b600052603260045260246000fd5b90611a49825190565b811015611a5a576020809102010190565b611a2a565b15611a6657565b60405162461bcd60e51b81526020600482015260146024820152731513d2d15397d113d154d7d393d517d1561254d560621b6044820152606490fd5b15611aa957565b60405162461bcd60e51b815260206004820152600c60248201526b1393d517d054141493d5915160a21b6044820152606490fd5b90611ae86000610bde565b611af3610242845190565b811015611b925780611b1f611b1a611b15611b11611b8d9588611a40565b5190565b611d5e565b611a5f565b611b3e611b39611b32611b118488611a40565b3390612574565b611aa2565b611b53611b4e611b118387611a40565b6125db565b611b63611379611b118387611a40565b7f0c526103b8f47af5516191d0c89a598755bd00faa211a3cb52e4c2cc782f7fe26113a860405190565b611ae8565b509050565b61022c90611a01565b91929092611baf818585611451565b833b611bbe610e7d6000610bde565b03611bca575b50505050565b611bd793610c0f9361266a565b611be45738808080611bc4565b6368d2bf6b60e11b611d87565b611bff90610242939261176c565b9061176c565b611c11610c0f82611d5e565b611c7257611c1d612729565b8051611c2c610e7d6000610bde565b14611c6857610242611c5c91611c4461024294612733565b90611c4e60405190565b938492602084019283611bf1565b908103825203826103ef565b50506102426116fa565b630a14c4b560e41b611d87565b6102426001610bba565b61024291611551611cb392611c9c600090565b506007600080516020612ad4833981519152611899565b611174565b61022c90611cc4612010565b6000611ccf81611846565b6001600160a01b0381166001600160a01b03841614611cf357505061022c90611f8c565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b61022c90611cb8565b61022c90611d25612010565b610e367f525b762709cc2a983aec5ccdfd807a061f993c91090b5bcd7da92ca254976aaa91610584816003610e9b565b61022c90611d19565b611d66612006565b8110159081611d73575090565b9050611d83610e7d610242612126565b1090565b60005260046000fd5b906001600160a01b0390610cd3565b90611daf610242610d0a92610cbf565b8254611d90565b91611dc082611829565b9080611e53575b611e34575b611dfd6119ec611e03926119e7866000611df7886006610c37600080516020612ad483398151915290565b01611d9f565b91610bde565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611e2e60405190565b600090a4565b611e41610c0f3383611c89565b15611dcc576367d9dca160e11b611d87565b5033611e676001600160a01b0383166114a5565b1415611dc7565b6102426127a1565b6102429060081c6107d9565b6102429054611e76565b15611e9357565b60405162461bcd60e51b815260206004820152603460248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604482015273206973206e6f7420696e697469616c697a696e6760601b6064820152608490fd5b61022c9190611f2f611f2a60007fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f5b01611e82565b611e8c565b9061022c91612843565b9061022c91611ef5565b61022c90611f4f61284d565b61022c9061287c565b61022c90611f43565b61022c61284d565b61022c611f61565b611f7961284d565b61022c61022c61288d565b61022c611f71565b611fd4611fce7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993006119e784611fc883546001600160a01b031690565b92611d9f565b91610cbf565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611fff60405190565b80806119fc565b6102426000610bde565b6120186118f3565b3390612023826114a5565b0361202b5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b612055611800565b61205b57565b63d93c066560e01b6000908152600490fd5b6102426002610bde565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f006120a1816110cd565b6120a961206d565b9081146120b95761022c91610e9b565b633ee5aeb560e01b6000908152600490fd5b6102426001610bde565b61022c7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0060006121036120cb565b9101610e9b565b600080516020612ad48339815191529061110f611107836110cd565b610242600080516020612ad48339815191526110cd565b6102426040610bde565b61024290612158610e7d6102429490565b901b90565b909190600080516020612ad483398151915290612179826110cd565b9160009161218683610bde565b86146122d35780866121e36121d66121a461220d9a60011460e11b90565b6121c16121b089611846565b6121b98a610bde565b978891612460565b4260a01b9117176001600160a01b0385161790565b6115a68860048801610beb565b61222d6114696001936114856122136121fa61213d565b6122046001610bde565b9d8e9182612147565b17860290565b61154b6122238460058c0161143a565b916102dd836110cd565b61223561141d565b169283146122c75761224a9086019597860390565b612255600019610e7d565b116122ba576001815b612272575b50505061022c93945001610e9b565b156122a8575b83908783867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4908161225e565b95600101958487036122785780612263565b6340b23f1d60e11b611d87565b622e076360e81b611d87565b63b562e8dd60e01b611d87565b610242600160e01b610bde565b6122f5612006565b81101561230a575b636f96cda160e11b611d87565b600080516020612ad48339815191527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4461234761162f8483610beb565b9260009261235484610bde565b851461237f5750505061237761237161236b6122e0565b92610bde565b91831690565b036122fd5790565b83612392929394955061024291016110cd565b8110156122fd57909190600019015b916123af61162f8483610beb565b926123b983610bde565b84146123e15750506123cf61237161236b6122e0565b1461024257636f96cda160e11b611d87565b909250600019016123a1565b610242612413916123fc600090565b506006600080516020612ad4833981519152610c37565b90815490565b61024260e8610bde565b61024290612434610e7d6102429490565b901c90565b6124466102426102429290565b62ffffff1690565b6102426102426102429262ffffff1690565b61249561249a916102429493612474600090565b5061248f61248a612483612419565b8097612423565b612439565b91612895565b61244e565b612147565b6124a76128a0565b61022c6124d86000807fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005b0161103c565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610e3633610367565b61022c61249f565b61251261204d565b61022c612542600160007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033006124d2565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e3633610367565b61022c61250a565b9061257e82611829565b916001600160a01b0382166001600160a01b038416149283156125c7575b5082156125a857505090565b610aa69192506125ba6114a591610c03565b926001600160a01b031690565b6125d49193508290611c89565b913861259c565b600061022c916128cd565b9050519061022c8261020c565b9060208282031261020757610242916125e6565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610242929101906102a9565b610a4e610a486102429263ffffffff1690565b3d156126655761265a3d6116de565b903d6000602084013e565b606090565b916126826119e760209361267c600090565b50610cbf565b63150b7a02936000336126b361269760405190565b988996879586946126a88c60e01b90565b865260048601612607565b03925af1600092816126f8575b506126e9576126cd61264b565b80516126dc610e7d6000610bde565b14611be457805190602001fd5b610a98610a4e610aa692612638565b61271b91935060203d602011612722575b61271381836103ef565b8101906125f3565b91386126c0565b503d612709565b6102426000610bba565b90602060a06040510180604052039160008352600a60018492945b039381810660300185530492831561276a576001600a9161274e565b809350602091039203918252565b6102427ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610bde565b610242612778565b61022c91906127dc611f2a60007fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f611f24565b612822906128116000936128086127fe600080516020612ad483398151915290565b9360028501611029565b60038301611029565b612819612006565b92839101610e9b565b61282f610e7d6000199290565b1061283657565b63fed8210f60e01b611d87565b9061022c916127a9565b612858610c0f612ac0565b61285e57565b631afcd79f60e31b6000908152600490fd5b61022c90611cc461284d565b61022c90612870565b61116361284d565b61022c612885565b505050610242600090565b6128ab610c0f611800565b6128b157565b638dfc202b60e01b6000908152600490fd5b6102426080610bde565b6128d6816122ed565b916128e36114858461142d565b906128ed836123ed565b9091612a83575b926129ec611dfd6119ec61292d9561022c9895600198612a79575b5061293161291b6128c3565b6129248a610bde565b98899182612147565b0390565b600080516020612ad483398151915297906129739061154b612223857f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4561143a565b61297b6122e0565b96612984611444565b809817976000926129b861299785611846565b9a6129a3858d89612460565b4260a01b9117176001600160a01b0387161790565b916129cb60048d01936115a68c86610beb565b6129dd6129d786610bde565b91851690565b14612a28575b50505050610cbf565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612a1760405190565b600090a40161154b611562826110cd565b880192612a3861162f8584610beb565b612a44610e7d83610bde565b036129e357610242612a57918c016110cd565b8303612a64575b806129e3565b612a71926115a691610beb565b388080612a5e565b600090553861290f565b336001600160a01b03841681148282141715612aa0575b506128f4565b610c0f612ab291859794969395611c89565b6116aa579290939138612a9a565b6102426000612acd611e6e565b01610c7056fe2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c40a264697066735822122037f0b54008428a0b70a3614a083fa708e9b64735a8d49dfcc89aec146a35418f64736f6c634300081c0033";

type CollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collection__factory extends ContractFactory {
  constructor(...args: CollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Collection & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Collection__factory {
    return super.connect(runner) as Collection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new Interface(_abi) as CollectionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Collection {
    return new Contract(address, _abi, runner) as unknown as Collection;
  }
}
