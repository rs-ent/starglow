/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requiredStakeTime",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "RewardStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
    ],
    name: "RewardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeTime",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredStakeTime",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assets",
    outputs: [
      {
        internalType: "contract Assets",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "contract Collection",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetsAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredStakeTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setRewardStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledAt",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakedAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "forceUnstake",
        type: "bool",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "newSelector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "newRewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRequiredStakeTime",
        type: "uint256",
      },
    ],
    name: "updateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346019576040516120c061001f82396120c090f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806317d18127146101125780633228337a1461010d5780633c8c0d9f14610108578063485cc955146101035780634e533572146100fe5780635c975abb146100f9578063715018a6146100f457806371a97305146100ef5780637de1e536146100ea578063857b767b146100e557806386bb8f37146100e05780638da5cb5b146100db57806395ecc170146100d6578063c7a5156f146100d1578063f2fde38b146100cc5763f301af420361011757610751565b6106e1565b6106b1565b61065f565b61062a565b610611565b6105dc565b610592565b610560565b6104de565b6104b0565b610474565b610370565b610309565b610297565b61016f565b600080fd5b805b0361011757565b905035906101328261011c565b565b80151561011e565b9050359061013282610134565b91906040838203126101175761016c9060206101658286610125565b940161013c565b90565b3461011757610188610182366004610149565b90610811565b60405180805b0390f35b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176101ca57604052565b610192565b906101326101dc60405190565b92836101a8565b67ffffffffffffffff81116101ca5760208091020190565b9092919261021061020b826101e3565b6101cf565b938185526020808601920283019281841161011757915b8383106102345750505050565b602080916102428486610125565b815201920191610227565b9080601f830112156101175781602061016c933591016101fb565b91906040838203126101175782359067ffffffffffffffff82116101175760206101658261016c94870161024d565b34610117576101886102aa366004610268565b90610db1565b6001600160e01b0319811661011e565b90503590610132826102b0565b608081830312610117576102e18282610125565b9261016c6102f284602085016102c0565b9360606103028260408701610125565b9401610125565b346101175761018861031c3660046102cd565b92919091611210565b6001600160a01b031690565b6001600160a01b03811661011e565b9050359061013282610331565b91906040838203126101175761016c9060206103698286610340565b9401610340565b346101175761018861038336600461034d565b9061146c565b906020828203126101175761016c91610125565b61016c61016c61016c9290565b906103b49061039d565b600052602052604060002090565b61016c9081565b61016c90546103c2565b61016c905b60ff1690565b61016c90546103d3565b6103f39060026103aa565b6103fc816103c9565b91610409600183016103c9565b91610416600282016103c9565b9161016c6004610428600385016103c9565b93016103de565b9052565b909594926101329461046561046c9261045e60809661045760a088019c6000890152565b6020870152565b6040850152565b6060830152565b019015159052565b346101175761018e61048f61048a366004610389565b6103e8565b9161049c95939560405190565b95869586610433565b600091031261011757565b34610117576104c03660046104a5565b61018e6104cb611476565b6040515b91829182901515815260200190565b34610117576104ee3660046104a5565b6101886114d7565b61016c916008021c6001600160a01b031690565b9061016c91546104f6565b61016c6000600161050a565b61016c90610325906001600160a01b031682565b61016c90610521565b61016c90610535565b61042f9061053e565b6020810192916101329190610547565b34610117576105703660046104a5565b61018e61057b610515565b60405191829182610550565b61016c60008061050a565b34610117576105a23660046104a5565b61018e61057b610587565b91906040838203126101175782359067ffffffffffffffff82116101175760206103028261016c94870161024d565b34610117576101886105ef3660046105ad565b90611815565b91906040838203126101175761016c9060206103028286610125565b34610117576101886106243660046105f5565b90611c27565b346101175761063a3660046104a5565b61018e610645611c31565b604051918291826001600160a01b03909116815260200190565b34610117576101886106723660046102cd565b92919091611d70565b61016c916008021c6103d8565b9061016c915461067b565b6106ac61016c926106a760009360056103aa565b6103aa565b610688565b346101175761018e6104cb6106c73660046105f5565b90610693565b906020828203126101175761016c91610340565b34610117576101886106f43660046106cd565b611dd4565b6107049060036103aa565b61070d816103c9565b91610409600183015460e01b90565b909594926101329461046561046c9261045e60809661074060a088019c6000890152565b6001600160e01b0319166020870152565b346101175761018e61076c610767366004610389565b6106f9565b9161077995939560405190565b9586958661071c565b906101329161078f611ddd565b6107be565b9060ff905b9181191691161790565b906107b361016c6107ba92151590565b8254610794565b9055565b61080c6108027f0267a70222312f9f21637d72c3f9fa2a07183756bfe61ff338559b1a1ee5cc1a926107fd8560046107f78460036103aa565b016107a3565b61039d565b926104cf60405190565b0390a2565b9061013291610782565b9061013291610828611e1c565b9061083a91610835611e46565b610a50565b610132611ea4565b1561084957565b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f544f4b454e5360901b6044820152606490fd5b61016c90610325565b61016c905461087f565b9050519061013282610134565b906020828203126101175761016c91610892565b6040513d6000823e3d90fd5b9050519061013282610331565b906020828203126101175761016c916108bf565b634e487b7160e01b600052603260045260246000fd5b906108ff825190565b811015610910576020809102010190565b6108e0565b1561091c57565b60405162461bcd60e51b815260206004820152600c60248201526b1393d517d054141493d5915160a21b6044820152606490fd5b9061097061096961095f845190565b8084529260200190565b9260200190565b9060005b8181106109815750505090565b90919261099e6109976001928651815260200190565b9460200190565b929101610974565b929160206109c36101329360408701908782036000890152610950565b94019015159052565b634e487b7160e01b600052601160045260246000fd5b60001981146109f15760010190565b6109cc565b156109fd57565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606490fd5b9060001990610799565b90610a4961016c6107ba9261039d565b8254610a2f565b90610a59825190565b90610a76600092610a70610a6c8561039d565b9190565b11610842565b610a87610a8283610888565b61053e565b6020610a9260405190565b63afc0381d60e01b815233600482015291829060249082905afa908115610c18578391610d82575b508015610d32575b8015610ccb575b8015610c1d575b610ad990610915565b610ae5610a8283610888565b803b1561011757610b198392918392610afd60405190565b948593849283919063bdf9ad3b60e01b83528a600484016109a6565b03925af18015610c1857610bec575b50610b328161039d565b610b3d61016c845190565b811015610be757610bdd610be291610b9684610b6e61016c6002610b68610b64878c6108f6565b5190565b906103aa565b610b916004820191610b87610b82846103de565b6109f6565b6003429101610a39565b6107a3565b610ba66107fd610b6483886108f6565b7ffe67007f52a1bf967323b00fd406f9028a8e8a88aec274e07a63b2fabacc64a7610bd060405190565b428152602090a260010190565b6109e2565b610b32565b505050565b610c0b90823d8411610c11575b610c0381836101a8565b8101906104a5565b38610b28565b503d610bf9565b6108b3565b50610c6c6020610c2f610a8285610888565b610c44610b64610c3e8761039d565b886108f6565b90610c4e60405190565b938492839182916331a9108f60e11b5b835260048301526024820190565b03915afa908115610c1857610ad991610c93918591610c9c575b506001600160a01b031690565b33149050610ad0565b610cbe915060203d602011610cc4575b610cb681836101a8565b8101906108cc565b38610c86565b503d610cac565b50610d0a6020610cdd610a8285610888565b610cec610b64610c3e8761039d565b90610cf660405190565b9384928391829163020604bf60e21b610c5e565b03915afa8015610c1857610d2b918491610c9c57506001600160a01b031690565b3314610ac9565b50610d3f610a8283610888565b6020610d4a60405190565b638da5cb5b60e01b815291829060049082905afa8015610c1857610d7b918491610c9c57506001600160a01b031690565b3314610ac2565b610da4915060203d602011610daa575b610d9c81836101a8565b81019061089f565b38610aba565b503d610d92565b906101329161081b565b90610132939291610dca611ddd565b611058565b15610dd657565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b15610e1357565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f54494d4560a01b6044820152606490fd5b15610e4e57565b60405162461bcd60e51b815260206004820152600d60248201526c1253959053125117d054d4d155609a1b6044820152606490fd5b90505190610132826102b0565b90929192610ea061020b826101e3565b938185526020808601920283019281841161011757915b838310610ec45750505050565b60208091610ed28486610e83565b815201920191610eb7565b9080601f8301121561011757815161016c92602001610e90565b9060208282031261011757815167ffffffffffffffff81116101175761016c9201610edd565b15610f2457565b60405162461bcd60e51b815260206004820152601060248201526f24a72b20a624a22fa9a2a622a1aa27a960811b6044820152606490fd5b61016c60a06101cf565b9063ffffffff90610799565b90610f90610f8a6107ba926001600160e01b03191690565b60e01c90565b8254610f66565b600461100c608061013294610fb6610fb0600083015190565b86610a39565b610fd7610fce60208301516001600160e01b03191690565b60018701610f72565b610fee610fe5604083015190565b60028701610a39565b611005610ffc606083015190565b60038701610a39565b0151151590565b91016107a3565b9061013291610f97565b6110546101329461104d60609498979561103c608086019a6000870152565b6001600160e01b0319166020850152565b6040830152565b0152565b92919260009261107261106a8561039d565b865b11610dcf565b61108661107e8561039d565b825b11610e0c565b611093610a826001610888565b602061109e60405190565b63823a65f560e01b81526004810185905291829060249082905afa8015610c18576110d09186916111f1575b50610e47565b6110dd610a826001610888565b90846110e860405190565b6304e3868f60e51b81526004810185905292839060249082905afa8015610c18578561114c611147876111bc9461080c977f0cc87192434092d6e0f459cfd22d69a61e85702b3ab21af381a25a600adcd80c9b916111cf575b50611ed9565b610f1d565b6107fd61115960046103c9565b9161116d611166846109e2565b6004610a39565b61117f87611179610f5c565b92830152565b6001600160e01b03198816602082015261119a8a6040830152565b6111a5856060830152565b600160808201526111b78360036103aa565b611013565b956111c660405190565b9485948561101d565b6111eb91503d8087833e6111e381836101a8565b810190610ef7565b38611141565b61120a915060203d602011610daa57610d9c81836101a8565b386110ca565b90610132939291610dbb565b61016c9060401c6103d8565b61016c905461121c565b61016c905b67ffffffffffffffff1690565b61016c9054611232565b61123761016c61016c9290565b9067ffffffffffffffff90610799565b61123761016c61016c9267ffffffffffffffff1690565b9061129261016c6107ba9261126b565b825461125b565b9068ff00000000000000009060401b610799565b906112bd61016c6107ba92151590565b8254611299565b61042f9061124e565b60208101929161013291906112c4565b6112e5611f3c565b91826113006112fa6112f683611228565b1590565b91611244565b9160009361130d8561124e565b67ffffffffffffffff8516148061140a575b60019461133c61132e8761124e565b9167ffffffffffffffff1690565b1490816113e6575b155b90816113dd575b506113ce5790611377918361136e876113658861124e565b99019889611282565b6113bf57611437565b61138057505050565b6113ae6113ba927fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2946112ad565b604051918291826112cd565b0390a1565b6113c985886112ad565b611437565b63f92ee8a960e01b8552600485fd5b1590503861134d565b90506113466113f43061053e565b3b611401610a6c8961039d565b14919050611344565b508261131f565b906001600160a01b0390610799565b9061143061016c6107ba9261053e565b8254611411565b61013291610a8261145e6114659361144e33611f59565b611456611f6a565b610a82611f85565b6000611420565b6001611420565b90610132916112dd565b61016c7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033006103de565b6114a7611ddd565b6101326114c5565b61032561016c61016c9290565b61016c906114af565b6101326114d260006114bc565b611f8d565b61013261149f565b90610132916114ec611e1c565b9061083a916114f9611e46565b611563565b1561150557565b60405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f554e5354414b455f54494d4560601b6044820152606490fd5b9291602061155e6101329360408701908782036000890152610950565b940152565b919061156d835190565b90611580600092610a70610a6c8561039d565b61158b4282116114fe565b611597610a8283610888565b60206115a260405190565b63afc0381d60e01b815233600482015291829060249082905afa908115610c185783916117f6575b5080156117a6575b801561175d575b8015611707575b6115e990610915565b6115f5610a8283610888565b803b15610117578261160660405190565b918290634d761d2560e01b8252818381611624888c60048401611541565b03925af18015610c18576116eb575b5061163d8261039d565b61164861016c865190565b8110156116e4576116df906116a560016004886107f787600261169261168a610b648a61168461016c61167e610b64848c6108f6565b876103aa565b976108f6565b8c8601610a39565b61169e42878601610a39565b8301610a39565b6116b56107fd610b6483896108f6565b7f925435fa7e37e5d9555bb18ce0d62bb9627d0846942e58e5291e9a2dded462ed610bd060405190565b61163d565b5050509050565b61170190833d8511610c1157610c0381836101a8565b38611633565b5061172e6020611719610a8285610888565b610c44610b646117288761039d565b896108f6565b03915afa908115610c18576115e991611754918591610c9c57506001600160a01b031690565b331490506115e0565b5061177e602061176f610a8285610888565b610cec610b646117288761039d565b03915afa8015610c185761179f918491610c9c57506001600160a01b031690565b33146115d9565b506117b3610a8283610888565b60206117be60405190565b638da5cb5b60e01b815291829060049082905afa8015610c18576117ef918491610c9c57506001600160a01b031690565b33146115d2565b61180f915060203d602011610daa57610d9c81836101a8565b386115ca565b90610132916114df565b906101329161182c611e1c565b9061083a91611839611e46565b611928565b1561184557565b60405162461bcd60e51b81526020600482015260116024820152705245574152445f4e4f545f41435449564560781b6044820152606490fd5b1561188557565b60405162461bcd60e51b815260206004820152600f60248201526e1053149150511657d0d31052535151608a1b6044820152606490fd5b919082039182116109f157565b156118d057565b60405162461bcd60e51b815260206004820152601760248201527f494e53554646494349454e545f5354414b455f54494d450000000000000000006044820152606490fd5b9081526040810192916101329160200152565b9061193761016c8360026103aa565b90611945610a826000610888565b602061195060405190565b63afc0381d60e01b815233600482015291829060249082905afa908115610c1857600091611c08575b508015611bb6575b8015611b56575b61199190610915565b611a186119a261016c8360036103aa565b926119b76119b2600486016103de565b61183e565b6119d96119d46112f66119cf866106a78a60056103aa565b6103de565b61187e565b6119e5600482016103de565b15611b2f576119f960016119ff92016103c9565b426118bc565b611a11610a6c61016c600387016103c9565b10156118c9565b611a2c6001610b91836106a78760056103aa565b611a39610a826000610888565b916020611a4560405190565b6331a9108f60e11b81526004810186905293849060249082905afa928315610c1857600093611ad5575b50611ad0611abb611ab5611aaf611aa960027f7ef1954a47bcf45f29bbc3b53d86df999b6f295782796ac65ea2df034711693596016103c9565b9761039d565b9461039d565b9461053e565b94611ac560405190565b918291429083611915565b0390a4565b7f7ef1954a47bcf45f29bbc3b53d86df999b6f295782796ac65ea2df0347116935919350611abb611ab5611aaf611aa96002611b22611ad09660203d602011610cc457610cb681836101a8565b9896505050505050611a6f565b80611b4b6001611b446003611b5195016103c9565b92016103c9565b906118bc565b6119ff565b50611b64610a826000610888565b6020611b6f60405190565b6331a9108f60e11b81526004810186905291829060249082905afa908115610c185761199191611bad91600091610c9c57506001600160a01b031690565b33149050611988565b50611bc4610a826000610888565b6020611bcf60405190565b638da5cb5b60e01b815291829060049082905afa8015610c1857611c0191600091610c9c57506001600160a01b031690565b3314611981565b611c21915060203d602011610daa57610d9c81836101a8565b38611979565b906101329161181f565b61016c7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300610888565b90610132939291611c69611ddd565b9192600093611c80611c7a8661039d565b8261106c565b611c92611c8c8661039d565b83611080565b611ca061016c8560036103aa565b611cda86611cb1610a826001610888565b611cbc8285016103c9565b90611cc660405190565b938492839182916304e3868f60e51b610c5e565b03915afa928315610c1857611d1586611d0c6111476107fd99600398611d1e978e611d249f92611d55575b5050611ed9565b60018501610f72565b60028301610a39565b01610a39565b7fcb94909754d27c309adf4167150f1f7aa04de40b6a0e6bb98b2ae80a2bf438f6611d4e60405190565b808061080c565b611d6992503d8091833e6111e381836101a8565b3880611d05565b90610132939291611c5a565b61013290611d88611ddd565b6000611d93816114bc565b6001600160a01b0381166001600160a01b03841614611db757505061013290611f8d565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b61013290611d7c565b611de5611c31565b339081906001600160a01b031603611dfa5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b611e24611476565b611e2a57565b63d93c066560e01b6000908152600490fd5b61016c600261039d565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00611e70816103c9565b611e78611e3c565b908114611e885761013291610a39565b633ee5aeb560e01b6000908152600490fd5b61016c600161039d565b6101327f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f006000611ed2611e9a565b9101610a39565b90611ee4600061039d565b611eef61016c845190565b811015611f3457611f11611f0382856108f6565b516001600160e01b03191690565b6001600160e01b0319838116911614611f2c57600101611ee4565b505050600190565b505050600090565b61016c612027565b61013290611f5061202f565b6101329061205e565b61013290611f44565b61013261202f565b610132611f62565b611f7a61202f565b61013261013261206f565b610132611f72565b611fcd611fc77f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300610a8284611fc183610888565b92611420565b9161053e565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611ff860405190565b600090a3565b61016c7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061039d565b61016c611ffe565b61203a6112f6612077565b61204057565b631afcd79f60e31b6000908152600490fd5b61013290611d8861202f565b61013290612052565b61083a61202f565b610132612067565b61016c6000612084611f3c565b0161122856fea26469706673582212204a893a945bfdf6a8f3800451b4aade23881db0d3c9011a581e50deb75ca5207964736f6c634300081c0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
