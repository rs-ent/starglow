"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC721A__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ApprovalCallerNotOwnerNorApproved",
        type: "error",
    },
    {
        inputs: [],
        name: "ApprovalQueryForNonexistentToken",
        type: "error",
    },
    {
        inputs: [],
        name: "BalanceQueryForZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "MintERC2309QuantityExceedsLimit",
        type: "error",
    },
    {
        inputs: [],
        name: "MintToZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "MintZeroQuantity",
        type: "error",
    },
    {
        inputs: [],
        name: "NotCompatibleWithSpotMints",
        type: "error",
    },
    {
        inputs: [],
        name: "OwnerQueryForNonexistentToken",
        type: "error",
    },
    {
        inputs: [],
        name: "OwnershipNotInitializedForExtraData",
        type: "error",
    },
    {
        inputs: [],
        name: "SequentialMintExceedsLimit",
        type: "error",
    },
    {
        inputs: [],
        name: "SequentialUpToTooSmall",
        type: "error",
    },
    {
        inputs: [],
        name: "SpotMintTokenIdTooSmall",
        type: "error",
    },
    {
        inputs: [],
        name: "TokenAlreadyExists",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferCallerNotOwnerNorApproved",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferFromIncorrectOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferToNonERC721ReceiverImplementer",
        type: "error",
    },
    {
        inputs: [],
        name: "TransferToZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "URIQueryForNonexistentToken",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "fromTokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "toTokenId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "ConsecutiveTransfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "result",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x60806040523461002b5761001a610014610156565b90610371565b6040516111f06103d382396111f090f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006757604052565b610030565b9061008061007960405190565b9283610046565b565b6001600160401b03811161006757602090601f01601f19160190565b60005b8381106100b15750506000910152565b81810151838201526020016100a1565b909291926100d66100d182610082565b61006c565b938185528183011161002b5761008091602085019061009e565b9080601f8301121561002b57815161010a926020016100c1565b90565b91909160408184031261002b5780516001600160401b03811161002b57836101369183016100f0565b60208201519093906001600160401b03811161002b5761010a92016100f0565b6101746115c3803803806101698161006c565b92833981019061010d565b9091565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156101ae575b60208310146101a957565b610178565b91607f169161019e565b9160001960089290920291821b911b5b9181191691161790565b61010a61010a61010a9290565b91906101f061010a6101f8936101d2565b9083546101b8565b9055565b610080916000916101df565b818110610213575050565b8061022160006001936101fc565b01610208565b9190601f811161023657505050565b61024861008093600052602060002090565b906020601f84018190048301931061026a575b6020601f909101040190610208565b909150819061025b565b9061027d815190565b906001600160401b038211610067576102a08261029a855461018e565b85610227565b602090601f83116001146102db576101f89291600091836102d0575b5050600019600883021c1916906002021790565b0151905038806102bc565b601f198316916102f085600052602060002090565b9260005b81811061032e57509160029391856001969410610315575b50505002019055565b01516000196008601f8516021c1916905538808061030c565b919360206001819287870151815501950192016102f4565b9061008091610274565b90600019906101c8565b9061036a61010a6101f8926101d2565b8254610350565b90610380610387926002610346565b6003610346565b61038f6103bf565b61039a81600061035a565b6103ab6103a76000199290565b9190565b106103b257565b63fed8210f60e01b6103c9565b61010a60006101d2565b60005260046000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f257806306fdde03146100ed578063081812fc146100e8578063095ea7b3146100e357806318160ddd146100de57806323b872dd146100d957806342842e0e146100d45780636352211e146100cf57806370a08231146100ca57806395d89b41146100c5578063a22cb465146100c0578063b88d4fde146100bb578063c87b56dd146100b65763e985e9c5036100f757610560565b610522565b61050b565b6103de565b61038b565b610370565b610341565b61032d565b610319565b6102c5565b6102ac565b610238565b6101de565b610135565b600080fd5b6001600160e01b031981165b036100f757565b9050359061011c826100fc565b565b906020828203126100f7576101329161010f565b90565b346100f75761016361015061014b36600461011e565b61059c565b6040515b91829182901515815260200190565b0390f35b60009103126100f757565b60005b8381106101855750506000910152565b8181015183820152602001610175565b6101b66101bf6020936101c9936101aa815190565b80835293849260200190565b95869101610172565b601f01601f191690565b0190565b602080825261013292910190610195565b346100f7576101ee366004610167565b6101636101f9610704565b604051918291826101cd565b80610108565b9050359061011c82610205565b906020828203126100f7576101329161020b565b6001600160a01b031690565b346100f75761016361025361024e366004610218565b610733565b604051918291826001600160a01b03909116815260200190565b6001600160a01b038116610108565b9050359061011c8261026d565b91906040838203126100f7576101329060206102a5828661027c565b940161020b565b6102c06102ba366004610289565b90610772565b604051005b346100f7576102d5366004610167565b6101636102e061078f565b6040519182918290815260200190565b90916060828403126100f757610132610309848461027c565b9360406102a5826020870161027c565b6102c06103273660046102f0565b91610874565b6102c061033b3660046102f0565b91610aca565b346100f757610163610253610357366004610218565b610ade565b906020828203126100f7576101329161027c565b346100f7576101636102e061038636600461035c565b610b15565b346100f75761039b366004610167565b6101636101f9610b58565b801515610108565b9050359061011c826103a6565b91906040838203126100f7576101329060206103d7828661027c565b94016103ae565b346100f7576102c06103f13660046103bb565b90610b82565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761042f57604052565b6103f7565b9061011c61044160405190565b928361040d565b67ffffffffffffffff811161042f57602090601f01601f19160190565b90826000939282370152565b9092919261048661048182610448565b610434565b93818552818301116100f75761011c916020850190610465565b9080601f830112156100f75781602061013293359101610471565b906080828203126100f7576104d0818361027c565b926104de826020850161027c565b926104ec836040830161020b565b92606082013567ffffffffffffffff81116100f75761013292016104a0565b6102c06105193660046104bb565b92919091610be4565b346100f7576101636101f9610538366004610218565b610c6a565b91906040838203126100f757610132906020610559828661027c565b940161027c565b346100f75761016361015061057636600461053d565b90610ce4565b61058f6105896101329290565b60e01b90565b6001600160e01b03191690565b6105a96301ffc9a761057c565b6001600160e01b03198216149081156105eb575b81156105c7575090565b90506105e76105d9635b5e139f61057c565b916001600160e01b03191690565b1490565b90506105fa6380ac58cd61057c565b6001600160e01b0319821614906105bd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610642575b602083101461063d57565b61060c565b91607f1691610632565b8054600093929161066961065f83610622565b8085529360200190565b91600181169081156106bb575060011461068257505050565b6106959192939450600052602060002090565b916000925b8184106106a75750500190565b80548484015260209093019260010161069a565b92949550505060ff1916825215156020020190565b906101329161064c565b9061011c6106f4926106eb60405190565b938480926106d0565b038361040d565b610132906106da565b61013260026106fb565b6101326101326101329290565b906107259061070e565b600052602052604060002090565b61074361073f82610d3b565b1590565b61076557600061075761013292600661071b565b01546001600160a01b031690565b6333d1c03960e21b610dbb565b61011c91600191610dea565b6101329081565b610132905461077e565b6107b66107ae61079f6000610785565b6107a96001610785565b900390565b6107a9610e92565b9081600019806107c5565b9190565b036107cd5750565b6101329192506101c96008610785565b6101329061022c906001600160a01b031682565b610132906107dd565b6101329081906001600160a01b031681565b6101326001600160a01b0361070e565b61022c6101326101329290565b610132906107f1565b9061072590610829565b90600019905b9181191691161790565b9061085c6101326108639261070e565b825461083c565b9055565b610132600160e11b61070e565b61088e61088961088385610e9c565b926107f1565b6107fa565b926108aa6108a561089d61080c565b80961661081c565b6107f1565b936108b76108a58461081c565b6108d26001600160a01b0387165b916001600160a01b031690565b03610a9a576108e082610f66565b9490336001600160a01b03881681148188141715610a6c575b506108896107c1959493926109be926109ea98610a62575b506109396109208a6005610832565b61093361092c82610785565b6000190190565b9061084c565b610959610947826005610832565b61093361095382610785565b60010190565b610961610867565b9561098661097082848d610fe0565b4260a01b908917176001600160a01b0384161790565b9061099c600492610997898561071b565b61084c565b6000976109b16109ab8a61070e565b91831690565b146109fe575b50506107f1565b1680957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8480a461070e565b146109f157565b633a954ecd60e21b610dbb565b610a10610a0b600161070e565b880190565b91610a23610a1e848361071b565b610785565b610a2f6107c18b61070e565b14610a3b575b506109b7565b610a476101328a610785565b8314610a3557610a5a926109979161071b565b388080610a35565b6000905538610911565b61073f610a7e91899796959497610ce4565b610a8d573894919293946108f9565b632ce44b5f60e11b610dbb565b62a1148160e81b610dbb565b90610ab361048183610448565b918252565b6101326000610aa6565b610132610ab8565b909161011c92610ad8610ac2565b92610be4565b6108a5610af661013292610af0600090565b50610e9c565b61081c565b6101329061081c565b61013267ffffffffffffffff61070e565b610b2261022c6000610afb565b6001600160a01b03821614610b4b57610a1e610b3f916005610832565b610b47610b04565b1690565b6323d3ad8160e21b610dbb565b61013260036106fb565b9060ff90610842565b90610b7b61013261086392151590565b8254610b62565b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31610bdf610bd5610bcf33610bca87610bc588610bc0856007610832565b610832565b610b6b565b610829565b93610829565b9361015460405190565b0390a3565b91929092610bf3818585610874565b833b610c026107c1600061070e565b03610c0e575b50505050565b610c1b9361073f936110a3565b610c285738808080610c08565b6368d2bf6b60e11b610dbb565b6101c9610c4d92602092610c47815190565b94859290565b93849101610172565b610c64906101329392610c35565b90610c35565b610c7661073f82610d3b565b610cd757610c82611162565b8051610c916107c1600061070e565b14610ccd57610132610cc191610ca96101329461116a565b90610cb360405190565b938492602084019283610c56565b9081038252038261040d565b5050610132610ac2565b630a14c4b560e41b610dbb565b61013291610bc0610cff92610cf7600090565b506007610832565b5460ff1690565b634e487b7160e01b600052601160045260246000fd5b8015610d29576000190190565b610d06565b610132600160e01b61070e565b9060009182610d48610e92565b821015610d53575050565b610d606101326000610785565b8210610d6a575050565b509091505b610d7d610a1e82600461071b565b9081610d8c6107c1600061070e565b03610da057610d9b9150610d1c565b610d6f565b506105e7610dac610d2e565b610db6600061070e565b921690565b60005260046000fd5b906001600160a01b0390610842565b90610de361013261086392610829565b8254610dc4565b91610df482610ade565b9080610e77575b610e58575b610e21610bcf610e2792610bca866000610e1b88600661071b565b01610dd3565b9161070e565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925610e5260405190565b600090a4565b610e6561073f3383610ce4565b15610e00576367d9dca160e11b610dbb565b5033610e8b6001600160a01b0383166108c5565b1415610dfb565b610132600061070e565b610ea4610e92565b811015610eb9575b636f96cda160e11b610dbb565b600490610eca610a1e82600461071b565b91600091610ed78361070e565b8414610efb575050610ef36109ab610eed610d2e565b9261070e565b03610eac5790565b90919250610f0b61013284610785565b811015610eac57909190600019015b91610f28610a1e848361071b565b92610f328361070e565b8414610f5a575050610f486109ab610eed610d2e565b1461013257636f96cda160e11b610dbb565b90925060001901610f1a565b610132610f7d91610f75600090565b50600661071b565b90815490565b61013260e861070e565b61013290610f9e6107c16101329490565b901c90565b610fb06101326101329290565b62ffffff1690565b6101326101326101329262ffffff1690565b61013290610fdb6107c16101329490565b901b90565b61101561101a916101329493610ff4600090565b5061100f61100a611003610f83565b8097610f8d565b610fa3565b916111af565b610fb8565b610fca565b9050519061011c826100fc565b906020828203126100f7576101329161101f565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261013292910190610195565b61058f6105896101329263ffffffff1690565b3d1561109e576110933d610aa6565b903d6000602084013e565b606090565b916110bb610bca6020936110b5600090565b50610829565b63150b7a02936000336110ec6110d060405190565b988996879586946110e18c60e01b90565b865260048601611040565b03925af160009281611131575b5061112257611106611084565b80516111156107c1600061070e565b14610c2857805190602001fd5b6105d961058f6105e792611071565b61115491935060203d60201161115b575b61114c818361040d565b81019061102c565b91386110f9565b503d611142565b610132610ac2565b90602060a06040510180604052039160008352600a60018492945b03938181066030018553049283156111a1576001600a91611185565b809350602091039203918252565b50505061013260009056fea2646970667358221220bf9e059293e91df1e5adc5201bb7e2ce31da4e59b898427f11a0bbd07590e46564736f6c634300081c0033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC721A__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(name_, symbol_, overrides) {
        return super.getDeployTransaction(name_, symbol_, overrides || {});
    }
    deploy(name_, symbol_, overrides) {
        return super.deploy(name_, symbol_, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC721A__factory = ERC721A__factory;
ERC721A__factory.bytecode = _bytecode;
ERC721A__factory.abi = _abi;
