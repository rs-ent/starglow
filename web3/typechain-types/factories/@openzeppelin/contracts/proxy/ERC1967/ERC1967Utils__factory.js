"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC1967Utils__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
        ],
        name: "ERC1967InvalidAdmin",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "ERC1967InvalidBeacon",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "ERC1967InvalidImplementation",
        type: "error",
    },
    {
        inputs: [],
        name: "ERC1967NonPayable",
        type: "error",
    },
];
const _bytecode = "0x608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212206c2fa6c21fd9a6832141dd8d62afd214e2f578b323b90f6c823722c15ca7a1d564736f6c634300081c0033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC1967Utils__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC1967Utils__factory = ERC1967Utils__factory;
ERC1967Utils__factory.bytecode = _bytecode;
ERC1967Utils__factory.abi = _abi;
